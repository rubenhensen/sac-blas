use StdIO: all;
// use Array: all;
// use BlasLevel1: all;
// use BlasLevel2: all;
// use Helper: all;
import ComplexBasics: {zero, complex};
import Structures: all;
import Math: all;

// too many problems with the complex type
int main() {
    return 0;
}

void compare(char uplo, int n, double alpha, complex[.] x, int incx, complex[*] a, int lda)
{
    // a1 = OpenBlas::zher(m, n, alpha, x, incx, y, incy, a, lda);

    // a2 = zher(uplo, n, alpha, x, incx, a, lda);
    print(a);
    // if(!(all(a1 == a2) && all(shape(a1)==shape(a2)) && all(dim(a1)==dim(a2))))
    // {
    //     printf("Error in sger. m:%d, n:%d, alpha:%f, incx:%d, incy:%f, lda:%d", m, n, alpha, incx, incy, lda); 
    //     print(a);
    //     print(x);
    //     print(y);
    //     print(a1);
    //     print(a2);
    //     printf("\n");
    // }
}
void cblas_zhpr (char uplo, int n,  double alpha, complex[*] x,  int incx, complex[*] ap);
// complex[*] zhpmv(char uplo, int n, complex alpha, complex[*] x, int incx, complex[*] ap)
// {

// }
