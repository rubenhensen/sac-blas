use StdIO: all;
use Array: all;

int main()
{
    //print(reshape([5], [1,2,3,4,5]));
    //print(reshape([3,2], [1,2,3,4,5,6]));
    //print(reshape([3,2,1], [1,2,3,4,5,6]));
    //print(reshape([3,3], [1,2,3,4,5,6]));
    //print([5]);
    //print(5);
    //print(reshape([1], [1]));
    //print(reshape([], [1]));

    //print(1);
    //print([1,2,3,4,5]);
    //print([[1,2], [3,4], [5,6]]);
    //print(genarray([4,3,2], 1));
    //print(genarray([4,3],[1,2]));

    //print(reshape([5,2,2],genarray([4], [0,0,0,0,1])));
    //print(iota(15)+1);

    //a = [1,2,3,4];
    //print(a);
    //b = modarray(a, [0], 9);
    //print(a);
    //print(b);

    //a = [1,2,3,4];
    //b = [a,a];
    //b = [[1,2,3,4], [1,2,3,4]]

    //a = modarray(modarray(a, [0], 0), [1], 0);
    //a = [0,0,3,4]
    //b = modarray(b, [0], a);
    //b = [[0,0,3,4], [1,2,3,4]]
    //print(b);

    //b = modarray(a, [0], 9);
    //print(a);
    //a = b;
    //print(a);

    //a = modarray(a, [1], 8);
    //print(a);


    vect = iota(12) + 1;
    mat = reshape ([3,4], vect);

    print(mat);
    print(mat[[1,1]]);
    print(mat[[2]]);
    print(mat[2]);
    print(mat[[]]);

    mat[[1,1]] = 0;
    print(mat); 
    mat[[2]] = [0,0,0,0];
    print(mat); 
    mat[[]] = genarray([3,4], 0);
    print(mat); 

    empty_vect = [];
    print(empty_vect);
    empty_mat = reshape([22,0], empty_vect);
    print(empty_mat);
    print(dim(empty_mat));
    print(shape(empty_mat)); 

    return 0;
}