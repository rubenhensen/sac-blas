module OpenBlas;

use Structures: {complex};

export all;


external float, float, float, float srotg(float a, float b, float c, float s);
    #pragma linkname "SACsrotg"
    #pragma linkobj "src/srotg.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [1,2,3,4,1,2,3,4]

external float, float, float, float[5] srotmg(float d1, float d2, float x1, float y1);
    #pragma linkname "SACsrotmg"
    #pragma linkobj "src/srotmg.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [1,2,3,5,1,2,3,4]

external float[k], float[l] srot(int n, float[k] x, int incx, float[l] y, int incy, float c, float s); 
    #pragma linkname "SACsrot"
    #pragma linkobj "src/srot.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [2,4,1,2,3,4,5,6,7]

external float[.], float[.] srotm(int n, float[.] x, int incx, float[.] y, int incy, float[5] param);
    #pragma linkname "SACsrotm"
    #pragma linkobj "src/srotm.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [2,4,1,2,3,4,5,6]

external float[k], float[l] sswap(int n, float[k] x, int incx, float[l] y, int incy);
    #pragma linkname "SACsswap"
    #pragma linkobj "src/sswap.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [2,4,1,2,3,4,5]

external float[k] sscal(int n, float a, float[k] x, int incx);
    #pragma linkname "SACsscal"
    #pragma linkobj "src/sscal.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [3,1,2,3,4]

external float[l] scopy(int n, float[k] x, int incx, float[l] y, int incy);
    #pragma linkname "SACscopy"
    #pragma linkobj "src/scopy.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [4,1,2,3,4,5]

external float[l] saxpy(int n, float a, float[k] x, int incx, float[l] y, int incy);
    #pragma linkname "SACsaxpy"
    #pragma linkobj "src/saxpy.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [5,1,2,3,4,5,6]

external float sdot(int n, float[k] x, int incx, float[l] y, int incy);
    #pragma linkname "SACsdot"
    #pragma linkobj "src/sdot.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [0,1,2,3,4,5]

external float sdsdot(int n, float sb, float[k] sx, int incx, float[l] sy, int incy);
    #pragma linkname "SACsdsdot"
    #pragma linkobj "src/sdsdot.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [0,1,2,3,4,5,6]

external float snrm2(int n, float[k] x, int incx);
    #pragma linkname "SACsnrm2"
    #pragma linkobj "src/snrm2.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [0,1,2,3]

external float sasum(int n, float[k] x, int incx);
    #pragma linkname "SACsasum"
    #pragma linkobj "src/sasum.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [0,1,2,3]


external int isamax(int n, float[k] x, int incx);
    #pragma linkname "SACisamax"
    #pragma linkobj "src/isamax.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [0,1,2,3]

// long unsigned int SACisamax(const int n, const float *x, const int incx)
// double

// external double, double, double, double drotg(double a, double b)

// external double, double, double, double[5] drotmg(double d1, double d2, double x1, double y1)

// external double[k], double[l] drot(int n, double[k] X, int incx, double[l] Y, int incy, double c, double s);

// external double[.], double[.] drotm(int n, double[.] X, int incx, double[.] Y, int incy, double[5] param);

// external double[k], double[l] dswap(int n, double[k] X, int incx, double[l] Y, int incy);

// external double[k] dscal(int n, double a, double[k] X, int incx);

// external double[l] dcopy(int n, double[k] X, int incx, double[l] Y, int incy);

// external double[l] daxpy(int n, double a, double[k] X, int incx, double[l] Y, int incy);

// external double ddot(int n, double[k] X, int incx, double[l] Y, int incy);

// external double dsdot(int n, float[k] X, int incx, float[l] Y, int incy);

// external double dnrm2(int n, double[k] X, int incx);

// external double dznrm2(int n, complex[.] X, int incx);

// external double dasum(int n, double[k] X, int incx);

// external int idamax(int n, double[k] X, int incx);


// complex
// external float scnrm2(int n, complex[.] x, int incx);
//     #pragma linkname "SACscnrm2"
//     #pragma linkobj "src/scnrm2.o"
//     #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
//     #pragma linksign []

// Blas level 2
// void SACsgbmv(char trans, int m, int n, int kl, int ku, float alpha, float* a, int lda, float* x, int incx, float beta, float* y, int incy)

// void cblas_sgbmv (const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE trans, const int m, const int n, const int kl, const int ku, const float alpha, const float *a, const int lda, const float *x, const int incx, const float beta, float *y, const int incy);

external float[*] sgbmv(char trans, int m, int n, int kl, int ku, float alpha, float[*] a, int lda, float[*] x, int incx, float beta, float[*] y, int incy);
    #pragma linkname "SACsgbmv"
    #pragma linkobj "src/sgbmv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [12,1,2,3,4,5,6,7,8,9,10,11,12,13]

external float[*] sgemv(char trans, int m, int n, float alpha, float[*] a, int lda, float[*] x, int incx, float beta, float[*] y, int incy);
    #pragma linkname "SACsgemv"
    #pragma linkobj "src/sgemv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [10,1,2,3,4,5,6,7,8,9,10,11]

external float[m,n] sger(int m, int n, float alpha, float[lenx] x, int incx, float[leny] y, int incy, float[m,n] a, int lda);
    #pragma linkname "SACsger"
    #pragma linkobj "src/sger.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [8,1,2,3,4,5,6,7,8,9]

external float[*] ssymv(char uplo, int n, float alpha, float[*] a, int lda, float[*] x, int incx, float beta, float[*] y, int incy);
    #pragma linkname "SACssymv"
    #pragma linkobj "src/ssymv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [9,1,2,3,4,5,6,7,8,9,10]

external complex[*] zgerc(int m, int n, complex[*] alpha, complex[*] x, int incx, complex[*] y, int incy, complex[*] a, int lda);
    #pragma linkname "SACzgerc"
    #pragma linkobj "src/zgerc.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [8,1,2,3,4,5,6,7,8,9]

external complex[*] zgeru(int m, int n, complex[*] alpha, complex[*] x, int incx, complex[*] y, int incy, complex[*] a, int lda);
    #pragma linkname "SACzgeru"
    #pragma linkobj "src/zgeru.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [8,1,2,3,4,5,6,7,8,9]

external complex[*] zhbmv(char uplo, int n, int k, complex alpha, complex[*] a, int lda, complex[*] x, int incx, complex beta, complex[*] y, int incy);
    #pragma linkname "SACzhbmv"
    #pragma linkobj "src/zhbmv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [10,1,2,3,4,5,6,7,8,9,10,11]

external complex[*] zher(char uplo, int n, double alpha, complex[.] x, int incx, complex[*] a, int lda);
    #pragma linkname "SACzher"
    #pragma linkobj "src/zher.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [6,1,2,3,4,5,6,7]

external complex[*] zher2(char uplo, int n, double alpha, complex[.] x, int incx, complex[.] y, int incy, complex[*] a, int lda);
    #pragma linkname "SACzher2"
    #pragma linkobj "src/zher2.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [8,1,2,3,4,5,6,7,8,9]

external complex[*] zhpmv(char uplo, int n, complex alpha, complex[*] ap, complex[*] x, int incx, complex beta, complex[*] y, int incy);
    #pragma linkname "SACzhpmv"
    #pragma linkobj "src/zhpmv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [8,1,2,3,4,5,6,7,8,9]

external complex[*] zhpr(char uplo, int n, complex alpha, complex[*] x, int incx, complex[*] ap);
    #pragma linkname "SACzhpr"
    #pragma linkobj "src/zhpr.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [6,1,2,3,4,5,6]

external complex[*] zhpr2(char uplo, int n, double alpha, complex[*] x, int incx, complex[*] y, int incy, complex[*] ap);
    #pragma linkname "SACzhpr2"
    #pragma linkobj "src/zhpr2.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [8,1,2,3,4,5,6,7,8]

external float[*] ssbmv(char uplo, int n, int k, float alpha, float[*] a, int lda, float[*] x, int incx, float beta, float[*] y, int incy);
    #pragma linkname "SACssbmv"
    #pragma linkobj "src/ssbmv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [10,1,2,3,4,5,6,7,8,9,10,11]

external float[xn] stpmv(char uplo, char trans, char diag, int n, float[an] ap, float[xn] x, int incx);
    #pragma linkname "SACstpmv"
    #pragma linkobj "src/stpmv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [6,1,2,3,4,5,6,7]

external float[xn] strmv(char uplo, char trans, char diag, int n, float[an,am] a, int lda, float[xn] x, int incx);
    #pragma linkname "SACstrmv"
    #pragma linkobj "src/strmv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [7,1,2,3,4,5,6,7,8]

external float[xn] stbmv(char uplo, char trans, char diag, int n, int k, float[an,am] a, int lda, float[xn] x, int incx);
    #pragma linkname "SACstbmv"
    #pragma linkobj "src/stbmv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [8,1,2,3,4,5,6,7,8,9]

external float[xn] stbsv(char uplo, char trans, char diag, int n, int k, float[an,am] a, int lda, float[xn] x, int incx);
    #pragma linkname "SACstbsv"
    #pragma linkobj "src/stbsv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [8,1,2,3,4,5,6,7,8,9]

external float[xn] strsv(char uplo, char trans, char diag, int n, float[an,am] a, int lda, float[xn] x, int incx);
    #pragma linkname "SACstrsv"
    #pragma linkobj "src/strsv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [7,1,2,3,4,5,6,7,8]
    
external float[yn] sspmv(const char uplo, const int n, const float alpha, const float *ap, const float *x, const int incx, const float beta, float *y, const int incy);
    #pragma linkname "SACsspmv"
    #pragma linkobj "src/sspmv.o"
    #pragma header  "/usr/include/x86_64-linux-gnu/cblas.h"
    #pragma linksign [8,1,2,3,4,5,6,7,8,9]
