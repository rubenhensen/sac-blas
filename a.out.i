# 0 "/home/rubenhensen/sac/a.out.c"
# 1 "/home/rubenhensen/sac//"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 0 "<command-line>" 2
# 1 "/home/rubenhensen/sac/a.out.c"
# 278 "/home/rubenhensen/sac/a.out.c"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 1



# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl_gen.h" 1
# 5 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std_gen.h" 1
# 6 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 14 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/nested_h/nested_gen.h" 1
# 15 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/nested_h/nested.h" 1
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 30 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 1
# 26 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h"
# 1 "/usr/include/stdlib.h" 1 3 4
# 26 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 392 "/usr/include/features.h" 3 4
# 1 "/usr/include/features-time64.h" 1 3 4
# 20 "/usr/include/features-time64.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 21 "/usr/include/features-time64.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 2 3 4
# 22 "/usr/include/features-time64.h" 2 3 4
# 393 "/usr/include/features.h" 2 3 4
# 486 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 559 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 560 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 561 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 487 "/usr/include/features.h" 2 3 4
# 510 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 511 "/usr/include/features.h" 2 3 4
# 34 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 2 3 4
# 27 "/usr/include/stdlib.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 209 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4

# 209 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 321 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4







# 1 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 1 3 4
# 41 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 1 3 4
# 42 "/usr/include/stdlib.h" 2 3 4
# 56 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 1 3 4
# 119 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 2 3 4
# 120 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 2 3 4
# 57 "/usr/include/stdlib.h" 2 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;





__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 98 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));



extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 177 "/usr/include/stdlib.h" 3 4
extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 361 "/usr/include/stdlib.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}


__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}
# 386 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern long int a64l (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));




# 1 "/usr/include/x86_64-linux-gnu/sys/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 2 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;






typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;



typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 142 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/time64.h" 1 3 4
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;
typedef long int __suseconds64_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 30 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;


typedef __loff_t loff_t;




typedef __ino_t ino_t;
# 59 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;
# 97 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;




# 1 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 1 3 4






typedef __clock_t clock_t;
# 127 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 1 3 4






typedef __clockid_t clockid_t;
# 129 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 3 4
typedef __time_t time_t;
# 130 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 1 3 4






typedef __timer_t timer_t;
# 131 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 144 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 145 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;




# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 156 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


typedef __uint8_t u_int8_t;
typedef __uint16_t u_int16_t;
typedef __uint32_t u_int32_t;
typedef __uint64_t u_int64_t;


typedef int register_t __attribute__ ((__mode__ (__word__)));
# 176 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 24 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endian.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endianness.h" 1 3 4
# 36 "/usr/include/x86_64-linux-gnu/bits/endian.h" 2 3 4
# 25 "/usr/include/endian.h" 2 3 4
# 35 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline __uint16_t
__bswap_16 (__uint16_t __bsx)
{

  return __builtin_bswap16 (__bsx);



}






static __inline __uint32_t
__bswap_32 (__uint32_t __bsx)
{

  return __builtin_bswap32 (__bsx);



}
# 69 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
__extension__ static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{

  return __builtin_bswap64 (__bsx);



}
# 36 "/usr/include/endian.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 1 3 4
# 32 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3 4
static __inline __uint16_t
__uint16_identity (__uint16_t __x)
{
  return __x;
}

static __inline __uint32_t
__uint32_identity (__uint32_t __x)
{
  return __x;
}

static __inline __uint64_t
__uint64_identity (__uint64_t __x)
{
  return __x;
}
# 37 "/usr/include/endian.h" 2 3 4
# 177 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/sys/select.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select.h" 1 3 4
# 31 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 1 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 1 3 4




typedef struct
{
  unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
} __sigset_t;
# 5 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 2 3 4


typedef __sigset_t sigset_t;
# 34 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 1 3 4







struct timeval
{




  __time_t tv_sec;
  __suseconds_t tv_usec;

};
# 38 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
struct timespec
{



  __time_t tv_sec;




  __syscall_slong_t tv_nsec;
# 31 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
};
# 40 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



typedef __suseconds_t suseconds_t;





typedef long int __fd_mask;
# 59 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 91 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4

# 102 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 127 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 150 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select2.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3 4
extern long int __fdelt_chk (long int __d);
extern long int __fdelt_warn (long int __d)
  __attribute__((__warning__ ("bit outside of fd_set selected")));
# 151 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 180 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 227 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 1 3 4
# 44 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 1 3 4
# 21 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 2 3 4
# 45 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3 4
typedef union
{
  __extension__ unsigned long long int __value64;
  struct
  {
    unsigned int __low;
    unsigned int __high;
  } __value32;
} __atomic_wide_counter;
# 47 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;

typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;
# 76 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
struct __pthread_mutex_s
{
  int __lock;
  unsigned int __count;
  int __owner;

  unsigned int __nusers;



  int __kind;

  short __spins;
  short __elision;
  __pthread_list_t __list;
# 53 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
};
# 77 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4
# 89 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
struct __pthread_rwlock_arch_t
{
  unsigned int __readers;
  unsigned int __writers;
  unsigned int __wrphase_futex;
  unsigned int __writers_futex;
  unsigned int __pad3;
  unsigned int __pad4;

  int __cur_writer;
  int __shared;
  signed char __rwelision;




  unsigned char __pad1[7];


  unsigned long int __pad2;


  unsigned int __flags;
# 55 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
};
# 90 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




struct __pthread_cond_s
{
  __atomic_wide_counter __wseq;
  __atomic_wide_counter __g1_start;
  unsigned int __g_refs[2] ;
  unsigned int __g_size[2];
  unsigned int __g1_orig_size;
  unsigned int __wrefs;
  unsigned int __g_signals[2];
};

typedef unsigned int __tss_t;
typedef unsigned long int __thrd_t;

typedef struct
{
  int __data ;
} __once_flag;
# 24 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 2 3 4



typedef unsigned long int pthread_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;




typedef union
{
  struct __pthread_mutex_s __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;


typedef union
{
  struct __pthread_cond_s __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;





typedef union
{
  struct __pthread_rwlock_arch_t __data;
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 228 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



# 396 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));



extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));







extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) __attribute__ ((__warn_unused_result__));

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (1, 2))) __attribute__ ((__warn_unused_result__));






extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__)) __attribute__ ((__alloc_size__ (2)));


extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));







extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__))
     __attribute__ ((__alloc_size__ (2, 3)))
    __attribute__ ((__malloc__ (__builtin_free, 1)));


extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__ (reallocarray, 1)));



# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));






# 575 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) __attribute__ ((__warn_unused_result__));




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 598 "/usr/include/stdlib.h" 3 4
extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 617 "/usr/include/stdlib.h" 3 4
extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
# 636 "/usr/include/stdlib.h" 3 4
extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 654 "/usr/include/stdlib.h" 3 4
extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
# 682 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 695 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 717 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 738 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 791 "/usr/include/stdlib.h" 3 4
extern int system (const char *__command) __attribute__ ((__warn_unused_result__));
# 808 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));






typedef int (*__compar_fn_t) (const void *, const void *);
# 828 "/usr/include/stdlib.h" 3 4
extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) __attribute__ ((__warn_unused_result__));


# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) void *
bsearch (const void *__key, const void *__base, size_t __nmemb, size_t __size,
  __compar_fn_t __compar)
{
  size_t __l, __u, __idx;
  const void *__p;
  int __comparison;

  __l = 0;
  __u = __nmemb;
  while (__l < __u)
    {
      __idx = (__l + __u) / 2;
      __p = (const void *) (((const char *) __base) + (__idx * __size));
      __comparison = (*__compar) (__key, __p);
      if (__comparison < 0)
 __u = __idx;
      else if (__comparison > 0)
 __l = __idx + 1;
      else
 {

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wcast-qual"

   return (void *) __p;

#pragma GCC diagnostic pop

 }
    }

  return ((void *)0);
}
# 834 "/usr/include/stdlib.h" 2 3 4




extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 848 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));


__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));






extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));


__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
# 880 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));





extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__));



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__))
    __attribute__ ((__access__ (__read_only__, 2)));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__access__ (__write_only__, 1, 3)))
  __attribute__ ((__access__ (__read_only__, 2)));






extern int rpmatch (const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 967 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) __attribute__ ((__warn_unused_result__));
# 1013 "/usr/include/stdlib.h" 3 4
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1023 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}
# 1024 "/usr/include/stdlib.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3 4
extern char *__realpath_chk (const char *__restrict __name,
        char *__restrict __resolved,
        size_t __resolvedlen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern char *__realpath_alias (const char *__restrict __name, char *__restrict __resolved) __asm__ ("" "realpath") __attribute__ ((__nothrow__ , __leaf__))

                                                 __attribute__ ((__warn_unused_result__));
extern char *__realpath_chk_warn (const char *__restrict __name, char *__restrict __resolved, size_t __resolvedlen) __asm__ ("" "__realpath_chk") __attribute__ ((__nothrow__ , __leaf__))


                                                __attribute__ ((__warn_unused_result__))
     __attribute__((__warning__ ("second argument of realpath must be either NULL or at " "least PATH_MAX bytes long buffer")))
                                      ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
__attribute__ ((__nothrow__ , __leaf__)) realpath (const char *__restrict __name, char *__restrict __resolved)
{
  size_t sz = __builtin_object_size (__resolved, 2 > 1);

  if (sz == (size_t) -1)
    return __realpath_alias (__name, __resolved);





  return __realpath_chk (__name, __resolved, sz);
}


extern int __ptsname_r_chk (int __fd, char *__buf, size_t __buflen,
       size_t __nreal) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)))
    __attribute__ ((__access__ (__write_only__, 2, 3)));
extern int __ptsname_r_alias (int __fd, char *__buf, size_t __buflen) __asm__ ("" "ptsname_r") __attribute__ ((__nothrow__ , __leaf__))

     __attribute__ ((__nonnull__ (2))) __attribute__ ((__access__ (__write_only__, 2, 3)));
extern int __ptsname_r_chk_warn (int __fd, char *__buf, size_t __buflen, size_t __nreal) __asm__ ("" "__ptsname_r_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__nonnull__ (2))) __attribute__((__warning__ ("ptsname_r called with buflen bigger than " "size of buf")))
                   ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) ptsname_r (int __fd, char *__buf, size_t __buflen)
{
  return ((((__typeof (__buflen)) 0 < (__typeof (__buflen)) -1 || (__builtin_constant_p (__buflen) && (__buflen) > 0)) && __builtin_constant_p ((((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) && (((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) ? __ptsname_r_alias (__fd, __buf, __buflen) : ((((__typeof (__buflen)) 0 < (__typeof (__buflen)) -1 || (__builtin_constant_p (__buflen) && (__buflen) > 0)) && __builtin_constant_p ((((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) && !(((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) ? __ptsname_r_chk_warn (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1)) : __ptsname_r_chk (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1))))

                           ;
}


extern int __wctomb_chk (char *__s, wchar_t __wchar, size_t __buflen)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int __wctomb_alias (char *__s, wchar_t __wchar) __asm__ ("" "wctomb") __attribute__ ((__nothrow__ , __leaf__))
              __attribute__ ((__warn_unused_result__));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) int
__attribute__ ((__nothrow__ , __leaf__)) wctomb (char *__s, wchar_t __wchar)
{







  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1
      && 16 > __builtin_object_size (__s, 2 > 1))
    return __wctomb_chk (__s, __wchar, __builtin_object_size (__s, 2 > 1));
  return __wctomb_alias (__s, __wchar);
}


extern size_t __mbstowcs_chk (wchar_t *__restrict __dst,
         const char *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__))
    __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __mbstowcs_alias (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len) __asm__ ("" "mbstowcs") __attribute__ ((__nothrow__ , __leaf__))



    __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __mbstowcs_chk_warn (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__mbstowcs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("mbstowcs called with dst buffer smaller than len " "* sizeof (wchar_t)")))
                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) mbstowcs (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len)

{
  return ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) && (((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) ? __mbstowcs_alias (__dst, __src, __len) : ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) && !(((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) ? __mbstowcs_chk_warn (__dst, __src, __len, (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t))) : __mbstowcs_chk (__dst, __src, __len, (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))))

                           ;
}


extern size_t __wcstombs_chk (char *__restrict __dst,
         const wchar_t *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __wcstombs_alias (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len) __asm__ ("" "wcstombs") __attribute__ ((__nothrow__ , __leaf__))



  __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __wcstombs_chk_warn (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__wcstombs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("wcstombs called with dst buffer smaller than len")));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) wcstombs (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len)

{
  return ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) && (((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) ? __wcstombs_alias (__dst, __src, __len) : ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) && !(((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) ? __wcstombs_chk_warn (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1)) : __wcstombs_chk (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1))))

                         ;
}
# 1028 "/usr/include/stdlib.h" 2 3 4








# 27 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2
# 1 "/usr/include/inttypes.h" 1 3 4
# 27 "/usr/include/inttypes.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 1 3 4
# 9 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 26 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/stdint.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/wchar.h" 1 3 4
# 29 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 30 "/usr/include/stdint.h" 2 3 4







# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3 4
typedef __uint8_t uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
# 38 "/usr/include/stdint.h" 2 3 4





typedef __int_least8_t int_least8_t;
typedef __int_least16_t int_least16_t;
typedef __int_least32_t int_least32_t;
typedef __int_least64_t int_least64_t;


typedef __uint_least8_t uint_least8_t;
typedef __uint_least16_t uint_least16_t;
typedef __uint_least32_t uint_least32_t;
typedef __uint_least64_t uint_least64_t;





typedef signed char int_fast8_t;

typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
# 71 "/usr/include/stdint.h" 3 4
typedef unsigned char uint_fast8_t;

typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
# 87 "/usr/include/stdint.h" 3 4
typedef long int intptr_t;


typedef unsigned long int uintptr_t;
# 101 "/usr/include/stdint.h" 3 4
typedef __intmax_t intmax_t;
typedef __uintmax_t uintmax_t;
# 10 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 2 3 4
# 28 "/usr/include/inttypes.h" 2 3 4






typedef int __gwchar_t;
# 266 "/usr/include/inttypes.h" 3 4





typedef struct
  {
    long int quot;
    long int rem;
  } imaxdiv_t;
# 290 "/usr/include/inttypes.h" 3 4
extern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern intmax_t strtoimax (const char *__restrict __nptr,
      char **__restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t strtoumax (const char *__restrict __nptr,
       char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern intmax_t wcstoimax (const __gwchar_t *__restrict __nptr,
      __gwchar_t **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t wcstoumax (const __gwchar_t *__restrict __nptr,
       __gwchar_t ** __restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));


# 28 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h" 1
# 35 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h"

# 35 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h"
typedef int bool;
# 29 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_misc.h" 1
# 30 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2



extern size_t SAC_DISTMEM_rank;




extern int SAC_DISTMEM_trace_profile_rank;
# 55 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h"
void SAC_DISTMEM_Abort (int exit_code);
# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2





# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/audwl.h" 1
# 37 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h" 1
# 38 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/errors.h" 1
# 39 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/icm.h" 1
# 40 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/idx.h" 1
# 41 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/prf.h" 1
# 42 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl.h" 1
# 10 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_methods.h" 1
# 11 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl.h" 2
# 43 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_methods.h" 1
# 44 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_stubs.h" 1
# 45 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rcm_local_async_norc_ptr.h" 1
# 46 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rcm_local_pasync.h" 1
# 47 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rcm_local_pasync_norc_desc.h" 1
# 48 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_commandline.h" 1
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_commandline.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/commandline.h" 1
# 20 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/commandline.h"
extern char **SAC_commandline_argv;
extern int SAC_commandline_argc;
# 17 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_commandline.h" 2
# 49 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_misc.h" 1
# 50 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 1
# 20 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 1 3 4
# 203 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 195 "/usr/include/limits.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 161 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 1 3 4
# 38 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 2 3 4
# 81 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 1 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 2 3 4
# 82 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 2 3 4
# 162 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 196 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/posix2_lim.h" 1 3 4
# 200 "/usr/include/limits.h" 2 3 4
# 204 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-linux-gnu/11/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 2 3 4
# 21 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2






# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/icm.h" 1
# 28 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/cuda_transfer_methods.h" 1
# 29 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/runtimecheck.h" 1
# 30 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 1
# 15 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
# 1 "/usr/include/assert.h" 1 3 4
# 66 "/usr/include/assert.h" 3 4




# 69 "/usr/include/assert.h" 3 4
extern void __assert_fail (const char *__assertion, const char *__file,
      unsigned int __line, const char *__function)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));


extern void __assert_perror_fail (int __errnum, const char *__file,
      unsigned int __line, const char *__function)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern void __assert (const char *__assertion, const char *__file, int __line)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 2






# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/mt_h/rt_mt.h" 1
# 128 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/mt_h/rt_mt.h"

# 128 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/mt_h/rt_mt.h"
extern unsigned int SAC_MT_globally_single;


extern unsigned int SAC_RTSPEC_controller_threads;
# 23 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/cuda_transfer_methods.h" 1
# 24 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 2
# 33 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef unsigned long int SAC_HM_size_byte_t;
typedef long int SAC_HM_size_unit_t;
# 59 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
extern void *malloc (size_t size);
extern void free (void *addr);
# 97 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef union header_t {
    struct header_data1_t {
        SAC_HM_size_unit_t size;
        struct arena_t *arena;
    } data1;
    struct header_data2_t {
        union header_t *prevfree;
        union header_t *nextfree;
    } data2;
    struct header_data3_t {
        SAC_HM_size_unit_t prevsize;
        SAC_HM_size_unit_t diag;
    } data3;
    char align[(((((((sizeof (struct header_data1_t)) > (sizeof (struct header_data2_t)) ? (sizeof (struct header_data1_t)) : (sizeof (struct header_data2_t)))) > (sizeof (struct header_data3_t)) ? (((sizeof (struct header_data1_t)) > (sizeof (struct header_data2_t)) ? (sizeof (struct header_data1_t)) : (sizeof (struct header_data2_t)))) : (sizeof (struct header_data3_t)))


                  - 1)
                 / sizeof (double))
                + 1)
               * sizeof (double)];
} SAC_HM_header_t;
# 148 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef struct arena_t {
    int num;
    SAC_HM_header_t freelist[3];
    SAC_HM_header_t *wilderness;
    SAC_HM_size_unit_t binsize;
    SAC_HM_size_unit_t min_chunk_size;







    volatile SAC_HM_header_t *unused_list;


    unsigned long int size;
    unsigned long int cnt_bins;
    unsigned long int cnt_alloc;
    unsigned long int cnt_alloc_var_size;
    unsigned long int cnt_after_freelist;
    unsigned long int cnt_after_splitting;
    unsigned long int cnt_after_wilderness;
    unsigned long int cnt_after_coalascing;
    unsigned long int cnt_after_coalascing_wilderness;
    unsigned long int cnt_after_extension;
    unsigned long int cnt_free;
    unsigned long int cnt_free_var_size;
    unsigned long int cnt_coalascing;
    unsigned long int cnt_coalascing_wilderness;
} SAC_HM_arena_t;
# 300 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef enum {
    SAC_HM_single_threaded,
    SAC_HM_multi_threaded,
    SAC_HM_any_threaded
} SAC_HM_thread_status_t;
# 313 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"







extern int SAC_HM_not_yet_initialized;
extern unsigned long int SAC_HM_acquire_top_arena_lock;





extern void SAC_HM_Setup (unsigned int threads);

extern void *SAC_HM_MallocSmallChunk (SAC_HM_size_unit_t units,
                                            SAC_HM_arena_t *arena);
extern void *SAC_HM_MallocLargeChunk (SAC_HM_size_unit_t units,
                                            SAC_HM_arena_t *arena);

extern void SAC_HM_FreeSmallChunk (SAC_HM_header_t *addr, SAC_HM_arena_t *arena);
extern void SAC_HM_FreeLargeChunk (SAC_HM_header_t *addr, SAC_HM_arena_t *arena);

extern void *SAC_HM_MallocAnyChunk_at (SAC_HM_size_byte_t size,
                                             unsigned int thread_id);
extern void *SAC_HM_MallocAnyChunk_st (SAC_HM_size_byte_t size);
extern void *SAC_HM_MallocAnyChunk_mt (SAC_HM_size_byte_t size,
                                             unsigned int thread_id);

extern void *SAC_HM_MallocSmallChunk_at (SAC_HM_size_unit_t units, int arena_num);
extern void *SAC_HM_MallocLargeChunk_at (SAC_HM_size_unit_t units, int arena_num);
extern void *SAC_HM_MallocTopArena_at (SAC_HM_size_unit_t units);
extern void *SAC_HM_MallocTopArena_mt (SAC_HM_size_unit_t units);

extern void *SAC_HM_MallocDesc (SAC_HM_header_t *addr, SAC_HM_size_byte_t size,
                                      SAC_HM_size_byte_t desc_size);

extern void SAC_HM_FreeTopArena_mt (SAC_HM_header_t *addr);
extern void SAC_HM_FreeTopArena_at (SAC_HM_header_t *addr);

extern void SAC_HM_FreeDesc (SAC_HM_header_t *addr);

extern void SAC_HM_ShowDiagnostics (void);
extern void SAC_HM_CheckAllocPatternAnyChunk (SAC_HM_header_t *addr);

extern void *SAC_HM_PlaceArray (void *alloc, void *base, long int offset,
                                      long int cache_size);





extern unsigned int SAC_HM_CurrentThreadId (void);
extern int SAC_HM_DiscoversThreads (void);
# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_trace.h" 1
# 32 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h" 1
# 41 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 1







# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 1
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h"
# 1 "/usr/include/x86_64-linux-gnu/sys/time.h" 1 3 4
# 34 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4

# 52 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4

# 52 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
struct timezone
  {
    int tz_minuteswest;
    int tz_dsttime;
  };
# 67 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
extern int gettimeofday (struct timeval *__restrict __tv,
    void *__restrict __tz) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 86 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
extern int settimeofday (const struct timeval *__tv,
    const struct timezone *__tz)
     __attribute__ ((__nothrow__ , __leaf__));





extern int adjtime (const struct timeval *__delta,
      struct timeval *__olddelta) __attribute__ ((__nothrow__ , __leaf__));
# 114 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
enum __itimer_which
  {

    ITIMER_REAL = 0,


    ITIMER_VIRTUAL = 1,



    ITIMER_PROF = 2

  };



struct itimerval
  {

    struct timeval it_interval;

    struct timeval it_value;
  };






typedef int __itimer_which_t;





extern int getitimer (__itimer_which_t __which,
        struct itimerval *__value) __attribute__ ((__nothrow__ , __leaf__));




extern int setitimer (__itimer_which_t __which,
        const struct itimerval *__restrict __new,
        struct itimerval *__restrict __old) __attribute__ ((__nothrow__ , __leaf__));




extern int utimes (const char *__file, const struct timeval __tvp[2])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 189 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
extern int lutimes (const char *__file, const struct timeval __tvp[2])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int futimes (int __fd, const struct timeval __tvp[2]) __attribute__ ((__nothrow__ , __leaf__));
# 258 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4

# 17 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 2




# 1 "/usr/include/x86_64-linux-gnu/sys/resource.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/resource.h" 1 3 4
# 31 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
enum __rlimit_resource
{

  RLIMIT_CPU = 0,



  RLIMIT_FSIZE = 1,



  RLIMIT_DATA = 2,



  RLIMIT_STACK = 3,



  RLIMIT_CORE = 4,






  __RLIMIT_RSS = 5,



  RLIMIT_NOFILE = 7,
  __RLIMIT_OFILE = RLIMIT_NOFILE,




  RLIMIT_AS = 9,



  __RLIMIT_NPROC = 6,



  __RLIMIT_MEMLOCK = 8,



  __RLIMIT_LOCKS = 10,



  __RLIMIT_SIGPENDING = 11,



  __RLIMIT_MSGQUEUE = 12,





  __RLIMIT_NICE = 13,




  __RLIMIT_RTPRIO = 14,





  __RLIMIT_RTTIME = 15,


  __RLIMIT_NLIMITS = 16,
  __RLIM_NLIMITS = __RLIMIT_NLIMITS


};
# 131 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
typedef __rlim_t rlim_t;







struct rlimit
  {

    rlim_t rlim_cur;

    rlim_t rlim_max;
  };
# 158 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
enum __rusage_who
{

  RUSAGE_SELF = 0,



  RUSAGE_CHILDREN = -1
# 176 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
};


# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_rusage.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/types/struct_rusage.h" 3 4
struct rusage
  {

    struct timeval ru_utime;

    struct timeval ru_stime;

    __extension__ union
      {
 long int ru_maxrss;
 __syscall_slong_t __ru_maxrss_word;
      };


    __extension__ union
      {
 long int ru_ixrss;
 __syscall_slong_t __ru_ixrss_word;
      };

    __extension__ union
      {
 long int ru_idrss;
 __syscall_slong_t __ru_idrss_word;
      };

    __extension__ union
      {
 long int ru_isrss;
  __syscall_slong_t __ru_isrss_word;
      };


    __extension__ union
      {
 long int ru_minflt;
 __syscall_slong_t __ru_minflt_word;
      };

    __extension__ union
      {
 long int ru_majflt;
 __syscall_slong_t __ru_majflt_word;
      };

    __extension__ union
      {
 long int ru_nswap;
 __syscall_slong_t __ru_nswap_word;
      };


    __extension__ union
      {
 long int ru_inblock;
 __syscall_slong_t __ru_inblock_word;
      };

    __extension__ union
      {
 long int ru_oublock;
 __syscall_slong_t __ru_oublock_word;
      };

    __extension__ union
      {
 long int ru_msgsnd;
 __syscall_slong_t __ru_msgsnd_word;
      };

    __extension__ union
      {
 long int ru_msgrcv;
 __syscall_slong_t __ru_msgrcv_word;
      };

    __extension__ union
      {
 long int ru_nsignals;
 __syscall_slong_t __ru_nsignals_word;
      };



    __extension__ union
      {
 long int ru_nvcsw;
 __syscall_slong_t __ru_nvcsw_word;
      };


    __extension__ union
      {
 long int ru_nivcsw;
 __syscall_slong_t __ru_nivcsw_word;
      };
  };
# 180 "/usr/include/x86_64-linux-gnu/bits/resource.h" 2 3 4







enum __priority_which
{
  PRIO_PROCESS = 0,

  PRIO_PGRP = 1,

  PRIO_USER = 2

};



# 223 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4

# 25 "/usr/include/x86_64-linux-gnu/sys/resource.h" 2 3 4







# 42 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
typedef int __rlimit_resource_t;
typedef int __rusage_who_t;
typedef int __priority_which_t;





extern int getrlimit (__rlimit_resource_t __resource,
        struct rlimit *__rlimits) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 70 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
extern int setrlimit (__rlimit_resource_t __resource,
        const struct rlimit *__rlimits) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 89 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
extern int getrusage (__rusage_who_t __who, struct rusage *__usage) __attribute__ ((__nothrow__ , __leaf__));
# 105 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
extern int getpriority (__priority_which_t __which, id_t __who) __attribute__ ((__nothrow__ , __leaf__));



extern int setpriority (__priority_which_t __which, id_t __who, int __prio)
     __attribute__ ((__nothrow__ , __leaf__));


# 22 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 2
# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h"

# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h"
typedef struct timeval SAC_PF_TIMER;

typedef enum {
    PF_ow_fun = 0,
    PF_ow_genarray = 1,
    PF_ow_modarray = 2,
    PF_ow_fold = 3,
    PF_iw_fun = 4,
    PF_iw_genarray = 5,
    PF_iw_modarray = 6,
    PF_iw_fold = 7

    ,
    PF_cuda_knl = 8

    ,
    PF_distmem_exec_rep = 9,
    PF_distmem_exec_dist = 10,
    PF_distmem_exec_side_effects = 11,
    PF_distmem_rep_barrier = 12,
    PF_distmem_dist_barrier = 13,
    PF_distmem_side_effects_barrier = 14,
    PF_distmem_comm = 15

} SAC_PF_record_type;

typedef struct profile_record {
    int funno;
    int funapno;
    SAC_PF_record_type record_type;
    struct profile_record *parent;
    int *cycle_tag;
} SAC_PROFILE_RECORD;
# 9 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 2

# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 143 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4

# 143 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 11 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 2
# 54 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h"

# 54 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h"
extern void SAC_PF_MEM_CUDA_PrintStats (void);
extern void SAC_PF_MEM_CUDA_AllocMemcnt (size_t size);
extern void SAC_PF_MEM_CUDA_FreeMemcnt (size_t size);
extern void SAC_PF_MEM_CUDA_AllocDescnt (size_t size);
extern void SAC_PF_MEM_CUDA_FreeDescnt (size_t size);
extern void SAC_PF_MEM_CUDA_AddToMax (size_t size);
# 42 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h" 2
# 33 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_cachesim.h" 1
# 34 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 110 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h"
typedef void *SAC_hidden;






typedef intptr_t SAC_referencecount_t;




typedef intptr_t *SAC_array_descriptor_parent_t;
# 137 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h"
typedef intptr_t *SAC_array_descriptor_t;
# 51 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/tuple.h" 1
# 52 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/types.h" 1
# 33 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/types.h"
typedef struct {
    float a, b, c, d;
} __attribute__ ((packed)) floatvec;






typedef char byte;




typedef long long longlong;




typedef unsigned char ubyte;




typedef unsigned long long ulonglong;




typedef unsigned short ushort;




typedef unsigned int uint;




typedef unsigned long ulong;
# 53 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/wl.h" 1
# 54 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2




# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h" 1
# 59 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2




# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/runtimecheck.h" 1
# 64 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2


# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/hwloc_h/cpubind.h" 1
# 42 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/hwloc_h/cpubind.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cpubind.h" 1



# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/config.h" 1
# 5 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cpubind.h" 2
# 43 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/hwloc_h/cpubind.h" 2
# 67 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 94 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 1
# 95 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2


# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/rtspec_h/rtspec.h" 1
# 98 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2






# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/commandline.h" 1
# 105 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h" 1
# 20 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 1
# 21 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/fun-attrs.h" 1
# 22 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h" 2

extern void (*SAC_MessageExtensionCallback) (void);

extern void SAC_RuntimeWarning (const char *format, ...);
extern void SAC_RuntimeWarningLoc (const char *filename, int line, int col, const char *format, ...);
extern void SAC_RuntimeError (const char *format, ...) __attribute__ ((noreturn));
extern void SAC_RuntimeErrorLoc (const char *filename, int line, int col, const char *format, ...) __attribute__ ((noreturn));
extern void SAC_RuntimeError_Mult (int cnt, ...) __attribute__ ((noreturn));

extern const char *SAC_PrintShape (SAC_array_descriptor_t desc);
extern void SAC_Print (const char *format, ...);
# 106 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/misc.h" 1
# 24 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/misc.h"
extern void SAC_String2Array (unsigned char *array, const char *string);
# 107 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/trace.h" 1
# 27 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/trace.h"
extern void SAC_TR_Print (const char *format, ...);

extern void SAC_TR_IncArrayMemcnt (int size);
extern void SAC_TR_DecArrayMemcnt (int size);
extern void SAC_TR_IncHiddenMemcnt (int size);
extern void SAC_TR_DecHiddenMemcnt (int size);
# 108 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 1
# 109 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_memory.h" 1






# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 8 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_memory.h" 2
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_memory.h"
typedef struct memory_record {
    unsigned long alloc_mem_count;
    unsigned long free_mem_count;
    unsigned long alloc_desc_count;
    unsigned long free_desc_count;
    unsigned long reuse_mem_count;






} SAC_PF_MEMORY_RECORD;

extern void SAC_PF_MEM_PrintStats (void);
extern void SAC_PF_MEM_PrintRecordStats (SAC_PF_MEMORY_RECORD record);
extern void SAC_PF_MEM_PrintFunStats (const char *func_name, unsigned num_ap,
                                            const SAC_PF_MEMORY_RECORD *records);
extern bool SAC_PF_MEM_IsRecordZero (SAC_PF_MEMORY_RECORD record);
extern void SAC_PF_MEM_AllocMemcnt (size_t size);
extern void SAC_PF_MEM_FreeMemcnt (size_t size);
extern void SAC_PF_MEM_AllocDescnt (size_t size);
extern void SAC_PF_MEM_FreeDescnt (size_t size);
extern void SAC_PF_MEM_ReuseMemcnt (void);
extern void SAC_PF_MEM_AddToMax (size_t size);
# 110 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_ops.h" 1
# 23 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_ops.h"
enum pf_ops {
  P_SAC_ND_PRF_ADD,
  P_SAC_ND_PRF_SUB,
  P_SAC_ND_PRF_MUL,
  P_SAC_ND_PRF_DIV,
  P_SAC_ND_PRF_MOD,
  P_SAC_ND_PRF_APLMOD,
  P_SAC_ND_PRF_MIN,
  P_SAC_ND_PRF_MAX,
  P_SAC_ND_PRF_EQ,
  P_SAC_ND_PRF_NE,
  P_SAC_ND_PRF_LE,
  P_SAC_ND_PRF_LT,
  P_SAC_ND_PRF_GE,
  P_SAC_ND_PRF_GT,
  P_SAC_ND_PRF_AND,
  P_SAC_ND_PRF_OR,
  P_undef
} ;
# 56 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_ops.h"
enum pf_types {
  T_int,
  T_float,
  T_double,
  T_ignore,
  T_nothing
} ;







typedef struct ops_record {
    unsigned long type_ops_count[T_nothing][P_undef];
} SAC_PF_OPS_RECORD;

extern void SAC_PF_OPS_PrintStats (void);
extern void SAC_PF_OPS_PrintRecordStats (SAC_PF_OPS_RECORD record);
extern void SAC_PF_OPS_PrintFunStats (const char *func_name, unsigned num_ap,
                                            const SAC_PF_OPS_RECORD *records);
extern void SAC_PF_OPS_PrintOpsStats (unsigned long *p_ops);
extern bool SAC_PF_OPS_IsRecordZero (SAC_PF_OPS_RECORD record);
extern void SAC_PF_OPS_IncPrf (enum pf_types s, enum pf_ops o);
# 111 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_print.h" 1
# 19 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_print.h"
extern void SAC_PF_PrintHeader (const char *title);
extern void SAC_PF_PrintHeaderNode (const char *title, size_t rank);
extern void SAC_PF_PrintSubHeader (const char *title, size_t lineno);
extern void SAC_PF_PrintSection (const char *title);
extern void SAC_PF_PrintTime (const char *title, const char *space, const SAC_PF_TIMER *time);
extern void SAC_PF_PrintCount (const char *title, const char *space, unsigned long count);
extern void SAC_PF_PrintSize (const char *title, const char *space, unsigned long size, const char *unit);
extern void SAC_PF_PrintTimePercentage (const char *title, const char *space,
                                              const SAC_PF_TIMER *time1, const SAC_PF_TIMER *time2);
# 112 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 1
# 113 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cpubind.h" 1
# 114 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 1



# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 5 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 2
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdbool.h" 1 3 4
# 6 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 2
# 18 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h"
extern 
# 18 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 3 4
      _Bool 
# 18 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h"
           SAC_CUDA_HWLOC_init (int cuda_ordinal, char *str, size_t str_size);
# 115 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2




# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/mt/mt_beehive.h" 1
# 184 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/mt/mt_beehive.h"
extern volatile unsigned int SAC_MT_cnt_hives;
extern volatile unsigned int SAC_MT_cnt_worker_bees;
extern volatile unsigned int SAC_MT_cnt_queen_bees;
extern void *SAC_MT_singleton_queen;

extern int SAC_MT_propagate_lock;
extern int SAC_MT_output_lock;
# 120 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 132 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/rtspec/empty.h" 1







extern unsigned int SAC_RTSPEC_controller_threads;
# 133 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 279 "/home/rubenhensen/sac/a.out.c" 2
# 311 "/home/rubenhensen/sac/a.out.c"
typedef SAC_hidden SACt_sacprelude_p__SACarg;

extern SACt_sacprelude_p__SACarg SACARGcopy( SACt_sacprelude_p__SACarg);
extern void SACARGfree( SACt_sacprelude_p__SACarg);

typedef SAC_hidden SACt_World__World;
typedef SAC_hidden SACt_Terminal__Terminal;
typedef SAC_hidden SACt_TermFile__TermFile;
typedef double * SACt_ComplexBasics__complex;
typedef double * SACt_Complex__complex;
typedef SAC_hidden SACt_List__list;
extern void SAC_List_free_list( SACt_List__list);

typedef int SACt_Grey__grey;
typedef int * SACt_Color8__color;
typedef SAC_hidden SACt_String__string;

extern SACt_String__string copy_string( SACt_String__string);
extern void free_string( SACt_String__string);

typedef SAC_hidden SACt_Structures__string;






static void SAC_PF_BeginComm (void) { } static void SAC_PF_EndComm (void) { }
SAC_HM_arena_t SAC_HM_arenas[128][9 + 2] = { { { 0, { {{0, &(SAC_HM_arenas[0][0])}}, {{0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][0].freelist, 131072, 1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, { {{0, &(SAC_HM_arenas[0][1])}}, {{0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][1].freelist, 512, 3 - 1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 2, { {{0, &(SAC_HM_arenas[0][2])}}, {{0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][2].freelist, 512, 5 - 1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 3, { {{0, &(SAC_HM_arenas[0][3])}}, {{0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][3].freelist, 256, 9 - 1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 4, { {{0, &(SAC_HM_arenas[0][4])}}, {{0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][4].freelist, 512, 17 - 1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 5, { {{-1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][5])}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][5].freelist, 2048, 17, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 6, { {{-1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][6])}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][6].freelist, 8196, 129, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 7, { {{-1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][7])}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][7].freelist, 32768, 1025, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 8, { {{-1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][8])}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][8].freelist, 0, 8193, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } } }; const SAC_HM_size_byte_t SAC_HM_initial_master_arena_of_arenas_size = 1048576; const SAC_HM_size_byte_t SAC_HM_initial_worker_arena_of_arenas_size = 65536; const SAC_HM_size_byte_t SAC_HM_initial_top_arena_size = 0; const unsigned int SAC_HM_max_worker_threads = 128 - 1;






extern



void SACprintf_TF (SAC_hidden SACl_FORMAT, ...);

extern



void to_string (SAC_hidden * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, unsigned char * SACl_A, SAC_array_descriptor_t SACl_A__desc, int SACl_LENGTH);

extern



void ARRAYIO__PrintIntArray (SAC_hidden SACl_stream, int SACl_d, int * SACl_s, int * SACl_a);







extern



void SACwf_sacprelude_p__partitionSlicer__i_S__i_S__i_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * * SAC_arg_4__p, SAC_array_descriptor_t * SAC_arg_4__desc__p, int * SACl_min, SAC_array_descriptor_t SACl_min__desc, int * SACl_max, SAC_array_descriptor_t SACl_max__desc, int * SACl_axis, SAC_array_descriptor_t SACl_axis__desc, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc);

extern



void SACwf_sacprelude_p__partitionIntersectMax__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound1, SAC_array_descriptor_t SACl_PWLbound1__desc, int * SACl_ivmin, SAC_array_descriptor_t SACl_ivmin__desc);

extern



void SACwf_sacprelude_p__isPartitionIntersectNull__i_S__i_S__i_S__i_S (
# 386 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 386 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACwf_sacprelude_p__partitionIntersectMin__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound2, SAC_array_descriptor_t SACl_PWLbound2__desc, int * SACl_ivmax, SAC_array_descriptor_t SACl_ivmax__desc);

extern



void SACwf_sacprelude_p__adjustLacFunParams__bl_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 398 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 398 "/home/rubenhensen/sac/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc);

extern



void SACwf_StdIO__print__i_S (int * SACl_n, SAC_array_descriptor_t SACl_n__desc);

extern



void SACwf__MAIN___rtpf_25_impl_genarrayI__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc, int * SACl_data, SAC_array_descriptor_t SACl_data__desc);

extern



void SACwf__MAIN__main (int * SAC_arg_1__p);

extern



void SACwf_sacprelude_p__prod__i_S (int * SAC_arg_1__p, int * SACl_v, SAC_array_descriptor_t SACl_v__desc);

extern



void SACwf__MAIN___rtpf_8_impl__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACwf_sacprelude_p__adjustLacFunParamsReshape__bl_S__i_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 434 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 434 "/home/rubenhensen/sac/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc);

extern



void SACwf_sacprelude_p__eq__i_S__i_S (
# 440 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 440 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__f_S__f_S (
# 446 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 446 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, float * SACl_A, SAC_array_descriptor_t SACl_A__desc, float * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__d_S__d_S (
# 452 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 452 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, double * SACl_A, SAC_array_descriptor_t SACl_A__desc, double * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__bl_S__bl_S (
# 458 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 458 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, 
# 458 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 458 "/home/rubenhensen/sac/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 458 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 458 "/home/rubenhensen/sac/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__c_S__c_S (
# 464 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 464 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, unsigned char * SACl_A, SAC_array_descriptor_t SACl_A__desc, unsigned char * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__b_S__b_S (
# 470 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 470 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, byte * SACl_A, SAC_array_descriptor_t SACl_A__desc, byte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__s_S__s_S (
# 476 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 476 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, short * SACl_A, SAC_array_descriptor_t SACl_A__desc, short * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__l_S__l_S (
# 482 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 482 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, long * SACl_A, SAC_array_descriptor_t SACl_A__desc, long * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ll_S__ll_S (
# 488 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 488 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, longlong * SACl_A, SAC_array_descriptor_t SACl_A__desc, longlong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ub_S__ub_S (
# 494 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 494 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ubyte * SACl_A, SAC_array_descriptor_t SACl_A__desc, ubyte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__us_S__us_S (
# 500 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 500 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ushort * SACl_A, SAC_array_descriptor_t SACl_A__desc, ushort * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ui_S__ui_S (
# 506 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 506 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, uint * SACl_A, SAC_array_descriptor_t SACl_A__desc, uint * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ul_S__ul_S (
# 512 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 512 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ulong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ull_S__ull_S (
# 518 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 518 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ulonglong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulonglong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf__MAIN___PL__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACwf_sacprelude_p__gridFiller__i_S__i_S__i_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc, int * SACl_wdth, SAC_array_descriptor_t SACl_wdth__desc, int * SACl_dim, SAC_array_descriptor_t SACl_dim__desc, int * SACl_maxwidth, SAC_array_descriptor_t SACl_maxwidth__desc);

extern



void SACwf_sacprelude_p__isPartitionIntersect1Part__i_S__i_S__i_S__i_S (
# 536 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 536 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACwf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACwf_sacprelude_p__partitionMax__i_S__i_S (int * SAC_arg_1__p, int * SACl_x, SAC_array_descriptor_t SACl_x__desc, int * SACl_y, SAC_array_descriptor_t SACl_y__desc);

extern



void SACwf_sacprelude_p__partitionMin__i_S__i_S (int * SAC_arg_1__p, int * SACl_x, SAC_array_descriptor_t SACl_x__desc, int * SACl_y, SAC_array_descriptor_t SACl_y__desc);

extern



void SACwf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACwf_sacprelude_p___PL_PL__i_S (int * SAC_arg_1__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc);

extern



void SACwf_sacprelude_p__sel__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, int * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__f_S (float * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, float * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__d_S (double * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, double * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__bl_S (
# 590 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 590 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, 
# 590 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 590 "/home/rubenhensen/sac/a.out.c"
* SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__c_S (unsigned char * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, unsigned char * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__b_S (byte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, byte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__s_S (short * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, short * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__l_S (long * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, long * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ll_S (longlong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, longlong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ub_S (ubyte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ubyte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__us_S (ushort * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ushort * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ui_S (uint * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, uint * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ul_S (ulong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ull_S (ulonglong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulonglong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf__MAIN__main (int * SAC_arg_1__p);

extern



void SACf__MAIN_CL_INIT__init (void);

extern



void SACf__MAIN___PL__i__i (int * SAC_arg_1__p, int SACl_a, int SACl_b);

extern



void SACf__MAIN___rtpf_8_impl__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN___PL__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN__commonPrefix__i_X__i_X (
# 686 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 686 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN__commonPostfix__i_X__i_X (
# 692 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 692 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc, int * SACl_data, SAC_array_descriptor_t SACl_data__desc);

extern



void SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf_World_CL_INIT__init_TheWorld__SACt_World__World (SAC_hidden * SACp_OI_object__p, SAC_array_descriptor_t * SACp_OI_object__desc__p);

extern



void SACf_Terminal_CL_INIT__init_TheTerminal__SACt_Terminal__Terminal (SAC_hidden * SACp_OI_object__p, SAC_array_descriptor_t * SACp_OI_object__desc__p);

extern



void SACf_TermFile_CL_INIT__init_stdout__SACt_TermFile__TermFile (SAC_hidden * SACp_OI_object__p, SAC_array_descriptor_t * SACp_OI_object__desc__p);

extern



void SACf_ArrayIO__print__i_P (int * SACl_arr, SAC_array_descriptor_t SACl_arr__desc);

extern



void SACf_ScalarIO__print__i (int SACl_n);

extern



void SACf_ScalarIO__print__bl (
# 746 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 746 "/home/rubenhensen/sac/a.out.c"
SACl_n);

extern



void SACf_sacprelude_p__sel__i_X__ull_S (ulonglong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulonglong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ul_S (ulong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ui_S (uint * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, uint * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__us_S (ushort * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ushort * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ub_S (ubyte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ubyte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ll_S (longlong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, longlong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__l_S (long * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, long * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__s_S (short * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, short * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__b_S (byte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, byte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__c_S (unsigned char * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, unsigned char * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__bl_S (
# 812 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 812 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, 
# 812 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 812 "/home/rubenhensen/sac/a.out.c"
* SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__d_S (double * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, double * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__f_S (float * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, float * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, int * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__eq__ull_S__ull_S (
# 836 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 836 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ulonglong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulonglong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ul_S__ul_S (
# 842 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 842 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ulong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ui_S__ui_S (
# 848 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 848 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, uint * SACl_A, SAC_array_descriptor_t SACl_A__desc, uint * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__us_S__us_S (
# 854 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 854 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ushort * SACl_A, SAC_array_descriptor_t SACl_A__desc, ushort * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ub_S__ub_S (
# 860 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 860 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ubyte * SACl_A, SAC_array_descriptor_t SACl_A__desc, ubyte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ll_S__ll_S (
# 866 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 866 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, longlong * SACl_A, SAC_array_descriptor_t SACl_A__desc, longlong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__l_S__l_S (
# 872 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 872 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, long * SACl_A, SAC_array_descriptor_t SACl_A__desc, long * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__s_S__s_S (
# 878 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 878 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, short * SACl_A, SAC_array_descriptor_t SACl_A__desc, short * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__b_S__b_S (
# 884 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 884 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, byte * SACl_A, SAC_array_descriptor_t SACl_A__desc, byte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__c_S__c_S (
# 890 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 890 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, unsigned char * SACl_A, SAC_array_descriptor_t SACl_A__desc, unsigned char * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__bl_S__bl_S (
# 896 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 896 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, 
# 896 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 896 "/home/rubenhensen/sac/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 896 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 896 "/home/rubenhensen/sac/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__d_S__d_S (
# 902 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 902 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, double * SACl_A, SAC_array_descriptor_t SACl_A__desc, double * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__f_S__f_S (
# 908 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 908 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, float * SACl_A, SAC_array_descriptor_t SACl_A__desc, float * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__i_S__i_S (
# 914 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 914 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__adjustLacFunParams__bl_S__i_S__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 920 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 920 "/home/rubenhensen/sac/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc);

extern



void SACf_sacprelude_p__adjustLacFunParamsReshape__bl_S__i_S__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 926 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 926 "/home/rubenhensen/sac/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc);

extern



void SACf_sacprelude_p__isPartitionIntersectNull__i_X__i_X__i_X__i_X (
# 932 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 932 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__isPartitionIntersectNull__i__i__i_X__i_X (
# 938 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 938 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_idxmin, int SACl_idxmax, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__partitionMin__i__i (int * SAC_arg_1__p, int SACl_x, int SACl_y);

extern



void SACf_sacprelude_p__partitionMax__i__i (int * SAC_arg_1__p, int SACl_x, int SACl_y);

extern



void SACf_sacprelude_p__isPartitionIntersect1Part__i_X__i_X__i_X__i_X (
# 956 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 956 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__isPartitionIntersect1Part__i__i__i_X__i_X (
# 962 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 962 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_idxmin, int SACl_idxmax, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__partitionIntersectMax__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound1, SAC_array_descriptor_t SACl_PWLbound1__desc, int * SACl_ivmin, SAC_array_descriptor_t SACl_ivmin__desc);

extern



void SACf_sacprelude_p__partitionIntersectMax__i_X__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound1, SAC_array_descriptor_t SACl_PWLbound1__desc, int SACl_ivmin);

extern



void SACf_sacprelude_p__partitionIntersectMin__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound2, SAC_array_descriptor_t SACl_PWLbound2__desc, int * SACl_ivmax, SAC_array_descriptor_t SACl_ivmax__desc);

extern



void SACf_sacprelude_p__partitionIntersectMin__i_X__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound2, SAC_array_descriptor_t SACl_PWLbound2__desc, int SACl_ivmax);

extern



void SACf_sacprelude_p__prod__i_X (int * SAC_arg_1__p, int * SACl_v, SAC_array_descriptor_t SACl_v__desc);

extern



void SACf_sacprelude_p__partitionSlicer__i_X__i_X__i__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * * SAC_arg_4__p, SAC_array_descriptor_t * SAC_arg_4__desc__p, int * SACl_min, SAC_array_descriptor_t SACl_min__desc, int * SACl_max, SAC_array_descriptor_t SACl_max__desc, int SACl_axis, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc);

extern



void SACf_sacprelude_p__gridFiller__i_X__i_X__i_X__i__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc, int * SACl_wdth, SAC_array_descriptor_t SACl_wdth__desc, int SACl_dim, int * SACl_maxwidth, SAC_array_descriptor_t SACl_maxwidth__desc);

extern



void SACf_sacprelude_p___PL_PL__i (int * SAC_arg_1__p, int SACl_a);

extern



void SACf__MAIN___PL__i_S__i_P (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN___rtpf_8_impl__i_S__i_P (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN___rtpf_31_impl_pluscarret__i__i_2_3 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_a, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN___PL__i_P__i_P (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN___rtpf_8_impl__i_P__i_P (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN___rtpf_31_impl_pluscarret__i_3__i_2_3 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc, int SACl_data);

extern



void SACf__MAIN___rtpf_18_impl_carretplus__i__i_2_3 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_a, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN___rtpf_18_impl_carretplus__i_2_3__i_2 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_2_3 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc, int * SACl_data, SAC_array_descriptor_t SACl_data__desc);

extern



void SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_2 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc, int * SACl_data, SAC_array_descriptor_t SACl_data__desc);

extern



void SACf__MAIN___rtpf_18_impl_carretplus__i_2__i_2_3 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf__MAIN__commonPostfix__i_3__i_2 (
# 1088 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1088 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc);

extern



void SACf_ScalarArith___AM__bl__bl (
# 1094 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1094 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, 
# 1094 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1094 "/home/rubenhensen/sac/a.out.c"
SACl_A, 
# 1094 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1094 "/home/rubenhensen/sac/a.out.c"
SACl_B);

extern



void SACf_sacprelude_p___ST__i__i (int * SAC_arg_1__p, int SACl_a, int SACl_b);

extern



void SACf_sacprelude_p__and__bl__bl (
# 1106 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1106 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, 
# 1106 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1106 "/home/rubenhensen/sac/a.out.c"
SACl_a, 
# 1106 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1106 "/home/rubenhensen/sac/a.out.c"
SACl_b);
# 1117 "/home/rubenhensen/sac/a.out.c"
extern SAC_hidden SACo_World__TheWorld;
extern SAC_array_descriptor_t SACo_World__TheWorld__desc;





extern SAC_hidden SACo_Terminal__TheTerminal;
extern SAC_array_descriptor_t SACo_Terminal__TheTerminal__desc;





extern SAC_hidden SACo_TermFile__stdout;
extern SAC_array_descriptor_t SACo_TermFile__stdout__desc;

# 1150 "/home/rubenhensen/sac/a.out.c"
void SACwf__MAIN___rtpf_25_impl_genarrayI__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc, int * SACl_data, SAC_array_descriptor_t SACl_data__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48541_SACl_shp;
    SAC_array_descriptor_t _tcp_48541_SACl_shp__desc = 
# 1160 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1160 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48541_SACl_shp__shp0;
    int _tcp_48541_SACl_shp__sz;
    const int _tcp_48541_SACl_shp__dim = 1;




    int * _tcp_48540_SACl_shp;
    SAC_array_descriptor_t _tcp_48540_SACl_shp__desc = 
# 1169 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1169 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48540_SACl_shp__shp0;
    int _tcp_48540_SACl_shp__sz;
    const int _tcp_48540_SACl_shp__dim = 1;




    int * _tcp_48539_SACl_data;
    SAC_array_descriptor_t _tcp_48539_SACl_data__desc = 
# 1178 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1178 "/home/rubenhensen/sac/a.out.c"
   ;
    const int _tcp_48539_SACl_data__shp0 = 2;
    const int _tcp_48539_SACl_data__shp1 = 3;
    const int _tcp_48539_SACl_data__sz = 6;
    const int _tcp_48539_SACl_data__dim = 2;




    int * _tcp_48538_SACl_shp;
    SAC_array_descriptor_t _tcp_48538_SACl_shp__desc = 
# 1188 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1188 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48538_SACl_shp__shp0;
    int _tcp_48538_SACl_shp__sz;
    const int _tcp_48538_SACl_shp__dim = 1;




    int * _tcp_48537_SACl_shp;
    SAC_array_descriptor_t _tcp_48537_SACl_shp__desc = 
# 1197 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1197 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48537_SACl_shp__shp0;
    int _tcp_48537_SACl_shp__sz;
    const int _tcp_48537_SACl_shp__dim = 1;




    int * _tcp_48536_SACl_data;
    SAC_array_descriptor_t _tcp_48536_SACl_data__desc = 
# 1206 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1206 "/home/rubenhensen/sac/a.out.c"
   ;
    const int _tcp_48536_SACl_data__shp0 = 2;
    const int _tcp_48536_SACl_data__sz = 2;
    const int _tcp_48536_SACl_data__dim = 1;




    int * _tcp_48535_SACl_shp;
    SAC_array_descriptor_t _tcp_48535_SACl_shp__desc = 
# 1215 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1215 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48535_SACl_shp__shp0;
    int _tcp_48535_SACl_shp__sz;
    const int _tcp_48535_SACl_shp__dim = 1;




    int * _tcp_48534_SACl_shp;
    SAC_array_descriptor_t _tcp_48534_SACl_shp__desc = 
# 1224 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1224 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48534_SACl_shp__shp0;
    int _tcp_48534_SACl_shp__sz;
    const int _tcp_48534_SACl_shp__dim = 1;




    int * SACp_pinl_45528__emal_43128__cwc_568;
    SAC_array_descriptor_t SACp_pinl_45528__emal_43128__cwc_568__desc = 
# 1233 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1233 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_45528__emal_43128__cwc_568__shp0;
    int SACp_pinl_45528__emal_43128__cwc_568__sz;
    const int SACp_pinl_45528__emal_43128__cwc_568__dim = 1;




    int * SACp_pinl_45527__emal_43127__cwc_571;
    SAC_array_descriptor_t SACp_pinl_45527__emal_43127__cwc_571__desc = 
# 1242 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1242 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_45527__emal_43127__cwc_571__shp0 = 1;
    const int SACp_pinl_45527__emal_43127__cwc_571__sz = 1;
    const int SACp_pinl_45527__emal_43127__cwc_571__dim = 1;




    
# 1250 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1250 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45526__emal_43126__icc_4787_pred;
   
   




    int * SACp_pinl_45525__emal_43125__ivesplit_42387;
    SAC_array_descriptor_t SACp_pinl_45525__emal_43125__ivesplit_42387__desc = 
# 1258 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1258 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_45525__emal_43125__ivesplit_42387__shp0;
    int SACp_pinl_45525__emal_43125__ivesplit_42387__sz;
    const int SACp_pinl_45525__emal_43125__ivesplit_42387__dim = 1;




    int SACp_pinl_45524__emal_43124__ivesli_42449;
   
   




    int SACp_pinl_45523__emal_43123__icc_4790;
   
   




    
# 1280 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1280 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45522__emal_43122__cwc_574;
   
   




    int * SACp_pinl_45521__emal_43121__cwc_576;
    SAC_array_descriptor_t SACp_pinl_45521__emal_43121__cwc_576__desc = 
# 1288 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1288 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_45521__emal_43121__cwc_576__shp0 = 1;
    const int SACp_pinl_45521__emal_43121__cwc_576__sz = 1;
    const int SACp_pinl_45521__emal_43121__cwc_576__dim = 1;




    
# 1296 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1296 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45520__emal_43120__icc_4793_pred;
   
   




    int * SACp_pinl_45519__emal_43119__ivesplit_42389;
    SAC_array_descriptor_t SACp_pinl_45519__emal_43119__ivesplit_42389__desc = 
# 1304 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1304 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_45519__emal_43119__ivesplit_42389__shp0;
    int SACp_pinl_45519__emal_43119__ivesplit_42389__sz;
    const int SACp_pinl_45519__emal_43119__ivesplit_42389__dim = 1;




    int SACp_pinl_45518__emal_43118__ivesli_42448;
   
   




    int SACp_pinl_45517__emal_43117__icc_4796;
   
   




    
# 1326 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1326 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45516__emal_43116__cwc_579;
   
   




    int * SACp_pinl_45510__idc_4802;
    SAC_array_descriptor_t SACp_pinl_45510__idc_4802__desc = 
# 1334 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1334 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_45510__idc_4802__shp0 = 1;
    const int SACp_pinl_45510__idc_4802__sz = 1;
    const int SACp_pinl_45510__idc_4802__dim = 1;




    int * SACp_pinl_45508__idc_4799;
    SAC_array_descriptor_t SACp_pinl_45508__idc_4799__desc = 
# 1343 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1343 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_45508__idc_4799__shp0 = 1;
    const int SACp_pinl_45508__idc_4799__sz = 1;
    const int SACp_pinl_45508__idc_4799__dim = 1;




    int * SACp_pinl_45499__icc_4795;
    SAC_array_descriptor_t SACp_pinl_45499__icc_4795__desc = 
# 1352 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1352 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_45499__icc_4795__sz = 0;
    int SACp_pinl_45499__icc_4795__dim = 0;




    int * SACp_pinl_45498__icc_4794;
    SAC_array_descriptor_t SACp_pinl_45498__icc_4794__desc = 
# 1360 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1360 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_45498__icc_4794__shp0 = 1;
    const int SACp_pinl_45498__icc_4794__sz = 1;
    const int SACp_pinl_45498__icc_4794__dim = 1;




    int * SACp_pinl_45496__icc_4789;
    SAC_array_descriptor_t SACp_pinl_45496__icc_4789__desc = 
# 1369 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1369 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_45496__icc_4789__sz = 0;
    int SACp_pinl_45496__icc_4789__dim = 0;




    int * SACp_pinl_45495__icc_4788;
    SAC_array_descriptor_t SACp_pinl_45495__icc_4788__desc = 
# 1377 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1377 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_45495__icc_4788__shp0 = 1;
    const int SACp_pinl_45495__icc_4788__sz = 1;
    const int SACp_pinl_45495__icc_4788__dim = 1;




    
# 1385 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1385 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45494__emal_43114__cwc_582;
   
   




    int * SACp_pinl_45493__emal_43113__cwc_584;
    SAC_array_descriptor_t SACp_pinl_45493__emal_43113__cwc_584__desc = 
# 1393 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1393 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_45493__emal_43113__cwc_584__shp0;
    int SACp_pinl_45493__emal_43113__cwc_584__sz;
    const int SACp_pinl_45493__emal_43113__cwc_584__dim = 1;




    int * SACp_pinl_45492__emal_43112__cwc_587;
    SAC_array_descriptor_t SACp_pinl_45492__emal_43112__cwc_587__desc = 
# 1402 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1402 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_45492__emal_43112__cwc_587__shp0 = 1;
    const int SACp_pinl_45492__emal_43112__cwc_587__sz = 1;
    const int SACp_pinl_45492__emal_43112__cwc_587__dim = 1;




    
# 1410 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1410 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45491__emal_43111__icc_4778_pred;
   
   




    int * SACp_pinl_45490__emal_43110__ivesplit_42385;
    SAC_array_descriptor_t SACp_pinl_45490__emal_43110__ivesplit_42385__desc = 
# 1418 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1418 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_45490__emal_43110__ivesplit_42385__shp0;
    int SACp_pinl_45490__emal_43110__ivesplit_42385__sz;
    const int SACp_pinl_45490__emal_43110__ivesplit_42385__dim = 1;




    int SACp_pinl_45489__emal_43109__ivesli_42447;
   
   




    int SACp_pinl_45488__emal_43108__icc_4781;
   
   




    
# 1440 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1440 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45487__emal_43107__cwc_590;
   
   




    int * SACp_pinl_45484__idc_4784;
    SAC_array_descriptor_t SACp_pinl_45484__idc_4784__desc = 
# 1448 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1448 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_45484__idc_4784__shp0 = 1;
    const int SACp_pinl_45484__idc_4784__sz = 1;
    const int SACp_pinl_45484__idc_4784__dim = 1;




    int * SACp_pinl_45477__icc_4780;
    SAC_array_descriptor_t SACp_pinl_45477__icc_4780__desc = 
# 1457 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1457 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_45477__icc_4780__sz = 0;
    int SACp_pinl_45477__icc_4780__dim = 0;




    int * SACp_pinl_45476__icc_4779;
    SAC_array_descriptor_t SACp_pinl_45476__icc_4779__desc = 
# 1465 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1465 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_45476__icc_4779__shp0 = 1;
    const int SACp_pinl_45476__icc_4779__sz = 1;
    const int SACp_pinl_45476__icc_4779__dim = 1;




    int SACp_pinl_45475__emal_43106__cwc_566;
   
   




    
# 1480 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1480 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45474__emal_43105__cwc_593;
   
   




    int SACp_pinl_45473__emal_43104__asd_43084_data;
   
   




    int SACp_pinl_45469__emal_43103__cwc_594;
   
   




    
# 1501 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1501 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45468__emal_43102__cwc_597;
   
   




    int SACp_emal_43101__cwc_564;
   
   




    
# 1515 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1515 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43100__cwc_599;
   
   




    int * SACp_cwc_563;
    SAC_array_descriptor_t SACp_cwc_563__desc = 
# 1523 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1523 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_cwc_563__sz = 0;
    int SACp_cwc_563__dim = 0;





    int SACl_data__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[4]);
    int SACl_data__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[3]);




    int SACl_shp__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[4]);
    int SACl_shp__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_43101__cwc_564 = SACl_shp__dim; }; }
    ; ; { SACp_emal_43100__cwc_599 = (SACp_emal_43101__cwc_564) == (1); };
    { ; ; }
    if (SACp_emal_43100__cwc_599)
    {
      { ; ; }
      { { SACp_pinl_45469__emal_43103__cwc_594 = SACl_data__dim; }; }
      ; ; { SACp_pinl_45468__emal_43102__cwc_597 = (SACp_pinl_45469__emal_43103__cwc_594) == (0); };
      { ; ; }
      if (SACp_pinl_45468__emal_43102__cwc_597)
      {
        { ; ; }
        { if (!((SACl_data__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_45473__emal_43104__asd_43084_data = ( SACl_data[0]); } }
        { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_data); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))); } } } } else { } }



        if (!((_tcp_48534_SACl_shp__dim == SACl_shp__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        _tcp_48534_SACl_shp__desc = SACl_shp__desc;
        _tcp_48534_SACl_shp__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[(6 + (0))]);
        _tcp_48534_SACl_shp__sz = SACl_shp__sz;
        ;
        { _tcp_48534_SACl_shp = SACl_shp; }




        SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i (&SACp_cwc_563, &SACp_cwc_563__desc, _tcp_48534_SACl_shp, _tcp_48534_SACl_shp__desc, SACp_pinl_45473__emal_43104__asd_43084_data);




        SACp_cwc_563__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[4]);
        SACp_cwc_563__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[3]);

      }
      else
      {
        { ; ; }
        { { SACp_pinl_45475__emal_43106__cwc_566 = SACl_data__dim; }; }
        ; ; { SACp_pinl_45474__emal_43105__cwc_593 = (SACp_pinl_45475__emal_43106__cwc_566) == (1); };
        if (SACp_pinl_45474__emal_43105__cwc_593)
        {
          { ; ; }
          { ; ; }
          { { if (!((1 == SACp_pinl_45493__emal_43113__cwc_584__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_45493__emal_43113__cwc_584"); }; { if ((((6 + (SACp_pinl_45493__emal_43113__cwc_584__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_45493__emal_43113__cwc_584__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_45493__emal_43113__cwc_584__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45493__emal_43113__cwc_584__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_45493__emal_43113__cwc_584__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_45493__emal_43113__cwc_584__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45493__emal_43113__cwc_584__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_45493__emal_43113__cwc_584__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_45493__emal_43113__cwc_584__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_45493__emal_43113__cwc_584__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_45493__emal_43113__cwc_584__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_45493__emal_43113__cwc_584__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_45493__emal_43113__cwc_584__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_45493__emal_43113__cwc_584__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_45493__emal_43113__cwc_584__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_45493__emal_43113__cwc_584__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_45493__emal_43113__cwc_584__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45493__emal_43113__cwc_584__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45493__emal_43113__cwc_584__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45493__emal_43113__cwc_584__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_45493__emal_43113__cwc_584__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
          {

            int SAC_size = 1;
            SAC_size *=
            SACp_pinl_45493__emal_43113__cwc_584__shp0 =
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45493__emal_43113__cwc_584__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_data__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45493__emal_43113__cwc_584__desc) & (-1 ^ (3))))[4]) = SACp_pinl_45493__emal_43113__cwc_584__sz = SAC_size;
            if (!((SACp_pinl_45493__emal_43113__cwc_584__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
          }

          { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 1601 "/home/rubenhensen/sac/a.out.c" 3 4
         ((void) sizeof ((
# 1601 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1601 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ? 1 : 0), __extension__ ({ if (
# 1601 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1601 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ; else __assert_fail (
# 1601 "/home/rubenhensen/sac/a.out.c"
         "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 1601 "/home/rubenhensen/sac/a.out.c" 3 4
         , "/home/rubenhensen/sac/a.out.c", 1601, __extension__ __PRETTY_FUNCTION__); }))
# 1601 "/home/rubenhensen/sac/a.out.c"
         ; SACp_pinl_45493__emal_43113__cwc_584 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_45493__emal_43113__cwc_584__sz * sizeof (*SACp_pinl_45493__emal_43113__cwc_584)); break; case SAC_HM_multi_threaded: SACp_pinl_45493__emal_43113__cwc_584 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_45493__emal_43113__cwc_584__sz * sizeof (*SACp_pinl_45493__emal_43113__cwc_584), 0); break; case SAC_HM_any_threaded: SACp_pinl_45493__emal_43113__cwc_584 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_45493__emal_43113__cwc_584__sz * sizeof (*SACp_pinl_45493__emal_43113__cwc_584), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45493__emal_43113__cwc_584__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45493__emal_43113__cwc_584__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45493__emal_43113__cwc_584__desc) & (-1 ^ (3))))[1]) = 0; } }



         
          for (int SAC_i = 0; SAC_i < SACl_data__dim; SAC_i++) {
            { SACp_pinl_45493__emal_43113__cwc_584[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
          }

          { { if (!((1 == SACp_pinl_45492__emal_43112__cwc_587__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_45492__emal_43112__cwc_587"); }; { { if ((((SACp_pinl_45492__emal_43112__cwc_587__sz * sizeof (*SACp_pinl_45492__emal_43112__cwc_587)) + ((6 + (SACp_pinl_45492__emal_43112__cwc_587__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_45492__emal_43112__cwc_587__sz * sizeof (*SACp_pinl_45492__emal_43112__cwc_587)) + ((6 + (SACp_pinl_45492__emal_43112__cwc_587__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_45492__emal_43112__cwc_587__sz * sizeof (*SACp_pinl_45492__emal_43112__cwc_587)) + ((6 + (SACp_pinl_45492__emal_43112__cwc_587__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45492__emal_43112__cwc_587 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_45492__emal_43112__cwc_587 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_45492__emal_43112__cwc_587__sz * sizeof (*SACp_pinl_45492__emal_43112__cwc_587)) + ((6 + (SACp_pinl_45492__emal_43112__cwc_587__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45492__emal_43112__cwc_587 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_45492__emal_43112__cwc_587 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_45492__emal_43112__cwc_587__sz * sizeof (*SACp_pinl_45492__emal_43112__cwc_587)) + ((6 + (SACp_pinl_45492__emal_43112__cwc_587__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_45492__emal_43112__cwc_587__sz * sizeof (*SACp_pinl_45492__emal_43112__cwc_587)) + ((6 + (SACp_pinl_45492__emal_43112__cwc_587__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_45492__emal_43112__cwc_587__sz * sizeof (*SACp_pinl_45492__emal_43112__cwc_587)) + ((6 + (SACp_pinl_45492__emal_43112__cwc_587__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_45492__emal_43112__cwc_587__sz * sizeof (*SACp_pinl_45492__emal_43112__cwc_587)) + ((6 + (SACp_pinl_45492__emal_43112__cwc_587__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_45492__emal_43112__cwc_587__sz * sizeof (*SACp_pinl_45492__emal_43112__cwc_587)) + ((6 + (SACp_pinl_45492__emal_43112__cwc_587__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_45492__emal_43112__cwc_587 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_45492__emal_43112__cwc_587 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_45492__emal_43112__cwc_587 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_45492__emal_43112__cwc_587 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_45492__emal_43112__cwc_587__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_45492__emal_43112__cwc_587, SACp_pinl_45492__emal_43112__cwc_587__sz * sizeof (*SACp_pinl_45492__emal_43112__cwc_587), ((6 + (SACp_pinl_45492__emal_43112__cwc_587__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45492__emal_43112__cwc_587__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45492__emal_43112__cwc_587__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45492__emal_43112__cwc_587__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_45492__emal_43112__cwc_587__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_45492__emal_43112__cwc_587__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
          ;

          }



          { SACp_pinl_45492__emal_43112__cwc_587[0] = 0; }




          if ((SACp_pinl_45492__emal_43112__cwc_587__dim != 1) && (SACp_pinl_45492__emal_43112__cwc_587__shp0 != SACp_pinl_45493__emal_43113__cwc_584__dim)) {
            SACp_pinl_45491__emal_43111__icc_4778_pred = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_pinl_45492__emal_43112__cwc_587""' with shape %s ""And `" "SACp_pinl_45493__emal_43113__cwc_584""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_45492__emal_43112__cwc_587__desc), SAC_PrintShape (SACp_pinl_45493__emal_43113__cwc_584__desc));
          }
          else {
            int SAC_all = 1; if (0 || (( SACp_pinl_45492__emal_43112__cwc_587[0]) >= SACp_pinl_45493__emal_43113__cwc_584__shp0))
            {

              SAC_all = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_pinl_45492__emal_43112__cwc_587""' with shape %s ""And `" "SACp_pinl_45493__emal_43113__cwc_584""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_45492__emal_43112__cwc_587__desc), SAC_PrintShape (SACp_pinl_45493__emal_43113__cwc_584__desc));
            }
            SACp_pinl_45491__emal_43111__icc_4778_pred = SAC_all;
          }




          if (!((SACp_pinl_45484__idc_4784__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_45484__idc_4784__shp0 == SACp_pinl_45492__emal_43112__cwc_587__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
          SACp_pinl_45484__idc_4784__desc = SACp_pinl_45492__emal_43112__cwc_587__desc;
          ;
          ;
          { SACp_pinl_45484__idc_4784 = SACp_pinl_45492__emal_43112__cwc_587; }

          if (!SACp_pinl_45491__emal_43111__icc_4778_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _sel_VxA_ guard failed"); }



          SACp_pinl_45477__icc_4780__desc = SACp_pinl_45493__emal_43113__cwc_584__desc;
          SACp_pinl_45477__icc_4780__sz = SACp_pinl_45493__emal_43113__cwc_584__sz;
          SACp_pinl_45477__icc_4780__dim = SACp_pinl_45493__emal_43113__cwc_584__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45477__icc_4780__desc) & (-1 ^ (3))))[3]) = SACp_pinl_45493__emal_43113__cwc_584__dim;
          { SACp_pinl_45477__icc_4780 = SACp_pinl_45493__emal_43113__cwc_584; }




          if (!((SACp_pinl_45476__icc_4779__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_45476__icc_4779__shp0 == SACp_pinl_45484__idc_4784__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
          SACp_pinl_45476__icc_4779__desc = SACp_pinl_45484__idc_4784__desc;
          ;
          ;
          { SACp_pinl_45476__icc_4779 = SACp_pinl_45484__idc_4784; }

          { { if (!((1 == SACp_pinl_45490__emal_43110__ivesplit_42385__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_45490__emal_43110__ivesplit_42385"); }; { if ((((6 + (SACp_pinl_45490__emal_43110__ivesplit_42385__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_45490__emal_43110__ivesplit_42385__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_45490__emal_43110__ivesplit_42385__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45490__emal_43110__ivesplit_42385__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_45490__emal_43110__ivesplit_42385__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_45490__emal_43110__ivesplit_42385__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45490__emal_43110__ivesplit_42385__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_45490__emal_43110__ivesplit_42385__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_45490__emal_43110__ivesplit_42385__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_45490__emal_43110__ivesplit_42385__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_45490__emal_43110__ivesplit_42385__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_45490__emal_43110__ivesplit_42385__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_45490__emal_43110__ivesplit_42385__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_45490__emal_43110__ivesplit_42385__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_45490__emal_43110__ivesplit_42385__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_45490__emal_43110__ivesplit_42385__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_45490__emal_43110__ivesplit_42385__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45490__emal_43110__ivesplit_42385__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45490__emal_43110__ivesplit_42385__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45490__emal_43110__ivesplit_42385__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_45490__emal_43110__ivesplit_42385__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
          {

            int SAC_size = 1;
            SAC_size *=
            SACp_pinl_45490__emal_43110__ivesplit_42385__shp0 =
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45490__emal_43110__ivesplit_42385__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_45477__icc_4780__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45490__emal_43110__ivesplit_42385__desc) & (-1 ^ (3))))[4]) = SACp_pinl_45490__emal_43110__ivesplit_42385__sz = SAC_size;
            if (!((SACp_pinl_45490__emal_43110__ivesplit_42385__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
          }

          { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 1686 "/home/rubenhensen/sac/a.out.c" 3 4
         ((void) sizeof ((
# 1686 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1686 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ? 1 : 0), __extension__ ({ if (
# 1686 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1686 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ; else __assert_fail (
# 1686 "/home/rubenhensen/sac/a.out.c"
         "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 1686 "/home/rubenhensen/sac/a.out.c" 3 4
         , "/home/rubenhensen/sac/a.out.c", 1686, __extension__ __PRETTY_FUNCTION__); }))
# 1686 "/home/rubenhensen/sac/a.out.c"
         ; SACp_pinl_45490__emal_43110__ivesplit_42385 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_45490__emal_43110__ivesplit_42385__sz * sizeof (*SACp_pinl_45490__emal_43110__ivesplit_42385)); break; case SAC_HM_multi_threaded: SACp_pinl_45490__emal_43110__ivesplit_42385 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_45490__emal_43110__ivesplit_42385__sz * sizeof (*SACp_pinl_45490__emal_43110__ivesplit_42385), 0); break; case SAC_HM_any_threaded: SACp_pinl_45490__emal_43110__ivesplit_42385 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_45490__emal_43110__ivesplit_42385__sz * sizeof (*SACp_pinl_45490__emal_43110__ivesplit_42385), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45490__emal_43110__ivesplit_42385__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45490__emal_43110__ivesplit_42385__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45490__emal_43110__ivesplit_42385__desc) & (-1 ^ (3))))[1]) = 0; } }



         
          for (int SAC_i = 0; SAC_i < SACp_pinl_45477__icc_4780__dim; SAC_i++) {
            { SACp_pinl_45490__emal_43110__ivesplit_42385[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45477__icc_4780__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
          }




          {
            int SAC_i, SAC_l;
            SAC_l = 0;
            SAC_l = ( SACp_pinl_45476__icc_4779[0]);
            for (SAC_i = (1); SAC_i < SACp_pinl_45490__emal_43110__ivesplit_42385__sz; SAC_i++)
            {

              SAC_l *= ( SACp_pinl_45490__emal_43110__ivesplit_42385[SAC_i]);
            }
            SACp_pinl_45489__emal_43109__ivesli_42447 = SAC_l;
          }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45476__icc_4779__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_45476__icc_4779__sz * sizeof (*SACp_pinl_45476__icc_4779)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_45476__icc_4779, ((((SAC_HM_header_t *)SACp_pinl_45476__icc_4779) - 1)->data1.arena)); } else { if (SACp_pinl_45476__icc_4779__sz * sizeof (*SACp_pinl_45476__icc_4779) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_45476__icc_4779) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_45476__icc_4779, ((((SAC_HM_header_t *)SACp_pinl_45476__icc_4779) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45476__icc_4779, ((((SAC_HM_header_t *)SACp_pinl_45476__icc_4779) - 1)->data1.arena)); } } else { if (((((SACp_pinl_45476__icc_4779__sz * sizeof (*SACp_pinl_45476__icc_4779))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45476__icc_4779, ((((SAC_HM_header_t *)SACp_pinl_45476__icc_4779) - 1)->data1.arena)); } else { if (((((SACp_pinl_45476__icc_4779__sz * sizeof (*SACp_pinl_45476__icc_4779))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_45476__icc_4779) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45476__icc_4779, ((((SAC_HM_header_t *)SACp_pinl_45476__icc_4779) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45476__icc_4779, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_45476__icc_4779); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_45476__icc_4779); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45476__icc_4779, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_45476__icc_4779); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_45476__icc_4779); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45476__icc_4779__desc) & (-1 ^ (3))))); } } } } else { } }
          { { free (SACp_pinl_45490__emal_43110__ivesplit_42385); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45490__emal_43110__ivesplit_42385__desc) & (-1 ^ (3))))); } } }



         
          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _idx_sel_ is not a scalar!"); };
          { SACp_pinl_45488__emal_43108__icc_4781 = ( SACp_pinl_45477__icc_4780[SACp_pinl_45489__emal_43109__ivesli_42447]); }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45477__icc_4780__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_45477__icc_4780); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45477__icc_4780__desc) & (-1 ^ (3))))); } } } } else { } }
          { ; ; }
          if (!SACp_pinl_45491__emal_43111__icc_4778_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _sel_VxA_ guard failed"); }
          { ; ; }
          ; ; { SACp_pinl_45487__emal_43107__cwc_590 = (SACp_pinl_45488__emal_43108__icc_4781) == (2); };
          { ; ; }
          if (SACp_pinl_45487__emal_43107__cwc_590)
          {
            { ; ; }



            if (!((_tcp_48536_SACl_data__dim == SACl_data__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            if (!((_tcp_48536_SACl_data__shp0 == (((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[(6 + (0))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            _tcp_48536_SACl_data__desc = SACl_data__desc;
            ;
            ;
            { _tcp_48536_SACl_data = SACl_data; }




            if (!((_tcp_48535_SACl_shp__dim == SACl_shp__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            _tcp_48535_SACl_shp__desc = SACl_shp__desc;
            _tcp_48535_SACl_shp__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[(6 + (0))]);
            _tcp_48535_SACl_shp__sz = SACl_shp__sz;
            ;
            { _tcp_48535_SACl_shp = SACl_shp; }




            SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_2 (&SACp_cwc_563, &SACp_cwc_563__desc, _tcp_48535_SACl_shp, _tcp_48535_SACl_shp__desc, _tcp_48536_SACl_data, _tcp_48536_SACl_data__desc);




            SACp_cwc_563__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_563__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[3]);

          }
          else
          {
            { ; ; }



            if (!((_tcp_48537_SACl_shp__dim == SACl_shp__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            _tcp_48537_SACl_shp__desc = SACl_shp__desc;
            _tcp_48537_SACl_shp__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[(6 + (0))]);
            _tcp_48537_SACl_shp__sz = SACl_shp__sz;
            ;
            { _tcp_48537_SACl_shp = SACl_shp; }




            SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_S (&SACp_cwc_563, &SACp_cwc_563__desc, _tcp_48537_SACl_shp, _tcp_48537_SACl_shp__desc, SACl_data, SACl_data__desc);




            SACp_cwc_563__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_563__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[3]);

          }
        }
        else
        {
          { ; ; }
          ; ; { SACp_pinl_45494__emal_43114__cwc_582 = (SACp_pinl_45475__emal_43106__cwc_566) == (2); };
          { ; ; }
          if (SACp_pinl_45494__emal_43114__cwc_582)
          {
            { ; ; }
            { { if (!((1 == SACp_pinl_45528__emal_43128__cwc_568__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_45528__emal_43128__cwc_568"); }; { if ((((6 + (SACp_pinl_45528__emal_43128__cwc_568__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_45528__emal_43128__cwc_568__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_45528__emal_43128__cwc_568__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45528__emal_43128__cwc_568__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_45528__emal_43128__cwc_568__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_45528__emal_43128__cwc_568__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45528__emal_43128__cwc_568__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_45528__emal_43128__cwc_568__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_45528__emal_43128__cwc_568__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_45528__emal_43128__cwc_568__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_45528__emal_43128__cwc_568__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_45528__emal_43128__cwc_568__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_45528__emal_43128__cwc_568__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_45528__emal_43128__cwc_568__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_45528__emal_43128__cwc_568__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_45528__emal_43128__cwc_568__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_45528__emal_43128__cwc_568__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45528__emal_43128__cwc_568__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45528__emal_43128__cwc_568__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45528__emal_43128__cwc_568__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_45528__emal_43128__cwc_568__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_45528__emal_43128__cwc_568__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45528__emal_43128__cwc_568__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_data__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45528__emal_43128__cwc_568__desc) & (-1 ^ (3))))[4]) = SACp_pinl_45528__emal_43128__cwc_568__sz = SAC_size;
              if (!((SACp_pinl_45528__emal_43128__cwc_568__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 1809 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 1809 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1809 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 1809 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1809 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 1809 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 1809 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 1809, __extension__ __PRETTY_FUNCTION__); }))
# 1809 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_45528__emal_43128__cwc_568 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_45528__emal_43128__cwc_568__sz * sizeof (*SACp_pinl_45528__emal_43128__cwc_568)); break; case SAC_HM_multi_threaded: SACp_pinl_45528__emal_43128__cwc_568 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_45528__emal_43128__cwc_568__sz * sizeof (*SACp_pinl_45528__emal_43128__cwc_568), 0); break; case SAC_HM_any_threaded: SACp_pinl_45528__emal_43128__cwc_568 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_45528__emal_43128__cwc_568__sz * sizeof (*SACp_pinl_45528__emal_43128__cwc_568), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45528__emal_43128__cwc_568__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45528__emal_43128__cwc_568__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45528__emal_43128__cwc_568__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACl_data__dim; SAC_i++) {
              { SACp_pinl_45528__emal_43128__cwc_568[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }

            { { if (!((1 == SACp_pinl_45527__emal_43127__cwc_571__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_45527__emal_43127__cwc_571"); }; { { if ((((SACp_pinl_45527__emal_43127__cwc_571__sz * sizeof (*SACp_pinl_45527__emal_43127__cwc_571)) + ((6 + (SACp_pinl_45527__emal_43127__cwc_571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_45527__emal_43127__cwc_571__sz * sizeof (*SACp_pinl_45527__emal_43127__cwc_571)) + ((6 + (SACp_pinl_45527__emal_43127__cwc_571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_45527__emal_43127__cwc_571__sz * sizeof (*SACp_pinl_45527__emal_43127__cwc_571)) + ((6 + (SACp_pinl_45527__emal_43127__cwc_571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45527__emal_43127__cwc_571 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_45527__emal_43127__cwc_571 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_45527__emal_43127__cwc_571__sz * sizeof (*SACp_pinl_45527__emal_43127__cwc_571)) + ((6 + (SACp_pinl_45527__emal_43127__cwc_571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45527__emal_43127__cwc_571 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_45527__emal_43127__cwc_571 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_45527__emal_43127__cwc_571__sz * sizeof (*SACp_pinl_45527__emal_43127__cwc_571)) + ((6 + (SACp_pinl_45527__emal_43127__cwc_571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_45527__emal_43127__cwc_571__sz * sizeof (*SACp_pinl_45527__emal_43127__cwc_571)) + ((6 + (SACp_pinl_45527__emal_43127__cwc_571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_45527__emal_43127__cwc_571__sz * sizeof (*SACp_pinl_45527__emal_43127__cwc_571)) + ((6 + (SACp_pinl_45527__emal_43127__cwc_571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_45527__emal_43127__cwc_571__sz * sizeof (*SACp_pinl_45527__emal_43127__cwc_571)) + ((6 + (SACp_pinl_45527__emal_43127__cwc_571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_45527__emal_43127__cwc_571__sz * sizeof (*SACp_pinl_45527__emal_43127__cwc_571)) + ((6 + (SACp_pinl_45527__emal_43127__cwc_571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_45527__emal_43127__cwc_571 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_45527__emal_43127__cwc_571 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_45527__emal_43127__cwc_571 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_45527__emal_43127__cwc_571 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_45527__emal_43127__cwc_571__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_45527__emal_43127__cwc_571, SACp_pinl_45527__emal_43127__cwc_571__sz * sizeof (*SACp_pinl_45527__emal_43127__cwc_571), ((6 + (SACp_pinl_45527__emal_43127__cwc_571__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45527__emal_43127__cwc_571__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45527__emal_43127__cwc_571__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45527__emal_43127__cwc_571__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_45527__emal_43127__cwc_571__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_45527__emal_43127__cwc_571__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_45527__emal_43127__cwc_571[0] = 0; }




            if ((SACp_pinl_45527__emal_43127__cwc_571__dim != 1) && (SACp_pinl_45527__emal_43127__cwc_571__shp0 != SACp_pinl_45528__emal_43128__cwc_568__dim)) {
              SACp_pinl_45526__emal_43126__icc_4787_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_pinl_45527__emal_43127__cwc_571""' with shape %s ""And `" "SACp_pinl_45528__emal_43128__cwc_568""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_45527__emal_43127__cwc_571__desc), SAC_PrintShape (SACp_pinl_45528__emal_43128__cwc_568__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_45527__emal_43127__cwc_571[0]) >= SACp_pinl_45528__emal_43128__cwc_568__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_pinl_45527__emal_43127__cwc_571""' with shape %s ""And `" "SACp_pinl_45528__emal_43128__cwc_568""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_45527__emal_43127__cwc_571__desc), SAC_PrintShape (SACp_pinl_45528__emal_43128__cwc_568__desc));
              }
              SACp_pinl_45526__emal_43126__icc_4787_pred = SAC_all;
            }




            if (!((SACp_pinl_45508__idc_4799__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_45508__idc_4799__shp0 == SACp_pinl_45527__emal_43127__cwc_571__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            SACp_pinl_45508__idc_4799__desc = SACp_pinl_45527__emal_43127__cwc_571__desc;
            ;
            ;
            { SACp_pinl_45508__idc_4799 = SACp_pinl_45527__emal_43127__cwc_571; }

            if (!SACp_pinl_45526__emal_43126__icc_4787_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_45496__icc_4789__desc = SACp_pinl_45528__emal_43128__cwc_568__desc;
            SACp_pinl_45496__icc_4789__sz = SACp_pinl_45528__emal_43128__cwc_568__sz;
            SACp_pinl_45496__icc_4789__dim = SACp_pinl_45528__emal_43128__cwc_568__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45496__icc_4789__desc) & (-1 ^ (3))))[3]) = SACp_pinl_45528__emal_43128__cwc_568__dim;
            { SACp_pinl_45496__icc_4789 = SACp_pinl_45528__emal_43128__cwc_568; }




            if (!((SACp_pinl_45495__icc_4788__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_45495__icc_4788__shp0 == SACp_pinl_45508__idc_4799__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            SACp_pinl_45495__icc_4788__desc = SACp_pinl_45508__idc_4799__desc;
            ;
            ;
            { SACp_pinl_45495__icc_4788 = SACp_pinl_45508__idc_4799; }

            { { if (!((1 == SACp_pinl_45525__emal_43125__ivesplit_42387__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_45525__emal_43125__ivesplit_42387"); }; { if ((((6 + (SACp_pinl_45525__emal_43125__ivesplit_42387__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_45525__emal_43125__ivesplit_42387__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_45525__emal_43125__ivesplit_42387__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45525__emal_43125__ivesplit_42387__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_45525__emal_43125__ivesplit_42387__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_45525__emal_43125__ivesplit_42387__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45525__emal_43125__ivesplit_42387__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_45525__emal_43125__ivesplit_42387__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_45525__emal_43125__ivesplit_42387__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_45525__emal_43125__ivesplit_42387__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_45525__emal_43125__ivesplit_42387__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_45525__emal_43125__ivesplit_42387__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_45525__emal_43125__ivesplit_42387__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_45525__emal_43125__ivesplit_42387__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_45525__emal_43125__ivesplit_42387__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_45525__emal_43125__ivesplit_42387__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_45525__emal_43125__ivesplit_42387__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45525__emal_43125__ivesplit_42387__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45525__emal_43125__ivesplit_42387__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45525__emal_43125__ivesplit_42387__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_45525__emal_43125__ivesplit_42387__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_45525__emal_43125__ivesplit_42387__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45525__emal_43125__ivesplit_42387__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_45496__icc_4789__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45525__emal_43125__ivesplit_42387__desc) & (-1 ^ (3))))[4]) = SACp_pinl_45525__emal_43125__ivesplit_42387__sz = SAC_size;
              if (!((SACp_pinl_45525__emal_43125__ivesplit_42387__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 1894 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 1894 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1894 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 1894 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1894 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 1894 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 1894 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 1894, __extension__ __PRETTY_FUNCTION__); }))
# 1894 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_45525__emal_43125__ivesplit_42387 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_45525__emal_43125__ivesplit_42387__sz * sizeof (*SACp_pinl_45525__emal_43125__ivesplit_42387)); break; case SAC_HM_multi_threaded: SACp_pinl_45525__emal_43125__ivesplit_42387 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_45525__emal_43125__ivesplit_42387__sz * sizeof (*SACp_pinl_45525__emal_43125__ivesplit_42387), 0); break; case SAC_HM_any_threaded: SACp_pinl_45525__emal_43125__ivesplit_42387 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_45525__emal_43125__ivesplit_42387__sz * sizeof (*SACp_pinl_45525__emal_43125__ivesplit_42387), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45525__emal_43125__ivesplit_42387__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45525__emal_43125__ivesplit_42387__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45525__emal_43125__ivesplit_42387__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_45496__icc_4789__dim; SAC_i++) {
              { SACp_pinl_45525__emal_43125__ivesplit_42387[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45496__icc_4789__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_45495__icc_4788[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_45525__emal_43125__ivesplit_42387__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_45525__emal_43125__ivesplit_42387[SAC_i]);
              }
              SACp_pinl_45524__emal_43124__ivesli_42449 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45495__icc_4788__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_45495__icc_4788__sz * sizeof (*SACp_pinl_45495__icc_4788)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_45495__icc_4788, ((((SAC_HM_header_t *)SACp_pinl_45495__icc_4788) - 1)->data1.arena)); } else { if (SACp_pinl_45495__icc_4788__sz * sizeof (*SACp_pinl_45495__icc_4788) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_45495__icc_4788) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_45495__icc_4788, ((((SAC_HM_header_t *)SACp_pinl_45495__icc_4788) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45495__icc_4788, ((((SAC_HM_header_t *)SACp_pinl_45495__icc_4788) - 1)->data1.arena)); } } else { if (((((SACp_pinl_45495__icc_4788__sz * sizeof (*SACp_pinl_45495__icc_4788))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45495__icc_4788, ((((SAC_HM_header_t *)SACp_pinl_45495__icc_4788) - 1)->data1.arena)); } else { if (((((SACp_pinl_45495__icc_4788__sz * sizeof (*SACp_pinl_45495__icc_4788))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_45495__icc_4788) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45495__icc_4788, ((((SAC_HM_header_t *)SACp_pinl_45495__icc_4788) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45495__icc_4788, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_45495__icc_4788); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_45495__icc_4788); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45495__icc_4788, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_45495__icc_4788); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_45495__icc_4788); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45495__icc_4788__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_45525__emal_43125__ivesplit_42387); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45525__emal_43125__ivesplit_42387__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_45523__emal_43123__icc_4790 = ( SACp_pinl_45496__icc_4789[SACp_pinl_45524__emal_43124__ivesli_42449]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45496__icc_4789__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_45496__icc_4789); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45496__icc_4789__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_45526__emal_43126__icc_4787_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            ; ; { SACp_pinl_45522__emal_43122__cwc_574 = (SACp_pinl_45523__emal_43123__icc_4790) == (2); };
            { ; ; }
            { { if (!((1 == SACp_pinl_45521__emal_43121__cwc_576__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_45521__emal_43121__cwc_576"); }; { { if ((((SACp_pinl_45521__emal_43121__cwc_576__sz * sizeof (*SACp_pinl_45521__emal_43121__cwc_576)) + ((6 + (SACp_pinl_45521__emal_43121__cwc_576__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_45521__emal_43121__cwc_576__sz * sizeof (*SACp_pinl_45521__emal_43121__cwc_576)) + ((6 + (SACp_pinl_45521__emal_43121__cwc_576__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_45521__emal_43121__cwc_576__sz * sizeof (*SACp_pinl_45521__emal_43121__cwc_576)) + ((6 + (SACp_pinl_45521__emal_43121__cwc_576__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45521__emal_43121__cwc_576 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_45521__emal_43121__cwc_576 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_45521__emal_43121__cwc_576__sz * sizeof (*SACp_pinl_45521__emal_43121__cwc_576)) + ((6 + (SACp_pinl_45521__emal_43121__cwc_576__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45521__emal_43121__cwc_576 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_45521__emal_43121__cwc_576 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_45521__emal_43121__cwc_576__sz * sizeof (*SACp_pinl_45521__emal_43121__cwc_576)) + ((6 + (SACp_pinl_45521__emal_43121__cwc_576__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_45521__emal_43121__cwc_576__sz * sizeof (*SACp_pinl_45521__emal_43121__cwc_576)) + ((6 + (SACp_pinl_45521__emal_43121__cwc_576__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_45521__emal_43121__cwc_576__sz * sizeof (*SACp_pinl_45521__emal_43121__cwc_576)) + ((6 + (SACp_pinl_45521__emal_43121__cwc_576__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_45521__emal_43121__cwc_576__sz * sizeof (*SACp_pinl_45521__emal_43121__cwc_576)) + ((6 + (SACp_pinl_45521__emal_43121__cwc_576__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_45521__emal_43121__cwc_576__sz * sizeof (*SACp_pinl_45521__emal_43121__cwc_576)) + ((6 + (SACp_pinl_45521__emal_43121__cwc_576__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_45521__emal_43121__cwc_576 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_45521__emal_43121__cwc_576 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_45521__emal_43121__cwc_576 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_45521__emal_43121__cwc_576 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_45521__emal_43121__cwc_576__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_45521__emal_43121__cwc_576, SACp_pinl_45521__emal_43121__cwc_576__sz * sizeof (*SACp_pinl_45521__emal_43121__cwc_576), ((6 + (SACp_pinl_45521__emal_43121__cwc_576__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45521__emal_43121__cwc_576__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45521__emal_43121__cwc_576__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45521__emal_43121__cwc_576__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_45521__emal_43121__cwc_576__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_45521__emal_43121__cwc_576__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_45521__emal_43121__cwc_576[0] = 1; }




            if ((SACp_pinl_45521__emal_43121__cwc_576__dim != 1) && (SACp_pinl_45521__emal_43121__cwc_576__shp0 != SACp_pinl_45528__emal_43128__cwc_568__dim)) {
              SACp_pinl_45520__emal_43120__icc_4793_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_pinl_45521__emal_43121__cwc_576""' with shape %s ""And `" "SACp_pinl_45528__emal_43128__cwc_568""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_45521__emal_43121__cwc_576__desc), SAC_PrintShape (SACp_pinl_45528__emal_43128__cwc_568__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_45521__emal_43121__cwc_576[0]) >= SACp_pinl_45528__emal_43128__cwc_568__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_pinl_45521__emal_43121__cwc_576""' with shape %s ""And `" "SACp_pinl_45528__emal_43128__cwc_568""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_45521__emal_43121__cwc_576__desc), SAC_PrintShape (SACp_pinl_45528__emal_43128__cwc_568__desc));
              }
              SACp_pinl_45520__emal_43120__icc_4793_pred = SAC_all;
            }




            if (!((SACp_pinl_45510__idc_4802__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_45510__idc_4802__shp0 == SACp_pinl_45521__emal_43121__cwc_576__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            SACp_pinl_45510__idc_4802__desc = SACp_pinl_45521__emal_43121__cwc_576__desc;
            ;
            ;
            { SACp_pinl_45510__idc_4802 = SACp_pinl_45521__emal_43121__cwc_576; }

            if (!SACp_pinl_45520__emal_43120__icc_4793_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_45499__icc_4795__desc = SACp_pinl_45528__emal_43128__cwc_568__desc;
            SACp_pinl_45499__icc_4795__sz = SACp_pinl_45528__emal_43128__cwc_568__sz;
            SACp_pinl_45499__icc_4795__dim = SACp_pinl_45528__emal_43128__cwc_568__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45499__icc_4795__desc) & (-1 ^ (3))))[3]) = SACp_pinl_45528__emal_43128__cwc_568__dim;
            { SACp_pinl_45499__icc_4795 = SACp_pinl_45528__emal_43128__cwc_568; }




            if (!((SACp_pinl_45498__icc_4794__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_45498__icc_4794__shp0 == SACp_pinl_45510__idc_4802__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            SACp_pinl_45498__icc_4794__desc = SACp_pinl_45510__idc_4802__desc;
            ;
            ;
            { SACp_pinl_45498__icc_4794 = SACp_pinl_45510__idc_4802; }

            { { if (!((1 == SACp_pinl_45519__emal_43119__ivesplit_42389__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_45519__emal_43119__ivesplit_42389"); }; { if ((((6 + (SACp_pinl_45519__emal_43119__ivesplit_42389__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_45519__emal_43119__ivesplit_42389__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_45519__emal_43119__ivesplit_42389__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45519__emal_43119__ivesplit_42389__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_45519__emal_43119__ivesplit_42389__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_45519__emal_43119__ivesplit_42389__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_45519__emal_43119__ivesplit_42389__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_45519__emal_43119__ivesplit_42389__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_45519__emal_43119__ivesplit_42389__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_45519__emal_43119__ivesplit_42389__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_45519__emal_43119__ivesplit_42389__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_45519__emal_43119__ivesplit_42389__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_45519__emal_43119__ivesplit_42389__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_45519__emal_43119__ivesplit_42389__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_45519__emal_43119__ivesplit_42389__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_45519__emal_43119__ivesplit_42389__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_45519__emal_43119__ivesplit_42389__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45519__emal_43119__ivesplit_42389__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45519__emal_43119__ivesplit_42389__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45519__emal_43119__ivesplit_42389__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_45519__emal_43119__ivesplit_42389__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_45519__emal_43119__ivesplit_42389__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45519__emal_43119__ivesplit_42389__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_45499__icc_4795__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45519__emal_43119__ivesplit_42389__desc) & (-1 ^ (3))))[4]) = SACp_pinl_45519__emal_43119__ivesplit_42389__sz = SAC_size;
              if (!((SACp_pinl_45519__emal_43119__ivesplit_42389__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 2009 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 2009 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 2009 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 2009 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 2009 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 2009 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 2009 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 2009, __extension__ __PRETTY_FUNCTION__); }))
# 2009 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_45519__emal_43119__ivesplit_42389 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_45519__emal_43119__ivesplit_42389__sz * sizeof (*SACp_pinl_45519__emal_43119__ivesplit_42389)); break; case SAC_HM_multi_threaded: SACp_pinl_45519__emal_43119__ivesplit_42389 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_45519__emal_43119__ivesplit_42389__sz * sizeof (*SACp_pinl_45519__emal_43119__ivesplit_42389), 0); break; case SAC_HM_any_threaded: SACp_pinl_45519__emal_43119__ivesplit_42389 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_45519__emal_43119__ivesplit_42389__sz * sizeof (*SACp_pinl_45519__emal_43119__ivesplit_42389), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45519__emal_43119__ivesplit_42389__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45519__emal_43119__ivesplit_42389__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45519__emal_43119__ivesplit_42389__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_45499__icc_4795__dim; SAC_i++) {
              { SACp_pinl_45519__emal_43119__ivesplit_42389[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45499__icc_4795__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_45498__icc_4794[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_45519__emal_43119__ivesplit_42389__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_45519__emal_43119__ivesplit_42389[SAC_i]);
              }
              SACp_pinl_45518__emal_43118__ivesli_42448 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45498__icc_4794__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_45498__icc_4794__sz * sizeof (*SACp_pinl_45498__icc_4794)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_45498__icc_4794, ((((SAC_HM_header_t *)SACp_pinl_45498__icc_4794) - 1)->data1.arena)); } else { if (SACp_pinl_45498__icc_4794__sz * sizeof (*SACp_pinl_45498__icc_4794) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_45498__icc_4794) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_45498__icc_4794, ((((SAC_HM_header_t *)SACp_pinl_45498__icc_4794) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45498__icc_4794, ((((SAC_HM_header_t *)SACp_pinl_45498__icc_4794) - 1)->data1.arena)); } } else { if (((((SACp_pinl_45498__icc_4794__sz * sizeof (*SACp_pinl_45498__icc_4794))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45498__icc_4794, ((((SAC_HM_header_t *)SACp_pinl_45498__icc_4794) - 1)->data1.arena)); } else { if (((((SACp_pinl_45498__icc_4794__sz * sizeof (*SACp_pinl_45498__icc_4794))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_45498__icc_4794) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45498__icc_4794, ((((SAC_HM_header_t *)SACp_pinl_45498__icc_4794) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45498__icc_4794, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_45498__icc_4794); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_45498__icc_4794); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_45498__icc_4794, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_45498__icc_4794); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_45498__icc_4794); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45498__icc_4794__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_45519__emal_43119__ivesplit_42389); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45519__emal_43119__ivesplit_42389__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_45517__emal_43117__icc_4796 = ( SACp_pinl_45499__icc_4795[SACp_pinl_45518__emal_43118__ivesli_42448]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45499__icc_4795__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_45499__icc_4795); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45499__icc_4795__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_45520__emal_43120__icc_4793_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            { ; ;



            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            ;

            }
            ; ; { SACp_pinl_45516__emal_43116__cwc_579 = (SACp_pinl_45517__emal_43117__icc_4796) == (3); };
            { ; ; }
            ; ; { SACp_pinl_45516__emal_43116__cwc_579 = (SACp_pinl_45516__emal_43116__cwc_579) & (SACp_pinl_45522__emal_43122__cwc_574); };
            { ; ; }
            if (SACp_pinl_45516__emal_43116__cwc_579)
            {
              { ; ; }



              if (!((_tcp_48539_SACl_data__dim == SACl_data__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
              if (!((_tcp_48539_SACl_data__shp0 == (((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[(6 + (0))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
              if (!((_tcp_48539_SACl_data__shp1 == (((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[(6 + (1))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
              _tcp_48539_SACl_data__desc = SACl_data__desc;
              ;
              ;
              { _tcp_48539_SACl_data = SACl_data; }




              if (!((_tcp_48538_SACl_shp__dim == SACl_shp__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
              _tcp_48538_SACl_shp__desc = SACl_shp__desc;
              _tcp_48538_SACl_shp__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[(6 + (0))]);
              _tcp_48538_SACl_shp__sz = SACl_shp__sz;
              ;
              { _tcp_48538_SACl_shp = SACl_shp; }




              SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_2_3 (&SACp_cwc_563, &SACp_cwc_563__desc, _tcp_48538_SACl_shp, _tcp_48538_SACl_shp__desc, _tcp_48539_SACl_data, _tcp_48539_SACl_data__desc);




              SACp_cwc_563__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_563__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[3]);

            }
            else
            {
              { ; ; }



              if (!((_tcp_48540_SACl_shp__dim == SACl_shp__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
              _tcp_48540_SACl_shp__desc = SACl_shp__desc;
              _tcp_48540_SACl_shp__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[(6 + (0))]);
              _tcp_48540_SACl_shp__sz = SACl_shp__sz;
              ;
              { _tcp_48540_SACl_shp = SACl_shp; }




              SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_S (&SACp_cwc_563, &SACp_cwc_563__desc, _tcp_48540_SACl_shp, _tcp_48540_SACl_shp__desc, SACl_data, SACl_data__desc);




              SACp_cwc_563__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_563__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[3]);

            }
          }
          else
          {
            { ; ; }



            if (!((_tcp_48541_SACl_shp__dim == SACl_shp__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
            _tcp_48541_SACl_shp__desc = SACl_shp__desc;
            _tcp_48541_SACl_shp__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[(6 + (0))]);
            _tcp_48541_SACl_shp__sz = SACl_shp__sz;
            ;
            { _tcp_48541_SACl_shp = SACl_shp; }




            SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_S (&SACp_cwc_563, &SACp_cwc_563__desc, _tcp_48541_SACl_shp, _tcp_48541_SACl_shp__desc, SACl_data, SACl_data__desc);




            SACp_cwc_563__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_563__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_563__desc) & (-1 ^ (3))))[3]);

          }
        }
      }
    }
    else
    {
      { ; ; }



      SAC_RuntimeError_Mult( 4, "No appropriate instance of function found:" "\n***   _MAIN::_rtpf_25_impl_genarrayI :: int[*] int[*] -> int[*] \n*** instances present:\n***   _MAIN::_rtpf_25_impl_genarrayI :: int[.] int[*] -> int[*] \n***   _MAIN::_rtpf_25_impl_genarrayI :: int[.] int[2] -> int[+] \n***   _MAIN::_rtpf_25_impl_genarrayI :: int[.] int[2,3] -> int[+] \n***   _MAIN::_rtpf_25_impl_genarrayI :: int[.] int -> int[*] ", "shapes of arguments:", "  %s", SAC_PrintShape( SACl_shp__desc), "  %s", SAC_PrintShape( SACl_data__desc));

    }



    { *SAC_arg_1__p = SACp_cwc_563; *SAC_arg_1__desc__p = SACp_cwc_563__desc; }
    return;
   
  }



}
}
# 2179 "/home/rubenhensen/sac/a.out.c"
void SACwf__MAIN__main (int * SAC_arg_1__p) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int SACp_cwc_685;
   
   


   



    SACf__MAIN__main (&SACp_cwc_685);




    ;




    { *SAC_arg_1__p = SACp_cwc_685; }
    return;
   
  }



}
}
# 2226 "/home/rubenhensen/sac/a.out.c"
void SACwf__MAIN___rtpf_8_impl__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int SACp_pinl_45536__emal_43134__cwc_734;
   
   




    
# 2242 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2242 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45535__emal_43133__cwc_737;
   
   




    int SACp_pinl_45534__emal_43132__cwc_728;
   
   




    
# 2256 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2256 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45533__emal_43131__cwc_731;
   
   




    int SACp_emal_43130__cwc_732;
   
   




    
# 2270 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2270 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43129__cwc_739;
   
   




    int * SACp_cwc_726;
    SAC_array_descriptor_t SACp_cwc_726__desc = 
# 2278 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2278 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_cwc_726__sz = 0;
    int SACp_cwc_726__dim = 0;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_43130__cwc_732 = SACl_a__dim; }; }
    ; ; { SACp_emal_43129__cwc_739 = (SACp_emal_43130__cwc_732) > (0); };
    { ; ; }
    if (SACp_emal_43129__cwc_739)
    {
      { ; ; }
      { { SACp_pinl_45534__emal_43132__cwc_728 = SACl_b__dim; }; }
      ; ; { SACp_pinl_45533__emal_43131__cwc_731 = (SACp_pinl_45534__emal_43132__cwc_728) > (0); };
      { ; ; }
      if (SACp_pinl_45533__emal_43131__cwc_731)
      {
        { ; ; }



        SACf__MAIN___rtpf_8_impl__i_P__i_P (&SACp_cwc_726, &SACp_cwc_726__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




        SACp_cwc_726__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_726__desc) & (-1 ^ (3))))[4]);
        SACp_cwc_726__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_726__desc) & (-1 ^ (3))))[3]);

      }
      else
      {
        { ; ; }



        SACf__MAIN___rtpf_8_impl__i_S__i_S (&SACp_cwc_726, &SACp_cwc_726__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




        SACp_cwc_726__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_726__desc) & (-1 ^ (3))))[4]);
        SACp_cwc_726__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_726__desc) & (-1 ^ (3))))[3]);

      }
    }
    else
    {
      { ; ; }
      { { SACp_pinl_45536__emal_43134__cwc_734 = SACl_b__dim; }; }
      ; ; { SACp_pinl_45535__emal_43133__cwc_737 = (SACp_pinl_45536__emal_43134__cwc_734) > (0); };
      { ; ; }
      if (SACp_pinl_45535__emal_43133__cwc_737)
      {
        { ; ; }



        SACf__MAIN___rtpf_8_impl__i_S__i_P (&SACp_cwc_726, &SACp_cwc_726__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




        SACp_cwc_726__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_726__desc) & (-1 ^ (3))))[4]);
        SACp_cwc_726__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_726__desc) & (-1 ^ (3))))[3]);

      }
      else
      {
        { ; ; }



        SACf__MAIN___rtpf_8_impl__i_S__i_S (&SACp_cwc_726, &SACp_cwc_726__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




        SACp_cwc_726__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_726__desc) & (-1 ^ (3))))[4]);
        SACp_cwc_726__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_726__desc) & (-1 ^ (3))))[3]);

      }
    }



    { *SAC_arg_1__p = SACp_cwc_726; *SAC_arg_1__desc__p = SACp_cwc_726__desc; }
    return;
   
  }



}
}
# 2395 "/home/rubenhensen/sac/a.out.c"
void SACwf__MAIN___PL__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int SACp_pinl_45606__emal_43146__cwc_752;
   
   




    
# 2411 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2411 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45605__emal_43145__cwc_755;
   
   




    int SACp_pinl_45602__emal_43148__cwc_742;
   
   




    
# 2425 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2425 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45601__emal_43147__cwc_745;
   
   




    int SACp_pinl_45598__emal_43144__cwc_756;
   
   




    
# 2439 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2439 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45597__emal_43143__cwc_759;
   
   




    int SACp_pinl_45596__emal_43142__cwc_746;
   
   




    
# 2453 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2453 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45595__emal_43141__cwc_749;
   
   




    int SACp_pinl_45590__emal_43153__cwc_764;
   
   




    
# 2467 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2467 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45589__emal_43152__cwc_767;
   
   




    int SACp_pinl_45588__emal_43151__asd_43083_b;
   
   




    int SACp_pinl_45587__emal_43150__asd_43082_a;
   
   




    int * SACp_pinl_45586__emal_43149__asd_43081__cwc_769;
    SAC_array_descriptor_t SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc = 
# 2489 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2489 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_45586__emal_43149__asd_43081__cwc_769__sz = 0;
    int SACp_pinl_45586__emal_43149__asd_43081__cwc_769__dim = 0;




    int SACp_pinl_45580__cwc_769;
   
   




    int SACp_pinl_45579__emal_43140__cwc_750;
   
   




    
# 2510 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2510 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45578__emal_43139__cwc_761;
   
   




    int SACp_pinl_45577__emal_43138__cwc_768;
   
   




    
# 2524 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2524 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_45576__emal_43137__cwc_771;
   
   




    int SACp_emal_43136__cwc_762;
   
   




    
# 2538 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2538 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43135__cwc_773;
   
   




    int * SACp_cwc_740;
    SAC_array_descriptor_t SACp_cwc_740__desc = 
# 2546 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2546 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_cwc_740__sz = 0;
    int SACp_cwc_740__dim = 0;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_43136__cwc_762 = SACl_a__dim; }; }
    ; ; { SACp_emal_43135__cwc_773 = (SACp_emal_43136__cwc_762) == (0); };
    { ; ; }
    if (SACp_emal_43135__cwc_773)
    {
      { ; ; }
      { { SACp_pinl_45577__emal_43138__cwc_768 = SACl_b__dim; }; }
      ; ; { SACp_pinl_45576__emal_43137__cwc_771 = (SACp_pinl_45577__emal_43138__cwc_768) == (0); };
      { ; ; }
      if (SACp_pinl_45576__emal_43137__cwc_771)
      {
        { ; ; }
        { if (!((SACl_b__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_45588__emal_43151__asd_43083_b = ( SACl_b[0]); } }
        { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))); } } } } else { } }
        { if (!((SACl_a__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_45587__emal_43150__asd_43082_a = ( SACl_a[0]); } }
        { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }



        SACf__MAIN___PL__i__i (&SACp_pinl_45580__cwc_769, SACp_pinl_45587__emal_43150__asd_43082_a, SACp_pinl_45588__emal_43151__asd_43083_b);




        ;

        { { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_pinl_45586__emal_43149__asd_43081__cwc_769"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 2590 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 2590 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 2590 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 2590 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 2590 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 2590 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 2590 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 2590, __extension__ __PRETTY_FUNCTION__); }))
# 2590 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc) & (-1 ^ (3))))[3]) = SACp_pinl_45586__emal_43149__asd_43081__cwc_769__dim = 0; }



        if (!((SACp_pinl_45586__emal_43149__asd_43081__cwc_769__dim == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 26, 1, "Assignment with incompatible types found"); };
        {
          int SAC_i;
          int SAC_size = 1;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc) & (-1 ^ (3))))[4]) = SACp_pinl_45586__emal_43149__asd_43081__cwc_769__sz = SAC_size * 1;
          if (!((SACp_pinl_45586__emal_43149__asd_43081__cwc_769__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 26, 1, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 2602 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 2602 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 2602 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 2602 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 2602 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 2602 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 2602 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 2602, __extension__ __PRETTY_FUNCTION__); }))
# 2602 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_45586__emal_43149__asd_43081__cwc_769 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_45586__emal_43149__asd_43081__cwc_769__sz * sizeof (*SACp_pinl_45586__emal_43149__asd_43081__cwc_769)); break; case SAC_HM_multi_threaded: SACp_pinl_45586__emal_43149__asd_43081__cwc_769 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_45586__emal_43149__asd_43081__cwc_769__sz * sizeof (*SACp_pinl_45586__emal_43149__asd_43081__cwc_769), 0); break; case SAC_HM_any_threaded: SACp_pinl_45586__emal_43149__asd_43081__cwc_769 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_45586__emal_43149__asd_43081__cwc_769__sz * sizeof (*SACp_pinl_45586__emal_43149__asd_43081__cwc_769), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc) & (-1 ^ (3))))[1]) = 0; } }
        { if (!((SACp_pinl_45586__emal_43149__asd_43081__cwc_769__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_45586__emal_43149__asd_43081__cwc_769[0] = SACp_pinl_45580__cwc_769; } }
        { ; ; }



        SACp_cwc_740__desc = SACp_pinl_45586__emal_43149__asd_43081__cwc_769__desc;
        SACp_cwc_740__sz = SACp_pinl_45586__emal_43149__asd_43081__cwc_769__sz;
        SACp_cwc_740__dim = SACp_pinl_45586__emal_43149__asd_43081__cwc_769__dim;
        ;
        { SACp_cwc_740 = SACp_pinl_45586__emal_43149__asd_43081__cwc_769; }

      }
      else
      {
        { ; ; }
        { { SACp_pinl_45590__emal_43153__cwc_764 = SACl_b__dim; }; }
        ; ; { SACp_pinl_45589__emal_43152__cwc_767 = (SACp_pinl_45590__emal_43153__cwc_764) > (0); };
        { ; ; }
        if (SACp_pinl_45589__emal_43152__cwc_767)
        {
          { ; ; }



          SACf__MAIN___PL__i_S__i_P (&SACp_cwc_740, &SACp_cwc_740__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




          SACp_cwc_740__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_740__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[3]);

        }
        else
        {
          { ; ; }



          SACf__MAIN___PL__i_S__i_S (&SACp_cwc_740, &SACp_cwc_740__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




          SACp_cwc_740__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_740__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[3]);

        }
      }
    }
    else
    {
      { ; ; }
      { { SACp_pinl_45579__emal_43140__cwc_750 = SACl_a__dim; }; }
      ; ; { SACp_pinl_45578__emal_43139__cwc_761 = (SACp_pinl_45579__emal_43140__cwc_750) > (0); };
      { ; ; }
      if (SACp_pinl_45578__emal_43139__cwc_761)
      {
        { ; ; }
        { { SACp_pinl_45596__emal_43142__cwc_746 = SACl_b__dim; }; }
        ; ; { SACp_pinl_45595__emal_43141__cwc_749 = (SACp_pinl_45596__emal_43142__cwc_746) == (0); };
        { ; ; }
        if (SACp_pinl_45595__emal_43141__cwc_749)
        {
          { ; ; }



          SACf__MAIN___PL__i_S__i_S (&SACp_cwc_740, &SACp_cwc_740__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




          SACp_cwc_740__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_740__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[3]);

        }
        else
        {
          { ; ; }
          { { SACp_pinl_45602__emal_43148__cwc_742 = SACl_b__dim; }; }
          ; ; { SACp_pinl_45601__emal_43147__cwc_745 = (SACp_pinl_45602__emal_43148__cwc_742) > (0); };
          { ; ; }
          if (SACp_pinl_45601__emal_43147__cwc_745)
          {
            { ; ; }



            SACf__MAIN___PL__i_P__i_P (&SACp_cwc_740, &SACp_cwc_740__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_740__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_740__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[3]);

          }
          else
          {
            { ; ; }



            SACf__MAIN___PL__i_S__i_S (&SACp_cwc_740, &SACp_cwc_740__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_740__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_740__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[3]);

          }
        }
      }
      else
      {
        { ; ; }
        { { SACp_pinl_45598__emal_43144__cwc_756 = SACl_b__dim; }; }
        ; ; { SACp_pinl_45597__emal_43143__cwc_759 = (SACp_pinl_45598__emal_43144__cwc_756) == (0); };
        { ; ; }
        if (SACp_pinl_45597__emal_43143__cwc_759)
        {
          { ; ; }



          SACf__MAIN___PL__i_S__i_S (&SACp_cwc_740, &SACp_cwc_740__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




          SACp_cwc_740__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_740__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[3]);

        }
        else
        {
          { ; ; }
          { { SACp_pinl_45606__emal_43146__cwc_752 = SACl_b__dim; }; }
          ; ; { SACp_pinl_45605__emal_43145__cwc_755 = (SACp_pinl_45606__emal_43146__cwc_752) > (0); };
          { ; ; }
          if (SACp_pinl_45605__emal_43145__cwc_755)
          {
            { ; ; }



            SACf__MAIN___PL__i_S__i_P (&SACp_cwc_740, &SACp_cwc_740__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_740__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_740__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[3]);

          }
          else
          {
            { ; ; }



            SACf__MAIN___PL__i_S__i_S (&SACp_cwc_740, &SACp_cwc_740__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_740__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_740__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_740__desc) & (-1 ^ (3))))[3]);

          }
        }
      }
    }



    { *SAC_arg_1__p = SACp_cwc_740; *SAC_arg_1__desc__p = SACp_cwc_740__desc; }
    return;
   
  }



}
}
# 2800 "/home/rubenhensen/sac/a.out.c"
void SACwf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48533_SACl_b;
    SAC_array_descriptor_t _tcp_48533_SACl_b__desc = 
# 2810 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2810 "/home/rubenhensen/sac/a.out.c"
   ;
    const int _tcp_48533_SACl_b__shp0 = 2;
    const int _tcp_48533_SACl_b__sz = 2;
    const int _tcp_48533_SACl_b__dim = 1;




    int * _tcp_48532_SACl_a;
    SAC_array_descriptor_t _tcp_48532_SACl_a__desc = 
# 2819 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2819 "/home/rubenhensen/sac/a.out.c"
   ;
    const int _tcp_48532_SACl_a__shp0 = 2;
    const int _tcp_48532_SACl_a__shp1 = 3;
    const int _tcp_48532_SACl_a__sz = 6;
    const int _tcp_48532_SACl_a__dim = 2;




    int * _tcp_48531_SACl_b;
    SAC_array_descriptor_t _tcp_48531_SACl_b__desc = 
# 2829 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2829 "/home/rubenhensen/sac/a.out.c"
   ;
    const int _tcp_48531_SACl_b__shp0 = 2;
    const int _tcp_48531_SACl_b__shp1 = 3;
    const int _tcp_48531_SACl_b__sz = 6;
    const int _tcp_48531_SACl_b__dim = 2;




    int * _tcp_48530_SACl_a;
    SAC_array_descriptor_t _tcp_48530_SACl_a__desc = 
# 2839 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2839 "/home/rubenhensen/sac/a.out.c"
   ;
    const int _tcp_48530_SACl_a__shp0 = 2;
    const int _tcp_48530_SACl_a__sz = 2;
    const int _tcp_48530_SACl_a__dim = 1;




    int * _tcp_48529_SACl_b;
    SAC_array_descriptor_t _tcp_48529_SACl_b__desc = 
# 2848 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2848 "/home/rubenhensen/sac/a.out.c"
   ;
    const int _tcp_48529_SACl_b__shp0 = 2;
    const int _tcp_48529_SACl_b__shp1 = 3;
    const int _tcp_48529_SACl_b__sz = 6;
    const int _tcp_48529_SACl_b__dim = 2;




    int * SACp_pinl_47016__emal_43205__cwc_778;
    SAC_array_descriptor_t SACp_pinl_47016__emal_43205__cwc_778__desc = 
# 2858 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2858 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47016__emal_43205__cwc_778__shp0;
    int SACp_pinl_47016__emal_43205__cwc_778__sz;
    const int SACp_pinl_47016__emal_43205__cwc_778__dim = 1;




    int * SACp_pinl_47015__emal_43204__cwc_781;
    SAC_array_descriptor_t SACp_pinl_47015__emal_43204__cwc_781__desc = 
# 2867 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2867 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47015__emal_43204__cwc_781__shp0 = 1;
    const int SACp_pinl_47015__emal_43204__cwc_781__sz = 1;
    const int SACp_pinl_47015__emal_43204__cwc_781__dim = 1;




    
# 2875 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2875 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47014__emal_43203__icc_4670_pred;
   
   




    int * SACp_pinl_47013__emal_43202__ivesplit_42401;
    SAC_array_descriptor_t SACp_pinl_47013__emal_43202__ivesplit_42401__desc = 
# 2883 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2883 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47013__emal_43202__ivesplit_42401__shp0;
    int SACp_pinl_47013__emal_43202__ivesplit_42401__sz;
    const int SACp_pinl_47013__emal_43202__ivesplit_42401__dim = 1;




    int SACp_pinl_47012__emal_43201__ivesli_42455;
   
   




    int SACp_pinl_47011__emal_43200__icc_4673;
   
   




    
# 2905 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2905 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47010__emal_43199__cwc_784;
   
   




    int * SACp_pinl_47007__idc_4676;
    SAC_array_descriptor_t SACp_pinl_47007__idc_4676__desc = 
# 2913 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2913 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47007__idc_4676__shp0 = 1;
    const int SACp_pinl_47007__idc_4676__sz = 1;
    const int SACp_pinl_47007__idc_4676__dim = 1;




    int * SACp_pinl_47001__icc_4672;
    SAC_array_descriptor_t SACp_pinl_47001__icc_4672__desc = 
# 2922 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2922 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47001__icc_4672__sz = 0;
    int SACp_pinl_47001__icc_4672__dim = 0;




    int * SACp_pinl_47000__icc_4671;
    SAC_array_descriptor_t SACp_pinl_47000__icc_4671__desc = 
# 2930 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2930 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47000__icc_4671__shp0 = 1;
    const int SACp_pinl_47000__icc_4671__sz = 1;
    const int SACp_pinl_47000__icc_4671__dim = 1;




    
# 2938 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2938 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46999__emal_43198__cwc_787;
   
   




    int * SACp_pinl_46998__emal_43197__cwc_789;
    SAC_array_descriptor_t SACp_pinl_46998__emal_43197__cwc_789__desc = 
# 2946 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2946 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46998__emal_43197__cwc_789__shp0;
    int SACp_pinl_46998__emal_43197__cwc_789__sz;
    const int SACp_pinl_46998__emal_43197__cwc_789__dim = 1;




    int * SACp_pinl_46997__emal_43196__cwc_792;
    SAC_array_descriptor_t SACp_pinl_46997__emal_43196__cwc_792__desc = 
# 2955 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2955 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46997__emal_43196__cwc_792__shp0 = 1;
    const int SACp_pinl_46997__emal_43196__cwc_792__sz = 1;
    const int SACp_pinl_46997__emal_43196__cwc_792__dim = 1;




    
# 2963 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2963 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46996__emal_43195__icc_4652_pred;
   
   




    int * SACp_pinl_46995__emal_43194__ivesplit_42397;
    SAC_array_descriptor_t SACp_pinl_46995__emal_43194__ivesplit_42397__desc = 
# 2971 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2971 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46995__emal_43194__ivesplit_42397__shp0;
    int SACp_pinl_46995__emal_43194__ivesplit_42397__sz;
    const int SACp_pinl_46995__emal_43194__ivesplit_42397__dim = 1;




    int SACp_pinl_46994__emal_43193__ivesli_42454;
   
   




    int SACp_pinl_46993__emal_43192__icc_4655;
   
   




    
# 2993 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2993 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46992__emal_43191__cwc_795;
   
   




    int * SACp_pinl_46991__emal_43190__cwc_797;
    SAC_array_descriptor_t SACp_pinl_46991__emal_43190__cwc_797__desc = 
# 3001 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3001 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46991__emal_43190__cwc_797__shp0 = 1;
    const int SACp_pinl_46991__emal_43190__cwc_797__sz = 1;
    const int SACp_pinl_46991__emal_43190__cwc_797__dim = 1;




    
# 3009 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3009 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46990__emal_43189__icc_4658_pred;
   
   




    int * SACp_pinl_46989__emal_43188__ivesplit_42399;
    SAC_array_descriptor_t SACp_pinl_46989__emal_43188__ivesplit_42399__desc = 
# 3017 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3017 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46989__emal_43188__ivesplit_42399__shp0;
    int SACp_pinl_46989__emal_43188__ivesplit_42399__sz;
    const int SACp_pinl_46989__emal_43188__ivesplit_42399__dim = 1;




    int SACp_pinl_46988__emal_43187__ivesli_42453;
   
   




    int SACp_pinl_46987__emal_43186__icc_4661;
   
   




    
# 3039 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3039 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46986__emal_43185__cwc_800;
   
   




    int * SACp_pinl_46980__idc_4667;
    SAC_array_descriptor_t SACp_pinl_46980__idc_4667__desc = 
# 3047 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3047 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46980__idc_4667__shp0 = 1;
    const int SACp_pinl_46980__idc_4667__sz = 1;
    const int SACp_pinl_46980__idc_4667__dim = 1;




    int * SACp_pinl_46978__idc_4664;
    SAC_array_descriptor_t SACp_pinl_46978__idc_4664__desc = 
# 3056 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3056 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46978__idc_4664__shp0 = 1;
    const int SACp_pinl_46978__idc_4664__sz = 1;
    const int SACp_pinl_46978__idc_4664__dim = 1;




    int * SACp_pinl_46968__icc_4660;
    SAC_array_descriptor_t SACp_pinl_46968__icc_4660__desc = 
# 3065 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3065 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46968__icc_4660__sz = 0;
    int SACp_pinl_46968__icc_4660__dim = 0;




    int * SACp_pinl_46967__icc_4659;
    SAC_array_descriptor_t SACp_pinl_46967__icc_4659__desc = 
# 3073 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3073 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46967__icc_4659__shp0 = 1;
    const int SACp_pinl_46967__icc_4659__sz = 1;
    const int SACp_pinl_46967__icc_4659__dim = 1;




    int * SACp_pinl_46965__icc_4654;
    SAC_array_descriptor_t SACp_pinl_46965__icc_4654__desc = 
# 3082 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3082 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46965__icc_4654__sz = 0;
    int SACp_pinl_46965__icc_4654__dim = 0;




    int * SACp_pinl_46964__icc_4653;
    SAC_array_descriptor_t SACp_pinl_46964__icc_4653__desc = 
# 3090 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3090 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46964__icc_4653__shp0 = 1;
    const int SACp_pinl_46964__icc_4653__sz = 1;
    const int SACp_pinl_46964__icc_4653__dim = 1;




    int * SACp_pinl_46963__emal_43231__cwc_808;
    SAC_array_descriptor_t SACp_pinl_46963__emal_43231__cwc_808__desc = 
# 3099 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3099 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46963__emal_43231__cwc_808__shp0;
    int SACp_pinl_46963__emal_43231__cwc_808__sz;
    const int SACp_pinl_46963__emal_43231__cwc_808__dim = 1;




    int * SACp_pinl_46962__emal_43230__cwc_811;
    SAC_array_descriptor_t SACp_pinl_46962__emal_43230__cwc_811__desc = 
# 3108 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3108 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46962__emal_43230__cwc_811__shp0 = 1;
    const int SACp_pinl_46962__emal_43230__cwc_811__sz = 1;
    const int SACp_pinl_46962__emal_43230__cwc_811__dim = 1;




    
# 3116 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3116 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46961__emal_43229__icc_4643_pred;
   
   




    int * SACp_pinl_46960__emal_43228__ivesplit_42407;
    SAC_array_descriptor_t SACp_pinl_46960__emal_43228__ivesplit_42407__desc = 
# 3124 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3124 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46960__emal_43228__ivesplit_42407__shp0;
    int SACp_pinl_46960__emal_43228__ivesplit_42407__sz;
    const int SACp_pinl_46960__emal_43228__ivesplit_42407__dim = 1;




    int SACp_pinl_46959__emal_43227__ivesli_42458;
   
   




    int SACp_pinl_46958__emal_43226__icc_4646;
   
   




    
# 3146 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3146 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46957__emal_43225__cwc_814;
   
   




    int * SACp_pinl_46954__idc_4649;
    SAC_array_descriptor_t SACp_pinl_46954__idc_4649__desc = 
# 3154 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3154 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46954__idc_4649__shp0 = 1;
    const int SACp_pinl_46954__idc_4649__sz = 1;
    const int SACp_pinl_46954__idc_4649__dim = 1;




    int * SACp_pinl_46948__icc_4645;
    SAC_array_descriptor_t SACp_pinl_46948__icc_4645__desc = 
# 3163 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3163 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46948__icc_4645__sz = 0;
    int SACp_pinl_46948__icc_4645__dim = 0;




    int * SACp_pinl_46947__icc_4644;
    SAC_array_descriptor_t SACp_pinl_46947__icc_4644__desc = 
# 3171 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3171 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46947__icc_4644__shp0 = 1;
    const int SACp_pinl_46947__icc_4644__sz = 1;
    const int SACp_pinl_46947__icc_4644__dim = 1;




    
# 3179 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3179 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46946__emal_43224__cwc_817;
   
   




    int * SACp_pinl_46945__emal_43223__cwc_819;
    SAC_array_descriptor_t SACp_pinl_46945__emal_43223__cwc_819__desc = 
# 3187 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3187 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46945__emal_43223__cwc_819__shp0;
    int SACp_pinl_46945__emal_43223__cwc_819__sz;
    const int SACp_pinl_46945__emal_43223__cwc_819__dim = 1;




    int * SACp_pinl_46944__emal_43222__cwc_822;
    SAC_array_descriptor_t SACp_pinl_46944__emal_43222__cwc_822__desc = 
# 3196 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3196 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46944__emal_43222__cwc_822__shp0 = 1;
    const int SACp_pinl_46944__emal_43222__cwc_822__sz = 1;
    const int SACp_pinl_46944__emal_43222__cwc_822__dim = 1;




    
# 3204 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3204 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46943__emal_43221__icc_4625_pred;
   
   




    int * SACp_pinl_46942__emal_43220__ivesplit_42403;
    SAC_array_descriptor_t SACp_pinl_46942__emal_43220__ivesplit_42403__desc = 
# 3212 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3212 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46942__emal_43220__ivesplit_42403__shp0;
    int SACp_pinl_46942__emal_43220__ivesplit_42403__sz;
    const int SACp_pinl_46942__emal_43220__ivesplit_42403__dim = 1;




    int SACp_pinl_46941__emal_43219__ivesli_42457;
   
   




    int SACp_pinl_46940__emal_43218__icc_4628;
   
   




    
# 3234 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3234 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46939__emal_43217__cwc_825;
   
   




    int * SACp_pinl_46938__emal_43216__cwc_827;
    SAC_array_descriptor_t SACp_pinl_46938__emal_43216__cwc_827__desc = 
# 3242 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3242 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46938__emal_43216__cwc_827__shp0 = 1;
    const int SACp_pinl_46938__emal_43216__cwc_827__sz = 1;
    const int SACp_pinl_46938__emal_43216__cwc_827__dim = 1;




    
# 3250 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3250 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46937__emal_43215__icc_4631_pred;
   
   




    int * SACp_pinl_46936__emal_43214__ivesplit_42405;
    SAC_array_descriptor_t SACp_pinl_46936__emal_43214__ivesplit_42405__desc = 
# 3258 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3258 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46936__emal_43214__ivesplit_42405__shp0;
    int SACp_pinl_46936__emal_43214__ivesplit_42405__sz;
    const int SACp_pinl_46936__emal_43214__ivesplit_42405__dim = 1;




    int SACp_pinl_46935__emal_43213__ivesli_42456;
   
   




    int SACp_pinl_46934__emal_43212__icc_4634;
   
   




    
# 3280 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3280 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46933__emal_43211__cwc_830;
   
   




    int * SACp_pinl_46927__idc_4640;
    SAC_array_descriptor_t SACp_pinl_46927__idc_4640__desc = 
# 3288 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3288 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46927__idc_4640__shp0 = 1;
    const int SACp_pinl_46927__idc_4640__sz = 1;
    const int SACp_pinl_46927__idc_4640__dim = 1;




    int * SACp_pinl_46925__idc_4637;
    SAC_array_descriptor_t SACp_pinl_46925__idc_4637__desc = 
# 3297 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3297 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46925__idc_4637__shp0 = 1;
    const int SACp_pinl_46925__idc_4637__sz = 1;
    const int SACp_pinl_46925__idc_4637__dim = 1;




    int * SACp_pinl_46915__icc_4633;
    SAC_array_descriptor_t SACp_pinl_46915__icc_4633__desc = 
# 3306 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3306 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46915__icc_4633__sz = 0;
    int SACp_pinl_46915__icc_4633__dim = 0;




    int * SACp_pinl_46914__icc_4632;
    SAC_array_descriptor_t SACp_pinl_46914__icc_4632__desc = 
# 3314 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3314 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46914__icc_4632__shp0 = 1;
    const int SACp_pinl_46914__icc_4632__sz = 1;
    const int SACp_pinl_46914__icc_4632__dim = 1;




    int * SACp_pinl_46912__icc_4627;
    SAC_array_descriptor_t SACp_pinl_46912__icc_4627__desc = 
# 3323 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3323 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46912__icc_4627__sz = 0;
    int SACp_pinl_46912__icc_4627__dim = 0;




    int * SACp_pinl_46911__icc_4626;
    SAC_array_descriptor_t SACp_pinl_46911__icc_4626__desc = 
# 3331 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3331 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46911__icc_4626__shp0 = 1;
    const int SACp_pinl_46911__icc_4626__sz = 1;
    const int SACp_pinl_46911__icc_4626__dim = 1;




    int * SACp_pinl_46910__emal_43253__cwc_838;
    SAC_array_descriptor_t SACp_pinl_46910__emal_43253__cwc_838__desc = 
# 3340 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3340 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46910__emal_43253__cwc_838__shp0;
    int SACp_pinl_46910__emal_43253__cwc_838__sz;
    const int SACp_pinl_46910__emal_43253__cwc_838__dim = 1;




    int * SACp_pinl_46909__emal_43252__cwc_841;
    SAC_array_descriptor_t SACp_pinl_46909__emal_43252__cwc_841__desc = 
# 3349 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3349 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46909__emal_43252__cwc_841__shp0 = 1;
    const int SACp_pinl_46909__emal_43252__cwc_841__sz = 1;
    const int SACp_pinl_46909__emal_43252__cwc_841__dim = 1;




    
# 3357 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3357 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46908__emal_43251__icc_4616_pred;
   
   




    int * SACp_pinl_46907__emal_43250__ivesplit_42413;
    SAC_array_descriptor_t SACp_pinl_46907__emal_43250__ivesplit_42413__desc = 
# 3365 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3365 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46907__emal_43250__ivesplit_42413__shp0;
    int SACp_pinl_46907__emal_43250__ivesplit_42413__sz;
    const int SACp_pinl_46907__emal_43250__ivesplit_42413__dim = 1;




    int SACp_pinl_46906__emal_43249__ivesli_42461;
   
   




    int SACp_pinl_46905__emal_43248__icc_4619;
   
   




    
# 3387 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3387 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46904__emal_43247__cwc_844;
   
   




    int * SACp_pinl_46901__idc_4622;
    SAC_array_descriptor_t SACp_pinl_46901__idc_4622__desc = 
# 3395 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3395 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46901__idc_4622__shp0 = 1;
    const int SACp_pinl_46901__idc_4622__sz = 1;
    const int SACp_pinl_46901__idc_4622__dim = 1;




    int * SACp_pinl_46895__icc_4618;
    SAC_array_descriptor_t SACp_pinl_46895__icc_4618__desc = 
# 3404 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3404 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46895__icc_4618__sz = 0;
    int SACp_pinl_46895__icc_4618__dim = 0;




    int * SACp_pinl_46894__icc_4617;
    SAC_array_descriptor_t SACp_pinl_46894__icc_4617__desc = 
# 3412 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3412 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46894__icc_4617__shp0 = 1;
    const int SACp_pinl_46894__icc_4617__sz = 1;
    const int SACp_pinl_46894__icc_4617__dim = 1;




    
# 3420 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3420 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46893__emal_43246__cwc_847;
   
   




    int * SACp_pinl_46892__emal_43245__cwc_849;
    SAC_array_descriptor_t SACp_pinl_46892__emal_43245__cwc_849__desc = 
# 3428 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3428 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46892__emal_43245__cwc_849__shp0;
    int SACp_pinl_46892__emal_43245__cwc_849__sz;
    const int SACp_pinl_46892__emal_43245__cwc_849__dim = 1;




    int * SACp_pinl_46891__emal_43244__cwc_852;
    SAC_array_descriptor_t SACp_pinl_46891__emal_43244__cwc_852__desc = 
# 3437 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3437 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46891__emal_43244__cwc_852__shp0 = 1;
    const int SACp_pinl_46891__emal_43244__cwc_852__sz = 1;
    const int SACp_pinl_46891__emal_43244__cwc_852__dim = 1;




    
# 3445 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3445 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46890__emal_43243__icc_4598_pred;
   
   




    int * SACp_pinl_46889__emal_43242__ivesplit_42409;
    SAC_array_descriptor_t SACp_pinl_46889__emal_43242__ivesplit_42409__desc = 
# 3453 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3453 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46889__emal_43242__ivesplit_42409__shp0;
    int SACp_pinl_46889__emal_43242__ivesplit_42409__sz;
    const int SACp_pinl_46889__emal_43242__ivesplit_42409__dim = 1;




    int SACp_pinl_46888__emal_43241__ivesli_42460;
   
   




    int SACp_pinl_46887__emal_43240__icc_4601;
   
   




    
# 3475 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3475 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46886__emal_43239__cwc_855;
   
   




    int * SACp_pinl_46885__emal_43238__cwc_857;
    SAC_array_descriptor_t SACp_pinl_46885__emal_43238__cwc_857__desc = 
# 3483 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3483 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46885__emal_43238__cwc_857__shp0 = 1;
    const int SACp_pinl_46885__emal_43238__cwc_857__sz = 1;
    const int SACp_pinl_46885__emal_43238__cwc_857__dim = 1;




    
# 3491 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3491 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46884__emal_43237__icc_4604_pred;
   
   




    int * SACp_pinl_46883__emal_43236__ivesplit_42411;
    SAC_array_descriptor_t SACp_pinl_46883__emal_43236__ivesplit_42411__desc = 
# 3499 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3499 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46883__emal_43236__ivesplit_42411__shp0;
    int SACp_pinl_46883__emal_43236__ivesplit_42411__sz;
    const int SACp_pinl_46883__emal_43236__ivesplit_42411__dim = 1;




    int SACp_pinl_46882__emal_43235__ivesli_42459;
   
   




    int SACp_pinl_46881__emal_43234__icc_4607;
   
   




    
# 3521 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3521 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46880__emal_43233__cwc_860;
   
   




    int * SACp_pinl_46874__idc_4613;
    SAC_array_descriptor_t SACp_pinl_46874__idc_4613__desc = 
# 3529 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3529 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46874__idc_4613__shp0 = 1;
    const int SACp_pinl_46874__idc_4613__sz = 1;
    const int SACp_pinl_46874__idc_4613__dim = 1;




    int * SACp_pinl_46872__idc_4610;
    SAC_array_descriptor_t SACp_pinl_46872__idc_4610__desc = 
# 3538 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3538 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46872__idc_4610__shp0 = 1;
    const int SACp_pinl_46872__idc_4610__sz = 1;
    const int SACp_pinl_46872__idc_4610__dim = 1;




    int * SACp_pinl_46862__icc_4606;
    SAC_array_descriptor_t SACp_pinl_46862__icc_4606__desc = 
# 3547 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3547 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46862__icc_4606__sz = 0;
    int SACp_pinl_46862__icc_4606__dim = 0;




    int * SACp_pinl_46861__icc_4605;
    SAC_array_descriptor_t SACp_pinl_46861__icc_4605__desc = 
# 3555 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3555 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46861__icc_4605__shp0 = 1;
    const int SACp_pinl_46861__icc_4605__sz = 1;
    const int SACp_pinl_46861__icc_4605__dim = 1;




    int * SACp_pinl_46859__icc_4600;
    SAC_array_descriptor_t SACp_pinl_46859__icc_4600__desc = 
# 3564 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3564 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46859__icc_4600__sz = 0;
    int SACp_pinl_46859__icc_4600__dim = 0;




    int * SACp_pinl_46858__icc_4599;
    SAC_array_descriptor_t SACp_pinl_46858__icc_4599__desc = 
# 3572 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3572 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46858__icc_4599__shp0 = 1;
    const int SACp_pinl_46858__icc_4599__sz = 1;
    const int SACp_pinl_46858__icc_4599__dim = 1;




    int SACp_pinl_46857__emal_43209__cwc_806;
   
   




    
# 3587 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3587 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46856__emal_43208__cwc_833;
   
   




    int SACp_pinl_46855__emal_43207__cwc_836;
   
   




    
# 3601 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3601 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46854__emal_43206__cwc_863;
   
   




    int SACp_pinl_46849__emal_43183__cwc_776;
   
   




    
# 3615 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3615 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46848__emal_43182__cwc_803;
   
   




    int * SACp_pinl_46847__emal_43181__cwc_834;
    SAC_array_descriptor_t SACp_pinl_46847__emal_43181__cwc_834__desc = 
# 3623 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3623 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46847__emal_43181__cwc_834__shp0;
    int SACp_pinl_46847__emal_43181__cwc_834__sz;
    const int SACp_pinl_46847__emal_43181__cwc_834__dim = 1;




    int * SACp_pinl_46846__emal_43180__cwc_865;
    SAC_array_descriptor_t SACp_pinl_46846__emal_43180__cwc_865__desc = 
# 3632 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3632 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46846__emal_43180__cwc_865__shp0 = 1;
    const int SACp_pinl_46846__emal_43180__cwc_865__sz = 1;
    const int SACp_pinl_46846__emal_43180__cwc_865__dim = 1;




    
# 3640 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3640 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46845__emal_43179__icc_4580_pred;
   
   




    int * SACp_pinl_46844__emal_43178__ivesplit_42393;
    SAC_array_descriptor_t SACp_pinl_46844__emal_43178__ivesplit_42393__desc = 
# 3648 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3648 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46844__emal_43178__ivesplit_42393__shp0;
    int SACp_pinl_46844__emal_43178__ivesplit_42393__sz;
    const int SACp_pinl_46844__emal_43178__ivesplit_42393__dim = 1;




    int SACp_pinl_46843__emal_43177__ivesli_42452;
   
   




    int SACp_pinl_46842__emal_43176__icc_4583;
   
   




    
# 3670 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3670 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46841__emal_43175__cwc_868;
   
   




    int * SACp_pinl_46840__emal_43174__cwc_870;
    SAC_array_descriptor_t SACp_pinl_46840__emal_43174__cwc_870__desc = 
# 3678 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3678 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46840__emal_43174__cwc_870__shp0 = 1;
    const int SACp_pinl_46840__emal_43174__cwc_870__sz = 1;
    const int SACp_pinl_46840__emal_43174__cwc_870__dim = 1;




    
# 3686 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3686 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46839__emal_43173__icc_4586_pred;
   
   




    int * SACp_pinl_46838__emal_43172__ivesplit_42395;
    SAC_array_descriptor_t SACp_pinl_46838__emal_43172__ivesplit_42395__desc = 
# 3694 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3694 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46838__emal_43172__ivesplit_42395__shp0;
    int SACp_pinl_46838__emal_43172__ivesplit_42395__sz;
    const int SACp_pinl_46838__emal_43172__ivesplit_42395__dim = 1;




    int SACp_pinl_46837__emal_43171__ivesli_42451;
   
   




    int SACp_pinl_46836__emal_43170__icc_4589;
   
   




    
# 3716 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3716 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46835__emal_43169__cwc_873;
   
   




    int * SACp_pinl_46829__idc_4595;
    SAC_array_descriptor_t SACp_pinl_46829__idc_4595__desc = 
# 3724 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3724 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46829__idc_4595__shp0 = 1;
    const int SACp_pinl_46829__idc_4595__sz = 1;
    const int SACp_pinl_46829__idc_4595__dim = 1;




    int * SACp_pinl_46827__idc_4592;
    SAC_array_descriptor_t SACp_pinl_46827__idc_4592__desc = 
# 3733 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3733 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46827__idc_4592__shp0 = 1;
    const int SACp_pinl_46827__idc_4592__sz = 1;
    const int SACp_pinl_46827__idc_4592__dim = 1;




    int * SACp_pinl_46816__icc_4588;
    SAC_array_descriptor_t SACp_pinl_46816__icc_4588__desc = 
# 3742 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3742 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46816__icc_4588__sz = 0;
    int SACp_pinl_46816__icc_4588__dim = 0;




    int * SACp_pinl_46815__icc_4587;
    SAC_array_descriptor_t SACp_pinl_46815__icc_4587__desc = 
# 3750 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3750 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46815__icc_4587__shp0 = 1;
    const int SACp_pinl_46815__icc_4587__sz = 1;
    const int SACp_pinl_46815__icc_4587__dim = 1;




    int * SACp_pinl_46813__icc_4582;
    SAC_array_descriptor_t SACp_pinl_46813__icc_4582__desc = 
# 3759 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3759 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46813__icc_4582__sz = 0;
    int SACp_pinl_46813__icc_4582__dim = 0;




    int * SACp_pinl_46812__icc_4581;
    SAC_array_descriptor_t SACp_pinl_46812__icc_4581__desc = 
# 3767 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3767 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46812__icc_4581__shp0 = 1;
    const int SACp_pinl_46812__icc_4581__sz = 1;
    const int SACp_pinl_46812__icc_4581__dim = 1;




    int * SACp_pinl_46811__emal_43271__cwc_880;
    SAC_array_descriptor_t SACp_pinl_46811__emal_43271__cwc_880__desc = 
# 3776 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3776 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46811__emal_43271__cwc_880__shp0;
    int SACp_pinl_46811__emal_43271__cwc_880__sz;
    const int SACp_pinl_46811__emal_43271__cwc_880__dim = 1;




    int * SACp_pinl_46810__emal_43270__cwc_883;
    SAC_array_descriptor_t SACp_pinl_46810__emal_43270__cwc_883__desc = 
# 3785 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3785 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46810__emal_43270__cwc_883__shp0 = 1;
    const int SACp_pinl_46810__emal_43270__cwc_883__sz = 1;
    const int SACp_pinl_46810__emal_43270__cwc_883__dim = 1;




    
# 3793 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3793 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46809__emal_43269__icc_4562_pred;
   
   




    int * SACp_pinl_46808__emal_43268__ivesplit_42415;
    SAC_array_descriptor_t SACp_pinl_46808__emal_43268__ivesplit_42415__desc = 
# 3801 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3801 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46808__emal_43268__ivesplit_42415__shp0;
    int SACp_pinl_46808__emal_43268__ivesplit_42415__sz;
    const int SACp_pinl_46808__emal_43268__ivesplit_42415__dim = 1;




    int SACp_pinl_46807__emal_43267__ivesli_42463;
   
   




    int SACp_pinl_46806__emal_43266__icc_4565;
   
   




    
# 3823 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3823 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46805__emal_43265__cwc_886;
   
   




    int * SACp_pinl_46804__emal_43264__cwc_888;
    SAC_array_descriptor_t SACp_pinl_46804__emal_43264__cwc_888__desc = 
# 3831 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3831 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46804__emal_43264__cwc_888__shp0 = 1;
    const int SACp_pinl_46804__emal_43264__cwc_888__sz = 1;
    const int SACp_pinl_46804__emal_43264__cwc_888__dim = 1;




    
# 3839 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3839 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46803__emal_43263__icc_4568_pred;
   
   




    int * SACp_pinl_46802__emal_43262__ivesplit_42417;
    SAC_array_descriptor_t SACp_pinl_46802__emal_43262__ivesplit_42417__desc = 
# 3847 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3847 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46802__emal_43262__ivesplit_42417__shp0;
    int SACp_pinl_46802__emal_43262__ivesplit_42417__sz;
    const int SACp_pinl_46802__emal_43262__ivesplit_42417__dim = 1;




    int SACp_pinl_46801__emal_43261__ivesli_42462;
   
   




    int SACp_pinl_46800__emal_43260__icc_4571;
   
   




    
# 3869 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3869 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46799__emal_43259__cwc_891;
   
   




    int * SACp_pinl_46793__idc_4577;
    SAC_array_descriptor_t SACp_pinl_46793__idc_4577__desc = 
# 3877 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3877 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46793__idc_4577__shp0 = 1;
    const int SACp_pinl_46793__idc_4577__sz = 1;
    const int SACp_pinl_46793__idc_4577__dim = 1;




    int * SACp_pinl_46791__idc_4574;
    SAC_array_descriptor_t SACp_pinl_46791__idc_4574__desc = 
# 3886 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3886 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46791__idc_4574__shp0 = 1;
    const int SACp_pinl_46791__idc_4574__sz = 1;
    const int SACp_pinl_46791__idc_4574__dim = 1;




    int * SACp_pinl_46782__icc_4570;
    SAC_array_descriptor_t SACp_pinl_46782__icc_4570__desc = 
# 3895 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3895 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46782__icc_4570__sz = 0;
    int SACp_pinl_46782__icc_4570__dim = 0;




    int * SACp_pinl_46781__icc_4569;
    SAC_array_descriptor_t SACp_pinl_46781__icc_4569__desc = 
# 3903 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3903 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46781__icc_4569__shp0 = 1;
    const int SACp_pinl_46781__icc_4569__sz = 1;
    const int SACp_pinl_46781__icc_4569__dim = 1;




    int * SACp_pinl_46779__icc_4564;
    SAC_array_descriptor_t SACp_pinl_46779__icc_4564__desc = 
# 3912 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3912 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46779__icc_4564__sz = 0;
    int SACp_pinl_46779__icc_4564__dim = 0;




    int * SACp_pinl_46778__icc_4563;
    SAC_array_descriptor_t SACp_pinl_46778__icc_4563__desc = 
# 3920 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3920 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46778__icc_4563__shp0 = 1;
    const int SACp_pinl_46778__icc_4563__sz = 1;
    const int SACp_pinl_46778__icc_4563__dim = 1;




    int * SACp_pinl_46777__emal_43285__cwc_899;
    SAC_array_descriptor_t SACp_pinl_46777__emal_43285__cwc_899__desc = 
# 3929 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3929 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46777__emal_43285__cwc_899__shp0;
    int SACp_pinl_46777__emal_43285__cwc_899__sz;
    const int SACp_pinl_46777__emal_43285__cwc_899__dim = 1;




    int * SACp_pinl_46776__emal_43284__cwc_902;
    SAC_array_descriptor_t SACp_pinl_46776__emal_43284__cwc_902__desc = 
# 3938 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3938 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46776__emal_43284__cwc_902__shp0 = 1;
    const int SACp_pinl_46776__emal_43284__cwc_902__sz = 1;
    const int SACp_pinl_46776__emal_43284__cwc_902__dim = 1;




    
# 3946 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3946 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46775__emal_43283__icc_4544_pred;
   
   




    int * SACp_pinl_46774__emal_43282__ivesplit_42419;
    SAC_array_descriptor_t SACp_pinl_46774__emal_43282__ivesplit_42419__desc = 
# 3954 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3954 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46774__emal_43282__ivesplit_42419__shp0;
    int SACp_pinl_46774__emal_43282__ivesplit_42419__sz;
    const int SACp_pinl_46774__emal_43282__ivesplit_42419__dim = 1;




    int SACp_pinl_46773__emal_43281__ivesli_42465;
   
   




    int SACp_pinl_46772__emal_43280__icc_4547;
   
   




    
# 3976 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3976 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46771__emal_43279__cwc_905;
   
   




    int * SACp_pinl_46770__emal_43278__cwc_907;
    SAC_array_descriptor_t SACp_pinl_46770__emal_43278__cwc_907__desc = 
# 3984 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3984 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46770__emal_43278__cwc_907__shp0 = 1;
    const int SACp_pinl_46770__emal_43278__cwc_907__sz = 1;
    const int SACp_pinl_46770__emal_43278__cwc_907__dim = 1;




    
# 3992 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3992 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46769__emal_43277__icc_4550_pred;
   
   




    int * SACp_pinl_46768__emal_43276__ivesplit_42421;
    SAC_array_descriptor_t SACp_pinl_46768__emal_43276__ivesplit_42421__desc = 
# 4000 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4000 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46768__emal_43276__ivesplit_42421__shp0;
    int SACp_pinl_46768__emal_43276__ivesplit_42421__sz;
    const int SACp_pinl_46768__emal_43276__ivesplit_42421__dim = 1;




    int SACp_pinl_46767__emal_43275__ivesli_42464;
   
   




    int SACp_pinl_46766__emal_43274__icc_4553;
   
   




    
# 4022 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4022 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46765__emal_43273__cwc_910;
   
   




    int * SACp_pinl_46759__idc_4559;
    SAC_array_descriptor_t SACp_pinl_46759__idc_4559__desc = 
# 4030 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4030 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46759__idc_4559__shp0 = 1;
    const int SACp_pinl_46759__idc_4559__sz = 1;
    const int SACp_pinl_46759__idc_4559__dim = 1;




    int * SACp_pinl_46757__idc_4556;
    SAC_array_descriptor_t SACp_pinl_46757__idc_4556__desc = 
# 4039 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4039 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46757__idc_4556__shp0 = 1;
    const int SACp_pinl_46757__idc_4556__sz = 1;
    const int SACp_pinl_46757__idc_4556__dim = 1;




    int * SACp_pinl_46748__icc_4552;
    SAC_array_descriptor_t SACp_pinl_46748__icc_4552__desc = 
# 4048 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4048 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46748__icc_4552__sz = 0;
    int SACp_pinl_46748__icc_4552__dim = 0;




    int * SACp_pinl_46747__icc_4551;
    SAC_array_descriptor_t SACp_pinl_46747__icc_4551__desc = 
# 4056 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4056 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46747__icc_4551__shp0 = 1;
    const int SACp_pinl_46747__icc_4551__sz = 1;
    const int SACp_pinl_46747__icc_4551__dim = 1;




    int * SACp_pinl_46745__icc_4546;
    SAC_array_descriptor_t SACp_pinl_46745__icc_4546__desc = 
# 4065 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4065 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46745__icc_4546__sz = 0;
    int SACp_pinl_46745__icc_4546__dim = 0;




    int * SACp_pinl_46744__icc_4545;
    SAC_array_descriptor_t SACp_pinl_46744__icc_4545__desc = 
# 4073 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4073 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46744__icc_4545__shp0 = 1;
    const int SACp_pinl_46744__icc_4545__sz = 1;
    const int SACp_pinl_46744__icc_4545__dim = 1;




    int SACp_pinl_46743__emal_43257__cwc_878;
   
   




    
# 4088 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4088 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46742__emal_43256__cwc_894;
   
   




    int SACp_pinl_46741__emal_43255__cwc_897;
   
   




    
# 4102 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4102 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46740__emal_43254__cwc_913;
   
   




    
# 4109 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4109 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46735__emal_43167__cwc_876;
   
   




    int * SACp_pinl_46734__emal_43166__cwc_895;
    SAC_array_descriptor_t SACp_pinl_46734__emal_43166__cwc_895__desc = 
# 4117 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4117 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46734__emal_43166__cwc_895__shp0;
    int SACp_pinl_46734__emal_43166__cwc_895__sz;
    const int SACp_pinl_46734__emal_43166__cwc_895__dim = 1;




    int * SACp_pinl_46733__emal_43165__cwc_915;
    SAC_array_descriptor_t SACp_pinl_46733__emal_43165__cwc_915__desc = 
# 4126 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4126 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46733__emal_43165__cwc_915__shp0 = 1;
    const int SACp_pinl_46733__emal_43165__cwc_915__sz = 1;
    const int SACp_pinl_46733__emal_43165__cwc_915__dim = 1;




    
# 4134 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4134 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46732__emal_43164__icc_4535_pred;
   
   




    int * SACp_pinl_46731__emal_43163__ivesplit_42391;
    SAC_array_descriptor_t SACp_pinl_46731__emal_43163__ivesplit_42391__desc = 
# 4142 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4142 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46731__emal_43163__ivesplit_42391__shp0;
    int SACp_pinl_46731__emal_43163__ivesplit_42391__sz;
    const int SACp_pinl_46731__emal_43163__ivesplit_42391__dim = 1;




    int SACp_pinl_46730__emal_43162__ivesli_42450;
   
   




    int SACp_pinl_46729__emal_43161__icc_4538;
   
   




    
# 4164 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4164 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46728__emal_43160__cwc_918;
   
   




    int * SACp_pinl_46725__idc_4541;
    SAC_array_descriptor_t SACp_pinl_46725__idc_4541__desc = 
# 4172 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4172 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46725__idc_4541__shp0 = 1;
    const int SACp_pinl_46725__idc_4541__sz = 1;
    const int SACp_pinl_46725__idc_4541__dim = 1;




    int * SACp_pinl_46718__icc_4537;
    SAC_array_descriptor_t SACp_pinl_46718__icc_4537__desc = 
# 4181 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4181 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46718__icc_4537__sz = 0;
    int SACp_pinl_46718__icc_4537__dim = 0;




    int * SACp_pinl_46717__icc_4536;
    SAC_array_descriptor_t SACp_pinl_46717__icc_4536__desc = 
# 4189 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4189 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46717__icc_4536__shp0 = 1;
    const int SACp_pinl_46717__icc_4536__sz = 1;
    const int SACp_pinl_46717__icc_4536__dim = 1;




    int * SACp_pinl_46716__emal_43307__cwc_926;
    SAC_array_descriptor_t SACp_pinl_46716__emal_43307__cwc_926__desc = 
# 4198 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4198 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46716__emal_43307__cwc_926__shp0;
    int SACp_pinl_46716__emal_43307__cwc_926__sz;
    const int SACp_pinl_46716__emal_43307__cwc_926__dim = 1;




    int * SACp_pinl_46715__emal_43306__cwc_929;
    SAC_array_descriptor_t SACp_pinl_46715__emal_43306__cwc_929__desc = 
# 4207 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4207 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46715__emal_43306__cwc_929__shp0 = 1;
    const int SACp_pinl_46715__emal_43306__cwc_929__sz = 1;
    const int SACp_pinl_46715__emal_43306__cwc_929__dim = 1;




    
# 4215 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4215 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46714__emal_43305__icc_4526_pred;
   
   




    int * SACp_pinl_46713__emal_43304__ivesplit_42427;
    SAC_array_descriptor_t SACp_pinl_46713__emal_43304__ivesplit_42427__desc = 
# 4223 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4223 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46713__emal_43304__ivesplit_42427__shp0;
    int SACp_pinl_46713__emal_43304__ivesplit_42427__sz;
    const int SACp_pinl_46713__emal_43304__ivesplit_42427__dim = 1;




    int SACp_pinl_46712__emal_43303__ivesli_42468;
   
   




    int SACp_pinl_46711__emal_43302__icc_4529;
   
   




    
# 4245 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4245 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46710__emal_43301__cwc_932;
   
   




    int * SACp_pinl_46707__idc_4532;
    SAC_array_descriptor_t SACp_pinl_46707__idc_4532__desc = 
# 4253 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4253 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46707__idc_4532__shp0 = 1;
    const int SACp_pinl_46707__idc_4532__sz = 1;
    const int SACp_pinl_46707__idc_4532__dim = 1;




    int * SACp_pinl_46701__icc_4528;
    SAC_array_descriptor_t SACp_pinl_46701__icc_4528__desc = 
# 4262 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4262 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46701__icc_4528__sz = 0;
    int SACp_pinl_46701__icc_4528__dim = 0;




    int * SACp_pinl_46700__icc_4527;
    SAC_array_descriptor_t SACp_pinl_46700__icc_4527__desc = 
# 4270 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4270 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46700__icc_4527__shp0 = 1;
    const int SACp_pinl_46700__icc_4527__sz = 1;
    const int SACp_pinl_46700__icc_4527__dim = 1;




    int SACp_pinl_46699__emal_43308__asd_43080_a;
   
   




    
# 4285 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4285 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46697__emal_43300__cwc_935;
   
   




    int * SACp_pinl_46696__emal_43299__cwc_937;
    SAC_array_descriptor_t SACp_pinl_46696__emal_43299__cwc_937__desc = 
# 4293 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4293 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46696__emal_43299__cwc_937__shp0;
    int SACp_pinl_46696__emal_43299__cwc_937__sz;
    const int SACp_pinl_46696__emal_43299__cwc_937__dim = 1;




    int * SACp_pinl_46695__emal_43298__cwc_940;
    SAC_array_descriptor_t SACp_pinl_46695__emal_43298__cwc_940__desc = 
# 4302 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4302 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46695__emal_43298__cwc_940__shp0 = 1;
    const int SACp_pinl_46695__emal_43298__cwc_940__sz = 1;
    const int SACp_pinl_46695__emal_43298__cwc_940__dim = 1;




    
# 4310 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4310 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46694__emal_43297__icc_4508_pred;
   
   




    int * SACp_pinl_46693__emal_43296__ivesplit_42423;
    SAC_array_descriptor_t SACp_pinl_46693__emal_43296__ivesplit_42423__desc = 
# 4318 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4318 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46693__emal_43296__ivesplit_42423__shp0;
    int SACp_pinl_46693__emal_43296__ivesplit_42423__sz;
    const int SACp_pinl_46693__emal_43296__ivesplit_42423__dim = 1;




    int SACp_pinl_46692__emal_43295__ivesli_42467;
   
   




    int SACp_pinl_46691__emal_43294__icc_4511;
   
   




    
# 4340 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4340 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46690__emal_43293__cwc_943;
   
   




    int * SACp_pinl_46689__emal_43292__cwc_945;
    SAC_array_descriptor_t SACp_pinl_46689__emal_43292__cwc_945__desc = 
# 4348 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4348 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46689__emal_43292__cwc_945__shp0 = 1;
    const int SACp_pinl_46689__emal_43292__cwc_945__sz = 1;
    const int SACp_pinl_46689__emal_43292__cwc_945__dim = 1;




    
# 4356 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4356 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46688__emal_43291__icc_4514_pred;
   
   




    int * SACp_pinl_46687__emal_43290__ivesplit_42425;
    SAC_array_descriptor_t SACp_pinl_46687__emal_43290__ivesplit_42425__desc = 
# 4364 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4364 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46687__emal_43290__ivesplit_42425__shp0;
    int SACp_pinl_46687__emal_43290__ivesplit_42425__sz;
    const int SACp_pinl_46687__emal_43290__ivesplit_42425__dim = 1;




    int SACp_pinl_46686__emal_43289__ivesli_42466;
   
   




    int SACp_pinl_46685__emal_43288__icc_4517;
   
   




    
# 4386 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4386 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46684__emal_43287__cwc_948;
   
   




    int * SACp_pinl_46678__idc_4523;
    SAC_array_descriptor_t SACp_pinl_46678__idc_4523__desc = 
# 4394 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4394 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46678__idc_4523__shp0 = 1;
    const int SACp_pinl_46678__idc_4523__sz = 1;
    const int SACp_pinl_46678__idc_4523__dim = 1;




    int * SACp_pinl_46676__idc_4520;
    SAC_array_descriptor_t SACp_pinl_46676__idc_4520__desc = 
# 4403 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4403 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46676__idc_4520__shp0 = 1;
    const int SACp_pinl_46676__idc_4520__sz = 1;
    const int SACp_pinl_46676__idc_4520__dim = 1;




    int * SACp_pinl_46666__icc_4516;
    SAC_array_descriptor_t SACp_pinl_46666__icc_4516__desc = 
# 4412 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4412 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46666__icc_4516__sz = 0;
    int SACp_pinl_46666__icc_4516__dim = 0;




    int * SACp_pinl_46665__icc_4515;
    SAC_array_descriptor_t SACp_pinl_46665__icc_4515__desc = 
# 4420 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4420 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46665__icc_4515__shp0 = 1;
    const int SACp_pinl_46665__icc_4515__sz = 1;
    const int SACp_pinl_46665__icc_4515__dim = 1;




    int * SACp_pinl_46663__icc_4510;
    SAC_array_descriptor_t SACp_pinl_46663__icc_4510__desc = 
# 4429 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4429 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_46663__icc_4510__sz = 0;
    int SACp_pinl_46663__icc_4510__dim = 0;




    int * SACp_pinl_46662__icc_4509;
    SAC_array_descriptor_t SACp_pinl_46662__icc_4509__desc = 
# 4437 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4437 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_46662__icc_4509__shp0 = 1;
    const int SACp_pinl_46662__icc_4509__sz = 1;
    const int SACp_pinl_46662__icc_4509__dim = 1;




    int SACp_pinl_46661__emal_43159__cwc_804;
   
   




    
# 4452 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4452 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46660__emal_43158__cwc_921;
   
   




    int SACp_pinl_46659__emal_43157__cwc_924;
   
   




    
# 4466 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4466 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_46658__emal_43156__cwc_951;
   
   




    int SACp_emal_43155__cwc_922;
   
   




    
# 4480 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4480 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43154__cwc_953;
   
   




    int * SACp_cwc_774;
    SAC_array_descriptor_t SACp_cwc_774__desc = 
# 4488 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 4488 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_cwc_774__sz = 0;
    int SACp_cwc_774__dim = 0;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_43155__cwc_922 = SACl_a__dim; }; }
    ; ; { SACp_emal_43154__cwc_953 = (SACp_emal_43155__cwc_922) == (0); };
    { ; ; }
    if (SACp_emal_43154__cwc_953)
    {
      { ; ; }
      { { SACp_pinl_46659__emal_43157__cwc_924 = SACl_b__dim; }; }
      ; ; { SACp_pinl_46658__emal_43156__cwc_951 = (SACp_pinl_46659__emal_43157__cwc_924) == (2); };
      if (SACp_pinl_46658__emal_43156__cwc_951)
      {
        { ; ; }
        { ; ; }
        { { if (!((1 == SACp_pinl_46696__emal_43299__cwc_937__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46696__emal_43299__cwc_937"); }; { if ((((6 + (SACp_pinl_46696__emal_43299__cwc_937__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46696__emal_43299__cwc_937__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46696__emal_43299__cwc_937__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46696__emal_43299__cwc_937__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46696__emal_43299__cwc_937__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46696__emal_43299__cwc_937__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46696__emal_43299__cwc_937__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46696__emal_43299__cwc_937__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46696__emal_43299__cwc_937__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46696__emal_43299__cwc_937__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46696__emal_43299__cwc_937__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46696__emal_43299__cwc_937__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46696__emal_43299__cwc_937__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46696__emal_43299__cwc_937__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46696__emal_43299__cwc_937__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46696__emal_43299__cwc_937__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46696__emal_43299__cwc_937__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46696__emal_43299__cwc_937__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46696__emal_43299__cwc_937__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46696__emal_43299__cwc_937__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_46696__emal_43299__cwc_937__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        {

          int SAC_size = 1;
          SAC_size *=
          SACp_pinl_46696__emal_43299__cwc_937__shp0 =
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46696__emal_43299__cwc_937__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46696__emal_43299__cwc_937__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46696__emal_43299__cwc_937__sz = SAC_size;
          if (!((SACp_pinl_46696__emal_43299__cwc_937__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 4533 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 4533 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4533 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 4533 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4533 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 4533 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 4533 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 4533, __extension__ __PRETTY_FUNCTION__); }))
# 4533 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_46696__emal_43299__cwc_937 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46696__emal_43299__cwc_937__sz * sizeof (*SACp_pinl_46696__emal_43299__cwc_937)); break; case SAC_HM_multi_threaded: SACp_pinl_46696__emal_43299__cwc_937 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46696__emal_43299__cwc_937__sz * sizeof (*SACp_pinl_46696__emal_43299__cwc_937), 0); break; case SAC_HM_any_threaded: SACp_pinl_46696__emal_43299__cwc_937 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46696__emal_43299__cwc_937__sz * sizeof (*SACp_pinl_46696__emal_43299__cwc_937), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46696__emal_43299__cwc_937__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46696__emal_43299__cwc_937__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46696__emal_43299__cwc_937__desc) & (-1 ^ (3))))[1]) = 0; } }



       
        for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
          { SACp_pinl_46696__emal_43299__cwc_937[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
        }

        { { if (!((1 == SACp_pinl_46695__emal_43298__cwc_940__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46695__emal_43298__cwc_940"); }; { { if ((((SACp_pinl_46695__emal_43298__cwc_940__sz * sizeof (*SACp_pinl_46695__emal_43298__cwc_940)) + ((6 + (SACp_pinl_46695__emal_43298__cwc_940__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46695__emal_43298__cwc_940__sz * sizeof (*SACp_pinl_46695__emal_43298__cwc_940)) + ((6 + (SACp_pinl_46695__emal_43298__cwc_940__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46695__emal_43298__cwc_940__sz * sizeof (*SACp_pinl_46695__emal_43298__cwc_940)) + ((6 + (SACp_pinl_46695__emal_43298__cwc_940__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46695__emal_43298__cwc_940 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46695__emal_43298__cwc_940 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46695__emal_43298__cwc_940__sz * sizeof (*SACp_pinl_46695__emal_43298__cwc_940)) + ((6 + (SACp_pinl_46695__emal_43298__cwc_940__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46695__emal_43298__cwc_940 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46695__emal_43298__cwc_940 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46695__emal_43298__cwc_940__sz * sizeof (*SACp_pinl_46695__emal_43298__cwc_940)) + ((6 + (SACp_pinl_46695__emal_43298__cwc_940__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46695__emal_43298__cwc_940__sz * sizeof (*SACp_pinl_46695__emal_43298__cwc_940)) + ((6 + (SACp_pinl_46695__emal_43298__cwc_940__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46695__emal_43298__cwc_940__sz * sizeof (*SACp_pinl_46695__emal_43298__cwc_940)) + ((6 + (SACp_pinl_46695__emal_43298__cwc_940__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46695__emal_43298__cwc_940__sz * sizeof (*SACp_pinl_46695__emal_43298__cwc_940)) + ((6 + (SACp_pinl_46695__emal_43298__cwc_940__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46695__emal_43298__cwc_940__sz * sizeof (*SACp_pinl_46695__emal_43298__cwc_940)) + ((6 + (SACp_pinl_46695__emal_43298__cwc_940__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46695__emal_43298__cwc_940 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46695__emal_43298__cwc_940 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46695__emal_43298__cwc_940 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46695__emal_43298__cwc_940 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46695__emal_43298__cwc_940__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46695__emal_43298__cwc_940, SACp_pinl_46695__emal_43298__cwc_940__sz * sizeof (*SACp_pinl_46695__emal_43298__cwc_940), ((6 + (SACp_pinl_46695__emal_43298__cwc_940__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46695__emal_43298__cwc_940__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46695__emal_43298__cwc_940__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46695__emal_43298__cwc_940__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_46695__emal_43298__cwc_940__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_46695__emal_43298__cwc_940__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_46695__emal_43298__cwc_940[0] = 0; }




        if ((SACp_pinl_46695__emal_43298__cwc_940__dim != 1) && (SACp_pinl_46695__emal_43298__cwc_940__shp0 != SACp_pinl_46696__emal_43299__cwc_937__dim)) {
          SACp_pinl_46694__emal_43297__icc_4508_pred = 0;
          SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46695__emal_43298__cwc_940""' with shape %s ""And `" "SACp_pinl_46696__emal_43299__cwc_937""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46695__emal_43298__cwc_940__desc), SAC_PrintShape (SACp_pinl_46696__emal_43299__cwc_937__desc));
        }
        else {
          int SAC_all = 1; if (0 || (( SACp_pinl_46695__emal_43298__cwc_940[0]) >= SACp_pinl_46696__emal_43299__cwc_937__shp0))
          {

            SAC_all = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46695__emal_43298__cwc_940""' with shape %s ""And `" "SACp_pinl_46696__emal_43299__cwc_937""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46695__emal_43298__cwc_940__desc), SAC_PrintShape (SACp_pinl_46696__emal_43299__cwc_937__desc));
          }
          SACp_pinl_46694__emal_43297__icc_4508_pred = SAC_all;
        }




        if (!((SACp_pinl_46676__idc_4520__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_46676__idc_4520__shp0 == SACp_pinl_46695__emal_43298__cwc_940__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        SACp_pinl_46676__idc_4520__desc = SACp_pinl_46695__emal_43298__cwc_940__desc;
        ;
        ;
        { SACp_pinl_46676__idc_4520 = SACp_pinl_46695__emal_43298__cwc_940; }

        if (!SACp_pinl_46694__emal_43297__icc_4508_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



        SACp_pinl_46663__icc_4510__desc = SACp_pinl_46696__emal_43299__cwc_937__desc;
        SACp_pinl_46663__icc_4510__sz = SACp_pinl_46696__emal_43299__cwc_937__sz;
        SACp_pinl_46663__icc_4510__dim = SACp_pinl_46696__emal_43299__cwc_937__dim;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46663__icc_4510__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46696__emal_43299__cwc_937__dim;
        { SACp_pinl_46663__icc_4510 = SACp_pinl_46696__emal_43299__cwc_937; }




        if (!((SACp_pinl_46662__icc_4509__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_46662__icc_4509__shp0 == SACp_pinl_46676__idc_4520__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        SACp_pinl_46662__icc_4509__desc = SACp_pinl_46676__idc_4520__desc;
        ;
        ;
        { SACp_pinl_46662__icc_4509 = SACp_pinl_46676__idc_4520; }

        { { if (!((1 == SACp_pinl_46693__emal_43296__ivesplit_42423__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46693__emal_43296__ivesplit_42423"); }; { if ((((6 + (SACp_pinl_46693__emal_43296__ivesplit_42423__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46693__emal_43296__ivesplit_42423__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46693__emal_43296__ivesplit_42423__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46693__emal_43296__ivesplit_42423__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46693__emal_43296__ivesplit_42423__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46693__emal_43296__ivesplit_42423__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46693__emal_43296__ivesplit_42423__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46693__emal_43296__ivesplit_42423__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46693__emal_43296__ivesplit_42423__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46693__emal_43296__ivesplit_42423__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46693__emal_43296__ivesplit_42423__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46693__emal_43296__ivesplit_42423__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46693__emal_43296__ivesplit_42423__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46693__emal_43296__ivesplit_42423__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46693__emal_43296__ivesplit_42423__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46693__emal_43296__ivesplit_42423__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46693__emal_43296__ivesplit_42423__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46693__emal_43296__ivesplit_42423__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46693__emal_43296__ivesplit_42423__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46693__emal_43296__ivesplit_42423__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_46693__emal_43296__ivesplit_42423__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        {

          int SAC_size = 1;
          SAC_size *=
          SACp_pinl_46693__emal_43296__ivesplit_42423__shp0 =
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46693__emal_43296__ivesplit_42423__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46663__icc_4510__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46693__emal_43296__ivesplit_42423__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46693__emal_43296__ivesplit_42423__sz = SAC_size;
          if (!((SACp_pinl_46693__emal_43296__ivesplit_42423__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 4618 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 4618 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4618 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 4618 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4618 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 4618 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 4618 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 4618, __extension__ __PRETTY_FUNCTION__); }))
# 4618 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_46693__emal_43296__ivesplit_42423 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46693__emal_43296__ivesplit_42423__sz * sizeof (*SACp_pinl_46693__emal_43296__ivesplit_42423)); break; case SAC_HM_multi_threaded: SACp_pinl_46693__emal_43296__ivesplit_42423 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46693__emal_43296__ivesplit_42423__sz * sizeof (*SACp_pinl_46693__emal_43296__ivesplit_42423), 0); break; case SAC_HM_any_threaded: SACp_pinl_46693__emal_43296__ivesplit_42423 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46693__emal_43296__ivesplit_42423__sz * sizeof (*SACp_pinl_46693__emal_43296__ivesplit_42423), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46693__emal_43296__ivesplit_42423__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46693__emal_43296__ivesplit_42423__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46693__emal_43296__ivesplit_42423__desc) & (-1 ^ (3))))[1]) = 0; } }



       
        for (int SAC_i = 0; SAC_i < SACp_pinl_46663__icc_4510__dim; SAC_i++) {
          { SACp_pinl_46693__emal_43296__ivesplit_42423[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46663__icc_4510__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
        }




        {
          int SAC_i, SAC_l;
          SAC_l = 0;
          SAC_l = ( SACp_pinl_46662__icc_4509[0]);
          for (SAC_i = (1); SAC_i < SACp_pinl_46693__emal_43296__ivesplit_42423__sz; SAC_i++)
          {

            SAC_l *= ( SACp_pinl_46693__emal_43296__ivesplit_42423[SAC_i]);
          }
          SACp_pinl_46692__emal_43295__ivesli_42467 = SAC_l;
        }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46662__icc_4509__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46662__icc_4509__sz * sizeof (*SACp_pinl_46662__icc_4509)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46662__icc_4509, ((((SAC_HM_header_t *)SACp_pinl_46662__icc_4509) - 1)->data1.arena)); } else { if (SACp_pinl_46662__icc_4509__sz * sizeof (*SACp_pinl_46662__icc_4509) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46662__icc_4509) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46662__icc_4509, ((((SAC_HM_header_t *)SACp_pinl_46662__icc_4509) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46662__icc_4509, ((((SAC_HM_header_t *)SACp_pinl_46662__icc_4509) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46662__icc_4509__sz * sizeof (*SACp_pinl_46662__icc_4509))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46662__icc_4509, ((((SAC_HM_header_t *)SACp_pinl_46662__icc_4509) - 1)->data1.arena)); } else { if (((((SACp_pinl_46662__icc_4509__sz * sizeof (*SACp_pinl_46662__icc_4509))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46662__icc_4509) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46662__icc_4509, ((((SAC_HM_header_t *)SACp_pinl_46662__icc_4509) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46662__icc_4509, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46662__icc_4509); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46662__icc_4509); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46662__icc_4509, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46662__icc_4509); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46662__icc_4509); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46662__icc_4509__desc) & (-1 ^ (3))))); } } } } else { } }
        { { free (SACp_pinl_46693__emal_43296__ivesplit_42423); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46693__emal_43296__ivesplit_42423__desc) & (-1 ^ (3))))); } } }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_46691__emal_43294__icc_4511 = ( SACp_pinl_46663__icc_4510[SACp_pinl_46692__emal_43295__ivesli_42467]); }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46663__icc_4510__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46663__icc_4510); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46663__icc_4510__desc) & (-1 ^ (3))))); } } } } else { } }
        { ; ; }
        if (!SACp_pinl_46694__emal_43297__icc_4508_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        ; ; { SACp_pinl_46690__emal_43293__cwc_943 = (SACp_pinl_46691__emal_43294__icc_4511) == (2); };
        { ; ; }
        { { if (!((1 == SACp_pinl_46689__emal_43292__cwc_945__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46689__emal_43292__cwc_945"); }; { { if ((((SACp_pinl_46689__emal_43292__cwc_945__sz * sizeof (*SACp_pinl_46689__emal_43292__cwc_945)) + ((6 + (SACp_pinl_46689__emal_43292__cwc_945__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46689__emal_43292__cwc_945__sz * sizeof (*SACp_pinl_46689__emal_43292__cwc_945)) + ((6 + (SACp_pinl_46689__emal_43292__cwc_945__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46689__emal_43292__cwc_945__sz * sizeof (*SACp_pinl_46689__emal_43292__cwc_945)) + ((6 + (SACp_pinl_46689__emal_43292__cwc_945__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46689__emal_43292__cwc_945 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46689__emal_43292__cwc_945 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46689__emal_43292__cwc_945__sz * sizeof (*SACp_pinl_46689__emal_43292__cwc_945)) + ((6 + (SACp_pinl_46689__emal_43292__cwc_945__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46689__emal_43292__cwc_945 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46689__emal_43292__cwc_945 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46689__emal_43292__cwc_945__sz * sizeof (*SACp_pinl_46689__emal_43292__cwc_945)) + ((6 + (SACp_pinl_46689__emal_43292__cwc_945__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46689__emal_43292__cwc_945__sz * sizeof (*SACp_pinl_46689__emal_43292__cwc_945)) + ((6 + (SACp_pinl_46689__emal_43292__cwc_945__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46689__emal_43292__cwc_945__sz * sizeof (*SACp_pinl_46689__emal_43292__cwc_945)) + ((6 + (SACp_pinl_46689__emal_43292__cwc_945__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46689__emal_43292__cwc_945__sz * sizeof (*SACp_pinl_46689__emal_43292__cwc_945)) + ((6 + (SACp_pinl_46689__emal_43292__cwc_945__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46689__emal_43292__cwc_945__sz * sizeof (*SACp_pinl_46689__emal_43292__cwc_945)) + ((6 + (SACp_pinl_46689__emal_43292__cwc_945__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46689__emal_43292__cwc_945 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46689__emal_43292__cwc_945 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46689__emal_43292__cwc_945 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46689__emal_43292__cwc_945 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46689__emal_43292__cwc_945__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46689__emal_43292__cwc_945, SACp_pinl_46689__emal_43292__cwc_945__sz * sizeof (*SACp_pinl_46689__emal_43292__cwc_945), ((6 + (SACp_pinl_46689__emal_43292__cwc_945__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46689__emal_43292__cwc_945__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46689__emal_43292__cwc_945__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46689__emal_43292__cwc_945__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_46689__emal_43292__cwc_945__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_46689__emal_43292__cwc_945__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_46689__emal_43292__cwc_945[0] = 1; }




        if ((SACp_pinl_46689__emal_43292__cwc_945__dim != 1) && (SACp_pinl_46689__emal_43292__cwc_945__shp0 != SACp_pinl_46696__emal_43299__cwc_937__dim)) {
          SACp_pinl_46688__emal_43291__icc_4514_pred = 0;
          SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46689__emal_43292__cwc_945""' with shape %s ""And `" "SACp_pinl_46696__emal_43299__cwc_937""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46689__emal_43292__cwc_945__desc), SAC_PrintShape (SACp_pinl_46696__emal_43299__cwc_937__desc));
        }
        else {
          int SAC_all = 1; if (0 || (( SACp_pinl_46689__emal_43292__cwc_945[0]) >= SACp_pinl_46696__emal_43299__cwc_937__shp0))
          {

            SAC_all = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46689__emal_43292__cwc_945""' with shape %s ""And `" "SACp_pinl_46696__emal_43299__cwc_937""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46689__emal_43292__cwc_945__desc), SAC_PrintShape (SACp_pinl_46696__emal_43299__cwc_937__desc));
          }
          SACp_pinl_46688__emal_43291__icc_4514_pred = SAC_all;
        }




        if (!((SACp_pinl_46678__idc_4523__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_46678__idc_4523__shp0 == SACp_pinl_46689__emal_43292__cwc_945__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        SACp_pinl_46678__idc_4523__desc = SACp_pinl_46689__emal_43292__cwc_945__desc;
        ;
        ;
        { SACp_pinl_46678__idc_4523 = SACp_pinl_46689__emal_43292__cwc_945; }

        if (!SACp_pinl_46688__emal_43291__icc_4514_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



        SACp_pinl_46666__icc_4516__desc = SACp_pinl_46696__emal_43299__cwc_937__desc;
        SACp_pinl_46666__icc_4516__sz = SACp_pinl_46696__emal_43299__cwc_937__sz;
        SACp_pinl_46666__icc_4516__dim = SACp_pinl_46696__emal_43299__cwc_937__dim;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46666__icc_4516__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46696__emal_43299__cwc_937__dim;
        { SACp_pinl_46666__icc_4516 = SACp_pinl_46696__emal_43299__cwc_937; }




        if (!((SACp_pinl_46665__icc_4515__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_46665__icc_4515__shp0 == SACp_pinl_46678__idc_4523__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        SACp_pinl_46665__icc_4515__desc = SACp_pinl_46678__idc_4523__desc;
        ;
        ;
        { SACp_pinl_46665__icc_4515 = SACp_pinl_46678__idc_4523; }

        { { if (!((1 == SACp_pinl_46687__emal_43290__ivesplit_42425__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46687__emal_43290__ivesplit_42425"); }; { if ((((6 + (SACp_pinl_46687__emal_43290__ivesplit_42425__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46687__emal_43290__ivesplit_42425__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46687__emal_43290__ivesplit_42425__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46687__emal_43290__ivesplit_42425__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46687__emal_43290__ivesplit_42425__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46687__emal_43290__ivesplit_42425__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46687__emal_43290__ivesplit_42425__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46687__emal_43290__ivesplit_42425__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46687__emal_43290__ivesplit_42425__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46687__emal_43290__ivesplit_42425__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46687__emal_43290__ivesplit_42425__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46687__emal_43290__ivesplit_42425__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46687__emal_43290__ivesplit_42425__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46687__emal_43290__ivesplit_42425__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46687__emal_43290__ivesplit_42425__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46687__emal_43290__ivesplit_42425__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46687__emal_43290__ivesplit_42425__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46687__emal_43290__ivesplit_42425__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46687__emal_43290__ivesplit_42425__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46687__emal_43290__ivesplit_42425__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_46687__emal_43290__ivesplit_42425__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        {

          int SAC_size = 1;
          SAC_size *=
          SACp_pinl_46687__emal_43290__ivesplit_42425__shp0 =
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46687__emal_43290__ivesplit_42425__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46666__icc_4516__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46687__emal_43290__ivesplit_42425__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46687__emal_43290__ivesplit_42425__sz = SAC_size;
          if (!((SACp_pinl_46687__emal_43290__ivesplit_42425__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 4733 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 4733 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4733 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 4733 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4733 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 4733 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 4733 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 4733, __extension__ __PRETTY_FUNCTION__); }))
# 4733 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_46687__emal_43290__ivesplit_42425 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46687__emal_43290__ivesplit_42425__sz * sizeof (*SACp_pinl_46687__emal_43290__ivesplit_42425)); break; case SAC_HM_multi_threaded: SACp_pinl_46687__emal_43290__ivesplit_42425 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46687__emal_43290__ivesplit_42425__sz * sizeof (*SACp_pinl_46687__emal_43290__ivesplit_42425), 0); break; case SAC_HM_any_threaded: SACp_pinl_46687__emal_43290__ivesplit_42425 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46687__emal_43290__ivesplit_42425__sz * sizeof (*SACp_pinl_46687__emal_43290__ivesplit_42425), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46687__emal_43290__ivesplit_42425__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46687__emal_43290__ivesplit_42425__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46687__emal_43290__ivesplit_42425__desc) & (-1 ^ (3))))[1]) = 0; } }



       
        for (int SAC_i = 0; SAC_i < SACp_pinl_46666__icc_4516__dim; SAC_i++) {
          { SACp_pinl_46687__emal_43290__ivesplit_42425[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46666__icc_4516__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
        }




        {
          int SAC_i, SAC_l;
          SAC_l = 0;
          SAC_l = ( SACp_pinl_46665__icc_4515[0]);
          for (SAC_i = (1); SAC_i < SACp_pinl_46687__emal_43290__ivesplit_42425__sz; SAC_i++)
          {

            SAC_l *= ( SACp_pinl_46687__emal_43290__ivesplit_42425[SAC_i]);
          }
          SACp_pinl_46686__emal_43289__ivesli_42466 = SAC_l;
        }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46665__icc_4515__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46665__icc_4515__sz * sizeof (*SACp_pinl_46665__icc_4515)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46665__icc_4515, ((((SAC_HM_header_t *)SACp_pinl_46665__icc_4515) - 1)->data1.arena)); } else { if (SACp_pinl_46665__icc_4515__sz * sizeof (*SACp_pinl_46665__icc_4515) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46665__icc_4515) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46665__icc_4515, ((((SAC_HM_header_t *)SACp_pinl_46665__icc_4515) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46665__icc_4515, ((((SAC_HM_header_t *)SACp_pinl_46665__icc_4515) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46665__icc_4515__sz * sizeof (*SACp_pinl_46665__icc_4515))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46665__icc_4515, ((((SAC_HM_header_t *)SACp_pinl_46665__icc_4515) - 1)->data1.arena)); } else { if (((((SACp_pinl_46665__icc_4515__sz * sizeof (*SACp_pinl_46665__icc_4515))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46665__icc_4515) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46665__icc_4515, ((((SAC_HM_header_t *)SACp_pinl_46665__icc_4515) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46665__icc_4515, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46665__icc_4515); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46665__icc_4515); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46665__icc_4515, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46665__icc_4515); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46665__icc_4515); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46665__icc_4515__desc) & (-1 ^ (3))))); } } } } else { } }
        { { free (SACp_pinl_46687__emal_43290__ivesplit_42425); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46687__emal_43290__ivesplit_42425__desc) & (-1 ^ (3))))); } } }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_46685__emal_43288__icc_4517 = ( SACp_pinl_46666__icc_4516[SACp_pinl_46686__emal_43289__ivesli_42466]); }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46666__icc_4516__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46666__icc_4516); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46666__icc_4516__desc) & (-1 ^ (3))))); } } } } else { } }
        { ; ; }
        if (!SACp_pinl_46688__emal_43291__icc_4514_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_46684__emal_43287__cwc_948 = (SACp_pinl_46685__emal_43288__icc_4517) == (3); };
        { ; ; }
        ; ; { SACp_pinl_46684__emal_43287__cwc_948 = (SACp_pinl_46684__emal_43287__cwc_948) & (SACp_pinl_46690__emal_43293__cwc_943); };
        { ; ; }
        if (SACp_pinl_46684__emal_43287__cwc_948)
        {
          { ; ; }
          { if (!((SACl_a__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_46699__emal_43308__asd_43080_a = ( SACl_a[0]); } }
          { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }



          if (!((_tcp_48529_SACl_b__dim == SACl_b__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          if (!((_tcp_48529_SACl_b__shp0 == (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (0))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          if (!((_tcp_48529_SACl_b__shp1 == (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (1))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          _tcp_48529_SACl_b__desc = SACl_b__desc;
          ;
          ;
          { _tcp_48529_SACl_b = SACl_b; }




          SACf__MAIN___rtpf_18_impl_carretplus__i__i_2_3 (&SACp_cwc_774, &SACp_cwc_774__desc, SACp_pinl_46699__emal_43308__asd_43080_a, _tcp_48529_SACl_b, _tcp_48529_SACl_b__desc);




          SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

        }
        else
        {
          { ; ; }



          SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




          SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

        }
      }
      else
      {
        { ; ; }
        ; ; { SACp_pinl_46697__emal_43300__cwc_935 = (SACp_pinl_46659__emal_43157__cwc_924) == (1); };
        { ; ; }
        if (SACp_pinl_46697__emal_43300__cwc_935)
        {
          { ; ; }
          { { if (!((1 == SACp_pinl_46716__emal_43307__cwc_926__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46716__emal_43307__cwc_926"); }; { if ((((6 + (SACp_pinl_46716__emal_43307__cwc_926__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46716__emal_43307__cwc_926__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46716__emal_43307__cwc_926__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46716__emal_43307__cwc_926__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46716__emal_43307__cwc_926__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46716__emal_43307__cwc_926__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46716__emal_43307__cwc_926__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46716__emal_43307__cwc_926__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46716__emal_43307__cwc_926__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46716__emal_43307__cwc_926__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46716__emal_43307__cwc_926__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46716__emal_43307__cwc_926__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46716__emal_43307__cwc_926__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46716__emal_43307__cwc_926__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46716__emal_43307__cwc_926__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46716__emal_43307__cwc_926__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46716__emal_43307__cwc_926__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46716__emal_43307__cwc_926__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46716__emal_43307__cwc_926__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46716__emal_43307__cwc_926__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_46716__emal_43307__cwc_926__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          {

            int SAC_size = 1;
            SAC_size *=
            SACp_pinl_46716__emal_43307__cwc_926__shp0 =
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46716__emal_43307__cwc_926__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46716__emal_43307__cwc_926__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46716__emal_43307__cwc_926__sz = SAC_size;
            if (!((SACp_pinl_46716__emal_43307__cwc_926__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
          }

          { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 4849 "/home/rubenhensen/sac/a.out.c" 3 4
         ((void) sizeof ((
# 4849 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4849 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ? 1 : 0), __extension__ ({ if (
# 4849 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4849 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ; else __assert_fail (
# 4849 "/home/rubenhensen/sac/a.out.c"
         "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 4849 "/home/rubenhensen/sac/a.out.c" 3 4
         , "/home/rubenhensen/sac/a.out.c", 4849, __extension__ __PRETTY_FUNCTION__); }))
# 4849 "/home/rubenhensen/sac/a.out.c"
         ; SACp_pinl_46716__emal_43307__cwc_926 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46716__emal_43307__cwc_926__sz * sizeof (*SACp_pinl_46716__emal_43307__cwc_926)); break; case SAC_HM_multi_threaded: SACp_pinl_46716__emal_43307__cwc_926 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46716__emal_43307__cwc_926__sz * sizeof (*SACp_pinl_46716__emal_43307__cwc_926), 0); break; case SAC_HM_any_threaded: SACp_pinl_46716__emal_43307__cwc_926 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46716__emal_43307__cwc_926__sz * sizeof (*SACp_pinl_46716__emal_43307__cwc_926), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46716__emal_43307__cwc_926__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46716__emal_43307__cwc_926__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46716__emal_43307__cwc_926__desc) & (-1 ^ (3))))[1]) = 0; } }



         
          for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
            { SACp_pinl_46716__emal_43307__cwc_926[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
          }

          { { if (!((1 == SACp_pinl_46715__emal_43306__cwc_929__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46715__emal_43306__cwc_929"); }; { { if ((((SACp_pinl_46715__emal_43306__cwc_929__sz * sizeof (*SACp_pinl_46715__emal_43306__cwc_929)) + ((6 + (SACp_pinl_46715__emal_43306__cwc_929__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46715__emal_43306__cwc_929__sz * sizeof (*SACp_pinl_46715__emal_43306__cwc_929)) + ((6 + (SACp_pinl_46715__emal_43306__cwc_929__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46715__emal_43306__cwc_929__sz * sizeof (*SACp_pinl_46715__emal_43306__cwc_929)) + ((6 + (SACp_pinl_46715__emal_43306__cwc_929__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46715__emal_43306__cwc_929 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46715__emal_43306__cwc_929 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46715__emal_43306__cwc_929__sz * sizeof (*SACp_pinl_46715__emal_43306__cwc_929)) + ((6 + (SACp_pinl_46715__emal_43306__cwc_929__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46715__emal_43306__cwc_929 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46715__emal_43306__cwc_929 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46715__emal_43306__cwc_929__sz * sizeof (*SACp_pinl_46715__emal_43306__cwc_929)) + ((6 + (SACp_pinl_46715__emal_43306__cwc_929__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46715__emal_43306__cwc_929__sz * sizeof (*SACp_pinl_46715__emal_43306__cwc_929)) + ((6 + (SACp_pinl_46715__emal_43306__cwc_929__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46715__emal_43306__cwc_929__sz * sizeof (*SACp_pinl_46715__emal_43306__cwc_929)) + ((6 + (SACp_pinl_46715__emal_43306__cwc_929__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46715__emal_43306__cwc_929__sz * sizeof (*SACp_pinl_46715__emal_43306__cwc_929)) + ((6 + (SACp_pinl_46715__emal_43306__cwc_929__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46715__emal_43306__cwc_929__sz * sizeof (*SACp_pinl_46715__emal_43306__cwc_929)) + ((6 + (SACp_pinl_46715__emal_43306__cwc_929__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46715__emal_43306__cwc_929 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46715__emal_43306__cwc_929 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46715__emal_43306__cwc_929 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46715__emal_43306__cwc_929 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46715__emal_43306__cwc_929__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46715__emal_43306__cwc_929, SACp_pinl_46715__emal_43306__cwc_929__sz * sizeof (*SACp_pinl_46715__emal_43306__cwc_929), ((6 + (SACp_pinl_46715__emal_43306__cwc_929__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46715__emal_43306__cwc_929__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46715__emal_43306__cwc_929__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46715__emal_43306__cwc_929__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_46715__emal_43306__cwc_929__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_46715__emal_43306__cwc_929__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          ;

          }



          { SACp_pinl_46715__emal_43306__cwc_929[0] = 0; }




          if ((SACp_pinl_46715__emal_43306__cwc_929__dim != 1) && (SACp_pinl_46715__emal_43306__cwc_929__shp0 != SACp_pinl_46716__emal_43307__cwc_926__dim)) {
            SACp_pinl_46714__emal_43305__icc_4526_pred = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46715__emal_43306__cwc_929""' with shape %s ""And `" "SACp_pinl_46716__emal_43307__cwc_926""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46715__emal_43306__cwc_929__desc), SAC_PrintShape (SACp_pinl_46716__emal_43307__cwc_926__desc));
          }
          else {
            int SAC_all = 1; if (0 || (( SACp_pinl_46715__emal_43306__cwc_929[0]) >= SACp_pinl_46716__emal_43307__cwc_926__shp0))
            {

              SAC_all = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46715__emal_43306__cwc_929""' with shape %s ""And `" "SACp_pinl_46716__emal_43307__cwc_926""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46715__emal_43306__cwc_929__desc), SAC_PrintShape (SACp_pinl_46716__emal_43307__cwc_926__desc));
            }
            SACp_pinl_46714__emal_43305__icc_4526_pred = SAC_all;
          }




          if (!((SACp_pinl_46707__idc_4532__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_46707__idc_4532__shp0 == SACp_pinl_46715__emal_43306__cwc_929__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          SACp_pinl_46707__idc_4532__desc = SACp_pinl_46715__emal_43306__cwc_929__desc;
          ;
          ;
          { SACp_pinl_46707__idc_4532 = SACp_pinl_46715__emal_43306__cwc_929; }

          if (!SACp_pinl_46714__emal_43305__icc_4526_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



          SACp_pinl_46701__icc_4528__desc = SACp_pinl_46716__emal_43307__cwc_926__desc;
          SACp_pinl_46701__icc_4528__sz = SACp_pinl_46716__emal_43307__cwc_926__sz;
          SACp_pinl_46701__icc_4528__dim = SACp_pinl_46716__emal_43307__cwc_926__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46701__icc_4528__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46716__emal_43307__cwc_926__dim;
          { SACp_pinl_46701__icc_4528 = SACp_pinl_46716__emal_43307__cwc_926; }




          if (!((SACp_pinl_46700__icc_4527__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_46700__icc_4527__shp0 == SACp_pinl_46707__idc_4532__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          SACp_pinl_46700__icc_4527__desc = SACp_pinl_46707__idc_4532__desc;
          ;
          ;
          { SACp_pinl_46700__icc_4527 = SACp_pinl_46707__idc_4532; }

          { { if (!((1 == SACp_pinl_46713__emal_43304__ivesplit_42427__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46713__emal_43304__ivesplit_42427"); }; { if ((((6 + (SACp_pinl_46713__emal_43304__ivesplit_42427__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46713__emal_43304__ivesplit_42427__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46713__emal_43304__ivesplit_42427__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46713__emal_43304__ivesplit_42427__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46713__emal_43304__ivesplit_42427__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46713__emal_43304__ivesplit_42427__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46713__emal_43304__ivesplit_42427__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46713__emal_43304__ivesplit_42427__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46713__emal_43304__ivesplit_42427__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46713__emal_43304__ivesplit_42427__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46713__emal_43304__ivesplit_42427__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46713__emal_43304__ivesplit_42427__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46713__emal_43304__ivesplit_42427__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46713__emal_43304__ivesplit_42427__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46713__emal_43304__ivesplit_42427__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46713__emal_43304__ivesplit_42427__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46713__emal_43304__ivesplit_42427__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46713__emal_43304__ivesplit_42427__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46713__emal_43304__ivesplit_42427__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46713__emal_43304__ivesplit_42427__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_46713__emal_43304__ivesplit_42427__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          {

            int SAC_size = 1;
            SAC_size *=
            SACp_pinl_46713__emal_43304__ivesplit_42427__shp0 =
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46713__emal_43304__ivesplit_42427__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46701__icc_4528__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46713__emal_43304__ivesplit_42427__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46713__emal_43304__ivesplit_42427__sz = SAC_size;
            if (!((SACp_pinl_46713__emal_43304__ivesplit_42427__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
          }

          { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 4934 "/home/rubenhensen/sac/a.out.c" 3 4
         ((void) sizeof ((
# 4934 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4934 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ? 1 : 0), __extension__ ({ if (
# 4934 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4934 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ; else __assert_fail (
# 4934 "/home/rubenhensen/sac/a.out.c"
         "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 4934 "/home/rubenhensen/sac/a.out.c" 3 4
         , "/home/rubenhensen/sac/a.out.c", 4934, __extension__ __PRETTY_FUNCTION__); }))
# 4934 "/home/rubenhensen/sac/a.out.c"
         ; SACp_pinl_46713__emal_43304__ivesplit_42427 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46713__emal_43304__ivesplit_42427__sz * sizeof (*SACp_pinl_46713__emal_43304__ivesplit_42427)); break; case SAC_HM_multi_threaded: SACp_pinl_46713__emal_43304__ivesplit_42427 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46713__emal_43304__ivesplit_42427__sz * sizeof (*SACp_pinl_46713__emal_43304__ivesplit_42427), 0); break; case SAC_HM_any_threaded: SACp_pinl_46713__emal_43304__ivesplit_42427 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46713__emal_43304__ivesplit_42427__sz * sizeof (*SACp_pinl_46713__emal_43304__ivesplit_42427), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46713__emal_43304__ivesplit_42427__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46713__emal_43304__ivesplit_42427__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46713__emal_43304__ivesplit_42427__desc) & (-1 ^ (3))))[1]) = 0; } }



         
          for (int SAC_i = 0; SAC_i < SACp_pinl_46701__icc_4528__dim; SAC_i++) {
            { SACp_pinl_46713__emal_43304__ivesplit_42427[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46701__icc_4528__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
          }




          {
            int SAC_i, SAC_l;
            SAC_l = 0;
            SAC_l = ( SACp_pinl_46700__icc_4527[0]);
            for (SAC_i = (1); SAC_i < SACp_pinl_46713__emal_43304__ivesplit_42427__sz; SAC_i++)
            {

              SAC_l *= ( SACp_pinl_46713__emal_43304__ivesplit_42427[SAC_i]);
            }
            SACp_pinl_46712__emal_43303__ivesli_42468 = SAC_l;
          }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46700__icc_4527__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46700__icc_4527__sz * sizeof (*SACp_pinl_46700__icc_4527)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46700__icc_4527, ((((SAC_HM_header_t *)SACp_pinl_46700__icc_4527) - 1)->data1.arena)); } else { if (SACp_pinl_46700__icc_4527__sz * sizeof (*SACp_pinl_46700__icc_4527) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46700__icc_4527) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46700__icc_4527, ((((SAC_HM_header_t *)SACp_pinl_46700__icc_4527) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46700__icc_4527, ((((SAC_HM_header_t *)SACp_pinl_46700__icc_4527) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46700__icc_4527__sz * sizeof (*SACp_pinl_46700__icc_4527))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46700__icc_4527, ((((SAC_HM_header_t *)SACp_pinl_46700__icc_4527) - 1)->data1.arena)); } else { if (((((SACp_pinl_46700__icc_4527__sz * sizeof (*SACp_pinl_46700__icc_4527))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46700__icc_4527) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46700__icc_4527, ((((SAC_HM_header_t *)SACp_pinl_46700__icc_4527) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46700__icc_4527, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46700__icc_4527); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46700__icc_4527); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46700__icc_4527, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46700__icc_4527); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46700__icc_4527); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46700__icc_4527__desc) & (-1 ^ (3))))); } } } } else { } }
          { { free (SACp_pinl_46713__emal_43304__ivesplit_42427); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46713__emal_43304__ivesplit_42427__desc) & (-1 ^ (3))))); } } }



         
          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
          { SACp_pinl_46711__emal_43302__icc_4529 = ( SACp_pinl_46701__icc_4528[SACp_pinl_46712__emal_43303__ivesli_42468]); }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46701__icc_4528__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46701__icc_4528); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46701__icc_4528__desc) & (-1 ^ (3))))); } } } } else { } }
          { ; ; }
          if (!SACp_pinl_46714__emal_43305__icc_4526_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
          { ; ; }
          ; ; { SACp_pinl_46710__emal_43301__cwc_932 = (SACp_pinl_46711__emal_43302__icc_4529) == (2); };
          { ; ; }
          if (SACp_pinl_46710__emal_43301__cwc_932)
          {
            { ; ; }



            SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

          }
          else
          {
            { ; ; }



            SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

          }
        }
        else
        {
          { ; ; }



          SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




          SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

        }
      }
    }
    else
    {
      { ; ; }
      { { SACp_pinl_46661__emal_43159__cwc_804 = SACl_a__dim; }; }
      ; ; { SACp_pinl_46660__emal_43158__cwc_921 = (SACp_pinl_46661__emal_43159__cwc_804) == (1); };
      if (SACp_pinl_46660__emal_43158__cwc_921)
      {
        { ; ; }
        { ; ; }
        { { if (!((1 == SACp_pinl_46734__emal_43166__cwc_895__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46734__emal_43166__cwc_895"); }; { if ((((6 + (SACp_pinl_46734__emal_43166__cwc_895__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46734__emal_43166__cwc_895__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46734__emal_43166__cwc_895__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46734__emal_43166__cwc_895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46734__emal_43166__cwc_895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46734__emal_43166__cwc_895__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46734__emal_43166__cwc_895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46734__emal_43166__cwc_895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46734__emal_43166__cwc_895__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46734__emal_43166__cwc_895__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46734__emal_43166__cwc_895__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46734__emal_43166__cwc_895__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46734__emal_43166__cwc_895__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46734__emal_43166__cwc_895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46734__emal_43166__cwc_895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46734__emal_43166__cwc_895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46734__emal_43166__cwc_895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46734__emal_43166__cwc_895__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46734__emal_43166__cwc_895__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46734__emal_43166__cwc_895__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_46734__emal_43166__cwc_895__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        {

          int SAC_size = 1;
          SAC_size *=
          SACp_pinl_46734__emal_43166__cwc_895__shp0 =
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46734__emal_43166__cwc_895__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46734__emal_43166__cwc_895__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46734__emal_43166__cwc_895__sz = SAC_size;
          if (!((SACp_pinl_46734__emal_43166__cwc_895__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5045 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 5045 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5045 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 5045 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5045 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 5045 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5045 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 5045, __extension__ __PRETTY_FUNCTION__); }))
# 5045 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_46734__emal_43166__cwc_895 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46734__emal_43166__cwc_895__sz * sizeof (*SACp_pinl_46734__emal_43166__cwc_895)); break; case SAC_HM_multi_threaded: SACp_pinl_46734__emal_43166__cwc_895 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46734__emal_43166__cwc_895__sz * sizeof (*SACp_pinl_46734__emal_43166__cwc_895), 0); break; case SAC_HM_any_threaded: SACp_pinl_46734__emal_43166__cwc_895 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46734__emal_43166__cwc_895__sz * sizeof (*SACp_pinl_46734__emal_43166__cwc_895), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46734__emal_43166__cwc_895__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46734__emal_43166__cwc_895__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46734__emal_43166__cwc_895__desc) & (-1 ^ (3))))[1]) = 0; } }



       
        for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
          { SACp_pinl_46734__emal_43166__cwc_895[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
        }

        { { if (!((1 == SACp_pinl_46733__emal_43165__cwc_915__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46733__emal_43165__cwc_915"); }; { { if ((((SACp_pinl_46733__emal_43165__cwc_915__sz * sizeof (*SACp_pinl_46733__emal_43165__cwc_915)) + ((6 + (SACp_pinl_46733__emal_43165__cwc_915__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46733__emal_43165__cwc_915__sz * sizeof (*SACp_pinl_46733__emal_43165__cwc_915)) + ((6 + (SACp_pinl_46733__emal_43165__cwc_915__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46733__emal_43165__cwc_915__sz * sizeof (*SACp_pinl_46733__emal_43165__cwc_915)) + ((6 + (SACp_pinl_46733__emal_43165__cwc_915__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46733__emal_43165__cwc_915 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46733__emal_43165__cwc_915 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46733__emal_43165__cwc_915__sz * sizeof (*SACp_pinl_46733__emal_43165__cwc_915)) + ((6 + (SACp_pinl_46733__emal_43165__cwc_915__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46733__emal_43165__cwc_915 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46733__emal_43165__cwc_915 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46733__emal_43165__cwc_915__sz * sizeof (*SACp_pinl_46733__emal_43165__cwc_915)) + ((6 + (SACp_pinl_46733__emal_43165__cwc_915__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46733__emal_43165__cwc_915__sz * sizeof (*SACp_pinl_46733__emal_43165__cwc_915)) + ((6 + (SACp_pinl_46733__emal_43165__cwc_915__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46733__emal_43165__cwc_915__sz * sizeof (*SACp_pinl_46733__emal_43165__cwc_915)) + ((6 + (SACp_pinl_46733__emal_43165__cwc_915__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46733__emal_43165__cwc_915__sz * sizeof (*SACp_pinl_46733__emal_43165__cwc_915)) + ((6 + (SACp_pinl_46733__emal_43165__cwc_915__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46733__emal_43165__cwc_915__sz * sizeof (*SACp_pinl_46733__emal_43165__cwc_915)) + ((6 + (SACp_pinl_46733__emal_43165__cwc_915__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46733__emal_43165__cwc_915 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46733__emal_43165__cwc_915 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46733__emal_43165__cwc_915 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46733__emal_43165__cwc_915 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46733__emal_43165__cwc_915__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46733__emal_43165__cwc_915, SACp_pinl_46733__emal_43165__cwc_915__sz * sizeof (*SACp_pinl_46733__emal_43165__cwc_915), ((6 + (SACp_pinl_46733__emal_43165__cwc_915__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46733__emal_43165__cwc_915__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46733__emal_43165__cwc_915__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46733__emal_43165__cwc_915__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_46733__emal_43165__cwc_915__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_46733__emal_43165__cwc_915__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_46733__emal_43165__cwc_915[0] = 0; }




        if ((SACp_pinl_46733__emal_43165__cwc_915__dim != 1) && (SACp_pinl_46733__emal_43165__cwc_915__shp0 != SACp_pinl_46734__emal_43166__cwc_895__dim)) {
          SACp_pinl_46732__emal_43164__icc_4535_pred = 0;
          SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46733__emal_43165__cwc_915""' with shape %s ""And `" "SACp_pinl_46734__emal_43166__cwc_895""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46733__emal_43165__cwc_915__desc), SAC_PrintShape (SACp_pinl_46734__emal_43166__cwc_895__desc));
        }
        else {
          int SAC_all = 1; if (0 || (( SACp_pinl_46733__emal_43165__cwc_915[0]) >= SACp_pinl_46734__emal_43166__cwc_895__shp0))
          {

            SAC_all = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46733__emal_43165__cwc_915""' with shape %s ""And `" "SACp_pinl_46734__emal_43166__cwc_895""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46733__emal_43165__cwc_915__desc), SAC_PrintShape (SACp_pinl_46734__emal_43166__cwc_895__desc));
          }
          SACp_pinl_46732__emal_43164__icc_4535_pred = SAC_all;
        }




        if (!((SACp_pinl_46725__idc_4541__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_46725__idc_4541__shp0 == SACp_pinl_46733__emal_43165__cwc_915__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        SACp_pinl_46725__idc_4541__desc = SACp_pinl_46733__emal_43165__cwc_915__desc;
        ;
        ;
        { SACp_pinl_46725__idc_4541 = SACp_pinl_46733__emal_43165__cwc_915; }

        if (!SACp_pinl_46732__emal_43164__icc_4535_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



        SACp_pinl_46718__icc_4537__desc = SACp_pinl_46734__emal_43166__cwc_895__desc;
        SACp_pinl_46718__icc_4537__sz = SACp_pinl_46734__emal_43166__cwc_895__sz;
        SACp_pinl_46718__icc_4537__dim = SACp_pinl_46734__emal_43166__cwc_895__dim;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46718__icc_4537__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46734__emal_43166__cwc_895__dim;
        { SACp_pinl_46718__icc_4537 = SACp_pinl_46734__emal_43166__cwc_895; }




        if (!((SACp_pinl_46717__icc_4536__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_46717__icc_4536__shp0 == SACp_pinl_46725__idc_4541__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        SACp_pinl_46717__icc_4536__desc = SACp_pinl_46725__idc_4541__desc;
        ;
        ;
        { SACp_pinl_46717__icc_4536 = SACp_pinl_46725__idc_4541; }

        { { if (!((1 == SACp_pinl_46731__emal_43163__ivesplit_42391__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46731__emal_43163__ivesplit_42391"); }; { if ((((6 + (SACp_pinl_46731__emal_43163__ivesplit_42391__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46731__emal_43163__ivesplit_42391__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46731__emal_43163__ivesplit_42391__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46731__emal_43163__ivesplit_42391__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46731__emal_43163__ivesplit_42391__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46731__emal_43163__ivesplit_42391__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46731__emal_43163__ivesplit_42391__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46731__emal_43163__ivesplit_42391__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46731__emal_43163__ivesplit_42391__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46731__emal_43163__ivesplit_42391__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46731__emal_43163__ivesplit_42391__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46731__emal_43163__ivesplit_42391__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46731__emal_43163__ivesplit_42391__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46731__emal_43163__ivesplit_42391__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46731__emal_43163__ivesplit_42391__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46731__emal_43163__ivesplit_42391__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46731__emal_43163__ivesplit_42391__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46731__emal_43163__ivesplit_42391__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46731__emal_43163__ivesplit_42391__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46731__emal_43163__ivesplit_42391__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_46731__emal_43163__ivesplit_42391__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
        {

          int SAC_size = 1;
          SAC_size *=
          SACp_pinl_46731__emal_43163__ivesplit_42391__shp0 =
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46731__emal_43163__ivesplit_42391__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46718__icc_4537__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46731__emal_43163__ivesplit_42391__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46731__emal_43163__ivesplit_42391__sz = SAC_size;
          if (!((SACp_pinl_46731__emal_43163__ivesplit_42391__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5130 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 5130 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5130 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 5130 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5130 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 5130 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5130 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 5130, __extension__ __PRETTY_FUNCTION__); }))
# 5130 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_46731__emal_43163__ivesplit_42391 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46731__emal_43163__ivesplit_42391__sz * sizeof (*SACp_pinl_46731__emal_43163__ivesplit_42391)); break; case SAC_HM_multi_threaded: SACp_pinl_46731__emal_43163__ivesplit_42391 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46731__emal_43163__ivesplit_42391__sz * sizeof (*SACp_pinl_46731__emal_43163__ivesplit_42391), 0); break; case SAC_HM_any_threaded: SACp_pinl_46731__emal_43163__ivesplit_42391 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46731__emal_43163__ivesplit_42391__sz * sizeof (*SACp_pinl_46731__emal_43163__ivesplit_42391), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46731__emal_43163__ivesplit_42391__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46731__emal_43163__ivesplit_42391__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46731__emal_43163__ivesplit_42391__desc) & (-1 ^ (3))))[1]) = 0; } }



       
        for (int SAC_i = 0; SAC_i < SACp_pinl_46718__icc_4537__dim; SAC_i++) {
          { SACp_pinl_46731__emal_43163__ivesplit_42391[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46718__icc_4537__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
        }




        {
          int SAC_i, SAC_l;
          SAC_l = 0;
          SAC_l = ( SACp_pinl_46717__icc_4536[0]);
          for (SAC_i = (1); SAC_i < SACp_pinl_46731__emal_43163__ivesplit_42391__sz; SAC_i++)
          {

            SAC_l *= ( SACp_pinl_46731__emal_43163__ivesplit_42391[SAC_i]);
          }
          SACp_pinl_46730__emal_43162__ivesli_42450 = SAC_l;
        }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46717__icc_4536__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46717__icc_4536__sz * sizeof (*SACp_pinl_46717__icc_4536)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46717__icc_4536, ((((SAC_HM_header_t *)SACp_pinl_46717__icc_4536) - 1)->data1.arena)); } else { if (SACp_pinl_46717__icc_4536__sz * sizeof (*SACp_pinl_46717__icc_4536) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46717__icc_4536) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46717__icc_4536, ((((SAC_HM_header_t *)SACp_pinl_46717__icc_4536) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46717__icc_4536, ((((SAC_HM_header_t *)SACp_pinl_46717__icc_4536) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46717__icc_4536__sz * sizeof (*SACp_pinl_46717__icc_4536))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46717__icc_4536, ((((SAC_HM_header_t *)SACp_pinl_46717__icc_4536) - 1)->data1.arena)); } else { if (((((SACp_pinl_46717__icc_4536__sz * sizeof (*SACp_pinl_46717__icc_4536))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46717__icc_4536) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46717__icc_4536, ((((SAC_HM_header_t *)SACp_pinl_46717__icc_4536) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46717__icc_4536, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46717__icc_4536); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46717__icc_4536); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46717__icc_4536, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46717__icc_4536); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46717__icc_4536); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46717__icc_4536__desc) & (-1 ^ (3))))); } } } } else { } }
        { { free (SACp_pinl_46731__emal_43163__ivesplit_42391); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46731__emal_43163__ivesplit_42391__desc) & (-1 ^ (3))))); } } }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_46729__emal_43161__icc_4538 = ( SACp_pinl_46718__icc_4537[SACp_pinl_46730__emal_43162__ivesli_42450]); }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46718__icc_4537__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46718__icc_4537); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46718__icc_4537__desc) & (-1 ^ (3))))); } } } } else { } }
        { ; ; }
        if (!SACp_pinl_46732__emal_43164__icc_4535_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        ; ; { SACp_pinl_46728__emal_43160__cwc_918 = (SACp_pinl_46729__emal_43161__icc_4538) == (2); };
        { ; ; }
        if (SACp_pinl_46728__emal_43160__cwc_918)
        {
          { ; ; }
          { { SACp_pinl_46741__emal_43255__cwc_897 = SACl_b__dim; }; }
          ; ; { SACp_pinl_46740__emal_43254__cwc_913 = (SACp_pinl_46741__emal_43255__cwc_897) == (2); };
          { ; ; }
          if (SACp_pinl_46740__emal_43254__cwc_913)
          {
            { ; ; }
            { { if (!((1 == SACp_pinl_46777__emal_43285__cwc_899__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46777__emal_43285__cwc_899"); }; { if ((((6 + (SACp_pinl_46777__emal_43285__cwc_899__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46777__emal_43285__cwc_899__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46777__emal_43285__cwc_899__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46777__emal_43285__cwc_899__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46777__emal_43285__cwc_899__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46777__emal_43285__cwc_899__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46777__emal_43285__cwc_899__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46777__emal_43285__cwc_899__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46777__emal_43285__cwc_899__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46777__emal_43285__cwc_899__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46777__emal_43285__cwc_899__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46777__emal_43285__cwc_899__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46777__emal_43285__cwc_899__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46777__emal_43285__cwc_899__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46777__emal_43285__cwc_899__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46777__emal_43285__cwc_899__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46777__emal_43285__cwc_899__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46777__emal_43285__cwc_899__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46777__emal_43285__cwc_899__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46777__emal_43285__cwc_899__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46777__emal_43285__cwc_899__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_46777__emal_43285__cwc_899__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46777__emal_43285__cwc_899__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46777__emal_43285__cwc_899__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46777__emal_43285__cwc_899__sz = SAC_size;
              if (!((SACp_pinl_46777__emal_43285__cwc_899__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5193 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 5193 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5193 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 5193 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5193 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 5193 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5193 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 5193, __extension__ __PRETTY_FUNCTION__); }))
# 5193 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_46777__emal_43285__cwc_899 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46777__emal_43285__cwc_899__sz * sizeof (*SACp_pinl_46777__emal_43285__cwc_899)); break; case SAC_HM_multi_threaded: SACp_pinl_46777__emal_43285__cwc_899 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46777__emal_43285__cwc_899__sz * sizeof (*SACp_pinl_46777__emal_43285__cwc_899), 0); break; case SAC_HM_any_threaded: SACp_pinl_46777__emal_43285__cwc_899 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46777__emal_43285__cwc_899__sz * sizeof (*SACp_pinl_46777__emal_43285__cwc_899), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46777__emal_43285__cwc_899__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46777__emal_43285__cwc_899__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46777__emal_43285__cwc_899__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
              { SACp_pinl_46777__emal_43285__cwc_899[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }

            { { if (!((1 == SACp_pinl_46776__emal_43284__cwc_902__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46776__emal_43284__cwc_902"); }; { { if ((((SACp_pinl_46776__emal_43284__cwc_902__sz * sizeof (*SACp_pinl_46776__emal_43284__cwc_902)) + ((6 + (SACp_pinl_46776__emal_43284__cwc_902__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46776__emal_43284__cwc_902__sz * sizeof (*SACp_pinl_46776__emal_43284__cwc_902)) + ((6 + (SACp_pinl_46776__emal_43284__cwc_902__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46776__emal_43284__cwc_902__sz * sizeof (*SACp_pinl_46776__emal_43284__cwc_902)) + ((6 + (SACp_pinl_46776__emal_43284__cwc_902__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46776__emal_43284__cwc_902 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46776__emal_43284__cwc_902 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46776__emal_43284__cwc_902__sz * sizeof (*SACp_pinl_46776__emal_43284__cwc_902)) + ((6 + (SACp_pinl_46776__emal_43284__cwc_902__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46776__emal_43284__cwc_902 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46776__emal_43284__cwc_902 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46776__emal_43284__cwc_902__sz * sizeof (*SACp_pinl_46776__emal_43284__cwc_902)) + ((6 + (SACp_pinl_46776__emal_43284__cwc_902__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46776__emal_43284__cwc_902__sz * sizeof (*SACp_pinl_46776__emal_43284__cwc_902)) + ((6 + (SACp_pinl_46776__emal_43284__cwc_902__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46776__emal_43284__cwc_902__sz * sizeof (*SACp_pinl_46776__emal_43284__cwc_902)) + ((6 + (SACp_pinl_46776__emal_43284__cwc_902__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46776__emal_43284__cwc_902__sz * sizeof (*SACp_pinl_46776__emal_43284__cwc_902)) + ((6 + (SACp_pinl_46776__emal_43284__cwc_902__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46776__emal_43284__cwc_902__sz * sizeof (*SACp_pinl_46776__emal_43284__cwc_902)) + ((6 + (SACp_pinl_46776__emal_43284__cwc_902__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46776__emal_43284__cwc_902 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46776__emal_43284__cwc_902 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46776__emal_43284__cwc_902 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46776__emal_43284__cwc_902 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46776__emal_43284__cwc_902__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46776__emal_43284__cwc_902, SACp_pinl_46776__emal_43284__cwc_902__sz * sizeof (*SACp_pinl_46776__emal_43284__cwc_902), ((6 + (SACp_pinl_46776__emal_43284__cwc_902__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46776__emal_43284__cwc_902__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46776__emal_43284__cwc_902__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46776__emal_43284__cwc_902__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46776__emal_43284__cwc_902__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46776__emal_43284__cwc_902__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_46776__emal_43284__cwc_902[0] = 0; }




            if ((SACp_pinl_46776__emal_43284__cwc_902__dim != 1) && (SACp_pinl_46776__emal_43284__cwc_902__shp0 != SACp_pinl_46777__emal_43285__cwc_899__dim)) {
              SACp_pinl_46775__emal_43283__icc_4544_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46776__emal_43284__cwc_902""' with shape %s ""And `" "SACp_pinl_46777__emal_43285__cwc_899""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46776__emal_43284__cwc_902__desc), SAC_PrintShape (SACp_pinl_46777__emal_43285__cwc_899__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_46776__emal_43284__cwc_902[0]) >= SACp_pinl_46777__emal_43285__cwc_899__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46776__emal_43284__cwc_902""' with shape %s ""And `" "SACp_pinl_46777__emal_43285__cwc_899""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46776__emal_43284__cwc_902__desc), SAC_PrintShape (SACp_pinl_46777__emal_43285__cwc_899__desc));
              }
              SACp_pinl_46775__emal_43283__icc_4544_pred = SAC_all;
            }




            if (!((SACp_pinl_46757__idc_4556__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46757__idc_4556__shp0 == SACp_pinl_46776__emal_43284__cwc_902__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46757__idc_4556__desc = SACp_pinl_46776__emal_43284__cwc_902__desc;
            ;
            ;
            { SACp_pinl_46757__idc_4556 = SACp_pinl_46776__emal_43284__cwc_902; }

            if (!SACp_pinl_46775__emal_43283__icc_4544_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_46745__icc_4546__desc = SACp_pinl_46777__emal_43285__cwc_899__desc;
            SACp_pinl_46745__icc_4546__sz = SACp_pinl_46777__emal_43285__cwc_899__sz;
            SACp_pinl_46745__icc_4546__dim = SACp_pinl_46777__emal_43285__cwc_899__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46745__icc_4546__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46777__emal_43285__cwc_899__dim;
            { SACp_pinl_46745__icc_4546 = SACp_pinl_46777__emal_43285__cwc_899; }




            if (!((SACp_pinl_46744__icc_4545__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46744__icc_4545__shp0 == SACp_pinl_46757__idc_4556__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46744__icc_4545__desc = SACp_pinl_46757__idc_4556__desc;
            ;
            ;
            { SACp_pinl_46744__icc_4545 = SACp_pinl_46757__idc_4556; }

            { { if (!((1 == SACp_pinl_46774__emal_43282__ivesplit_42419__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46774__emal_43282__ivesplit_42419"); }; { if ((((6 + (SACp_pinl_46774__emal_43282__ivesplit_42419__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46774__emal_43282__ivesplit_42419__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46774__emal_43282__ivesplit_42419__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46774__emal_43282__ivesplit_42419__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46774__emal_43282__ivesplit_42419__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46774__emal_43282__ivesplit_42419__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46774__emal_43282__ivesplit_42419__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46774__emal_43282__ivesplit_42419__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46774__emal_43282__ivesplit_42419__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46774__emal_43282__ivesplit_42419__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46774__emal_43282__ivesplit_42419__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46774__emal_43282__ivesplit_42419__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46774__emal_43282__ivesplit_42419__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46774__emal_43282__ivesplit_42419__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46774__emal_43282__ivesplit_42419__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46774__emal_43282__ivesplit_42419__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46774__emal_43282__ivesplit_42419__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46774__emal_43282__ivesplit_42419__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46774__emal_43282__ivesplit_42419__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46774__emal_43282__ivesplit_42419__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46774__emal_43282__ivesplit_42419__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_46774__emal_43282__ivesplit_42419__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46774__emal_43282__ivesplit_42419__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46745__icc_4546__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46774__emal_43282__ivesplit_42419__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46774__emal_43282__ivesplit_42419__sz = SAC_size;
              if (!((SACp_pinl_46774__emal_43282__ivesplit_42419__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5278 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 5278 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5278 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 5278 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5278 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 5278 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5278 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 5278, __extension__ __PRETTY_FUNCTION__); }))
# 5278 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_46774__emal_43282__ivesplit_42419 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46774__emal_43282__ivesplit_42419__sz * sizeof (*SACp_pinl_46774__emal_43282__ivesplit_42419)); break; case SAC_HM_multi_threaded: SACp_pinl_46774__emal_43282__ivesplit_42419 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46774__emal_43282__ivesplit_42419__sz * sizeof (*SACp_pinl_46774__emal_43282__ivesplit_42419), 0); break; case SAC_HM_any_threaded: SACp_pinl_46774__emal_43282__ivesplit_42419 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46774__emal_43282__ivesplit_42419__sz * sizeof (*SACp_pinl_46774__emal_43282__ivesplit_42419), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46774__emal_43282__ivesplit_42419__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46774__emal_43282__ivesplit_42419__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46774__emal_43282__ivesplit_42419__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_46745__icc_4546__dim; SAC_i++) {
              { SACp_pinl_46774__emal_43282__ivesplit_42419[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46745__icc_4546__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_46744__icc_4545[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_46774__emal_43282__ivesplit_42419__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_46774__emal_43282__ivesplit_42419[SAC_i]);
              }
              SACp_pinl_46773__emal_43281__ivesli_42465 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46744__icc_4545__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46744__icc_4545__sz * sizeof (*SACp_pinl_46744__icc_4545)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46744__icc_4545, ((((SAC_HM_header_t *)SACp_pinl_46744__icc_4545) - 1)->data1.arena)); } else { if (SACp_pinl_46744__icc_4545__sz * sizeof (*SACp_pinl_46744__icc_4545) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46744__icc_4545) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46744__icc_4545, ((((SAC_HM_header_t *)SACp_pinl_46744__icc_4545) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46744__icc_4545, ((((SAC_HM_header_t *)SACp_pinl_46744__icc_4545) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46744__icc_4545__sz * sizeof (*SACp_pinl_46744__icc_4545))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46744__icc_4545, ((((SAC_HM_header_t *)SACp_pinl_46744__icc_4545) - 1)->data1.arena)); } else { if (((((SACp_pinl_46744__icc_4545__sz * sizeof (*SACp_pinl_46744__icc_4545))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46744__icc_4545) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46744__icc_4545, ((((SAC_HM_header_t *)SACp_pinl_46744__icc_4545) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46744__icc_4545, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46744__icc_4545); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46744__icc_4545); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46744__icc_4545, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46744__icc_4545); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46744__icc_4545); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46744__icc_4545__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_46774__emal_43282__ivesplit_42419); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46774__emal_43282__ivesplit_42419__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_46772__emal_43280__icc_4547 = ( SACp_pinl_46745__icc_4546[SACp_pinl_46773__emal_43281__ivesli_42465]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46745__icc_4546__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46745__icc_4546); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46745__icc_4546__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_46775__emal_43283__icc_4544_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            ; ; { SACp_pinl_46771__emal_43279__cwc_905 = (SACp_pinl_46772__emal_43280__icc_4547) == (2); };
            { ; ; }
            { { if (!((1 == SACp_pinl_46770__emal_43278__cwc_907__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46770__emal_43278__cwc_907"); }; { { if ((((SACp_pinl_46770__emal_43278__cwc_907__sz * sizeof (*SACp_pinl_46770__emal_43278__cwc_907)) + ((6 + (SACp_pinl_46770__emal_43278__cwc_907__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46770__emal_43278__cwc_907__sz * sizeof (*SACp_pinl_46770__emal_43278__cwc_907)) + ((6 + (SACp_pinl_46770__emal_43278__cwc_907__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46770__emal_43278__cwc_907__sz * sizeof (*SACp_pinl_46770__emal_43278__cwc_907)) + ((6 + (SACp_pinl_46770__emal_43278__cwc_907__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46770__emal_43278__cwc_907 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46770__emal_43278__cwc_907 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46770__emal_43278__cwc_907__sz * sizeof (*SACp_pinl_46770__emal_43278__cwc_907)) + ((6 + (SACp_pinl_46770__emal_43278__cwc_907__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46770__emal_43278__cwc_907 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46770__emal_43278__cwc_907 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46770__emal_43278__cwc_907__sz * sizeof (*SACp_pinl_46770__emal_43278__cwc_907)) + ((6 + (SACp_pinl_46770__emal_43278__cwc_907__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46770__emal_43278__cwc_907__sz * sizeof (*SACp_pinl_46770__emal_43278__cwc_907)) + ((6 + (SACp_pinl_46770__emal_43278__cwc_907__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46770__emal_43278__cwc_907__sz * sizeof (*SACp_pinl_46770__emal_43278__cwc_907)) + ((6 + (SACp_pinl_46770__emal_43278__cwc_907__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46770__emal_43278__cwc_907__sz * sizeof (*SACp_pinl_46770__emal_43278__cwc_907)) + ((6 + (SACp_pinl_46770__emal_43278__cwc_907__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46770__emal_43278__cwc_907__sz * sizeof (*SACp_pinl_46770__emal_43278__cwc_907)) + ((6 + (SACp_pinl_46770__emal_43278__cwc_907__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46770__emal_43278__cwc_907 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46770__emal_43278__cwc_907 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46770__emal_43278__cwc_907 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46770__emal_43278__cwc_907 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46770__emal_43278__cwc_907__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46770__emal_43278__cwc_907, SACp_pinl_46770__emal_43278__cwc_907__sz * sizeof (*SACp_pinl_46770__emal_43278__cwc_907), ((6 + (SACp_pinl_46770__emal_43278__cwc_907__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46770__emal_43278__cwc_907__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46770__emal_43278__cwc_907__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46770__emal_43278__cwc_907__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46770__emal_43278__cwc_907__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46770__emal_43278__cwc_907__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_46770__emal_43278__cwc_907[0] = 1; }




            if ((SACp_pinl_46770__emal_43278__cwc_907__dim != 1) && (SACp_pinl_46770__emal_43278__cwc_907__shp0 != SACp_pinl_46777__emal_43285__cwc_899__dim)) {
              SACp_pinl_46769__emal_43277__icc_4550_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46770__emal_43278__cwc_907""' with shape %s ""And `" "SACp_pinl_46777__emal_43285__cwc_899""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46770__emal_43278__cwc_907__desc), SAC_PrintShape (SACp_pinl_46777__emal_43285__cwc_899__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_46770__emal_43278__cwc_907[0]) >= SACp_pinl_46777__emal_43285__cwc_899__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46770__emal_43278__cwc_907""' with shape %s ""And `" "SACp_pinl_46777__emal_43285__cwc_899""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46770__emal_43278__cwc_907__desc), SAC_PrintShape (SACp_pinl_46777__emal_43285__cwc_899__desc));
              }
              SACp_pinl_46769__emal_43277__icc_4550_pred = SAC_all;
            }




            if (!((SACp_pinl_46759__idc_4559__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46759__idc_4559__shp0 == SACp_pinl_46770__emal_43278__cwc_907__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46759__idc_4559__desc = SACp_pinl_46770__emal_43278__cwc_907__desc;
            ;
            ;
            { SACp_pinl_46759__idc_4559 = SACp_pinl_46770__emal_43278__cwc_907; }

            if (!SACp_pinl_46769__emal_43277__icc_4550_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_46748__icc_4552__desc = SACp_pinl_46777__emal_43285__cwc_899__desc;
            SACp_pinl_46748__icc_4552__sz = SACp_pinl_46777__emal_43285__cwc_899__sz;
            SACp_pinl_46748__icc_4552__dim = SACp_pinl_46777__emal_43285__cwc_899__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46748__icc_4552__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46777__emal_43285__cwc_899__dim;
            { SACp_pinl_46748__icc_4552 = SACp_pinl_46777__emal_43285__cwc_899; }




            if (!((SACp_pinl_46747__icc_4551__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46747__icc_4551__shp0 == SACp_pinl_46759__idc_4559__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46747__icc_4551__desc = SACp_pinl_46759__idc_4559__desc;
            ;
            ;
            { SACp_pinl_46747__icc_4551 = SACp_pinl_46759__idc_4559; }

            { { if (!((1 == SACp_pinl_46768__emal_43276__ivesplit_42421__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46768__emal_43276__ivesplit_42421"); }; { if ((((6 + (SACp_pinl_46768__emal_43276__ivesplit_42421__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46768__emal_43276__ivesplit_42421__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46768__emal_43276__ivesplit_42421__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46768__emal_43276__ivesplit_42421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46768__emal_43276__ivesplit_42421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46768__emal_43276__ivesplit_42421__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46768__emal_43276__ivesplit_42421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46768__emal_43276__ivesplit_42421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46768__emal_43276__ivesplit_42421__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46768__emal_43276__ivesplit_42421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46768__emal_43276__ivesplit_42421__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46768__emal_43276__ivesplit_42421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46768__emal_43276__ivesplit_42421__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46768__emal_43276__ivesplit_42421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46768__emal_43276__ivesplit_42421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46768__emal_43276__ivesplit_42421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46768__emal_43276__ivesplit_42421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46768__emal_43276__ivesplit_42421__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46768__emal_43276__ivesplit_42421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46768__emal_43276__ivesplit_42421__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46768__emal_43276__ivesplit_42421__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_46768__emal_43276__ivesplit_42421__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46768__emal_43276__ivesplit_42421__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46748__icc_4552__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46768__emal_43276__ivesplit_42421__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46768__emal_43276__ivesplit_42421__sz = SAC_size;
              if (!((SACp_pinl_46768__emal_43276__ivesplit_42421__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5393 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 5393 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5393 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 5393 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5393 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 5393 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5393 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 5393, __extension__ __PRETTY_FUNCTION__); }))
# 5393 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_46768__emal_43276__ivesplit_42421 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46768__emal_43276__ivesplit_42421__sz * sizeof (*SACp_pinl_46768__emal_43276__ivesplit_42421)); break; case SAC_HM_multi_threaded: SACp_pinl_46768__emal_43276__ivesplit_42421 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46768__emal_43276__ivesplit_42421__sz * sizeof (*SACp_pinl_46768__emal_43276__ivesplit_42421), 0); break; case SAC_HM_any_threaded: SACp_pinl_46768__emal_43276__ivesplit_42421 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46768__emal_43276__ivesplit_42421__sz * sizeof (*SACp_pinl_46768__emal_43276__ivesplit_42421), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46768__emal_43276__ivesplit_42421__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46768__emal_43276__ivesplit_42421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46768__emal_43276__ivesplit_42421__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_46748__icc_4552__dim; SAC_i++) {
              { SACp_pinl_46768__emal_43276__ivesplit_42421[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46748__icc_4552__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_46747__icc_4551[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_46768__emal_43276__ivesplit_42421__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_46768__emal_43276__ivesplit_42421[SAC_i]);
              }
              SACp_pinl_46767__emal_43275__ivesli_42464 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46747__icc_4551__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46747__icc_4551__sz * sizeof (*SACp_pinl_46747__icc_4551)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46747__icc_4551, ((((SAC_HM_header_t *)SACp_pinl_46747__icc_4551) - 1)->data1.arena)); } else { if (SACp_pinl_46747__icc_4551__sz * sizeof (*SACp_pinl_46747__icc_4551) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46747__icc_4551) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46747__icc_4551, ((((SAC_HM_header_t *)SACp_pinl_46747__icc_4551) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46747__icc_4551, ((((SAC_HM_header_t *)SACp_pinl_46747__icc_4551) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46747__icc_4551__sz * sizeof (*SACp_pinl_46747__icc_4551))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46747__icc_4551, ((((SAC_HM_header_t *)SACp_pinl_46747__icc_4551) - 1)->data1.arena)); } else { if (((((SACp_pinl_46747__icc_4551__sz * sizeof (*SACp_pinl_46747__icc_4551))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46747__icc_4551) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46747__icc_4551, ((((SAC_HM_header_t *)SACp_pinl_46747__icc_4551) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46747__icc_4551, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46747__icc_4551); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46747__icc_4551); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46747__icc_4551, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46747__icc_4551); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46747__icc_4551); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46747__icc_4551__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_46768__emal_43276__ivesplit_42421); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46768__emal_43276__ivesplit_42421__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_46766__emal_43274__icc_4553 = ( SACp_pinl_46748__icc_4552[SACp_pinl_46767__emal_43275__ivesli_42464]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46748__icc_4552__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46748__icc_4552); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46748__icc_4552__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_46769__emal_43277__icc_4550_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            { ; ;



            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            ;

            }
            ; ; { SACp_pinl_46765__emal_43273__cwc_910 = (SACp_pinl_46766__emal_43274__icc_4553) == (3); };
            { ; ; }
            ; ; { SACp_pinl_46765__emal_43273__cwc_910 = (SACp_pinl_46765__emal_43273__cwc_910) & (SACp_pinl_46771__emal_43279__cwc_905); };
            { ; ; }
            if (SACp_pinl_46765__emal_43273__cwc_910)
            {
              { ; ; }



              if (!((_tcp_48531_SACl_b__dim == SACl_b__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((_tcp_48531_SACl_b__shp0 == (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (0))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((_tcp_48531_SACl_b__shp1 == (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (1))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              _tcp_48531_SACl_b__desc = SACl_b__desc;
              ;
              ;
              { _tcp_48531_SACl_b = SACl_b; }




              if (!((_tcp_48530_SACl_a__dim == SACl_a__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((_tcp_48530_SACl_a__shp0 == (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (0))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              _tcp_48530_SACl_a__desc = SACl_a__desc;
              ;
              ;
              { _tcp_48530_SACl_a = SACl_a; }




              SACf__MAIN___rtpf_18_impl_carretplus__i_2__i_2_3 (&SACp_cwc_774, &SACp_cwc_774__desc, _tcp_48530_SACl_a, _tcp_48530_SACl_a__desc, _tcp_48531_SACl_b, _tcp_48531_SACl_b__desc);




              SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

            }
            else
            {
              { ; ; }



              SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




              SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

            }
          }
          else
          {
            { ; ; }



            SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

          }
        }
        else
        {
          { ; ; }
          { { SACp_pinl_46743__emal_43257__cwc_878 = SACl_b__dim; }; }
          ; ; { SACp_pinl_46742__emal_43256__cwc_894 = (SACp_pinl_46743__emal_43257__cwc_878) == (2); };
          { ; ; }
          if (SACp_pinl_46742__emal_43256__cwc_894)
          {
            { ; ; }
            { { if (!((1 == SACp_pinl_46811__emal_43271__cwc_880__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46811__emal_43271__cwc_880"); }; { if ((((6 + (SACp_pinl_46811__emal_43271__cwc_880__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46811__emal_43271__cwc_880__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46811__emal_43271__cwc_880__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46811__emal_43271__cwc_880__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46811__emal_43271__cwc_880__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46811__emal_43271__cwc_880__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46811__emal_43271__cwc_880__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46811__emal_43271__cwc_880__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46811__emal_43271__cwc_880__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46811__emal_43271__cwc_880__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46811__emal_43271__cwc_880__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46811__emal_43271__cwc_880__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46811__emal_43271__cwc_880__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46811__emal_43271__cwc_880__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46811__emal_43271__cwc_880__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46811__emal_43271__cwc_880__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46811__emal_43271__cwc_880__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46811__emal_43271__cwc_880__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46811__emal_43271__cwc_880__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46811__emal_43271__cwc_880__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46811__emal_43271__cwc_880__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_46811__emal_43271__cwc_880__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46811__emal_43271__cwc_880__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46811__emal_43271__cwc_880__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46811__emal_43271__cwc_880__sz = SAC_size;
              if (!((SACp_pinl_46811__emal_43271__cwc_880__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5534 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 5534 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5534 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 5534 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5534 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 5534 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5534 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 5534, __extension__ __PRETTY_FUNCTION__); }))
# 5534 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_46811__emal_43271__cwc_880 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46811__emal_43271__cwc_880__sz * sizeof (*SACp_pinl_46811__emal_43271__cwc_880)); break; case SAC_HM_multi_threaded: SACp_pinl_46811__emal_43271__cwc_880 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46811__emal_43271__cwc_880__sz * sizeof (*SACp_pinl_46811__emal_43271__cwc_880), 0); break; case SAC_HM_any_threaded: SACp_pinl_46811__emal_43271__cwc_880 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46811__emal_43271__cwc_880__sz * sizeof (*SACp_pinl_46811__emal_43271__cwc_880), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46811__emal_43271__cwc_880__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46811__emal_43271__cwc_880__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46811__emal_43271__cwc_880__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
              { SACp_pinl_46811__emal_43271__cwc_880[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }

            { { if (!((1 == SACp_pinl_46810__emal_43270__cwc_883__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46810__emal_43270__cwc_883"); }; { { if ((((SACp_pinl_46810__emal_43270__cwc_883__sz * sizeof (*SACp_pinl_46810__emal_43270__cwc_883)) + ((6 + (SACp_pinl_46810__emal_43270__cwc_883__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46810__emal_43270__cwc_883__sz * sizeof (*SACp_pinl_46810__emal_43270__cwc_883)) + ((6 + (SACp_pinl_46810__emal_43270__cwc_883__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46810__emal_43270__cwc_883__sz * sizeof (*SACp_pinl_46810__emal_43270__cwc_883)) + ((6 + (SACp_pinl_46810__emal_43270__cwc_883__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46810__emal_43270__cwc_883 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46810__emal_43270__cwc_883 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46810__emal_43270__cwc_883__sz * sizeof (*SACp_pinl_46810__emal_43270__cwc_883)) + ((6 + (SACp_pinl_46810__emal_43270__cwc_883__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46810__emal_43270__cwc_883 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46810__emal_43270__cwc_883 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46810__emal_43270__cwc_883__sz * sizeof (*SACp_pinl_46810__emal_43270__cwc_883)) + ((6 + (SACp_pinl_46810__emal_43270__cwc_883__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46810__emal_43270__cwc_883__sz * sizeof (*SACp_pinl_46810__emal_43270__cwc_883)) + ((6 + (SACp_pinl_46810__emal_43270__cwc_883__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46810__emal_43270__cwc_883__sz * sizeof (*SACp_pinl_46810__emal_43270__cwc_883)) + ((6 + (SACp_pinl_46810__emal_43270__cwc_883__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46810__emal_43270__cwc_883__sz * sizeof (*SACp_pinl_46810__emal_43270__cwc_883)) + ((6 + (SACp_pinl_46810__emal_43270__cwc_883__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46810__emal_43270__cwc_883__sz * sizeof (*SACp_pinl_46810__emal_43270__cwc_883)) + ((6 + (SACp_pinl_46810__emal_43270__cwc_883__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46810__emal_43270__cwc_883 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46810__emal_43270__cwc_883 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46810__emal_43270__cwc_883 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46810__emal_43270__cwc_883 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46810__emal_43270__cwc_883__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46810__emal_43270__cwc_883, SACp_pinl_46810__emal_43270__cwc_883__sz * sizeof (*SACp_pinl_46810__emal_43270__cwc_883), ((6 + (SACp_pinl_46810__emal_43270__cwc_883__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46810__emal_43270__cwc_883__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46810__emal_43270__cwc_883__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46810__emal_43270__cwc_883__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46810__emal_43270__cwc_883__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46810__emal_43270__cwc_883__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_46810__emal_43270__cwc_883[0] = 0; }




            if ((SACp_pinl_46810__emal_43270__cwc_883__dim != 1) && (SACp_pinl_46810__emal_43270__cwc_883__shp0 != SACp_pinl_46811__emal_43271__cwc_880__dim)) {
              SACp_pinl_46809__emal_43269__icc_4562_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46810__emal_43270__cwc_883""' with shape %s ""And `" "SACp_pinl_46811__emal_43271__cwc_880""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46810__emal_43270__cwc_883__desc), SAC_PrintShape (SACp_pinl_46811__emal_43271__cwc_880__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_46810__emal_43270__cwc_883[0]) >= SACp_pinl_46811__emal_43271__cwc_880__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46810__emal_43270__cwc_883""' with shape %s ""And `" "SACp_pinl_46811__emal_43271__cwc_880""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46810__emal_43270__cwc_883__desc), SAC_PrintShape (SACp_pinl_46811__emal_43271__cwc_880__desc));
              }
              SACp_pinl_46809__emal_43269__icc_4562_pred = SAC_all;
            }




            if (!((SACp_pinl_46791__idc_4574__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46791__idc_4574__shp0 == SACp_pinl_46810__emal_43270__cwc_883__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46791__idc_4574__desc = SACp_pinl_46810__emal_43270__cwc_883__desc;
            ;
            ;
            { SACp_pinl_46791__idc_4574 = SACp_pinl_46810__emal_43270__cwc_883; }

            if (!SACp_pinl_46809__emal_43269__icc_4562_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_46779__icc_4564__desc = SACp_pinl_46811__emal_43271__cwc_880__desc;
            SACp_pinl_46779__icc_4564__sz = SACp_pinl_46811__emal_43271__cwc_880__sz;
            SACp_pinl_46779__icc_4564__dim = SACp_pinl_46811__emal_43271__cwc_880__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46779__icc_4564__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46811__emal_43271__cwc_880__dim;
            { SACp_pinl_46779__icc_4564 = SACp_pinl_46811__emal_43271__cwc_880; }




            if (!((SACp_pinl_46778__icc_4563__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46778__icc_4563__shp0 == SACp_pinl_46791__idc_4574__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46778__icc_4563__desc = SACp_pinl_46791__idc_4574__desc;
            ;
            ;
            { SACp_pinl_46778__icc_4563 = SACp_pinl_46791__idc_4574; }

            { { if (!((1 == SACp_pinl_46808__emal_43268__ivesplit_42415__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46808__emal_43268__ivesplit_42415"); }; { if ((((6 + (SACp_pinl_46808__emal_43268__ivesplit_42415__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46808__emal_43268__ivesplit_42415__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46808__emal_43268__ivesplit_42415__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46808__emal_43268__ivesplit_42415__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46808__emal_43268__ivesplit_42415__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46808__emal_43268__ivesplit_42415__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46808__emal_43268__ivesplit_42415__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46808__emal_43268__ivesplit_42415__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46808__emal_43268__ivesplit_42415__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46808__emal_43268__ivesplit_42415__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46808__emal_43268__ivesplit_42415__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46808__emal_43268__ivesplit_42415__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46808__emal_43268__ivesplit_42415__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46808__emal_43268__ivesplit_42415__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46808__emal_43268__ivesplit_42415__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46808__emal_43268__ivesplit_42415__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46808__emal_43268__ivesplit_42415__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46808__emal_43268__ivesplit_42415__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46808__emal_43268__ivesplit_42415__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46808__emal_43268__ivesplit_42415__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46808__emal_43268__ivesplit_42415__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_46808__emal_43268__ivesplit_42415__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46808__emal_43268__ivesplit_42415__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46779__icc_4564__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46808__emal_43268__ivesplit_42415__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46808__emal_43268__ivesplit_42415__sz = SAC_size;
              if (!((SACp_pinl_46808__emal_43268__ivesplit_42415__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5619 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 5619 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5619 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 5619 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5619 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 5619 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5619 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 5619, __extension__ __PRETTY_FUNCTION__); }))
# 5619 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_46808__emal_43268__ivesplit_42415 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46808__emal_43268__ivesplit_42415__sz * sizeof (*SACp_pinl_46808__emal_43268__ivesplit_42415)); break; case SAC_HM_multi_threaded: SACp_pinl_46808__emal_43268__ivesplit_42415 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46808__emal_43268__ivesplit_42415__sz * sizeof (*SACp_pinl_46808__emal_43268__ivesplit_42415), 0); break; case SAC_HM_any_threaded: SACp_pinl_46808__emal_43268__ivesplit_42415 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46808__emal_43268__ivesplit_42415__sz * sizeof (*SACp_pinl_46808__emal_43268__ivesplit_42415), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46808__emal_43268__ivesplit_42415__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46808__emal_43268__ivesplit_42415__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46808__emal_43268__ivesplit_42415__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_46779__icc_4564__dim; SAC_i++) {
              { SACp_pinl_46808__emal_43268__ivesplit_42415[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46779__icc_4564__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_46778__icc_4563[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_46808__emal_43268__ivesplit_42415__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_46808__emal_43268__ivesplit_42415[SAC_i]);
              }
              SACp_pinl_46807__emal_43267__ivesli_42463 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46778__icc_4563__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46778__icc_4563__sz * sizeof (*SACp_pinl_46778__icc_4563)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46778__icc_4563, ((((SAC_HM_header_t *)SACp_pinl_46778__icc_4563) - 1)->data1.arena)); } else { if (SACp_pinl_46778__icc_4563__sz * sizeof (*SACp_pinl_46778__icc_4563) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46778__icc_4563) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46778__icc_4563, ((((SAC_HM_header_t *)SACp_pinl_46778__icc_4563) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46778__icc_4563, ((((SAC_HM_header_t *)SACp_pinl_46778__icc_4563) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46778__icc_4563__sz * sizeof (*SACp_pinl_46778__icc_4563))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46778__icc_4563, ((((SAC_HM_header_t *)SACp_pinl_46778__icc_4563) - 1)->data1.arena)); } else { if (((((SACp_pinl_46778__icc_4563__sz * sizeof (*SACp_pinl_46778__icc_4563))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46778__icc_4563) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46778__icc_4563, ((((SAC_HM_header_t *)SACp_pinl_46778__icc_4563) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46778__icc_4563, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46778__icc_4563); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46778__icc_4563); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46778__icc_4563, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46778__icc_4563); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46778__icc_4563); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46778__icc_4563__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_46808__emal_43268__ivesplit_42415); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46808__emal_43268__ivesplit_42415__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_46806__emal_43266__icc_4565 = ( SACp_pinl_46779__icc_4564[SACp_pinl_46807__emal_43267__ivesli_42463]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46779__icc_4564__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46779__icc_4564); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46779__icc_4564__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_46809__emal_43269__icc_4562_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            ; ; { SACp_pinl_46805__emal_43265__cwc_886 = (SACp_pinl_46806__emal_43266__icc_4565) == (2); };
            { ; ; }
            { { if (!((1 == SACp_pinl_46804__emal_43264__cwc_888__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46804__emal_43264__cwc_888"); }; { { if ((((SACp_pinl_46804__emal_43264__cwc_888__sz * sizeof (*SACp_pinl_46804__emal_43264__cwc_888)) + ((6 + (SACp_pinl_46804__emal_43264__cwc_888__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46804__emal_43264__cwc_888__sz * sizeof (*SACp_pinl_46804__emal_43264__cwc_888)) + ((6 + (SACp_pinl_46804__emal_43264__cwc_888__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46804__emal_43264__cwc_888__sz * sizeof (*SACp_pinl_46804__emal_43264__cwc_888)) + ((6 + (SACp_pinl_46804__emal_43264__cwc_888__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46804__emal_43264__cwc_888 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46804__emal_43264__cwc_888 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46804__emal_43264__cwc_888__sz * sizeof (*SACp_pinl_46804__emal_43264__cwc_888)) + ((6 + (SACp_pinl_46804__emal_43264__cwc_888__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46804__emal_43264__cwc_888 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46804__emal_43264__cwc_888 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46804__emal_43264__cwc_888__sz * sizeof (*SACp_pinl_46804__emal_43264__cwc_888)) + ((6 + (SACp_pinl_46804__emal_43264__cwc_888__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46804__emal_43264__cwc_888__sz * sizeof (*SACp_pinl_46804__emal_43264__cwc_888)) + ((6 + (SACp_pinl_46804__emal_43264__cwc_888__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46804__emal_43264__cwc_888__sz * sizeof (*SACp_pinl_46804__emal_43264__cwc_888)) + ((6 + (SACp_pinl_46804__emal_43264__cwc_888__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46804__emal_43264__cwc_888__sz * sizeof (*SACp_pinl_46804__emal_43264__cwc_888)) + ((6 + (SACp_pinl_46804__emal_43264__cwc_888__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46804__emal_43264__cwc_888__sz * sizeof (*SACp_pinl_46804__emal_43264__cwc_888)) + ((6 + (SACp_pinl_46804__emal_43264__cwc_888__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46804__emal_43264__cwc_888 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46804__emal_43264__cwc_888 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46804__emal_43264__cwc_888 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46804__emal_43264__cwc_888 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46804__emal_43264__cwc_888__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46804__emal_43264__cwc_888, SACp_pinl_46804__emal_43264__cwc_888__sz * sizeof (*SACp_pinl_46804__emal_43264__cwc_888), ((6 + (SACp_pinl_46804__emal_43264__cwc_888__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46804__emal_43264__cwc_888__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46804__emal_43264__cwc_888__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46804__emal_43264__cwc_888__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46804__emal_43264__cwc_888__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46804__emal_43264__cwc_888__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_46804__emal_43264__cwc_888[0] = 1; }




            if ((SACp_pinl_46804__emal_43264__cwc_888__dim != 1) && (SACp_pinl_46804__emal_43264__cwc_888__shp0 != SACp_pinl_46811__emal_43271__cwc_880__dim)) {
              SACp_pinl_46803__emal_43263__icc_4568_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46804__emal_43264__cwc_888""' with shape %s ""And `" "SACp_pinl_46811__emal_43271__cwc_880""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46804__emal_43264__cwc_888__desc), SAC_PrintShape (SACp_pinl_46811__emal_43271__cwc_880__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_46804__emal_43264__cwc_888[0]) >= SACp_pinl_46811__emal_43271__cwc_880__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46804__emal_43264__cwc_888""' with shape %s ""And `" "SACp_pinl_46811__emal_43271__cwc_880""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46804__emal_43264__cwc_888__desc), SAC_PrintShape (SACp_pinl_46811__emal_43271__cwc_880__desc));
              }
              SACp_pinl_46803__emal_43263__icc_4568_pred = SAC_all;
            }




            if (!((SACp_pinl_46793__idc_4577__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46793__idc_4577__shp0 == SACp_pinl_46804__emal_43264__cwc_888__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46793__idc_4577__desc = SACp_pinl_46804__emal_43264__cwc_888__desc;
            ;
            ;
            { SACp_pinl_46793__idc_4577 = SACp_pinl_46804__emal_43264__cwc_888; }

            if (!SACp_pinl_46803__emal_43263__icc_4568_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_46782__icc_4570__desc = SACp_pinl_46811__emal_43271__cwc_880__desc;
            SACp_pinl_46782__icc_4570__sz = SACp_pinl_46811__emal_43271__cwc_880__sz;
            SACp_pinl_46782__icc_4570__dim = SACp_pinl_46811__emal_43271__cwc_880__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46782__icc_4570__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46811__emal_43271__cwc_880__dim;
            { SACp_pinl_46782__icc_4570 = SACp_pinl_46811__emal_43271__cwc_880; }




            if (!((SACp_pinl_46781__icc_4569__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46781__icc_4569__shp0 == SACp_pinl_46793__idc_4577__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46781__icc_4569__desc = SACp_pinl_46793__idc_4577__desc;
            ;
            ;
            { SACp_pinl_46781__icc_4569 = SACp_pinl_46793__idc_4577; }

            { { if (!((1 == SACp_pinl_46802__emal_43262__ivesplit_42417__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46802__emal_43262__ivesplit_42417"); }; { if ((((6 + (SACp_pinl_46802__emal_43262__ivesplit_42417__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46802__emal_43262__ivesplit_42417__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46802__emal_43262__ivesplit_42417__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46802__emal_43262__ivesplit_42417__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46802__emal_43262__ivesplit_42417__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46802__emal_43262__ivesplit_42417__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46802__emal_43262__ivesplit_42417__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46802__emal_43262__ivesplit_42417__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46802__emal_43262__ivesplit_42417__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46802__emal_43262__ivesplit_42417__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46802__emal_43262__ivesplit_42417__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46802__emal_43262__ivesplit_42417__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46802__emal_43262__ivesplit_42417__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46802__emal_43262__ivesplit_42417__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46802__emal_43262__ivesplit_42417__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46802__emal_43262__ivesplit_42417__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46802__emal_43262__ivesplit_42417__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46802__emal_43262__ivesplit_42417__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46802__emal_43262__ivesplit_42417__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46802__emal_43262__ivesplit_42417__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46802__emal_43262__ivesplit_42417__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_46802__emal_43262__ivesplit_42417__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46802__emal_43262__ivesplit_42417__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46782__icc_4570__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46802__emal_43262__ivesplit_42417__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46802__emal_43262__ivesplit_42417__sz = SAC_size;
              if (!((SACp_pinl_46802__emal_43262__ivesplit_42417__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5734 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 5734 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5734 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 5734 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5734 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 5734 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5734 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 5734, __extension__ __PRETTY_FUNCTION__); }))
# 5734 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_46802__emal_43262__ivesplit_42417 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46802__emal_43262__ivesplit_42417__sz * sizeof (*SACp_pinl_46802__emal_43262__ivesplit_42417)); break; case SAC_HM_multi_threaded: SACp_pinl_46802__emal_43262__ivesplit_42417 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46802__emal_43262__ivesplit_42417__sz * sizeof (*SACp_pinl_46802__emal_43262__ivesplit_42417), 0); break; case SAC_HM_any_threaded: SACp_pinl_46802__emal_43262__ivesplit_42417 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46802__emal_43262__ivesplit_42417__sz * sizeof (*SACp_pinl_46802__emal_43262__ivesplit_42417), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46802__emal_43262__ivesplit_42417__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46802__emal_43262__ivesplit_42417__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46802__emal_43262__ivesplit_42417__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_46782__icc_4570__dim; SAC_i++) {
              { SACp_pinl_46802__emal_43262__ivesplit_42417[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46782__icc_4570__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_46781__icc_4569[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_46802__emal_43262__ivesplit_42417__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_46802__emal_43262__ivesplit_42417[SAC_i]);
              }
              SACp_pinl_46801__emal_43261__ivesli_42462 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46781__icc_4569__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46781__icc_4569__sz * sizeof (*SACp_pinl_46781__icc_4569)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46781__icc_4569, ((((SAC_HM_header_t *)SACp_pinl_46781__icc_4569) - 1)->data1.arena)); } else { if (SACp_pinl_46781__icc_4569__sz * sizeof (*SACp_pinl_46781__icc_4569) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46781__icc_4569) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46781__icc_4569, ((((SAC_HM_header_t *)SACp_pinl_46781__icc_4569) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46781__icc_4569, ((((SAC_HM_header_t *)SACp_pinl_46781__icc_4569) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46781__icc_4569__sz * sizeof (*SACp_pinl_46781__icc_4569))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46781__icc_4569, ((((SAC_HM_header_t *)SACp_pinl_46781__icc_4569) - 1)->data1.arena)); } else { if (((((SACp_pinl_46781__icc_4569__sz * sizeof (*SACp_pinl_46781__icc_4569))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46781__icc_4569) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46781__icc_4569, ((((SAC_HM_header_t *)SACp_pinl_46781__icc_4569) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46781__icc_4569, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46781__icc_4569); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46781__icc_4569); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46781__icc_4569, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46781__icc_4569); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46781__icc_4569); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46781__icc_4569__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_46802__emal_43262__ivesplit_42417); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46802__emal_43262__ivesplit_42417__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_46800__emal_43260__icc_4571 = ( SACp_pinl_46782__icc_4570[SACp_pinl_46801__emal_43261__ivesli_42462]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46782__icc_4570__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46782__icc_4570); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46782__icc_4570__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_46803__emal_43263__icc_4568_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            { ; ;



            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            ;

            }
            ; ; { SACp_pinl_46799__emal_43259__cwc_891 = (SACp_pinl_46800__emal_43260__icc_4571) == (3); };
            { ; ; }
            ; ; { SACp_pinl_46799__emal_43259__cwc_891 = (SACp_pinl_46799__emal_43259__cwc_891) & (SACp_pinl_46805__emal_43265__cwc_886); };
            { ; ; }
            if (SACp_pinl_46799__emal_43259__cwc_891)
            {
              { ; ; }



              SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




              SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

            }
            else
            {
              { ; ; }



              SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




              SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

            }
          }
          else
          {
            { ; ; }



            SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

          }
        }
      }
      else
      {
        { ; ; }
        ; ; { SACp_pinl_46735__emal_43167__cwc_876 = (SACp_pinl_46661__emal_43159__cwc_804) == (2); };
        { ; ; }
        if (SACp_pinl_46735__emal_43167__cwc_876)
        {
          { ; ; }
          { { if (!((1 == SACp_pinl_46847__emal_43181__cwc_834__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46847__emal_43181__cwc_834"); }; { if ((((6 + (SACp_pinl_46847__emal_43181__cwc_834__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46847__emal_43181__cwc_834__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46847__emal_43181__cwc_834__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46847__emal_43181__cwc_834__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46847__emal_43181__cwc_834__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46847__emal_43181__cwc_834__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46847__emal_43181__cwc_834__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46847__emal_43181__cwc_834__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46847__emal_43181__cwc_834__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46847__emal_43181__cwc_834__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46847__emal_43181__cwc_834__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46847__emal_43181__cwc_834__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46847__emal_43181__cwc_834__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46847__emal_43181__cwc_834__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46847__emal_43181__cwc_834__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46847__emal_43181__cwc_834__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46847__emal_43181__cwc_834__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46847__emal_43181__cwc_834__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46847__emal_43181__cwc_834__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46847__emal_43181__cwc_834__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_46847__emal_43181__cwc_834__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          {

            int SAC_size = 1;
            SAC_size *=
            SACp_pinl_46847__emal_43181__cwc_834__shp0 =
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46847__emal_43181__cwc_834__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46847__emal_43181__cwc_834__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46847__emal_43181__cwc_834__sz = SAC_size;
            if (!((SACp_pinl_46847__emal_43181__cwc_834__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
          }

          { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5854 "/home/rubenhensen/sac/a.out.c" 3 4
         ((void) sizeof ((
# 5854 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5854 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ? 1 : 0), __extension__ ({ if (
# 5854 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5854 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ; else __assert_fail (
# 5854 "/home/rubenhensen/sac/a.out.c"
         "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5854 "/home/rubenhensen/sac/a.out.c" 3 4
         , "/home/rubenhensen/sac/a.out.c", 5854, __extension__ __PRETTY_FUNCTION__); }))
# 5854 "/home/rubenhensen/sac/a.out.c"
         ; SACp_pinl_46847__emal_43181__cwc_834 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46847__emal_43181__cwc_834__sz * sizeof (*SACp_pinl_46847__emal_43181__cwc_834)); break; case SAC_HM_multi_threaded: SACp_pinl_46847__emal_43181__cwc_834 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46847__emal_43181__cwc_834__sz * sizeof (*SACp_pinl_46847__emal_43181__cwc_834), 0); break; case SAC_HM_any_threaded: SACp_pinl_46847__emal_43181__cwc_834 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46847__emal_43181__cwc_834__sz * sizeof (*SACp_pinl_46847__emal_43181__cwc_834), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46847__emal_43181__cwc_834__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46847__emal_43181__cwc_834__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46847__emal_43181__cwc_834__desc) & (-1 ^ (3))))[1]) = 0; } }



         
          for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
            { SACp_pinl_46847__emal_43181__cwc_834[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
          }

          { { if (!((1 == SACp_pinl_46846__emal_43180__cwc_865__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46846__emal_43180__cwc_865"); }; { { if ((((SACp_pinl_46846__emal_43180__cwc_865__sz * sizeof (*SACp_pinl_46846__emal_43180__cwc_865)) + ((6 + (SACp_pinl_46846__emal_43180__cwc_865__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46846__emal_43180__cwc_865__sz * sizeof (*SACp_pinl_46846__emal_43180__cwc_865)) + ((6 + (SACp_pinl_46846__emal_43180__cwc_865__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46846__emal_43180__cwc_865__sz * sizeof (*SACp_pinl_46846__emal_43180__cwc_865)) + ((6 + (SACp_pinl_46846__emal_43180__cwc_865__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46846__emal_43180__cwc_865 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46846__emal_43180__cwc_865 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46846__emal_43180__cwc_865__sz * sizeof (*SACp_pinl_46846__emal_43180__cwc_865)) + ((6 + (SACp_pinl_46846__emal_43180__cwc_865__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46846__emal_43180__cwc_865 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46846__emal_43180__cwc_865 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46846__emal_43180__cwc_865__sz * sizeof (*SACp_pinl_46846__emal_43180__cwc_865)) + ((6 + (SACp_pinl_46846__emal_43180__cwc_865__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46846__emal_43180__cwc_865__sz * sizeof (*SACp_pinl_46846__emal_43180__cwc_865)) + ((6 + (SACp_pinl_46846__emal_43180__cwc_865__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46846__emal_43180__cwc_865__sz * sizeof (*SACp_pinl_46846__emal_43180__cwc_865)) + ((6 + (SACp_pinl_46846__emal_43180__cwc_865__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46846__emal_43180__cwc_865__sz * sizeof (*SACp_pinl_46846__emal_43180__cwc_865)) + ((6 + (SACp_pinl_46846__emal_43180__cwc_865__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46846__emal_43180__cwc_865__sz * sizeof (*SACp_pinl_46846__emal_43180__cwc_865)) + ((6 + (SACp_pinl_46846__emal_43180__cwc_865__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46846__emal_43180__cwc_865 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46846__emal_43180__cwc_865 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46846__emal_43180__cwc_865 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46846__emal_43180__cwc_865 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46846__emal_43180__cwc_865__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46846__emal_43180__cwc_865, SACp_pinl_46846__emal_43180__cwc_865__sz * sizeof (*SACp_pinl_46846__emal_43180__cwc_865), ((6 + (SACp_pinl_46846__emal_43180__cwc_865__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46846__emal_43180__cwc_865__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46846__emal_43180__cwc_865__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46846__emal_43180__cwc_865__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_46846__emal_43180__cwc_865__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_46846__emal_43180__cwc_865__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          ;

          }



          { SACp_pinl_46846__emal_43180__cwc_865[0] = 0; }




          if ((SACp_pinl_46846__emal_43180__cwc_865__dim != 1) && (SACp_pinl_46846__emal_43180__cwc_865__shp0 != SACp_pinl_46847__emal_43181__cwc_834__dim)) {
            SACp_pinl_46845__emal_43179__icc_4580_pred = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46846__emal_43180__cwc_865""' with shape %s ""And `" "SACp_pinl_46847__emal_43181__cwc_834""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46846__emal_43180__cwc_865__desc), SAC_PrintShape (SACp_pinl_46847__emal_43181__cwc_834__desc));
          }
          else {
            int SAC_all = 1; if (0 || (( SACp_pinl_46846__emal_43180__cwc_865[0]) >= SACp_pinl_46847__emal_43181__cwc_834__shp0))
            {

              SAC_all = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46846__emal_43180__cwc_865""' with shape %s ""And `" "SACp_pinl_46847__emal_43181__cwc_834""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46846__emal_43180__cwc_865__desc), SAC_PrintShape (SACp_pinl_46847__emal_43181__cwc_834__desc));
            }
            SACp_pinl_46845__emal_43179__icc_4580_pred = SAC_all;
          }




          if (!((SACp_pinl_46827__idc_4592__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_46827__idc_4592__shp0 == SACp_pinl_46846__emal_43180__cwc_865__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          SACp_pinl_46827__idc_4592__desc = SACp_pinl_46846__emal_43180__cwc_865__desc;
          ;
          ;
          { SACp_pinl_46827__idc_4592 = SACp_pinl_46846__emal_43180__cwc_865; }

          if (!SACp_pinl_46845__emal_43179__icc_4580_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



          SACp_pinl_46813__icc_4582__desc = SACp_pinl_46847__emal_43181__cwc_834__desc;
          SACp_pinl_46813__icc_4582__sz = SACp_pinl_46847__emal_43181__cwc_834__sz;
          SACp_pinl_46813__icc_4582__dim = SACp_pinl_46847__emal_43181__cwc_834__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46813__icc_4582__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46847__emal_43181__cwc_834__dim;
          { SACp_pinl_46813__icc_4582 = SACp_pinl_46847__emal_43181__cwc_834; }




          if (!((SACp_pinl_46812__icc_4581__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_46812__icc_4581__shp0 == SACp_pinl_46827__idc_4592__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          SACp_pinl_46812__icc_4581__desc = SACp_pinl_46827__idc_4592__desc;
          ;
          ;
          { SACp_pinl_46812__icc_4581 = SACp_pinl_46827__idc_4592; }

          { { if (!((1 == SACp_pinl_46844__emal_43178__ivesplit_42393__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46844__emal_43178__ivesplit_42393"); }; { if ((((6 + (SACp_pinl_46844__emal_43178__ivesplit_42393__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46844__emal_43178__ivesplit_42393__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46844__emal_43178__ivesplit_42393__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46844__emal_43178__ivesplit_42393__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46844__emal_43178__ivesplit_42393__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46844__emal_43178__ivesplit_42393__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46844__emal_43178__ivesplit_42393__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46844__emal_43178__ivesplit_42393__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46844__emal_43178__ivesplit_42393__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46844__emal_43178__ivesplit_42393__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46844__emal_43178__ivesplit_42393__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46844__emal_43178__ivesplit_42393__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46844__emal_43178__ivesplit_42393__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46844__emal_43178__ivesplit_42393__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46844__emal_43178__ivesplit_42393__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46844__emal_43178__ivesplit_42393__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46844__emal_43178__ivesplit_42393__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46844__emal_43178__ivesplit_42393__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46844__emal_43178__ivesplit_42393__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46844__emal_43178__ivesplit_42393__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_46844__emal_43178__ivesplit_42393__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          {

            int SAC_size = 1;
            SAC_size *=
            SACp_pinl_46844__emal_43178__ivesplit_42393__shp0 =
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46844__emal_43178__ivesplit_42393__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46813__icc_4582__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46844__emal_43178__ivesplit_42393__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46844__emal_43178__ivesplit_42393__sz = SAC_size;
            if (!((SACp_pinl_46844__emal_43178__ivesplit_42393__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
          }

          { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5939 "/home/rubenhensen/sac/a.out.c" 3 4
         ((void) sizeof ((
# 5939 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5939 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ? 1 : 0), __extension__ ({ if (
# 5939 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5939 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ; else __assert_fail (
# 5939 "/home/rubenhensen/sac/a.out.c"
         "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5939 "/home/rubenhensen/sac/a.out.c" 3 4
         , "/home/rubenhensen/sac/a.out.c", 5939, __extension__ __PRETTY_FUNCTION__); }))
# 5939 "/home/rubenhensen/sac/a.out.c"
         ; SACp_pinl_46844__emal_43178__ivesplit_42393 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46844__emal_43178__ivesplit_42393__sz * sizeof (*SACp_pinl_46844__emal_43178__ivesplit_42393)); break; case SAC_HM_multi_threaded: SACp_pinl_46844__emal_43178__ivesplit_42393 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46844__emal_43178__ivesplit_42393__sz * sizeof (*SACp_pinl_46844__emal_43178__ivesplit_42393), 0); break; case SAC_HM_any_threaded: SACp_pinl_46844__emal_43178__ivesplit_42393 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46844__emal_43178__ivesplit_42393__sz * sizeof (*SACp_pinl_46844__emal_43178__ivesplit_42393), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46844__emal_43178__ivesplit_42393__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46844__emal_43178__ivesplit_42393__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46844__emal_43178__ivesplit_42393__desc) & (-1 ^ (3))))[1]) = 0; } }



         
          for (int SAC_i = 0; SAC_i < SACp_pinl_46813__icc_4582__dim; SAC_i++) {
            { SACp_pinl_46844__emal_43178__ivesplit_42393[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46813__icc_4582__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
          }




          {
            int SAC_i, SAC_l;
            SAC_l = 0;
            SAC_l = ( SACp_pinl_46812__icc_4581[0]);
            for (SAC_i = (1); SAC_i < SACp_pinl_46844__emal_43178__ivesplit_42393__sz; SAC_i++)
            {

              SAC_l *= ( SACp_pinl_46844__emal_43178__ivesplit_42393[SAC_i]);
            }
            SACp_pinl_46843__emal_43177__ivesli_42452 = SAC_l;
          }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46812__icc_4581__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46812__icc_4581__sz * sizeof (*SACp_pinl_46812__icc_4581)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46812__icc_4581, ((((SAC_HM_header_t *)SACp_pinl_46812__icc_4581) - 1)->data1.arena)); } else { if (SACp_pinl_46812__icc_4581__sz * sizeof (*SACp_pinl_46812__icc_4581) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46812__icc_4581) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46812__icc_4581, ((((SAC_HM_header_t *)SACp_pinl_46812__icc_4581) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46812__icc_4581, ((((SAC_HM_header_t *)SACp_pinl_46812__icc_4581) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46812__icc_4581__sz * sizeof (*SACp_pinl_46812__icc_4581))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46812__icc_4581, ((((SAC_HM_header_t *)SACp_pinl_46812__icc_4581) - 1)->data1.arena)); } else { if (((((SACp_pinl_46812__icc_4581__sz * sizeof (*SACp_pinl_46812__icc_4581))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46812__icc_4581) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46812__icc_4581, ((((SAC_HM_header_t *)SACp_pinl_46812__icc_4581) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46812__icc_4581, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46812__icc_4581); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46812__icc_4581); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46812__icc_4581, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46812__icc_4581); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46812__icc_4581); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46812__icc_4581__desc) & (-1 ^ (3))))); } } } } else { } }
          { { free (SACp_pinl_46844__emal_43178__ivesplit_42393); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46844__emal_43178__ivesplit_42393__desc) & (-1 ^ (3))))); } } }



         
          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
          { SACp_pinl_46842__emal_43176__icc_4583 = ( SACp_pinl_46813__icc_4582[SACp_pinl_46843__emal_43177__ivesli_42452]); }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46813__icc_4582__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46813__icc_4582); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46813__icc_4582__desc) & (-1 ^ (3))))); } } } } else { } }
          { ; ; }
          if (!SACp_pinl_46845__emal_43179__icc_4580_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
          { ; ; }
          ; ; { SACp_pinl_46841__emal_43175__cwc_868 = (SACp_pinl_46842__emal_43176__icc_4583) == (2); };
          { ; ; }
          { { if (!((1 == SACp_pinl_46840__emal_43174__cwc_870__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46840__emal_43174__cwc_870"); }; { { if ((((SACp_pinl_46840__emal_43174__cwc_870__sz * sizeof (*SACp_pinl_46840__emal_43174__cwc_870)) + ((6 + (SACp_pinl_46840__emal_43174__cwc_870__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46840__emal_43174__cwc_870__sz * sizeof (*SACp_pinl_46840__emal_43174__cwc_870)) + ((6 + (SACp_pinl_46840__emal_43174__cwc_870__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46840__emal_43174__cwc_870__sz * sizeof (*SACp_pinl_46840__emal_43174__cwc_870)) + ((6 + (SACp_pinl_46840__emal_43174__cwc_870__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46840__emal_43174__cwc_870 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46840__emal_43174__cwc_870 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46840__emal_43174__cwc_870__sz * sizeof (*SACp_pinl_46840__emal_43174__cwc_870)) + ((6 + (SACp_pinl_46840__emal_43174__cwc_870__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46840__emal_43174__cwc_870 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46840__emal_43174__cwc_870 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46840__emal_43174__cwc_870__sz * sizeof (*SACp_pinl_46840__emal_43174__cwc_870)) + ((6 + (SACp_pinl_46840__emal_43174__cwc_870__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46840__emal_43174__cwc_870__sz * sizeof (*SACp_pinl_46840__emal_43174__cwc_870)) + ((6 + (SACp_pinl_46840__emal_43174__cwc_870__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46840__emal_43174__cwc_870__sz * sizeof (*SACp_pinl_46840__emal_43174__cwc_870)) + ((6 + (SACp_pinl_46840__emal_43174__cwc_870__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46840__emal_43174__cwc_870__sz * sizeof (*SACp_pinl_46840__emal_43174__cwc_870)) + ((6 + (SACp_pinl_46840__emal_43174__cwc_870__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46840__emal_43174__cwc_870__sz * sizeof (*SACp_pinl_46840__emal_43174__cwc_870)) + ((6 + (SACp_pinl_46840__emal_43174__cwc_870__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46840__emal_43174__cwc_870 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46840__emal_43174__cwc_870 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46840__emal_43174__cwc_870 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46840__emal_43174__cwc_870 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46840__emal_43174__cwc_870__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46840__emal_43174__cwc_870, SACp_pinl_46840__emal_43174__cwc_870__sz * sizeof (*SACp_pinl_46840__emal_43174__cwc_870), ((6 + (SACp_pinl_46840__emal_43174__cwc_870__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46840__emal_43174__cwc_870__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46840__emal_43174__cwc_870__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46840__emal_43174__cwc_870__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_46840__emal_43174__cwc_870__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_46840__emal_43174__cwc_870__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          ;

          }



          { SACp_pinl_46840__emal_43174__cwc_870[0] = 1; }




          if ((SACp_pinl_46840__emal_43174__cwc_870__dim != 1) && (SACp_pinl_46840__emal_43174__cwc_870__shp0 != SACp_pinl_46847__emal_43181__cwc_834__dim)) {
            SACp_pinl_46839__emal_43173__icc_4586_pred = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46840__emal_43174__cwc_870""' with shape %s ""And `" "SACp_pinl_46847__emal_43181__cwc_834""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46840__emal_43174__cwc_870__desc), SAC_PrintShape (SACp_pinl_46847__emal_43181__cwc_834__desc));
          }
          else {
            int SAC_all = 1; if (0 || (( SACp_pinl_46840__emal_43174__cwc_870[0]) >= SACp_pinl_46847__emal_43181__cwc_834__shp0))
            {

              SAC_all = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46840__emal_43174__cwc_870""' with shape %s ""And `" "SACp_pinl_46847__emal_43181__cwc_834""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46840__emal_43174__cwc_870__desc), SAC_PrintShape (SACp_pinl_46847__emal_43181__cwc_834__desc));
            }
            SACp_pinl_46839__emal_43173__icc_4586_pred = SAC_all;
          }




          if (!((SACp_pinl_46829__idc_4595__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_46829__idc_4595__shp0 == SACp_pinl_46840__emal_43174__cwc_870__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          SACp_pinl_46829__idc_4595__desc = SACp_pinl_46840__emal_43174__cwc_870__desc;
          ;
          ;
          { SACp_pinl_46829__idc_4595 = SACp_pinl_46840__emal_43174__cwc_870; }

          if (!SACp_pinl_46839__emal_43173__icc_4586_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



          SACp_pinl_46816__icc_4588__desc = SACp_pinl_46847__emal_43181__cwc_834__desc;
          SACp_pinl_46816__icc_4588__sz = SACp_pinl_46847__emal_43181__cwc_834__sz;
          SACp_pinl_46816__icc_4588__dim = SACp_pinl_46847__emal_43181__cwc_834__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46816__icc_4588__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46847__emal_43181__cwc_834__dim;
          { SACp_pinl_46816__icc_4588 = SACp_pinl_46847__emal_43181__cwc_834; }




          if (!((SACp_pinl_46815__icc_4587__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_46815__icc_4587__shp0 == SACp_pinl_46829__idc_4595__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          SACp_pinl_46815__icc_4587__desc = SACp_pinl_46829__idc_4595__desc;
          ;
          ;
          { SACp_pinl_46815__icc_4587 = SACp_pinl_46829__idc_4595; }

          { { if (!((1 == SACp_pinl_46838__emal_43172__ivesplit_42395__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46838__emal_43172__ivesplit_42395"); }; { if ((((6 + (SACp_pinl_46838__emal_43172__ivesplit_42395__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46838__emal_43172__ivesplit_42395__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46838__emal_43172__ivesplit_42395__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46838__emal_43172__ivesplit_42395__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46838__emal_43172__ivesplit_42395__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46838__emal_43172__ivesplit_42395__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46838__emal_43172__ivesplit_42395__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46838__emal_43172__ivesplit_42395__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46838__emal_43172__ivesplit_42395__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46838__emal_43172__ivesplit_42395__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46838__emal_43172__ivesplit_42395__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46838__emal_43172__ivesplit_42395__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46838__emal_43172__ivesplit_42395__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46838__emal_43172__ivesplit_42395__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46838__emal_43172__ivesplit_42395__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46838__emal_43172__ivesplit_42395__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46838__emal_43172__ivesplit_42395__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46838__emal_43172__ivesplit_42395__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46838__emal_43172__ivesplit_42395__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46838__emal_43172__ivesplit_42395__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_46838__emal_43172__ivesplit_42395__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          {

            int SAC_size = 1;
            SAC_size *=
            SACp_pinl_46838__emal_43172__ivesplit_42395__shp0 =
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46838__emal_43172__ivesplit_42395__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46816__icc_4588__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46838__emal_43172__ivesplit_42395__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46838__emal_43172__ivesplit_42395__sz = SAC_size;
            if (!((SACp_pinl_46838__emal_43172__ivesplit_42395__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
          }

          { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6054 "/home/rubenhensen/sac/a.out.c" 3 4
         ((void) sizeof ((
# 6054 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6054 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ? 1 : 0), __extension__ ({ if (
# 6054 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6054 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ; else __assert_fail (
# 6054 "/home/rubenhensen/sac/a.out.c"
         "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6054 "/home/rubenhensen/sac/a.out.c" 3 4
         , "/home/rubenhensen/sac/a.out.c", 6054, __extension__ __PRETTY_FUNCTION__); }))
# 6054 "/home/rubenhensen/sac/a.out.c"
         ; SACp_pinl_46838__emal_43172__ivesplit_42395 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46838__emal_43172__ivesplit_42395__sz * sizeof (*SACp_pinl_46838__emal_43172__ivesplit_42395)); break; case SAC_HM_multi_threaded: SACp_pinl_46838__emal_43172__ivesplit_42395 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46838__emal_43172__ivesplit_42395__sz * sizeof (*SACp_pinl_46838__emal_43172__ivesplit_42395), 0); break; case SAC_HM_any_threaded: SACp_pinl_46838__emal_43172__ivesplit_42395 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46838__emal_43172__ivesplit_42395__sz * sizeof (*SACp_pinl_46838__emal_43172__ivesplit_42395), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46838__emal_43172__ivesplit_42395__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46838__emal_43172__ivesplit_42395__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46838__emal_43172__ivesplit_42395__desc) & (-1 ^ (3))))[1]) = 0; } }



         
          for (int SAC_i = 0; SAC_i < SACp_pinl_46816__icc_4588__dim; SAC_i++) {
            { SACp_pinl_46838__emal_43172__ivesplit_42395[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46816__icc_4588__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
          }




          {
            int SAC_i, SAC_l;
            SAC_l = 0;
            SAC_l = ( SACp_pinl_46815__icc_4587[0]);
            for (SAC_i = (1); SAC_i < SACp_pinl_46838__emal_43172__ivesplit_42395__sz; SAC_i++)
            {

              SAC_l *= ( SACp_pinl_46838__emal_43172__ivesplit_42395[SAC_i]);
            }
            SACp_pinl_46837__emal_43171__ivesli_42451 = SAC_l;
          }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46815__icc_4587__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46815__icc_4587__sz * sizeof (*SACp_pinl_46815__icc_4587)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46815__icc_4587, ((((SAC_HM_header_t *)SACp_pinl_46815__icc_4587) - 1)->data1.arena)); } else { if (SACp_pinl_46815__icc_4587__sz * sizeof (*SACp_pinl_46815__icc_4587) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46815__icc_4587) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46815__icc_4587, ((((SAC_HM_header_t *)SACp_pinl_46815__icc_4587) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46815__icc_4587, ((((SAC_HM_header_t *)SACp_pinl_46815__icc_4587) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46815__icc_4587__sz * sizeof (*SACp_pinl_46815__icc_4587))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46815__icc_4587, ((((SAC_HM_header_t *)SACp_pinl_46815__icc_4587) - 1)->data1.arena)); } else { if (((((SACp_pinl_46815__icc_4587__sz * sizeof (*SACp_pinl_46815__icc_4587))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46815__icc_4587) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46815__icc_4587, ((((SAC_HM_header_t *)SACp_pinl_46815__icc_4587) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46815__icc_4587, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46815__icc_4587); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46815__icc_4587); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46815__icc_4587, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46815__icc_4587); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46815__icc_4587); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46815__icc_4587__desc) & (-1 ^ (3))))); } } } } else { } }
          { { free (SACp_pinl_46838__emal_43172__ivesplit_42395); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46838__emal_43172__ivesplit_42395__desc) & (-1 ^ (3))))); } } }



         
          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
          { SACp_pinl_46836__emal_43170__icc_4589 = ( SACp_pinl_46816__icc_4588[SACp_pinl_46837__emal_43171__ivesli_42451]); }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46816__icc_4588__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46816__icc_4588); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46816__icc_4588__desc) & (-1 ^ (3))))); } } } } else { } }
          { ; ; }
          if (!SACp_pinl_46839__emal_43173__icc_4586_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
          { ; ; }
          { ; ;



          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
          ;

          }
          ; ; { SACp_pinl_46835__emal_43169__cwc_873 = (SACp_pinl_46836__emal_43170__icc_4589) == (3); };
          { ; ; }
          ; ; { SACp_pinl_46835__emal_43169__cwc_873 = (SACp_pinl_46835__emal_43169__cwc_873) & (SACp_pinl_46841__emal_43175__cwc_868); };
          { ; ; }
          if (SACp_pinl_46835__emal_43169__cwc_873)
          {
            { ; ; }
            { { SACp_pinl_46855__emal_43207__cwc_836 = SACl_b__dim; }; }
            ; ; { SACp_pinl_46854__emal_43206__cwc_863 = (SACp_pinl_46855__emal_43207__cwc_836) == (2); };
            if (SACp_pinl_46854__emal_43206__cwc_863)
            {
              { ; ; }
              { ; ; }
              { { if (!((1 == SACp_pinl_46892__emal_43245__cwc_849__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46892__emal_43245__cwc_849"); }; { if ((((6 + (SACp_pinl_46892__emal_43245__cwc_849__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46892__emal_43245__cwc_849__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46892__emal_43245__cwc_849__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46892__emal_43245__cwc_849__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46892__emal_43245__cwc_849__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46892__emal_43245__cwc_849__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46892__emal_43245__cwc_849__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46892__emal_43245__cwc_849__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46892__emal_43245__cwc_849__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46892__emal_43245__cwc_849__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46892__emal_43245__cwc_849__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46892__emal_43245__cwc_849__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46892__emal_43245__cwc_849__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46892__emal_43245__cwc_849__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46892__emal_43245__cwc_849__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46892__emal_43245__cwc_849__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46892__emal_43245__cwc_849__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46892__emal_43245__cwc_849__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46892__emal_43245__cwc_849__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46892__emal_43245__cwc_849__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_46892__emal_43245__cwc_849__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              {

                int SAC_size = 1;
                SAC_size *=
                SACp_pinl_46892__emal_43245__cwc_849__shp0 =
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46892__emal_43245__cwc_849__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46892__emal_43245__cwc_849__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46892__emal_43245__cwc_849__sz = SAC_size;
                if (!((SACp_pinl_46892__emal_43245__cwc_849__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
              }

              { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6127 "/home/rubenhensen/sac/a.out.c" 3 4
             ((void) sizeof ((
# 6127 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6127 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ? 1 : 0), __extension__ ({ if (
# 6127 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6127 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ; else __assert_fail (
# 6127 "/home/rubenhensen/sac/a.out.c"
             "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6127 "/home/rubenhensen/sac/a.out.c" 3 4
             , "/home/rubenhensen/sac/a.out.c", 6127, __extension__ __PRETTY_FUNCTION__); }))
# 6127 "/home/rubenhensen/sac/a.out.c"
             ; SACp_pinl_46892__emal_43245__cwc_849 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46892__emal_43245__cwc_849__sz * sizeof (*SACp_pinl_46892__emal_43245__cwc_849)); break; case SAC_HM_multi_threaded: SACp_pinl_46892__emal_43245__cwc_849 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46892__emal_43245__cwc_849__sz * sizeof (*SACp_pinl_46892__emal_43245__cwc_849), 0); break; case SAC_HM_any_threaded: SACp_pinl_46892__emal_43245__cwc_849 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46892__emal_43245__cwc_849__sz * sizeof (*SACp_pinl_46892__emal_43245__cwc_849), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46892__emal_43245__cwc_849__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46892__emal_43245__cwc_849__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46892__emal_43245__cwc_849__desc) & (-1 ^ (3))))[1]) = 0; } }



             
              for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
                { SACp_pinl_46892__emal_43245__cwc_849[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
              }

              { { if (!((1 == SACp_pinl_46891__emal_43244__cwc_852__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46891__emal_43244__cwc_852"); }; { { if ((((SACp_pinl_46891__emal_43244__cwc_852__sz * sizeof (*SACp_pinl_46891__emal_43244__cwc_852)) + ((6 + (SACp_pinl_46891__emal_43244__cwc_852__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46891__emal_43244__cwc_852__sz * sizeof (*SACp_pinl_46891__emal_43244__cwc_852)) + ((6 + (SACp_pinl_46891__emal_43244__cwc_852__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46891__emal_43244__cwc_852__sz * sizeof (*SACp_pinl_46891__emal_43244__cwc_852)) + ((6 + (SACp_pinl_46891__emal_43244__cwc_852__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46891__emal_43244__cwc_852 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46891__emal_43244__cwc_852 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46891__emal_43244__cwc_852__sz * sizeof (*SACp_pinl_46891__emal_43244__cwc_852)) + ((6 + (SACp_pinl_46891__emal_43244__cwc_852__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46891__emal_43244__cwc_852 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46891__emal_43244__cwc_852 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46891__emal_43244__cwc_852__sz * sizeof (*SACp_pinl_46891__emal_43244__cwc_852)) + ((6 + (SACp_pinl_46891__emal_43244__cwc_852__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46891__emal_43244__cwc_852__sz * sizeof (*SACp_pinl_46891__emal_43244__cwc_852)) + ((6 + (SACp_pinl_46891__emal_43244__cwc_852__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46891__emal_43244__cwc_852__sz * sizeof (*SACp_pinl_46891__emal_43244__cwc_852)) + ((6 + (SACp_pinl_46891__emal_43244__cwc_852__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46891__emal_43244__cwc_852__sz * sizeof (*SACp_pinl_46891__emal_43244__cwc_852)) + ((6 + (SACp_pinl_46891__emal_43244__cwc_852__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46891__emal_43244__cwc_852__sz * sizeof (*SACp_pinl_46891__emal_43244__cwc_852)) + ((6 + (SACp_pinl_46891__emal_43244__cwc_852__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46891__emal_43244__cwc_852 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46891__emal_43244__cwc_852 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46891__emal_43244__cwc_852 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46891__emal_43244__cwc_852 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46891__emal_43244__cwc_852__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46891__emal_43244__cwc_852, SACp_pinl_46891__emal_43244__cwc_852__sz * sizeof (*SACp_pinl_46891__emal_43244__cwc_852), ((6 + (SACp_pinl_46891__emal_43244__cwc_852__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46891__emal_43244__cwc_852__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46891__emal_43244__cwc_852__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46891__emal_43244__cwc_852__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_46891__emal_43244__cwc_852__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46891__emal_43244__cwc_852__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              ;

              }



              { SACp_pinl_46891__emal_43244__cwc_852[0] = 0; }




              if ((SACp_pinl_46891__emal_43244__cwc_852__dim != 1) && (SACp_pinl_46891__emal_43244__cwc_852__shp0 != SACp_pinl_46892__emal_43245__cwc_849__dim)) {
                SACp_pinl_46890__emal_43243__icc_4598_pred = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46891__emal_43244__cwc_852""' with shape %s ""And `" "SACp_pinl_46892__emal_43245__cwc_849""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46891__emal_43244__cwc_852__desc), SAC_PrintShape (SACp_pinl_46892__emal_43245__cwc_849__desc));
              }
              else {
                int SAC_all = 1; if (0 || (( SACp_pinl_46891__emal_43244__cwc_852[0]) >= SACp_pinl_46892__emal_43245__cwc_849__shp0))
                {

                  SAC_all = 0;
                  SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46891__emal_43244__cwc_852""' with shape %s ""And `" "SACp_pinl_46892__emal_43245__cwc_849""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46891__emal_43244__cwc_852__desc), SAC_PrintShape (SACp_pinl_46892__emal_43245__cwc_849__desc));
                }
                SACp_pinl_46890__emal_43243__icc_4598_pred = SAC_all;
              }




              if (!((SACp_pinl_46872__idc_4610__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46872__idc_4610__shp0 == SACp_pinl_46891__emal_43244__cwc_852__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              SACp_pinl_46872__idc_4610__desc = SACp_pinl_46891__emal_43244__cwc_852__desc;
              ;
              ;
              { SACp_pinl_46872__idc_4610 = SACp_pinl_46891__emal_43244__cwc_852; }

              if (!SACp_pinl_46890__emal_43243__icc_4598_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



              SACp_pinl_46859__icc_4600__desc = SACp_pinl_46892__emal_43245__cwc_849__desc;
              SACp_pinl_46859__icc_4600__sz = SACp_pinl_46892__emal_43245__cwc_849__sz;
              SACp_pinl_46859__icc_4600__dim = SACp_pinl_46892__emal_43245__cwc_849__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46859__icc_4600__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46892__emal_43245__cwc_849__dim;
              { SACp_pinl_46859__icc_4600 = SACp_pinl_46892__emal_43245__cwc_849; }




              if (!((SACp_pinl_46858__icc_4599__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46858__icc_4599__shp0 == SACp_pinl_46872__idc_4610__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              SACp_pinl_46858__icc_4599__desc = SACp_pinl_46872__idc_4610__desc;
              ;
              ;
              { SACp_pinl_46858__icc_4599 = SACp_pinl_46872__idc_4610; }

              { { if (!((1 == SACp_pinl_46889__emal_43242__ivesplit_42409__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46889__emal_43242__ivesplit_42409"); }; { if ((((6 + (SACp_pinl_46889__emal_43242__ivesplit_42409__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46889__emal_43242__ivesplit_42409__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46889__emal_43242__ivesplit_42409__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46889__emal_43242__ivesplit_42409__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46889__emal_43242__ivesplit_42409__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46889__emal_43242__ivesplit_42409__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46889__emal_43242__ivesplit_42409__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46889__emal_43242__ivesplit_42409__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46889__emal_43242__ivesplit_42409__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46889__emal_43242__ivesplit_42409__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46889__emal_43242__ivesplit_42409__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46889__emal_43242__ivesplit_42409__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46889__emal_43242__ivesplit_42409__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46889__emal_43242__ivesplit_42409__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46889__emal_43242__ivesplit_42409__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46889__emal_43242__ivesplit_42409__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46889__emal_43242__ivesplit_42409__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46889__emal_43242__ivesplit_42409__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46889__emal_43242__ivesplit_42409__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46889__emal_43242__ivesplit_42409__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_46889__emal_43242__ivesplit_42409__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              {

                int SAC_size = 1;
                SAC_size *=
                SACp_pinl_46889__emal_43242__ivesplit_42409__shp0 =
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46889__emal_43242__ivesplit_42409__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46859__icc_4600__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46889__emal_43242__ivesplit_42409__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46889__emal_43242__ivesplit_42409__sz = SAC_size;
                if (!((SACp_pinl_46889__emal_43242__ivesplit_42409__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
              }

              { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6212 "/home/rubenhensen/sac/a.out.c" 3 4
             ((void) sizeof ((
# 6212 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6212 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ? 1 : 0), __extension__ ({ if (
# 6212 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6212 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ; else __assert_fail (
# 6212 "/home/rubenhensen/sac/a.out.c"
             "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6212 "/home/rubenhensen/sac/a.out.c" 3 4
             , "/home/rubenhensen/sac/a.out.c", 6212, __extension__ __PRETTY_FUNCTION__); }))
# 6212 "/home/rubenhensen/sac/a.out.c"
             ; SACp_pinl_46889__emal_43242__ivesplit_42409 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46889__emal_43242__ivesplit_42409__sz * sizeof (*SACp_pinl_46889__emal_43242__ivesplit_42409)); break; case SAC_HM_multi_threaded: SACp_pinl_46889__emal_43242__ivesplit_42409 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46889__emal_43242__ivesplit_42409__sz * sizeof (*SACp_pinl_46889__emal_43242__ivesplit_42409), 0); break; case SAC_HM_any_threaded: SACp_pinl_46889__emal_43242__ivesplit_42409 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46889__emal_43242__ivesplit_42409__sz * sizeof (*SACp_pinl_46889__emal_43242__ivesplit_42409), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46889__emal_43242__ivesplit_42409__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46889__emal_43242__ivesplit_42409__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46889__emal_43242__ivesplit_42409__desc) & (-1 ^ (3))))[1]) = 0; } }



             
              for (int SAC_i = 0; SAC_i < SACp_pinl_46859__icc_4600__dim; SAC_i++) {
                { SACp_pinl_46889__emal_43242__ivesplit_42409[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46859__icc_4600__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
              }




              {
                int SAC_i, SAC_l;
                SAC_l = 0;
                SAC_l = ( SACp_pinl_46858__icc_4599[0]);
                for (SAC_i = (1); SAC_i < SACp_pinl_46889__emal_43242__ivesplit_42409__sz; SAC_i++)
                {

                  SAC_l *= ( SACp_pinl_46889__emal_43242__ivesplit_42409[SAC_i]);
                }
                SACp_pinl_46888__emal_43241__ivesli_42460 = SAC_l;
              }

              { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46858__icc_4599__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46858__icc_4599__sz * sizeof (*SACp_pinl_46858__icc_4599)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46858__icc_4599, ((((SAC_HM_header_t *)SACp_pinl_46858__icc_4599) - 1)->data1.arena)); } else { if (SACp_pinl_46858__icc_4599__sz * sizeof (*SACp_pinl_46858__icc_4599) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46858__icc_4599) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46858__icc_4599, ((((SAC_HM_header_t *)SACp_pinl_46858__icc_4599) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46858__icc_4599, ((((SAC_HM_header_t *)SACp_pinl_46858__icc_4599) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46858__icc_4599__sz * sizeof (*SACp_pinl_46858__icc_4599))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46858__icc_4599, ((((SAC_HM_header_t *)SACp_pinl_46858__icc_4599) - 1)->data1.arena)); } else { if (((((SACp_pinl_46858__icc_4599__sz * sizeof (*SACp_pinl_46858__icc_4599))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46858__icc_4599) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46858__icc_4599, ((((SAC_HM_header_t *)SACp_pinl_46858__icc_4599) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46858__icc_4599, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46858__icc_4599); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46858__icc_4599); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46858__icc_4599, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46858__icc_4599); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46858__icc_4599); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46858__icc_4599__desc) & (-1 ^ (3))))); } } } } else { } }
              { { free (SACp_pinl_46889__emal_43242__ivesplit_42409); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46889__emal_43242__ivesplit_42409__desc) & (-1 ^ (3))))); } } }



             
              if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
              { SACp_pinl_46887__emal_43240__icc_4601 = ( SACp_pinl_46859__icc_4600[SACp_pinl_46888__emal_43241__ivesli_42460]); }

              { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46859__icc_4600__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46859__icc_4600); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46859__icc_4600__desc) & (-1 ^ (3))))); } } } } else { } }
              { ; ; }
              if (!SACp_pinl_46890__emal_43243__icc_4598_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
              { ; ; }
              ; ; { SACp_pinl_46886__emal_43239__cwc_855 = (SACp_pinl_46887__emal_43240__icc_4601) == (2); };
              { ; ; }
              { { if (!((1 == SACp_pinl_46885__emal_43238__cwc_857__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46885__emal_43238__cwc_857"); }; { { if ((((SACp_pinl_46885__emal_43238__cwc_857__sz * sizeof (*SACp_pinl_46885__emal_43238__cwc_857)) + ((6 + (SACp_pinl_46885__emal_43238__cwc_857__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46885__emal_43238__cwc_857__sz * sizeof (*SACp_pinl_46885__emal_43238__cwc_857)) + ((6 + (SACp_pinl_46885__emal_43238__cwc_857__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46885__emal_43238__cwc_857__sz * sizeof (*SACp_pinl_46885__emal_43238__cwc_857)) + ((6 + (SACp_pinl_46885__emal_43238__cwc_857__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46885__emal_43238__cwc_857 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46885__emal_43238__cwc_857 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46885__emal_43238__cwc_857__sz * sizeof (*SACp_pinl_46885__emal_43238__cwc_857)) + ((6 + (SACp_pinl_46885__emal_43238__cwc_857__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46885__emal_43238__cwc_857 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46885__emal_43238__cwc_857 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46885__emal_43238__cwc_857__sz * sizeof (*SACp_pinl_46885__emal_43238__cwc_857)) + ((6 + (SACp_pinl_46885__emal_43238__cwc_857__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46885__emal_43238__cwc_857__sz * sizeof (*SACp_pinl_46885__emal_43238__cwc_857)) + ((6 + (SACp_pinl_46885__emal_43238__cwc_857__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46885__emal_43238__cwc_857__sz * sizeof (*SACp_pinl_46885__emal_43238__cwc_857)) + ((6 + (SACp_pinl_46885__emal_43238__cwc_857__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46885__emal_43238__cwc_857__sz * sizeof (*SACp_pinl_46885__emal_43238__cwc_857)) + ((6 + (SACp_pinl_46885__emal_43238__cwc_857__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46885__emal_43238__cwc_857__sz * sizeof (*SACp_pinl_46885__emal_43238__cwc_857)) + ((6 + (SACp_pinl_46885__emal_43238__cwc_857__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46885__emal_43238__cwc_857 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46885__emal_43238__cwc_857 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46885__emal_43238__cwc_857 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46885__emal_43238__cwc_857 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46885__emal_43238__cwc_857__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46885__emal_43238__cwc_857, SACp_pinl_46885__emal_43238__cwc_857__sz * sizeof (*SACp_pinl_46885__emal_43238__cwc_857), ((6 + (SACp_pinl_46885__emal_43238__cwc_857__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46885__emal_43238__cwc_857__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46885__emal_43238__cwc_857__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46885__emal_43238__cwc_857__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_46885__emal_43238__cwc_857__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46885__emal_43238__cwc_857__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              ;

              }



              { SACp_pinl_46885__emal_43238__cwc_857[0] = 1; }




              if ((SACp_pinl_46885__emal_43238__cwc_857__dim != 1) && (SACp_pinl_46885__emal_43238__cwc_857__shp0 != SACp_pinl_46892__emal_43245__cwc_849__dim)) {
                SACp_pinl_46884__emal_43237__icc_4604_pred = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46885__emal_43238__cwc_857""' with shape %s ""And `" "SACp_pinl_46892__emal_43245__cwc_849""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46885__emal_43238__cwc_857__desc), SAC_PrintShape (SACp_pinl_46892__emal_43245__cwc_849__desc));
              }
              else {
                int SAC_all = 1; if (0 || (( SACp_pinl_46885__emal_43238__cwc_857[0]) >= SACp_pinl_46892__emal_43245__cwc_849__shp0))
                {

                  SAC_all = 0;
                  SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46885__emal_43238__cwc_857""' with shape %s ""And `" "SACp_pinl_46892__emal_43245__cwc_849""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46885__emal_43238__cwc_857__desc), SAC_PrintShape (SACp_pinl_46892__emal_43245__cwc_849__desc));
                }
                SACp_pinl_46884__emal_43237__icc_4604_pred = SAC_all;
              }




              if (!((SACp_pinl_46874__idc_4613__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46874__idc_4613__shp0 == SACp_pinl_46885__emal_43238__cwc_857__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              SACp_pinl_46874__idc_4613__desc = SACp_pinl_46885__emal_43238__cwc_857__desc;
              ;
              ;
              { SACp_pinl_46874__idc_4613 = SACp_pinl_46885__emal_43238__cwc_857; }

              if (!SACp_pinl_46884__emal_43237__icc_4604_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



              SACp_pinl_46862__icc_4606__desc = SACp_pinl_46892__emal_43245__cwc_849__desc;
              SACp_pinl_46862__icc_4606__sz = SACp_pinl_46892__emal_43245__cwc_849__sz;
              SACp_pinl_46862__icc_4606__dim = SACp_pinl_46892__emal_43245__cwc_849__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46862__icc_4606__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46892__emal_43245__cwc_849__dim;
              { SACp_pinl_46862__icc_4606 = SACp_pinl_46892__emal_43245__cwc_849; }




              if (!((SACp_pinl_46861__icc_4605__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46861__icc_4605__shp0 == SACp_pinl_46874__idc_4613__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              SACp_pinl_46861__icc_4605__desc = SACp_pinl_46874__idc_4613__desc;
              ;
              ;
              { SACp_pinl_46861__icc_4605 = SACp_pinl_46874__idc_4613; }

              { { if (!((1 == SACp_pinl_46883__emal_43236__ivesplit_42411__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46883__emal_43236__ivesplit_42411"); }; { if ((((6 + (SACp_pinl_46883__emal_43236__ivesplit_42411__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46883__emal_43236__ivesplit_42411__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46883__emal_43236__ivesplit_42411__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46883__emal_43236__ivesplit_42411__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46883__emal_43236__ivesplit_42411__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46883__emal_43236__ivesplit_42411__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46883__emal_43236__ivesplit_42411__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46883__emal_43236__ivesplit_42411__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46883__emal_43236__ivesplit_42411__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46883__emal_43236__ivesplit_42411__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46883__emal_43236__ivesplit_42411__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46883__emal_43236__ivesplit_42411__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46883__emal_43236__ivesplit_42411__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46883__emal_43236__ivesplit_42411__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46883__emal_43236__ivesplit_42411__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46883__emal_43236__ivesplit_42411__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46883__emal_43236__ivesplit_42411__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46883__emal_43236__ivesplit_42411__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46883__emal_43236__ivesplit_42411__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46883__emal_43236__ivesplit_42411__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_46883__emal_43236__ivesplit_42411__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              {

                int SAC_size = 1;
                SAC_size *=
                SACp_pinl_46883__emal_43236__ivesplit_42411__shp0 =
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46883__emal_43236__ivesplit_42411__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46862__icc_4606__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46883__emal_43236__ivesplit_42411__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46883__emal_43236__ivesplit_42411__sz = SAC_size;
                if (!((SACp_pinl_46883__emal_43236__ivesplit_42411__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
              }

              { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6327 "/home/rubenhensen/sac/a.out.c" 3 4
             ((void) sizeof ((
# 6327 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6327 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ? 1 : 0), __extension__ ({ if (
# 6327 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6327 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ; else __assert_fail (
# 6327 "/home/rubenhensen/sac/a.out.c"
             "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6327 "/home/rubenhensen/sac/a.out.c" 3 4
             , "/home/rubenhensen/sac/a.out.c", 6327, __extension__ __PRETTY_FUNCTION__); }))
# 6327 "/home/rubenhensen/sac/a.out.c"
             ; SACp_pinl_46883__emal_43236__ivesplit_42411 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46883__emal_43236__ivesplit_42411__sz * sizeof (*SACp_pinl_46883__emal_43236__ivesplit_42411)); break; case SAC_HM_multi_threaded: SACp_pinl_46883__emal_43236__ivesplit_42411 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46883__emal_43236__ivesplit_42411__sz * sizeof (*SACp_pinl_46883__emal_43236__ivesplit_42411), 0); break; case SAC_HM_any_threaded: SACp_pinl_46883__emal_43236__ivesplit_42411 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46883__emal_43236__ivesplit_42411__sz * sizeof (*SACp_pinl_46883__emal_43236__ivesplit_42411), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46883__emal_43236__ivesplit_42411__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46883__emal_43236__ivesplit_42411__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46883__emal_43236__ivesplit_42411__desc) & (-1 ^ (3))))[1]) = 0; } }



             
              for (int SAC_i = 0; SAC_i < SACp_pinl_46862__icc_4606__dim; SAC_i++) {
                { SACp_pinl_46883__emal_43236__ivesplit_42411[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46862__icc_4606__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
              }




              {
                int SAC_i, SAC_l;
                SAC_l = 0;
                SAC_l = ( SACp_pinl_46861__icc_4605[0]);
                for (SAC_i = (1); SAC_i < SACp_pinl_46883__emal_43236__ivesplit_42411__sz; SAC_i++)
                {

                  SAC_l *= ( SACp_pinl_46883__emal_43236__ivesplit_42411[SAC_i]);
                }
                SACp_pinl_46882__emal_43235__ivesli_42459 = SAC_l;
              }

              { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46861__icc_4605__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46861__icc_4605__sz * sizeof (*SACp_pinl_46861__icc_4605)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46861__icc_4605, ((((SAC_HM_header_t *)SACp_pinl_46861__icc_4605) - 1)->data1.arena)); } else { if (SACp_pinl_46861__icc_4605__sz * sizeof (*SACp_pinl_46861__icc_4605) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46861__icc_4605) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46861__icc_4605, ((((SAC_HM_header_t *)SACp_pinl_46861__icc_4605) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46861__icc_4605, ((((SAC_HM_header_t *)SACp_pinl_46861__icc_4605) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46861__icc_4605__sz * sizeof (*SACp_pinl_46861__icc_4605))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46861__icc_4605, ((((SAC_HM_header_t *)SACp_pinl_46861__icc_4605) - 1)->data1.arena)); } else { if (((((SACp_pinl_46861__icc_4605__sz * sizeof (*SACp_pinl_46861__icc_4605))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46861__icc_4605) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46861__icc_4605, ((((SAC_HM_header_t *)SACp_pinl_46861__icc_4605) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46861__icc_4605, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46861__icc_4605); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46861__icc_4605); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46861__icc_4605, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46861__icc_4605); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46861__icc_4605); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46861__icc_4605__desc) & (-1 ^ (3))))); } } } } else { } }
              { { free (SACp_pinl_46883__emal_43236__ivesplit_42411); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46883__emal_43236__ivesplit_42411__desc) & (-1 ^ (3))))); } } }



             
              if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
              { SACp_pinl_46881__emal_43234__icc_4607 = ( SACp_pinl_46862__icc_4606[SACp_pinl_46882__emal_43235__ivesli_42459]); }

              { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46862__icc_4606__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46862__icc_4606); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46862__icc_4606__desc) & (-1 ^ (3))))); } } } } else { } }
              { ; ; }
              if (!SACp_pinl_46884__emal_43237__icc_4604_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
              { ; ; }
              { ; ;



              if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              ;

              }
              ; ; { SACp_pinl_46880__emal_43233__cwc_860 = (SACp_pinl_46881__emal_43234__icc_4607) == (3); };
              { ; ; }
              ; ; { SACp_pinl_46880__emal_43233__cwc_860 = (SACp_pinl_46880__emal_43233__cwc_860) & (SACp_pinl_46886__emal_43239__cwc_855); };
              { ; ; }
              if (SACp_pinl_46880__emal_43233__cwc_860)
              {
                { ; ; }



                SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




                SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

              }
              else
              {
                { ; ; }



                SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




                SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

              }
            }
            else
            {
              { ; ; }
              ; ; { SACp_pinl_46893__emal_43246__cwc_847 = (SACp_pinl_46855__emal_43207__cwc_836) == (1); };
              { ; ; }
              if (SACp_pinl_46893__emal_43246__cwc_847)
              {
                { ; ; }
                { { if (!((1 == SACp_pinl_46910__emal_43253__cwc_838__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46910__emal_43253__cwc_838"); }; { if ((((6 + (SACp_pinl_46910__emal_43253__cwc_838__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46910__emal_43253__cwc_838__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46910__emal_43253__cwc_838__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46910__emal_43253__cwc_838__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46910__emal_43253__cwc_838__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46910__emal_43253__cwc_838__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46910__emal_43253__cwc_838__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46910__emal_43253__cwc_838__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46910__emal_43253__cwc_838__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46910__emal_43253__cwc_838__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46910__emal_43253__cwc_838__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46910__emal_43253__cwc_838__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46910__emal_43253__cwc_838__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46910__emal_43253__cwc_838__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46910__emal_43253__cwc_838__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46910__emal_43253__cwc_838__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46910__emal_43253__cwc_838__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46910__emal_43253__cwc_838__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46910__emal_43253__cwc_838__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46910__emal_43253__cwc_838__desc) & (-1 ^ (3))))[1]) = 0; }



                if (!((SACp_pinl_46910__emal_43253__cwc_838__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                {

                  int SAC_size = 1;
                  SAC_size *=
                  SACp_pinl_46910__emal_43253__cwc_838__shp0 =
                  (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46910__emal_43253__cwc_838__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
                  (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46910__emal_43253__cwc_838__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46910__emal_43253__cwc_838__sz = SAC_size;
                  if (!((SACp_pinl_46910__emal_43253__cwc_838__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
                }

                { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6430 "/home/rubenhensen/sac/a.out.c" 3 4
               ((void) sizeof ((
# 6430 "/home/rubenhensen/sac/a.out.c"
               SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6430 "/home/rubenhensen/sac/a.out.c" 3 4
               ) ? 1 : 0), __extension__ ({ if (
# 6430 "/home/rubenhensen/sac/a.out.c"
               SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6430 "/home/rubenhensen/sac/a.out.c" 3 4
               ) ; else __assert_fail (
# 6430 "/home/rubenhensen/sac/a.out.c"
               "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6430 "/home/rubenhensen/sac/a.out.c" 3 4
               , "/home/rubenhensen/sac/a.out.c", 6430, __extension__ __PRETTY_FUNCTION__); }))
# 6430 "/home/rubenhensen/sac/a.out.c"
               ; SACp_pinl_46910__emal_43253__cwc_838 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46910__emal_43253__cwc_838__sz * sizeof (*SACp_pinl_46910__emal_43253__cwc_838)); break; case SAC_HM_multi_threaded: SACp_pinl_46910__emal_43253__cwc_838 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46910__emal_43253__cwc_838__sz * sizeof (*SACp_pinl_46910__emal_43253__cwc_838), 0); break; case SAC_HM_any_threaded: SACp_pinl_46910__emal_43253__cwc_838 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46910__emal_43253__cwc_838__sz * sizeof (*SACp_pinl_46910__emal_43253__cwc_838), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46910__emal_43253__cwc_838__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46910__emal_43253__cwc_838__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46910__emal_43253__cwc_838__desc) & (-1 ^ (3))))[1]) = 0; } }



               
                for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
                  { SACp_pinl_46910__emal_43253__cwc_838[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
                }

                { { if (!((1 == SACp_pinl_46909__emal_43252__cwc_841__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46909__emal_43252__cwc_841"); }; { { if ((((SACp_pinl_46909__emal_43252__cwc_841__sz * sizeof (*SACp_pinl_46909__emal_43252__cwc_841)) + ((6 + (SACp_pinl_46909__emal_43252__cwc_841__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46909__emal_43252__cwc_841__sz * sizeof (*SACp_pinl_46909__emal_43252__cwc_841)) + ((6 + (SACp_pinl_46909__emal_43252__cwc_841__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46909__emal_43252__cwc_841__sz * sizeof (*SACp_pinl_46909__emal_43252__cwc_841)) + ((6 + (SACp_pinl_46909__emal_43252__cwc_841__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46909__emal_43252__cwc_841 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46909__emal_43252__cwc_841 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46909__emal_43252__cwc_841__sz * sizeof (*SACp_pinl_46909__emal_43252__cwc_841)) + ((6 + (SACp_pinl_46909__emal_43252__cwc_841__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46909__emal_43252__cwc_841 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46909__emal_43252__cwc_841 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46909__emal_43252__cwc_841__sz * sizeof (*SACp_pinl_46909__emal_43252__cwc_841)) + ((6 + (SACp_pinl_46909__emal_43252__cwc_841__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46909__emal_43252__cwc_841__sz * sizeof (*SACp_pinl_46909__emal_43252__cwc_841)) + ((6 + (SACp_pinl_46909__emal_43252__cwc_841__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46909__emal_43252__cwc_841__sz * sizeof (*SACp_pinl_46909__emal_43252__cwc_841)) + ((6 + (SACp_pinl_46909__emal_43252__cwc_841__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46909__emal_43252__cwc_841__sz * sizeof (*SACp_pinl_46909__emal_43252__cwc_841)) + ((6 + (SACp_pinl_46909__emal_43252__cwc_841__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46909__emal_43252__cwc_841__sz * sizeof (*SACp_pinl_46909__emal_43252__cwc_841)) + ((6 + (SACp_pinl_46909__emal_43252__cwc_841__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46909__emal_43252__cwc_841 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46909__emal_43252__cwc_841 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46909__emal_43252__cwc_841 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46909__emal_43252__cwc_841 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46909__emal_43252__cwc_841__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46909__emal_43252__cwc_841, SACp_pinl_46909__emal_43252__cwc_841__sz * sizeof (*SACp_pinl_46909__emal_43252__cwc_841), ((6 + (SACp_pinl_46909__emal_43252__cwc_841__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46909__emal_43252__cwc_841__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46909__emal_43252__cwc_841__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46909__emal_43252__cwc_841__desc) & (-1 ^ (3))))[1]) = 0; }



                if (!((SACp_pinl_46909__emal_43252__cwc_841__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                if (!((SACp_pinl_46909__emal_43252__cwc_841__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                ;

                }



                { SACp_pinl_46909__emal_43252__cwc_841[0] = 0; }




                if ((SACp_pinl_46909__emal_43252__cwc_841__dim != 1) && (SACp_pinl_46909__emal_43252__cwc_841__shp0 != SACp_pinl_46910__emal_43253__cwc_838__dim)) {
                  SACp_pinl_46908__emal_43251__icc_4616_pred = 0;
                  SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46909__emal_43252__cwc_841""' with shape %s ""And `" "SACp_pinl_46910__emal_43253__cwc_838""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46909__emal_43252__cwc_841__desc), SAC_PrintShape (SACp_pinl_46910__emal_43253__cwc_838__desc));
                }
                else {
                  int SAC_all = 1; if (0 || (( SACp_pinl_46909__emal_43252__cwc_841[0]) >= SACp_pinl_46910__emal_43253__cwc_838__shp0))
                  {

                    SAC_all = 0;
                    SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46909__emal_43252__cwc_841""' with shape %s ""And `" "SACp_pinl_46910__emal_43253__cwc_838""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46909__emal_43252__cwc_841__desc), SAC_PrintShape (SACp_pinl_46910__emal_43253__cwc_838__desc));
                  }
                  SACp_pinl_46908__emal_43251__icc_4616_pred = SAC_all;
                }




                if (!((SACp_pinl_46901__idc_4622__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                if (!((SACp_pinl_46901__idc_4622__shp0 == SACp_pinl_46909__emal_43252__cwc_841__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                SACp_pinl_46901__idc_4622__desc = SACp_pinl_46909__emal_43252__cwc_841__desc;
                ;
                ;
                { SACp_pinl_46901__idc_4622 = SACp_pinl_46909__emal_43252__cwc_841; }

                if (!SACp_pinl_46908__emal_43251__icc_4616_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



                SACp_pinl_46895__icc_4618__desc = SACp_pinl_46910__emal_43253__cwc_838__desc;
                SACp_pinl_46895__icc_4618__sz = SACp_pinl_46910__emal_43253__cwc_838__sz;
                SACp_pinl_46895__icc_4618__dim = SACp_pinl_46910__emal_43253__cwc_838__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46895__icc_4618__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46910__emal_43253__cwc_838__dim;
                { SACp_pinl_46895__icc_4618 = SACp_pinl_46910__emal_43253__cwc_838; }




                if (!((SACp_pinl_46894__icc_4617__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                if (!((SACp_pinl_46894__icc_4617__shp0 == SACp_pinl_46901__idc_4622__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                SACp_pinl_46894__icc_4617__desc = SACp_pinl_46901__idc_4622__desc;
                ;
                ;
                { SACp_pinl_46894__icc_4617 = SACp_pinl_46901__idc_4622; }

                { { if (!((1 == SACp_pinl_46907__emal_43250__ivesplit_42413__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46907__emal_43250__ivesplit_42413"); }; { if ((((6 + (SACp_pinl_46907__emal_43250__ivesplit_42413__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46907__emal_43250__ivesplit_42413__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46907__emal_43250__ivesplit_42413__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46907__emal_43250__ivesplit_42413__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46907__emal_43250__ivesplit_42413__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46907__emal_43250__ivesplit_42413__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46907__emal_43250__ivesplit_42413__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46907__emal_43250__ivesplit_42413__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46907__emal_43250__ivesplit_42413__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46907__emal_43250__ivesplit_42413__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46907__emal_43250__ivesplit_42413__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46907__emal_43250__ivesplit_42413__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46907__emal_43250__ivesplit_42413__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46907__emal_43250__ivesplit_42413__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46907__emal_43250__ivesplit_42413__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46907__emal_43250__ivesplit_42413__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46907__emal_43250__ivesplit_42413__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46907__emal_43250__ivesplit_42413__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46907__emal_43250__ivesplit_42413__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46907__emal_43250__ivesplit_42413__desc) & (-1 ^ (3))))[1]) = 0; }



                if (!((SACp_pinl_46907__emal_43250__ivesplit_42413__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                {

                  int SAC_size = 1;
                  SAC_size *=
                  SACp_pinl_46907__emal_43250__ivesplit_42413__shp0 =
                  (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46907__emal_43250__ivesplit_42413__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46895__icc_4618__dim;
                  (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46907__emal_43250__ivesplit_42413__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46907__emal_43250__ivesplit_42413__sz = SAC_size;
                  if (!((SACp_pinl_46907__emal_43250__ivesplit_42413__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
                }

                { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6515 "/home/rubenhensen/sac/a.out.c" 3 4
               ((void) sizeof ((
# 6515 "/home/rubenhensen/sac/a.out.c"
               SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6515 "/home/rubenhensen/sac/a.out.c" 3 4
               ) ? 1 : 0), __extension__ ({ if (
# 6515 "/home/rubenhensen/sac/a.out.c"
               SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6515 "/home/rubenhensen/sac/a.out.c" 3 4
               ) ; else __assert_fail (
# 6515 "/home/rubenhensen/sac/a.out.c"
               "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6515 "/home/rubenhensen/sac/a.out.c" 3 4
               , "/home/rubenhensen/sac/a.out.c", 6515, __extension__ __PRETTY_FUNCTION__); }))
# 6515 "/home/rubenhensen/sac/a.out.c"
               ; SACp_pinl_46907__emal_43250__ivesplit_42413 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46907__emal_43250__ivesplit_42413__sz * sizeof (*SACp_pinl_46907__emal_43250__ivesplit_42413)); break; case SAC_HM_multi_threaded: SACp_pinl_46907__emal_43250__ivesplit_42413 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46907__emal_43250__ivesplit_42413__sz * sizeof (*SACp_pinl_46907__emal_43250__ivesplit_42413), 0); break; case SAC_HM_any_threaded: SACp_pinl_46907__emal_43250__ivesplit_42413 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46907__emal_43250__ivesplit_42413__sz * sizeof (*SACp_pinl_46907__emal_43250__ivesplit_42413), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46907__emal_43250__ivesplit_42413__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46907__emal_43250__ivesplit_42413__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46907__emal_43250__ivesplit_42413__desc) & (-1 ^ (3))))[1]) = 0; } }



               
                for (int SAC_i = 0; SAC_i < SACp_pinl_46895__icc_4618__dim; SAC_i++) {
                  { SACp_pinl_46907__emal_43250__ivesplit_42413[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46895__icc_4618__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
                }




                {
                  int SAC_i, SAC_l;
                  SAC_l = 0;
                  SAC_l = ( SACp_pinl_46894__icc_4617[0]);
                  for (SAC_i = (1); SAC_i < SACp_pinl_46907__emal_43250__ivesplit_42413__sz; SAC_i++)
                  {

                    SAC_l *= ( SACp_pinl_46907__emal_43250__ivesplit_42413[SAC_i]);
                  }
                  SACp_pinl_46906__emal_43249__ivesli_42461 = SAC_l;
                }

                { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46894__icc_4617__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46894__icc_4617__sz * sizeof (*SACp_pinl_46894__icc_4617)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46894__icc_4617, ((((SAC_HM_header_t *)SACp_pinl_46894__icc_4617) - 1)->data1.arena)); } else { if (SACp_pinl_46894__icc_4617__sz * sizeof (*SACp_pinl_46894__icc_4617) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46894__icc_4617) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46894__icc_4617, ((((SAC_HM_header_t *)SACp_pinl_46894__icc_4617) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46894__icc_4617, ((((SAC_HM_header_t *)SACp_pinl_46894__icc_4617) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46894__icc_4617__sz * sizeof (*SACp_pinl_46894__icc_4617))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46894__icc_4617, ((((SAC_HM_header_t *)SACp_pinl_46894__icc_4617) - 1)->data1.arena)); } else { if (((((SACp_pinl_46894__icc_4617__sz * sizeof (*SACp_pinl_46894__icc_4617))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46894__icc_4617) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46894__icc_4617, ((((SAC_HM_header_t *)SACp_pinl_46894__icc_4617) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46894__icc_4617, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46894__icc_4617); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46894__icc_4617); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46894__icc_4617, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46894__icc_4617); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46894__icc_4617); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46894__icc_4617__desc) & (-1 ^ (3))))); } } } } else { } }
                { { free (SACp_pinl_46907__emal_43250__ivesplit_42413); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46907__emal_43250__ivesplit_42413__desc) & (-1 ^ (3))))); } } }



               
                if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
                { SACp_pinl_46905__emal_43248__icc_4619 = ( SACp_pinl_46895__icc_4618[SACp_pinl_46906__emal_43249__ivesli_42461]); }

                { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46895__icc_4618__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46895__icc_4618); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46895__icc_4618__desc) & (-1 ^ (3))))); } } } } else { } }
                { ; ; }
                if (!SACp_pinl_46908__emal_43251__icc_4616_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
                { ; ; }
                ; ; { SACp_pinl_46904__emal_43247__cwc_844 = (SACp_pinl_46905__emal_43248__icc_4619) == (2); };
                { ; ; }
                if (SACp_pinl_46904__emal_43247__cwc_844)
                {
                  { ; ; }



                  if (!((_tcp_48533_SACl_b__dim == SACl_b__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                  if (!((_tcp_48533_SACl_b__shp0 == (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (0))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                  _tcp_48533_SACl_b__desc = SACl_b__desc;
                  ;
                  ;
                  { _tcp_48533_SACl_b = SACl_b; }




                  if (!((_tcp_48532_SACl_a__dim == SACl_a__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                  if (!((_tcp_48532_SACl_a__shp0 == (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (0))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                  if (!((_tcp_48532_SACl_a__shp1 == (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (1))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                  _tcp_48532_SACl_a__desc = SACl_a__desc;
                  ;
                  ;
                  { _tcp_48532_SACl_a = SACl_a; }




                  SACf__MAIN___rtpf_18_impl_carretplus__i_2_3__i_2 (&SACp_cwc_774, &SACp_cwc_774__desc, _tcp_48532_SACl_a, _tcp_48532_SACl_a__desc, _tcp_48533_SACl_b, _tcp_48533_SACl_b__desc);




                  SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                  SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

                }
                else
                {
                  { ; ; }



                  SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




                  SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                  SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

                }
              }
              else
              {
                { ; ; }



                SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




                SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

              }
            }
          }
          else
          {
            { ; ; }
            { { SACp_pinl_46857__emal_43209__cwc_806 = SACl_b__dim; }; }
            ; ; { SACp_pinl_46856__emal_43208__cwc_833 = (SACp_pinl_46857__emal_43209__cwc_806) == (2); };
            if (SACp_pinl_46856__emal_43208__cwc_833)
            {
              { ; ; }
              { ; ; }
              { { if (!((1 == SACp_pinl_46945__emal_43223__cwc_819__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46945__emal_43223__cwc_819"); }; { if ((((6 + (SACp_pinl_46945__emal_43223__cwc_819__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46945__emal_43223__cwc_819__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46945__emal_43223__cwc_819__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46945__emal_43223__cwc_819__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46945__emal_43223__cwc_819__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46945__emal_43223__cwc_819__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46945__emal_43223__cwc_819__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46945__emal_43223__cwc_819__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46945__emal_43223__cwc_819__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46945__emal_43223__cwc_819__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46945__emal_43223__cwc_819__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46945__emal_43223__cwc_819__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46945__emal_43223__cwc_819__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46945__emal_43223__cwc_819__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46945__emal_43223__cwc_819__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46945__emal_43223__cwc_819__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46945__emal_43223__cwc_819__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46945__emal_43223__cwc_819__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46945__emal_43223__cwc_819__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46945__emal_43223__cwc_819__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_46945__emal_43223__cwc_819__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              {

                int SAC_size = 1;
                SAC_size *=
                SACp_pinl_46945__emal_43223__cwc_819__shp0 =
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46945__emal_43223__cwc_819__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46945__emal_43223__cwc_819__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46945__emal_43223__cwc_819__sz = SAC_size;
                if (!((SACp_pinl_46945__emal_43223__cwc_819__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
              }

              { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6647 "/home/rubenhensen/sac/a.out.c" 3 4
             ((void) sizeof ((
# 6647 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6647 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ? 1 : 0), __extension__ ({ if (
# 6647 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6647 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ; else __assert_fail (
# 6647 "/home/rubenhensen/sac/a.out.c"
             "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6647 "/home/rubenhensen/sac/a.out.c" 3 4
             , "/home/rubenhensen/sac/a.out.c", 6647, __extension__ __PRETTY_FUNCTION__); }))
# 6647 "/home/rubenhensen/sac/a.out.c"
             ; SACp_pinl_46945__emal_43223__cwc_819 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46945__emal_43223__cwc_819__sz * sizeof (*SACp_pinl_46945__emal_43223__cwc_819)); break; case SAC_HM_multi_threaded: SACp_pinl_46945__emal_43223__cwc_819 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46945__emal_43223__cwc_819__sz * sizeof (*SACp_pinl_46945__emal_43223__cwc_819), 0); break; case SAC_HM_any_threaded: SACp_pinl_46945__emal_43223__cwc_819 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46945__emal_43223__cwc_819__sz * sizeof (*SACp_pinl_46945__emal_43223__cwc_819), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46945__emal_43223__cwc_819__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46945__emal_43223__cwc_819__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46945__emal_43223__cwc_819__desc) & (-1 ^ (3))))[1]) = 0; } }



             
              for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
                { SACp_pinl_46945__emal_43223__cwc_819[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
              }

              { { if (!((1 == SACp_pinl_46944__emal_43222__cwc_822__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46944__emal_43222__cwc_822"); }; { { if ((((SACp_pinl_46944__emal_43222__cwc_822__sz * sizeof (*SACp_pinl_46944__emal_43222__cwc_822)) + ((6 + (SACp_pinl_46944__emal_43222__cwc_822__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46944__emal_43222__cwc_822__sz * sizeof (*SACp_pinl_46944__emal_43222__cwc_822)) + ((6 + (SACp_pinl_46944__emal_43222__cwc_822__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46944__emal_43222__cwc_822__sz * sizeof (*SACp_pinl_46944__emal_43222__cwc_822)) + ((6 + (SACp_pinl_46944__emal_43222__cwc_822__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46944__emal_43222__cwc_822 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46944__emal_43222__cwc_822 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46944__emal_43222__cwc_822__sz * sizeof (*SACp_pinl_46944__emal_43222__cwc_822)) + ((6 + (SACp_pinl_46944__emal_43222__cwc_822__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46944__emal_43222__cwc_822 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46944__emal_43222__cwc_822 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46944__emal_43222__cwc_822__sz * sizeof (*SACp_pinl_46944__emal_43222__cwc_822)) + ((6 + (SACp_pinl_46944__emal_43222__cwc_822__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46944__emal_43222__cwc_822__sz * sizeof (*SACp_pinl_46944__emal_43222__cwc_822)) + ((6 + (SACp_pinl_46944__emal_43222__cwc_822__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46944__emal_43222__cwc_822__sz * sizeof (*SACp_pinl_46944__emal_43222__cwc_822)) + ((6 + (SACp_pinl_46944__emal_43222__cwc_822__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46944__emal_43222__cwc_822__sz * sizeof (*SACp_pinl_46944__emal_43222__cwc_822)) + ((6 + (SACp_pinl_46944__emal_43222__cwc_822__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46944__emal_43222__cwc_822__sz * sizeof (*SACp_pinl_46944__emal_43222__cwc_822)) + ((6 + (SACp_pinl_46944__emal_43222__cwc_822__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46944__emal_43222__cwc_822 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46944__emal_43222__cwc_822 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46944__emal_43222__cwc_822 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46944__emal_43222__cwc_822 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46944__emal_43222__cwc_822__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46944__emal_43222__cwc_822, SACp_pinl_46944__emal_43222__cwc_822__sz * sizeof (*SACp_pinl_46944__emal_43222__cwc_822), ((6 + (SACp_pinl_46944__emal_43222__cwc_822__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46944__emal_43222__cwc_822__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46944__emal_43222__cwc_822__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46944__emal_43222__cwc_822__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_46944__emal_43222__cwc_822__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46944__emal_43222__cwc_822__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              ;

              }



              { SACp_pinl_46944__emal_43222__cwc_822[0] = 0; }




              if ((SACp_pinl_46944__emal_43222__cwc_822__dim != 1) && (SACp_pinl_46944__emal_43222__cwc_822__shp0 != SACp_pinl_46945__emal_43223__cwc_819__dim)) {
                SACp_pinl_46943__emal_43221__icc_4625_pred = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46944__emal_43222__cwc_822""' with shape %s ""And `" "SACp_pinl_46945__emal_43223__cwc_819""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46944__emal_43222__cwc_822__desc), SAC_PrintShape (SACp_pinl_46945__emal_43223__cwc_819__desc));
              }
              else {
                int SAC_all = 1; if (0 || (( SACp_pinl_46944__emal_43222__cwc_822[0]) >= SACp_pinl_46945__emal_43223__cwc_819__shp0))
                {

                  SAC_all = 0;
                  SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46944__emal_43222__cwc_822""' with shape %s ""And `" "SACp_pinl_46945__emal_43223__cwc_819""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46944__emal_43222__cwc_822__desc), SAC_PrintShape (SACp_pinl_46945__emal_43223__cwc_819__desc));
                }
                SACp_pinl_46943__emal_43221__icc_4625_pred = SAC_all;
              }




              if (!((SACp_pinl_46925__idc_4637__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46925__idc_4637__shp0 == SACp_pinl_46944__emal_43222__cwc_822__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              SACp_pinl_46925__idc_4637__desc = SACp_pinl_46944__emal_43222__cwc_822__desc;
              ;
              ;
              { SACp_pinl_46925__idc_4637 = SACp_pinl_46944__emal_43222__cwc_822; }

              if (!SACp_pinl_46943__emal_43221__icc_4625_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



              SACp_pinl_46912__icc_4627__desc = SACp_pinl_46945__emal_43223__cwc_819__desc;
              SACp_pinl_46912__icc_4627__sz = SACp_pinl_46945__emal_43223__cwc_819__sz;
              SACp_pinl_46912__icc_4627__dim = SACp_pinl_46945__emal_43223__cwc_819__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46912__icc_4627__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46945__emal_43223__cwc_819__dim;
              { SACp_pinl_46912__icc_4627 = SACp_pinl_46945__emal_43223__cwc_819; }




              if (!((SACp_pinl_46911__icc_4626__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46911__icc_4626__shp0 == SACp_pinl_46925__idc_4637__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              SACp_pinl_46911__icc_4626__desc = SACp_pinl_46925__idc_4637__desc;
              ;
              ;
              { SACp_pinl_46911__icc_4626 = SACp_pinl_46925__idc_4637; }

              { { if (!((1 == SACp_pinl_46942__emal_43220__ivesplit_42403__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46942__emal_43220__ivesplit_42403"); }; { if ((((6 + (SACp_pinl_46942__emal_43220__ivesplit_42403__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46942__emal_43220__ivesplit_42403__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46942__emal_43220__ivesplit_42403__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46942__emal_43220__ivesplit_42403__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46942__emal_43220__ivesplit_42403__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46942__emal_43220__ivesplit_42403__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46942__emal_43220__ivesplit_42403__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46942__emal_43220__ivesplit_42403__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46942__emal_43220__ivesplit_42403__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46942__emal_43220__ivesplit_42403__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46942__emal_43220__ivesplit_42403__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46942__emal_43220__ivesplit_42403__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46942__emal_43220__ivesplit_42403__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46942__emal_43220__ivesplit_42403__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46942__emal_43220__ivesplit_42403__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46942__emal_43220__ivesplit_42403__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46942__emal_43220__ivesplit_42403__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46942__emal_43220__ivesplit_42403__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46942__emal_43220__ivesplit_42403__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46942__emal_43220__ivesplit_42403__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_46942__emal_43220__ivesplit_42403__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              {

                int SAC_size = 1;
                SAC_size *=
                SACp_pinl_46942__emal_43220__ivesplit_42403__shp0 =
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46942__emal_43220__ivesplit_42403__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46912__icc_4627__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46942__emal_43220__ivesplit_42403__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46942__emal_43220__ivesplit_42403__sz = SAC_size;
                if (!((SACp_pinl_46942__emal_43220__ivesplit_42403__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
              }

              { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6732 "/home/rubenhensen/sac/a.out.c" 3 4
             ((void) sizeof ((
# 6732 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6732 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ? 1 : 0), __extension__ ({ if (
# 6732 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6732 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ; else __assert_fail (
# 6732 "/home/rubenhensen/sac/a.out.c"
             "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6732 "/home/rubenhensen/sac/a.out.c" 3 4
             , "/home/rubenhensen/sac/a.out.c", 6732, __extension__ __PRETTY_FUNCTION__); }))
# 6732 "/home/rubenhensen/sac/a.out.c"
             ; SACp_pinl_46942__emal_43220__ivesplit_42403 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46942__emal_43220__ivesplit_42403__sz * sizeof (*SACp_pinl_46942__emal_43220__ivesplit_42403)); break; case SAC_HM_multi_threaded: SACp_pinl_46942__emal_43220__ivesplit_42403 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46942__emal_43220__ivesplit_42403__sz * sizeof (*SACp_pinl_46942__emal_43220__ivesplit_42403), 0); break; case SAC_HM_any_threaded: SACp_pinl_46942__emal_43220__ivesplit_42403 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46942__emal_43220__ivesplit_42403__sz * sizeof (*SACp_pinl_46942__emal_43220__ivesplit_42403), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46942__emal_43220__ivesplit_42403__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46942__emal_43220__ivesplit_42403__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46942__emal_43220__ivesplit_42403__desc) & (-1 ^ (3))))[1]) = 0; } }



             
              for (int SAC_i = 0; SAC_i < SACp_pinl_46912__icc_4627__dim; SAC_i++) {
                { SACp_pinl_46942__emal_43220__ivesplit_42403[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46912__icc_4627__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
              }




              {
                int SAC_i, SAC_l;
                SAC_l = 0;
                SAC_l = ( SACp_pinl_46911__icc_4626[0]);
                for (SAC_i = (1); SAC_i < SACp_pinl_46942__emal_43220__ivesplit_42403__sz; SAC_i++)
                {

                  SAC_l *= ( SACp_pinl_46942__emal_43220__ivesplit_42403[SAC_i]);
                }
                SACp_pinl_46941__emal_43219__ivesli_42457 = SAC_l;
              }

              { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46911__icc_4626__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46911__icc_4626__sz * sizeof (*SACp_pinl_46911__icc_4626)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46911__icc_4626, ((((SAC_HM_header_t *)SACp_pinl_46911__icc_4626) - 1)->data1.arena)); } else { if (SACp_pinl_46911__icc_4626__sz * sizeof (*SACp_pinl_46911__icc_4626) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46911__icc_4626) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46911__icc_4626, ((((SAC_HM_header_t *)SACp_pinl_46911__icc_4626) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46911__icc_4626, ((((SAC_HM_header_t *)SACp_pinl_46911__icc_4626) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46911__icc_4626__sz * sizeof (*SACp_pinl_46911__icc_4626))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46911__icc_4626, ((((SAC_HM_header_t *)SACp_pinl_46911__icc_4626) - 1)->data1.arena)); } else { if (((((SACp_pinl_46911__icc_4626__sz * sizeof (*SACp_pinl_46911__icc_4626))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46911__icc_4626) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46911__icc_4626, ((((SAC_HM_header_t *)SACp_pinl_46911__icc_4626) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46911__icc_4626, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46911__icc_4626); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46911__icc_4626); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46911__icc_4626, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46911__icc_4626); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46911__icc_4626); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46911__icc_4626__desc) & (-1 ^ (3))))); } } } } else { } }
              { { free (SACp_pinl_46942__emal_43220__ivesplit_42403); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46942__emal_43220__ivesplit_42403__desc) & (-1 ^ (3))))); } } }



             
              if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
              { SACp_pinl_46940__emal_43218__icc_4628 = ( SACp_pinl_46912__icc_4627[SACp_pinl_46941__emal_43219__ivesli_42457]); }

              { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46912__icc_4627__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46912__icc_4627); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46912__icc_4627__desc) & (-1 ^ (3))))); } } } } else { } }
              { ; ; }
              if (!SACp_pinl_46943__emal_43221__icc_4625_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
              { ; ; }
              ; ; { SACp_pinl_46939__emal_43217__cwc_825 = (SACp_pinl_46940__emal_43218__icc_4628) == (2); };
              { ; ; }
              { { if (!((1 == SACp_pinl_46938__emal_43216__cwc_827__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46938__emal_43216__cwc_827"); }; { { if ((((SACp_pinl_46938__emal_43216__cwc_827__sz * sizeof (*SACp_pinl_46938__emal_43216__cwc_827)) + ((6 + (SACp_pinl_46938__emal_43216__cwc_827__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46938__emal_43216__cwc_827__sz * sizeof (*SACp_pinl_46938__emal_43216__cwc_827)) + ((6 + (SACp_pinl_46938__emal_43216__cwc_827__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46938__emal_43216__cwc_827__sz * sizeof (*SACp_pinl_46938__emal_43216__cwc_827)) + ((6 + (SACp_pinl_46938__emal_43216__cwc_827__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46938__emal_43216__cwc_827 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46938__emal_43216__cwc_827 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46938__emal_43216__cwc_827__sz * sizeof (*SACp_pinl_46938__emal_43216__cwc_827)) + ((6 + (SACp_pinl_46938__emal_43216__cwc_827__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46938__emal_43216__cwc_827 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46938__emal_43216__cwc_827 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46938__emal_43216__cwc_827__sz * sizeof (*SACp_pinl_46938__emal_43216__cwc_827)) + ((6 + (SACp_pinl_46938__emal_43216__cwc_827__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46938__emal_43216__cwc_827__sz * sizeof (*SACp_pinl_46938__emal_43216__cwc_827)) + ((6 + (SACp_pinl_46938__emal_43216__cwc_827__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46938__emal_43216__cwc_827__sz * sizeof (*SACp_pinl_46938__emal_43216__cwc_827)) + ((6 + (SACp_pinl_46938__emal_43216__cwc_827__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46938__emal_43216__cwc_827__sz * sizeof (*SACp_pinl_46938__emal_43216__cwc_827)) + ((6 + (SACp_pinl_46938__emal_43216__cwc_827__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46938__emal_43216__cwc_827__sz * sizeof (*SACp_pinl_46938__emal_43216__cwc_827)) + ((6 + (SACp_pinl_46938__emal_43216__cwc_827__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46938__emal_43216__cwc_827 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46938__emal_43216__cwc_827 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46938__emal_43216__cwc_827 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46938__emal_43216__cwc_827 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46938__emal_43216__cwc_827__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46938__emal_43216__cwc_827, SACp_pinl_46938__emal_43216__cwc_827__sz * sizeof (*SACp_pinl_46938__emal_43216__cwc_827), ((6 + (SACp_pinl_46938__emal_43216__cwc_827__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46938__emal_43216__cwc_827__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46938__emal_43216__cwc_827__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46938__emal_43216__cwc_827__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_46938__emal_43216__cwc_827__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46938__emal_43216__cwc_827__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              ;

              }



              { SACp_pinl_46938__emal_43216__cwc_827[0] = 1; }




              if ((SACp_pinl_46938__emal_43216__cwc_827__dim != 1) && (SACp_pinl_46938__emal_43216__cwc_827__shp0 != SACp_pinl_46945__emal_43223__cwc_819__dim)) {
                SACp_pinl_46937__emal_43215__icc_4631_pred = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46938__emal_43216__cwc_827""' with shape %s ""And `" "SACp_pinl_46945__emal_43223__cwc_819""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46938__emal_43216__cwc_827__desc), SAC_PrintShape (SACp_pinl_46945__emal_43223__cwc_819__desc));
              }
              else {
                int SAC_all = 1; if (0 || (( SACp_pinl_46938__emal_43216__cwc_827[0]) >= SACp_pinl_46945__emal_43223__cwc_819__shp0))
                {

                  SAC_all = 0;
                  SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46938__emal_43216__cwc_827""' with shape %s ""And `" "SACp_pinl_46945__emal_43223__cwc_819""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46938__emal_43216__cwc_827__desc), SAC_PrintShape (SACp_pinl_46945__emal_43223__cwc_819__desc));
                }
                SACp_pinl_46937__emal_43215__icc_4631_pred = SAC_all;
              }




              if (!((SACp_pinl_46927__idc_4640__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46927__idc_4640__shp0 == SACp_pinl_46938__emal_43216__cwc_827__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              SACp_pinl_46927__idc_4640__desc = SACp_pinl_46938__emal_43216__cwc_827__desc;
              ;
              ;
              { SACp_pinl_46927__idc_4640 = SACp_pinl_46938__emal_43216__cwc_827; }

              if (!SACp_pinl_46937__emal_43215__icc_4631_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



              SACp_pinl_46915__icc_4633__desc = SACp_pinl_46945__emal_43223__cwc_819__desc;
              SACp_pinl_46915__icc_4633__sz = SACp_pinl_46945__emal_43223__cwc_819__sz;
              SACp_pinl_46915__icc_4633__dim = SACp_pinl_46945__emal_43223__cwc_819__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46915__icc_4633__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46945__emal_43223__cwc_819__dim;
              { SACp_pinl_46915__icc_4633 = SACp_pinl_46945__emal_43223__cwc_819; }




              if (!((SACp_pinl_46914__icc_4632__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_46914__icc_4632__shp0 == SACp_pinl_46927__idc_4640__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              SACp_pinl_46914__icc_4632__desc = SACp_pinl_46927__idc_4640__desc;
              ;
              ;
              { SACp_pinl_46914__icc_4632 = SACp_pinl_46927__idc_4640; }

              { { if (!((1 == SACp_pinl_46936__emal_43214__ivesplit_42405__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46936__emal_43214__ivesplit_42405"); }; { if ((((6 + (SACp_pinl_46936__emal_43214__ivesplit_42405__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46936__emal_43214__ivesplit_42405__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46936__emal_43214__ivesplit_42405__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46936__emal_43214__ivesplit_42405__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46936__emal_43214__ivesplit_42405__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46936__emal_43214__ivesplit_42405__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46936__emal_43214__ivesplit_42405__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46936__emal_43214__ivesplit_42405__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46936__emal_43214__ivesplit_42405__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46936__emal_43214__ivesplit_42405__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46936__emal_43214__ivesplit_42405__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46936__emal_43214__ivesplit_42405__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46936__emal_43214__ivesplit_42405__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46936__emal_43214__ivesplit_42405__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46936__emal_43214__ivesplit_42405__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46936__emal_43214__ivesplit_42405__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46936__emal_43214__ivesplit_42405__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46936__emal_43214__ivesplit_42405__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46936__emal_43214__ivesplit_42405__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46936__emal_43214__ivesplit_42405__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_46936__emal_43214__ivesplit_42405__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              {

                int SAC_size = 1;
                SAC_size *=
                SACp_pinl_46936__emal_43214__ivesplit_42405__shp0 =
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46936__emal_43214__ivesplit_42405__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46915__icc_4633__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46936__emal_43214__ivesplit_42405__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46936__emal_43214__ivesplit_42405__sz = SAC_size;
                if (!((SACp_pinl_46936__emal_43214__ivesplit_42405__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
              }

              { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6847 "/home/rubenhensen/sac/a.out.c" 3 4
             ((void) sizeof ((
# 6847 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6847 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ? 1 : 0), __extension__ ({ if (
# 6847 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6847 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ; else __assert_fail (
# 6847 "/home/rubenhensen/sac/a.out.c"
             "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6847 "/home/rubenhensen/sac/a.out.c" 3 4
             , "/home/rubenhensen/sac/a.out.c", 6847, __extension__ __PRETTY_FUNCTION__); }))
# 6847 "/home/rubenhensen/sac/a.out.c"
             ; SACp_pinl_46936__emal_43214__ivesplit_42405 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46936__emal_43214__ivesplit_42405__sz * sizeof (*SACp_pinl_46936__emal_43214__ivesplit_42405)); break; case SAC_HM_multi_threaded: SACp_pinl_46936__emal_43214__ivesplit_42405 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46936__emal_43214__ivesplit_42405__sz * sizeof (*SACp_pinl_46936__emal_43214__ivesplit_42405), 0); break; case SAC_HM_any_threaded: SACp_pinl_46936__emal_43214__ivesplit_42405 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46936__emal_43214__ivesplit_42405__sz * sizeof (*SACp_pinl_46936__emal_43214__ivesplit_42405), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46936__emal_43214__ivesplit_42405__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46936__emal_43214__ivesplit_42405__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46936__emal_43214__ivesplit_42405__desc) & (-1 ^ (3))))[1]) = 0; } }



             
              for (int SAC_i = 0; SAC_i < SACp_pinl_46915__icc_4633__dim; SAC_i++) {
                { SACp_pinl_46936__emal_43214__ivesplit_42405[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46915__icc_4633__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
              }




              {
                int SAC_i, SAC_l;
                SAC_l = 0;
                SAC_l = ( SACp_pinl_46914__icc_4632[0]);
                for (SAC_i = (1); SAC_i < SACp_pinl_46936__emal_43214__ivesplit_42405__sz; SAC_i++)
                {

                  SAC_l *= ( SACp_pinl_46936__emal_43214__ivesplit_42405[SAC_i]);
                }
                SACp_pinl_46935__emal_43213__ivesli_42456 = SAC_l;
              }

              { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46914__icc_4632__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46914__icc_4632__sz * sizeof (*SACp_pinl_46914__icc_4632)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46914__icc_4632, ((((SAC_HM_header_t *)SACp_pinl_46914__icc_4632) - 1)->data1.arena)); } else { if (SACp_pinl_46914__icc_4632__sz * sizeof (*SACp_pinl_46914__icc_4632) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46914__icc_4632) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46914__icc_4632, ((((SAC_HM_header_t *)SACp_pinl_46914__icc_4632) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46914__icc_4632, ((((SAC_HM_header_t *)SACp_pinl_46914__icc_4632) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46914__icc_4632__sz * sizeof (*SACp_pinl_46914__icc_4632))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46914__icc_4632, ((((SAC_HM_header_t *)SACp_pinl_46914__icc_4632) - 1)->data1.arena)); } else { if (((((SACp_pinl_46914__icc_4632__sz * sizeof (*SACp_pinl_46914__icc_4632))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46914__icc_4632) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46914__icc_4632, ((((SAC_HM_header_t *)SACp_pinl_46914__icc_4632) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46914__icc_4632, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46914__icc_4632); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46914__icc_4632); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46914__icc_4632, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46914__icc_4632); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46914__icc_4632); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46914__icc_4632__desc) & (-1 ^ (3))))); } } } } else { } }
              { { free (SACp_pinl_46936__emal_43214__ivesplit_42405); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46936__emal_43214__ivesplit_42405__desc) & (-1 ^ (3))))); } } }



             
              if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
              { SACp_pinl_46934__emal_43212__icc_4634 = ( SACp_pinl_46915__icc_4633[SACp_pinl_46935__emal_43213__ivesli_42456]); }

              { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46915__icc_4633__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46915__icc_4633); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46915__icc_4633__desc) & (-1 ^ (3))))); } } } } else { } }
              { ; ; }
              if (!SACp_pinl_46937__emal_43215__icc_4631_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
              { ; ; }
              { ; ;



              if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              ;

              }
              ; ; { SACp_pinl_46933__emal_43211__cwc_830 = (SACp_pinl_46934__emal_43212__icc_4634) == (3); };
              { ; ; }
              ; ; { SACp_pinl_46933__emal_43211__cwc_830 = (SACp_pinl_46933__emal_43211__cwc_830) & (SACp_pinl_46939__emal_43217__cwc_825); };
              { ; ; }
              if (SACp_pinl_46933__emal_43211__cwc_830)
              {
                { ; ; }



                SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




                SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

              }
              else
              {
                { ; ; }



                SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




                SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

              }
            }
            else
            {
              { ; ; }
              ; ; { SACp_pinl_46946__emal_43224__cwc_817 = (SACp_pinl_46857__emal_43209__cwc_806) == (1); };
              { ; ; }
              if (SACp_pinl_46946__emal_43224__cwc_817)
              {
                { ; ; }
                { { if (!((1 == SACp_pinl_46963__emal_43231__cwc_808__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46963__emal_43231__cwc_808"); }; { if ((((6 + (SACp_pinl_46963__emal_43231__cwc_808__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46963__emal_43231__cwc_808__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46963__emal_43231__cwc_808__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46963__emal_43231__cwc_808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46963__emal_43231__cwc_808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46963__emal_43231__cwc_808__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46963__emal_43231__cwc_808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46963__emal_43231__cwc_808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46963__emal_43231__cwc_808__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46963__emal_43231__cwc_808__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46963__emal_43231__cwc_808__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46963__emal_43231__cwc_808__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46963__emal_43231__cwc_808__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46963__emal_43231__cwc_808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46963__emal_43231__cwc_808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46963__emal_43231__cwc_808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46963__emal_43231__cwc_808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46963__emal_43231__cwc_808__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46963__emal_43231__cwc_808__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46963__emal_43231__cwc_808__desc) & (-1 ^ (3))))[1]) = 0; }



                if (!((SACp_pinl_46963__emal_43231__cwc_808__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                {

                  int SAC_size = 1;
                  SAC_size *=
                  SACp_pinl_46963__emal_43231__cwc_808__shp0 =
                  (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46963__emal_43231__cwc_808__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
                  (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46963__emal_43231__cwc_808__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46963__emal_43231__cwc_808__sz = SAC_size;
                  if (!((SACp_pinl_46963__emal_43231__cwc_808__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
                }

                { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6950 "/home/rubenhensen/sac/a.out.c" 3 4
               ((void) sizeof ((
# 6950 "/home/rubenhensen/sac/a.out.c"
               SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6950 "/home/rubenhensen/sac/a.out.c" 3 4
               ) ? 1 : 0), __extension__ ({ if (
# 6950 "/home/rubenhensen/sac/a.out.c"
               SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6950 "/home/rubenhensen/sac/a.out.c" 3 4
               ) ; else __assert_fail (
# 6950 "/home/rubenhensen/sac/a.out.c"
               "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6950 "/home/rubenhensen/sac/a.out.c" 3 4
               , "/home/rubenhensen/sac/a.out.c", 6950, __extension__ __PRETTY_FUNCTION__); }))
# 6950 "/home/rubenhensen/sac/a.out.c"
               ; SACp_pinl_46963__emal_43231__cwc_808 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46963__emal_43231__cwc_808__sz * sizeof (*SACp_pinl_46963__emal_43231__cwc_808)); break; case SAC_HM_multi_threaded: SACp_pinl_46963__emal_43231__cwc_808 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46963__emal_43231__cwc_808__sz * sizeof (*SACp_pinl_46963__emal_43231__cwc_808), 0); break; case SAC_HM_any_threaded: SACp_pinl_46963__emal_43231__cwc_808 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46963__emal_43231__cwc_808__sz * sizeof (*SACp_pinl_46963__emal_43231__cwc_808), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46963__emal_43231__cwc_808__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46963__emal_43231__cwc_808__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46963__emal_43231__cwc_808__desc) & (-1 ^ (3))))[1]) = 0; } }



               
                for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
                  { SACp_pinl_46963__emal_43231__cwc_808[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
                }

                { { if (!((1 == SACp_pinl_46962__emal_43230__cwc_811__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46962__emal_43230__cwc_811"); }; { { if ((((SACp_pinl_46962__emal_43230__cwc_811__sz * sizeof (*SACp_pinl_46962__emal_43230__cwc_811)) + ((6 + (SACp_pinl_46962__emal_43230__cwc_811__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46962__emal_43230__cwc_811__sz * sizeof (*SACp_pinl_46962__emal_43230__cwc_811)) + ((6 + (SACp_pinl_46962__emal_43230__cwc_811__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46962__emal_43230__cwc_811__sz * sizeof (*SACp_pinl_46962__emal_43230__cwc_811)) + ((6 + (SACp_pinl_46962__emal_43230__cwc_811__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46962__emal_43230__cwc_811 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46962__emal_43230__cwc_811 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46962__emal_43230__cwc_811__sz * sizeof (*SACp_pinl_46962__emal_43230__cwc_811)) + ((6 + (SACp_pinl_46962__emal_43230__cwc_811__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46962__emal_43230__cwc_811 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46962__emal_43230__cwc_811 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46962__emal_43230__cwc_811__sz * sizeof (*SACp_pinl_46962__emal_43230__cwc_811)) + ((6 + (SACp_pinl_46962__emal_43230__cwc_811__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46962__emal_43230__cwc_811__sz * sizeof (*SACp_pinl_46962__emal_43230__cwc_811)) + ((6 + (SACp_pinl_46962__emal_43230__cwc_811__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46962__emal_43230__cwc_811__sz * sizeof (*SACp_pinl_46962__emal_43230__cwc_811)) + ((6 + (SACp_pinl_46962__emal_43230__cwc_811__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46962__emal_43230__cwc_811__sz * sizeof (*SACp_pinl_46962__emal_43230__cwc_811)) + ((6 + (SACp_pinl_46962__emal_43230__cwc_811__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46962__emal_43230__cwc_811__sz * sizeof (*SACp_pinl_46962__emal_43230__cwc_811)) + ((6 + (SACp_pinl_46962__emal_43230__cwc_811__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46962__emal_43230__cwc_811 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46962__emal_43230__cwc_811 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46962__emal_43230__cwc_811 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46962__emal_43230__cwc_811 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46962__emal_43230__cwc_811__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46962__emal_43230__cwc_811, SACp_pinl_46962__emal_43230__cwc_811__sz * sizeof (*SACp_pinl_46962__emal_43230__cwc_811), ((6 + (SACp_pinl_46962__emal_43230__cwc_811__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46962__emal_43230__cwc_811__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46962__emal_43230__cwc_811__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46962__emal_43230__cwc_811__desc) & (-1 ^ (3))))[1]) = 0; }



                if (!((SACp_pinl_46962__emal_43230__cwc_811__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                if (!((SACp_pinl_46962__emal_43230__cwc_811__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                ;

                }



                { SACp_pinl_46962__emal_43230__cwc_811[0] = 0; }




                if ((SACp_pinl_46962__emal_43230__cwc_811__dim != 1) && (SACp_pinl_46962__emal_43230__cwc_811__shp0 != SACp_pinl_46963__emal_43231__cwc_808__dim)) {
                  SACp_pinl_46961__emal_43229__icc_4643_pred = 0;
                  SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46962__emal_43230__cwc_811""' with shape %s ""And `" "SACp_pinl_46963__emal_43231__cwc_808""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46962__emal_43230__cwc_811__desc), SAC_PrintShape (SACp_pinl_46963__emal_43231__cwc_808__desc));
                }
                else {
                  int SAC_all = 1; if (0 || (( SACp_pinl_46962__emal_43230__cwc_811[0]) >= SACp_pinl_46963__emal_43231__cwc_808__shp0))
                  {

                    SAC_all = 0;
                    SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46962__emal_43230__cwc_811""' with shape %s ""And `" "SACp_pinl_46963__emal_43231__cwc_808""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46962__emal_43230__cwc_811__desc), SAC_PrintShape (SACp_pinl_46963__emal_43231__cwc_808__desc));
                  }
                  SACp_pinl_46961__emal_43229__icc_4643_pred = SAC_all;
                }




                if (!((SACp_pinl_46954__idc_4649__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                if (!((SACp_pinl_46954__idc_4649__shp0 == SACp_pinl_46962__emal_43230__cwc_811__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                SACp_pinl_46954__idc_4649__desc = SACp_pinl_46962__emal_43230__cwc_811__desc;
                ;
                ;
                { SACp_pinl_46954__idc_4649 = SACp_pinl_46962__emal_43230__cwc_811; }

                if (!SACp_pinl_46961__emal_43229__icc_4643_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



                SACp_pinl_46948__icc_4645__desc = SACp_pinl_46963__emal_43231__cwc_808__desc;
                SACp_pinl_46948__icc_4645__sz = SACp_pinl_46963__emal_43231__cwc_808__sz;
                SACp_pinl_46948__icc_4645__dim = SACp_pinl_46963__emal_43231__cwc_808__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46948__icc_4645__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46963__emal_43231__cwc_808__dim;
                { SACp_pinl_46948__icc_4645 = SACp_pinl_46963__emal_43231__cwc_808; }




                if (!((SACp_pinl_46947__icc_4644__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                if (!((SACp_pinl_46947__icc_4644__shp0 == SACp_pinl_46954__idc_4649__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                SACp_pinl_46947__icc_4644__desc = SACp_pinl_46954__idc_4649__desc;
                ;
                ;
                { SACp_pinl_46947__icc_4644 = SACp_pinl_46954__idc_4649; }

                { { if (!((1 == SACp_pinl_46960__emal_43228__ivesplit_42407__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46960__emal_43228__ivesplit_42407"); }; { if ((((6 + (SACp_pinl_46960__emal_43228__ivesplit_42407__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46960__emal_43228__ivesplit_42407__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46960__emal_43228__ivesplit_42407__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46960__emal_43228__ivesplit_42407__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46960__emal_43228__ivesplit_42407__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46960__emal_43228__ivesplit_42407__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46960__emal_43228__ivesplit_42407__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46960__emal_43228__ivesplit_42407__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46960__emal_43228__ivesplit_42407__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46960__emal_43228__ivesplit_42407__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46960__emal_43228__ivesplit_42407__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46960__emal_43228__ivesplit_42407__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46960__emal_43228__ivesplit_42407__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46960__emal_43228__ivesplit_42407__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46960__emal_43228__ivesplit_42407__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46960__emal_43228__ivesplit_42407__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46960__emal_43228__ivesplit_42407__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46960__emal_43228__ivesplit_42407__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46960__emal_43228__ivesplit_42407__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46960__emal_43228__ivesplit_42407__desc) & (-1 ^ (3))))[1]) = 0; }



                if (!((SACp_pinl_46960__emal_43228__ivesplit_42407__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
                {

                  int SAC_size = 1;
                  SAC_size *=
                  SACp_pinl_46960__emal_43228__ivesplit_42407__shp0 =
                  (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46960__emal_43228__ivesplit_42407__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46948__icc_4645__dim;
                  (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46960__emal_43228__ivesplit_42407__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46960__emal_43228__ivesplit_42407__sz = SAC_size;
                  if (!((SACp_pinl_46960__emal_43228__ivesplit_42407__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
                }

                { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7035 "/home/rubenhensen/sac/a.out.c" 3 4
               ((void) sizeof ((
# 7035 "/home/rubenhensen/sac/a.out.c"
               SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7035 "/home/rubenhensen/sac/a.out.c" 3 4
               ) ? 1 : 0), __extension__ ({ if (
# 7035 "/home/rubenhensen/sac/a.out.c"
               SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7035 "/home/rubenhensen/sac/a.out.c" 3 4
               ) ; else __assert_fail (
# 7035 "/home/rubenhensen/sac/a.out.c"
               "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7035 "/home/rubenhensen/sac/a.out.c" 3 4
               , "/home/rubenhensen/sac/a.out.c", 7035, __extension__ __PRETTY_FUNCTION__); }))
# 7035 "/home/rubenhensen/sac/a.out.c"
               ; SACp_pinl_46960__emal_43228__ivesplit_42407 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46960__emal_43228__ivesplit_42407__sz * sizeof (*SACp_pinl_46960__emal_43228__ivesplit_42407)); break; case SAC_HM_multi_threaded: SACp_pinl_46960__emal_43228__ivesplit_42407 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46960__emal_43228__ivesplit_42407__sz * sizeof (*SACp_pinl_46960__emal_43228__ivesplit_42407), 0); break; case SAC_HM_any_threaded: SACp_pinl_46960__emal_43228__ivesplit_42407 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46960__emal_43228__ivesplit_42407__sz * sizeof (*SACp_pinl_46960__emal_43228__ivesplit_42407), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46960__emal_43228__ivesplit_42407__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46960__emal_43228__ivesplit_42407__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46960__emal_43228__ivesplit_42407__desc) & (-1 ^ (3))))[1]) = 0; } }



               
                for (int SAC_i = 0; SAC_i < SACp_pinl_46948__icc_4645__dim; SAC_i++) {
                  { SACp_pinl_46960__emal_43228__ivesplit_42407[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46948__icc_4645__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
                }




                {
                  int SAC_i, SAC_l;
                  SAC_l = 0;
                  SAC_l = ( SACp_pinl_46947__icc_4644[0]);
                  for (SAC_i = (1); SAC_i < SACp_pinl_46960__emal_43228__ivesplit_42407__sz; SAC_i++)
                  {

                    SAC_l *= ( SACp_pinl_46960__emal_43228__ivesplit_42407[SAC_i]);
                  }
                  SACp_pinl_46959__emal_43227__ivesli_42458 = SAC_l;
                }

                { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46947__icc_4644__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46947__icc_4644__sz * sizeof (*SACp_pinl_46947__icc_4644)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46947__icc_4644, ((((SAC_HM_header_t *)SACp_pinl_46947__icc_4644) - 1)->data1.arena)); } else { if (SACp_pinl_46947__icc_4644__sz * sizeof (*SACp_pinl_46947__icc_4644) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46947__icc_4644) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46947__icc_4644, ((((SAC_HM_header_t *)SACp_pinl_46947__icc_4644) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46947__icc_4644, ((((SAC_HM_header_t *)SACp_pinl_46947__icc_4644) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46947__icc_4644__sz * sizeof (*SACp_pinl_46947__icc_4644))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46947__icc_4644, ((((SAC_HM_header_t *)SACp_pinl_46947__icc_4644) - 1)->data1.arena)); } else { if (((((SACp_pinl_46947__icc_4644__sz * sizeof (*SACp_pinl_46947__icc_4644))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46947__icc_4644) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46947__icc_4644, ((((SAC_HM_header_t *)SACp_pinl_46947__icc_4644) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46947__icc_4644, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46947__icc_4644); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46947__icc_4644); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46947__icc_4644, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46947__icc_4644); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46947__icc_4644); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46947__icc_4644__desc) & (-1 ^ (3))))); } } } } else { } }
                { { free (SACp_pinl_46960__emal_43228__ivesplit_42407); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46960__emal_43228__ivesplit_42407__desc) & (-1 ^ (3))))); } } }



               
                if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
                { SACp_pinl_46958__emal_43226__icc_4646 = ( SACp_pinl_46948__icc_4645[SACp_pinl_46959__emal_43227__ivesli_42458]); }

                { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46948__icc_4645__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46948__icc_4645); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46948__icc_4645__desc) & (-1 ^ (3))))); } } } } else { } }
                { ; ; }
                if (!SACp_pinl_46961__emal_43229__icc_4643_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
                { ; ; }
                ; ; { SACp_pinl_46957__emal_43225__cwc_814 = (SACp_pinl_46958__emal_43226__icc_4646) == (2); };
                { ; ; }
                if (SACp_pinl_46957__emal_43225__cwc_814)
                {
                  { ; ; }



                  SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




                  SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                  SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

                }
                else
                {
                  { ; ; }



                  SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




                  SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                  SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

                }
              }
              else
              {
                { ; ; }



                SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




                SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

              }
            }
          }
        }
        else
        {
          { ; ; }
          { { SACp_pinl_46849__emal_43183__cwc_776 = SACl_b__dim; }; }
          ; ; { SACp_pinl_46848__emal_43182__cwc_803 = (SACp_pinl_46849__emal_43183__cwc_776) == (2); };
          if (SACp_pinl_46848__emal_43182__cwc_803)
          {
            { ; ; }
            { ; ; }
            { { if (!((1 == SACp_pinl_46998__emal_43197__cwc_789__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46998__emal_43197__cwc_789"); }; { if ((((6 + (SACp_pinl_46998__emal_43197__cwc_789__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46998__emal_43197__cwc_789__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46998__emal_43197__cwc_789__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46998__emal_43197__cwc_789__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46998__emal_43197__cwc_789__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46998__emal_43197__cwc_789__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46998__emal_43197__cwc_789__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46998__emal_43197__cwc_789__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46998__emal_43197__cwc_789__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46998__emal_43197__cwc_789__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46998__emal_43197__cwc_789__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46998__emal_43197__cwc_789__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46998__emal_43197__cwc_789__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46998__emal_43197__cwc_789__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46998__emal_43197__cwc_789__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46998__emal_43197__cwc_789__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46998__emal_43197__cwc_789__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46998__emal_43197__cwc_789__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46998__emal_43197__cwc_789__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46998__emal_43197__cwc_789__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46998__emal_43197__cwc_789__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_46998__emal_43197__cwc_789__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46998__emal_43197__cwc_789__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46998__emal_43197__cwc_789__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46998__emal_43197__cwc_789__sz = SAC_size;
              if (!((SACp_pinl_46998__emal_43197__cwc_789__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7147 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 7147 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7147 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 7147 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7147 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 7147 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7147 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 7147, __extension__ __PRETTY_FUNCTION__); }))
# 7147 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_46998__emal_43197__cwc_789 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46998__emal_43197__cwc_789__sz * sizeof (*SACp_pinl_46998__emal_43197__cwc_789)); break; case SAC_HM_multi_threaded: SACp_pinl_46998__emal_43197__cwc_789 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46998__emal_43197__cwc_789__sz * sizeof (*SACp_pinl_46998__emal_43197__cwc_789), 0); break; case SAC_HM_any_threaded: SACp_pinl_46998__emal_43197__cwc_789 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46998__emal_43197__cwc_789__sz * sizeof (*SACp_pinl_46998__emal_43197__cwc_789), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46998__emal_43197__cwc_789__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46998__emal_43197__cwc_789__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46998__emal_43197__cwc_789__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
              { SACp_pinl_46998__emal_43197__cwc_789[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }

            { { if (!((1 == SACp_pinl_46997__emal_43196__cwc_792__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46997__emal_43196__cwc_792"); }; { { if ((((SACp_pinl_46997__emal_43196__cwc_792__sz * sizeof (*SACp_pinl_46997__emal_43196__cwc_792)) + ((6 + (SACp_pinl_46997__emal_43196__cwc_792__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46997__emal_43196__cwc_792__sz * sizeof (*SACp_pinl_46997__emal_43196__cwc_792)) + ((6 + (SACp_pinl_46997__emal_43196__cwc_792__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46997__emal_43196__cwc_792__sz * sizeof (*SACp_pinl_46997__emal_43196__cwc_792)) + ((6 + (SACp_pinl_46997__emal_43196__cwc_792__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46997__emal_43196__cwc_792 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46997__emal_43196__cwc_792 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46997__emal_43196__cwc_792__sz * sizeof (*SACp_pinl_46997__emal_43196__cwc_792)) + ((6 + (SACp_pinl_46997__emal_43196__cwc_792__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46997__emal_43196__cwc_792 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46997__emal_43196__cwc_792 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46997__emal_43196__cwc_792__sz * sizeof (*SACp_pinl_46997__emal_43196__cwc_792)) + ((6 + (SACp_pinl_46997__emal_43196__cwc_792__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46997__emal_43196__cwc_792__sz * sizeof (*SACp_pinl_46997__emal_43196__cwc_792)) + ((6 + (SACp_pinl_46997__emal_43196__cwc_792__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46997__emal_43196__cwc_792__sz * sizeof (*SACp_pinl_46997__emal_43196__cwc_792)) + ((6 + (SACp_pinl_46997__emal_43196__cwc_792__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46997__emal_43196__cwc_792__sz * sizeof (*SACp_pinl_46997__emal_43196__cwc_792)) + ((6 + (SACp_pinl_46997__emal_43196__cwc_792__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46997__emal_43196__cwc_792__sz * sizeof (*SACp_pinl_46997__emal_43196__cwc_792)) + ((6 + (SACp_pinl_46997__emal_43196__cwc_792__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46997__emal_43196__cwc_792 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46997__emal_43196__cwc_792 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46997__emal_43196__cwc_792 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46997__emal_43196__cwc_792 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46997__emal_43196__cwc_792__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46997__emal_43196__cwc_792, SACp_pinl_46997__emal_43196__cwc_792__sz * sizeof (*SACp_pinl_46997__emal_43196__cwc_792), ((6 + (SACp_pinl_46997__emal_43196__cwc_792__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46997__emal_43196__cwc_792__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46997__emal_43196__cwc_792__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46997__emal_43196__cwc_792__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46997__emal_43196__cwc_792__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46997__emal_43196__cwc_792__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_46997__emal_43196__cwc_792[0] = 0; }




            if ((SACp_pinl_46997__emal_43196__cwc_792__dim != 1) && (SACp_pinl_46997__emal_43196__cwc_792__shp0 != SACp_pinl_46998__emal_43197__cwc_789__dim)) {
              SACp_pinl_46996__emal_43195__icc_4652_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46997__emal_43196__cwc_792""' with shape %s ""And `" "SACp_pinl_46998__emal_43197__cwc_789""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46997__emal_43196__cwc_792__desc), SAC_PrintShape (SACp_pinl_46998__emal_43197__cwc_789__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_46997__emal_43196__cwc_792[0]) >= SACp_pinl_46998__emal_43197__cwc_789__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46997__emal_43196__cwc_792""' with shape %s ""And `" "SACp_pinl_46998__emal_43197__cwc_789""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46997__emal_43196__cwc_792__desc), SAC_PrintShape (SACp_pinl_46998__emal_43197__cwc_789__desc));
              }
              SACp_pinl_46996__emal_43195__icc_4652_pred = SAC_all;
            }




            if (!((SACp_pinl_46978__idc_4664__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46978__idc_4664__shp0 == SACp_pinl_46997__emal_43196__cwc_792__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46978__idc_4664__desc = SACp_pinl_46997__emal_43196__cwc_792__desc;
            ;
            ;
            { SACp_pinl_46978__idc_4664 = SACp_pinl_46997__emal_43196__cwc_792; }

            if (!SACp_pinl_46996__emal_43195__icc_4652_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_46965__icc_4654__desc = SACp_pinl_46998__emal_43197__cwc_789__desc;
            SACp_pinl_46965__icc_4654__sz = SACp_pinl_46998__emal_43197__cwc_789__sz;
            SACp_pinl_46965__icc_4654__dim = SACp_pinl_46998__emal_43197__cwc_789__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46965__icc_4654__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46998__emal_43197__cwc_789__dim;
            { SACp_pinl_46965__icc_4654 = SACp_pinl_46998__emal_43197__cwc_789; }




            if (!((SACp_pinl_46964__icc_4653__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46964__icc_4653__shp0 == SACp_pinl_46978__idc_4664__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46964__icc_4653__desc = SACp_pinl_46978__idc_4664__desc;
            ;
            ;
            { SACp_pinl_46964__icc_4653 = SACp_pinl_46978__idc_4664; }

            { { if (!((1 == SACp_pinl_46995__emal_43194__ivesplit_42397__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46995__emal_43194__ivesplit_42397"); }; { if ((((6 + (SACp_pinl_46995__emal_43194__ivesplit_42397__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46995__emal_43194__ivesplit_42397__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46995__emal_43194__ivesplit_42397__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46995__emal_43194__ivesplit_42397__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46995__emal_43194__ivesplit_42397__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46995__emal_43194__ivesplit_42397__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46995__emal_43194__ivesplit_42397__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46995__emal_43194__ivesplit_42397__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46995__emal_43194__ivesplit_42397__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46995__emal_43194__ivesplit_42397__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46995__emal_43194__ivesplit_42397__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46995__emal_43194__ivesplit_42397__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46995__emal_43194__ivesplit_42397__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46995__emal_43194__ivesplit_42397__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46995__emal_43194__ivesplit_42397__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46995__emal_43194__ivesplit_42397__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46995__emal_43194__ivesplit_42397__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46995__emal_43194__ivesplit_42397__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46995__emal_43194__ivesplit_42397__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46995__emal_43194__ivesplit_42397__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46995__emal_43194__ivesplit_42397__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_46995__emal_43194__ivesplit_42397__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46995__emal_43194__ivesplit_42397__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46965__icc_4654__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46995__emal_43194__ivesplit_42397__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46995__emal_43194__ivesplit_42397__sz = SAC_size;
              if (!((SACp_pinl_46995__emal_43194__ivesplit_42397__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7232 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 7232 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7232 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 7232 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7232 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 7232 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7232 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 7232, __extension__ __PRETTY_FUNCTION__); }))
# 7232 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_46995__emal_43194__ivesplit_42397 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46995__emal_43194__ivesplit_42397__sz * sizeof (*SACp_pinl_46995__emal_43194__ivesplit_42397)); break; case SAC_HM_multi_threaded: SACp_pinl_46995__emal_43194__ivesplit_42397 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46995__emal_43194__ivesplit_42397__sz * sizeof (*SACp_pinl_46995__emal_43194__ivesplit_42397), 0); break; case SAC_HM_any_threaded: SACp_pinl_46995__emal_43194__ivesplit_42397 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46995__emal_43194__ivesplit_42397__sz * sizeof (*SACp_pinl_46995__emal_43194__ivesplit_42397), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46995__emal_43194__ivesplit_42397__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46995__emal_43194__ivesplit_42397__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46995__emal_43194__ivesplit_42397__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_46965__icc_4654__dim; SAC_i++) {
              { SACp_pinl_46995__emal_43194__ivesplit_42397[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46965__icc_4654__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_46964__icc_4653[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_46995__emal_43194__ivesplit_42397__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_46995__emal_43194__ivesplit_42397[SAC_i]);
              }
              SACp_pinl_46994__emal_43193__ivesli_42454 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46964__icc_4653__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46964__icc_4653__sz * sizeof (*SACp_pinl_46964__icc_4653)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46964__icc_4653, ((((SAC_HM_header_t *)SACp_pinl_46964__icc_4653) - 1)->data1.arena)); } else { if (SACp_pinl_46964__icc_4653__sz * sizeof (*SACp_pinl_46964__icc_4653) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46964__icc_4653) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46964__icc_4653, ((((SAC_HM_header_t *)SACp_pinl_46964__icc_4653) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46964__icc_4653, ((((SAC_HM_header_t *)SACp_pinl_46964__icc_4653) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46964__icc_4653__sz * sizeof (*SACp_pinl_46964__icc_4653))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46964__icc_4653, ((((SAC_HM_header_t *)SACp_pinl_46964__icc_4653) - 1)->data1.arena)); } else { if (((((SACp_pinl_46964__icc_4653__sz * sizeof (*SACp_pinl_46964__icc_4653))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46964__icc_4653) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46964__icc_4653, ((((SAC_HM_header_t *)SACp_pinl_46964__icc_4653) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46964__icc_4653, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46964__icc_4653); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46964__icc_4653); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46964__icc_4653, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46964__icc_4653); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46964__icc_4653); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46964__icc_4653__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_46995__emal_43194__ivesplit_42397); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46995__emal_43194__ivesplit_42397__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_46993__emal_43192__icc_4655 = ( SACp_pinl_46965__icc_4654[SACp_pinl_46994__emal_43193__ivesli_42454]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46965__icc_4654__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46965__icc_4654); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46965__icc_4654__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_46996__emal_43195__icc_4652_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            ; ; { SACp_pinl_46992__emal_43191__cwc_795 = (SACp_pinl_46993__emal_43192__icc_4655) == (2); };
            { ; ; }
            { { if (!((1 == SACp_pinl_46991__emal_43190__cwc_797__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46991__emal_43190__cwc_797"); }; { { if ((((SACp_pinl_46991__emal_43190__cwc_797__sz * sizeof (*SACp_pinl_46991__emal_43190__cwc_797)) + ((6 + (SACp_pinl_46991__emal_43190__cwc_797__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46991__emal_43190__cwc_797__sz * sizeof (*SACp_pinl_46991__emal_43190__cwc_797)) + ((6 + (SACp_pinl_46991__emal_43190__cwc_797__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_46991__emal_43190__cwc_797__sz * sizeof (*SACp_pinl_46991__emal_43190__cwc_797)) + ((6 + (SACp_pinl_46991__emal_43190__cwc_797__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46991__emal_43190__cwc_797 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46991__emal_43190__cwc_797 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_46991__emal_43190__cwc_797__sz * sizeof (*SACp_pinl_46991__emal_43190__cwc_797)) + ((6 + (SACp_pinl_46991__emal_43190__cwc_797__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46991__emal_43190__cwc_797 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46991__emal_43190__cwc_797 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_46991__emal_43190__cwc_797__sz * sizeof (*SACp_pinl_46991__emal_43190__cwc_797)) + ((6 + (SACp_pinl_46991__emal_43190__cwc_797__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_46991__emal_43190__cwc_797__sz * sizeof (*SACp_pinl_46991__emal_43190__cwc_797)) + ((6 + (SACp_pinl_46991__emal_43190__cwc_797__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_46991__emal_43190__cwc_797__sz * sizeof (*SACp_pinl_46991__emal_43190__cwc_797)) + ((6 + (SACp_pinl_46991__emal_43190__cwc_797__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_46991__emal_43190__cwc_797__sz * sizeof (*SACp_pinl_46991__emal_43190__cwc_797)) + ((6 + (SACp_pinl_46991__emal_43190__cwc_797__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_46991__emal_43190__cwc_797__sz * sizeof (*SACp_pinl_46991__emal_43190__cwc_797)) + ((6 + (SACp_pinl_46991__emal_43190__cwc_797__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46991__emal_43190__cwc_797 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46991__emal_43190__cwc_797 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46991__emal_43190__cwc_797 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46991__emal_43190__cwc_797 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_46991__emal_43190__cwc_797__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_46991__emal_43190__cwc_797, SACp_pinl_46991__emal_43190__cwc_797__sz * sizeof (*SACp_pinl_46991__emal_43190__cwc_797), ((6 + (SACp_pinl_46991__emal_43190__cwc_797__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46991__emal_43190__cwc_797__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46991__emal_43190__cwc_797__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46991__emal_43190__cwc_797__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46991__emal_43190__cwc_797__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46991__emal_43190__cwc_797__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_46991__emal_43190__cwc_797[0] = 1; }




            if ((SACp_pinl_46991__emal_43190__cwc_797__dim != 1) && (SACp_pinl_46991__emal_43190__cwc_797__shp0 != SACp_pinl_46998__emal_43197__cwc_789__dim)) {
              SACp_pinl_46990__emal_43189__icc_4658_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46991__emal_43190__cwc_797""' with shape %s ""And `" "SACp_pinl_46998__emal_43197__cwc_789""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46991__emal_43190__cwc_797__desc), SAC_PrintShape (SACp_pinl_46998__emal_43197__cwc_789__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_46991__emal_43190__cwc_797[0]) >= SACp_pinl_46998__emal_43197__cwc_789__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_46991__emal_43190__cwc_797""' with shape %s ""And `" "SACp_pinl_46998__emal_43197__cwc_789""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_46991__emal_43190__cwc_797__desc), SAC_PrintShape (SACp_pinl_46998__emal_43197__cwc_789__desc));
              }
              SACp_pinl_46990__emal_43189__icc_4658_pred = SAC_all;
            }




            if (!((SACp_pinl_46980__idc_4667__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46980__idc_4667__shp0 == SACp_pinl_46991__emal_43190__cwc_797__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46980__idc_4667__desc = SACp_pinl_46991__emal_43190__cwc_797__desc;
            ;
            ;
            { SACp_pinl_46980__idc_4667 = SACp_pinl_46991__emal_43190__cwc_797; }

            if (!SACp_pinl_46990__emal_43189__icc_4658_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_46968__icc_4660__desc = SACp_pinl_46998__emal_43197__cwc_789__desc;
            SACp_pinl_46968__icc_4660__sz = SACp_pinl_46998__emal_43197__cwc_789__sz;
            SACp_pinl_46968__icc_4660__dim = SACp_pinl_46998__emal_43197__cwc_789__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46968__icc_4660__desc) & (-1 ^ (3))))[3]) = SACp_pinl_46998__emal_43197__cwc_789__dim;
            { SACp_pinl_46968__icc_4660 = SACp_pinl_46998__emal_43197__cwc_789; }




            if (!((SACp_pinl_46967__icc_4659__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_46967__icc_4659__shp0 == SACp_pinl_46980__idc_4667__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            SACp_pinl_46967__icc_4659__desc = SACp_pinl_46980__idc_4667__desc;
            ;
            ;
            { SACp_pinl_46967__icc_4659 = SACp_pinl_46980__idc_4667; }

            { { if (!((1 == SACp_pinl_46989__emal_43188__ivesplit_42399__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_46989__emal_43188__ivesplit_42399"); }; { if ((((6 + (SACp_pinl_46989__emal_43188__ivesplit_42399__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46989__emal_43188__ivesplit_42399__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_46989__emal_43188__ivesplit_42399__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46989__emal_43188__ivesplit_42399__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_46989__emal_43188__ivesplit_42399__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_46989__emal_43188__ivesplit_42399__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_46989__emal_43188__ivesplit_42399__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_46989__emal_43188__ivesplit_42399__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_46989__emal_43188__ivesplit_42399__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_46989__emal_43188__ivesplit_42399__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_46989__emal_43188__ivesplit_42399__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_46989__emal_43188__ivesplit_42399__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_46989__emal_43188__ivesplit_42399__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_46989__emal_43188__ivesplit_42399__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_46989__emal_43188__ivesplit_42399__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_46989__emal_43188__ivesplit_42399__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_46989__emal_43188__ivesplit_42399__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46989__emal_43188__ivesplit_42399__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46989__emal_43188__ivesplit_42399__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46989__emal_43188__ivesplit_42399__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_46989__emal_43188__ivesplit_42399__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_46989__emal_43188__ivesplit_42399__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46989__emal_43188__ivesplit_42399__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_46968__icc_4660__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46989__emal_43188__ivesplit_42399__desc) & (-1 ^ (3))))[4]) = SACp_pinl_46989__emal_43188__ivesplit_42399__sz = SAC_size;
              if (!((SACp_pinl_46989__emal_43188__ivesplit_42399__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7347 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 7347 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7347 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 7347 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7347 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 7347 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7347 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 7347, __extension__ __PRETTY_FUNCTION__); }))
# 7347 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_46989__emal_43188__ivesplit_42399 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_46989__emal_43188__ivesplit_42399__sz * sizeof (*SACp_pinl_46989__emal_43188__ivesplit_42399)); break; case SAC_HM_multi_threaded: SACp_pinl_46989__emal_43188__ivesplit_42399 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_46989__emal_43188__ivesplit_42399__sz * sizeof (*SACp_pinl_46989__emal_43188__ivesplit_42399), 0); break; case SAC_HM_any_threaded: SACp_pinl_46989__emal_43188__ivesplit_42399 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_46989__emal_43188__ivesplit_42399__sz * sizeof (*SACp_pinl_46989__emal_43188__ivesplit_42399), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46989__emal_43188__ivesplit_42399__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46989__emal_43188__ivesplit_42399__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46989__emal_43188__ivesplit_42399__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_46968__icc_4660__dim; SAC_i++) {
              { SACp_pinl_46989__emal_43188__ivesplit_42399[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46968__icc_4660__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_46967__icc_4659[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_46989__emal_43188__ivesplit_42399__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_46989__emal_43188__ivesplit_42399[SAC_i]);
              }
              SACp_pinl_46988__emal_43187__ivesli_42453 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46967__icc_4659__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_46967__icc_4659__sz * sizeof (*SACp_pinl_46967__icc_4659)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46967__icc_4659, ((((SAC_HM_header_t *)SACp_pinl_46967__icc_4659) - 1)->data1.arena)); } else { if (SACp_pinl_46967__icc_4659__sz * sizeof (*SACp_pinl_46967__icc_4659) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_46967__icc_4659) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_46967__icc_4659, ((((SAC_HM_header_t *)SACp_pinl_46967__icc_4659) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46967__icc_4659, ((((SAC_HM_header_t *)SACp_pinl_46967__icc_4659) - 1)->data1.arena)); } } else { if (((((SACp_pinl_46967__icc_4659__sz * sizeof (*SACp_pinl_46967__icc_4659))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46967__icc_4659, ((((SAC_HM_header_t *)SACp_pinl_46967__icc_4659) - 1)->data1.arena)); } else { if (((((SACp_pinl_46967__icc_4659__sz * sizeof (*SACp_pinl_46967__icc_4659))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_46967__icc_4659) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46967__icc_4659, ((((SAC_HM_header_t *)SACp_pinl_46967__icc_4659) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46967__icc_4659, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46967__icc_4659); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46967__icc_4659); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_46967__icc_4659, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_46967__icc_4659); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_46967__icc_4659); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46967__icc_4659__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_46989__emal_43188__ivesplit_42399); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46989__emal_43188__ivesplit_42399__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_46987__emal_43186__icc_4661 = ( SACp_pinl_46968__icc_4660[SACp_pinl_46988__emal_43187__ivesli_42453]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46968__icc_4660__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_46968__icc_4660); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_46968__icc_4660__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_46990__emal_43189__icc_4658_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            { ; ;



            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
            ;

            }
            ; ; { SACp_pinl_46986__emal_43185__cwc_800 = (SACp_pinl_46987__emal_43186__icc_4661) == (3); };
            { ; ; }
            ; ; { SACp_pinl_46986__emal_43185__cwc_800 = (SACp_pinl_46986__emal_43185__cwc_800) & (SACp_pinl_46992__emal_43191__cwc_795); };
            { ; ; }
            if (SACp_pinl_46986__emal_43185__cwc_800)
            {
              { ; ; }



              SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




              SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

            }
            else
            {
              { ; ; }



              SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




              SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

            }
          }
          else
          {
            { ; ; }
            ; ; { SACp_pinl_46999__emal_43198__cwc_787 = (SACp_pinl_46849__emal_43183__cwc_776) == (1); };
            { ; ; }
            if (SACp_pinl_46999__emal_43198__cwc_787)
            {
              { ; ; }
              { { if (!((1 == SACp_pinl_47016__emal_43205__cwc_778__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47016__emal_43205__cwc_778"); }; { if ((((6 + (SACp_pinl_47016__emal_43205__cwc_778__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47016__emal_43205__cwc_778__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47016__emal_43205__cwc_778__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47016__emal_43205__cwc_778__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47016__emal_43205__cwc_778__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47016__emal_43205__cwc_778__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47016__emal_43205__cwc_778__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47016__emal_43205__cwc_778__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47016__emal_43205__cwc_778__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47016__emal_43205__cwc_778__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47016__emal_43205__cwc_778__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47016__emal_43205__cwc_778__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47016__emal_43205__cwc_778__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47016__emal_43205__cwc_778__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47016__emal_43205__cwc_778__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47016__emal_43205__cwc_778__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47016__emal_43205__cwc_778__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47016__emal_43205__cwc_778__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47016__emal_43205__cwc_778__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47016__emal_43205__cwc_778__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_47016__emal_43205__cwc_778__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              {

                int SAC_size = 1;
                SAC_size *=
                SACp_pinl_47016__emal_43205__cwc_778__shp0 =
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47016__emal_43205__cwc_778__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47016__emal_43205__cwc_778__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47016__emal_43205__cwc_778__sz = SAC_size;
                if (!((SACp_pinl_47016__emal_43205__cwc_778__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
              }

              { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7450 "/home/rubenhensen/sac/a.out.c" 3 4
             ((void) sizeof ((
# 7450 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7450 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ? 1 : 0), __extension__ ({ if (
# 7450 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7450 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ; else __assert_fail (
# 7450 "/home/rubenhensen/sac/a.out.c"
             "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7450 "/home/rubenhensen/sac/a.out.c" 3 4
             , "/home/rubenhensen/sac/a.out.c", 7450, __extension__ __PRETTY_FUNCTION__); }))
# 7450 "/home/rubenhensen/sac/a.out.c"
             ; SACp_pinl_47016__emal_43205__cwc_778 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47016__emal_43205__cwc_778__sz * sizeof (*SACp_pinl_47016__emal_43205__cwc_778)); break; case SAC_HM_multi_threaded: SACp_pinl_47016__emal_43205__cwc_778 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47016__emal_43205__cwc_778__sz * sizeof (*SACp_pinl_47016__emal_43205__cwc_778), 0); break; case SAC_HM_any_threaded: SACp_pinl_47016__emal_43205__cwc_778 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47016__emal_43205__cwc_778__sz * sizeof (*SACp_pinl_47016__emal_43205__cwc_778), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47016__emal_43205__cwc_778__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47016__emal_43205__cwc_778__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47016__emal_43205__cwc_778__desc) & (-1 ^ (3))))[1]) = 0; } }



             
              for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
                { SACp_pinl_47016__emal_43205__cwc_778[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
              }

              { { if (!((1 == SACp_pinl_47015__emal_43204__cwc_781__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47015__emal_43204__cwc_781"); }; { { if ((((SACp_pinl_47015__emal_43204__cwc_781__sz * sizeof (*SACp_pinl_47015__emal_43204__cwc_781)) + ((6 + (SACp_pinl_47015__emal_43204__cwc_781__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47015__emal_43204__cwc_781__sz * sizeof (*SACp_pinl_47015__emal_43204__cwc_781)) + ((6 + (SACp_pinl_47015__emal_43204__cwc_781__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47015__emal_43204__cwc_781__sz * sizeof (*SACp_pinl_47015__emal_43204__cwc_781)) + ((6 + (SACp_pinl_47015__emal_43204__cwc_781__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47015__emal_43204__cwc_781 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47015__emal_43204__cwc_781 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47015__emal_43204__cwc_781__sz * sizeof (*SACp_pinl_47015__emal_43204__cwc_781)) + ((6 + (SACp_pinl_47015__emal_43204__cwc_781__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47015__emal_43204__cwc_781 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47015__emal_43204__cwc_781 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47015__emal_43204__cwc_781__sz * sizeof (*SACp_pinl_47015__emal_43204__cwc_781)) + ((6 + (SACp_pinl_47015__emal_43204__cwc_781__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47015__emal_43204__cwc_781__sz * sizeof (*SACp_pinl_47015__emal_43204__cwc_781)) + ((6 + (SACp_pinl_47015__emal_43204__cwc_781__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47015__emal_43204__cwc_781__sz * sizeof (*SACp_pinl_47015__emal_43204__cwc_781)) + ((6 + (SACp_pinl_47015__emal_43204__cwc_781__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47015__emal_43204__cwc_781__sz * sizeof (*SACp_pinl_47015__emal_43204__cwc_781)) + ((6 + (SACp_pinl_47015__emal_43204__cwc_781__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47015__emal_43204__cwc_781__sz * sizeof (*SACp_pinl_47015__emal_43204__cwc_781)) + ((6 + (SACp_pinl_47015__emal_43204__cwc_781__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47015__emal_43204__cwc_781 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47015__emal_43204__cwc_781 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47015__emal_43204__cwc_781 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47015__emal_43204__cwc_781 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47015__emal_43204__cwc_781__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47015__emal_43204__cwc_781, SACp_pinl_47015__emal_43204__cwc_781__sz * sizeof (*SACp_pinl_47015__emal_43204__cwc_781), ((6 + (SACp_pinl_47015__emal_43204__cwc_781__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47015__emal_43204__cwc_781__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47015__emal_43204__cwc_781__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47015__emal_43204__cwc_781__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_47015__emal_43204__cwc_781__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_47015__emal_43204__cwc_781__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              ;

              }



              { SACp_pinl_47015__emal_43204__cwc_781[0] = 0; }




              if ((SACp_pinl_47015__emal_43204__cwc_781__dim != 1) && (SACp_pinl_47015__emal_43204__cwc_781__shp0 != SACp_pinl_47016__emal_43205__cwc_778__dim)) {
                SACp_pinl_47014__emal_43203__icc_4670_pred = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_47015__emal_43204__cwc_781""' with shape %s ""And `" "SACp_pinl_47016__emal_43205__cwc_778""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47015__emal_43204__cwc_781__desc), SAC_PrintShape (SACp_pinl_47016__emal_43205__cwc_778__desc));
              }
              else {
                int SAC_all = 1; if (0 || (( SACp_pinl_47015__emal_43204__cwc_781[0]) >= SACp_pinl_47016__emal_43205__cwc_778__shp0))
                {

                  SAC_all = 0;
                  SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Arrays `" "SACp_pinl_47015__emal_43204__cwc_781""' with shape %s ""And `" "SACp_pinl_47016__emal_43205__cwc_778""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47015__emal_43204__cwc_781__desc), SAC_PrintShape (SACp_pinl_47016__emal_43205__cwc_778__desc));
                }
                SACp_pinl_47014__emal_43203__icc_4670_pred = SAC_all;
              }




              if (!((SACp_pinl_47007__idc_4676__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_47007__idc_4676__shp0 == SACp_pinl_47015__emal_43204__cwc_781__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              SACp_pinl_47007__idc_4676__desc = SACp_pinl_47015__emal_43204__cwc_781__desc;
              ;
              ;
              { SACp_pinl_47007__idc_4676 = SACp_pinl_47015__emal_43204__cwc_781; }

              if (!SACp_pinl_47014__emal_43203__icc_4670_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }



              SACp_pinl_47001__icc_4672__desc = SACp_pinl_47016__emal_43205__cwc_778__desc;
              SACp_pinl_47001__icc_4672__sz = SACp_pinl_47016__emal_43205__cwc_778__sz;
              SACp_pinl_47001__icc_4672__dim = SACp_pinl_47016__emal_43205__cwc_778__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47001__icc_4672__desc) & (-1 ^ (3))))[3]) = SACp_pinl_47016__emal_43205__cwc_778__dim;
              { SACp_pinl_47001__icc_4672 = SACp_pinl_47016__emal_43205__cwc_778; }




              if (!((SACp_pinl_47000__icc_4671__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              if (!((SACp_pinl_47000__icc_4671__shp0 == SACp_pinl_47007__idc_4676__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              SACp_pinl_47000__icc_4671__desc = SACp_pinl_47007__idc_4676__desc;
              ;
              ;
              { SACp_pinl_47000__icc_4671 = SACp_pinl_47007__idc_4676; }

              { { if (!((1 == SACp_pinl_47013__emal_43202__ivesplit_42401__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47013__emal_43202__ivesplit_42401"); }; { if ((((6 + (SACp_pinl_47013__emal_43202__ivesplit_42401__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47013__emal_43202__ivesplit_42401__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47013__emal_43202__ivesplit_42401__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47013__emal_43202__ivesplit_42401__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47013__emal_43202__ivesplit_42401__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47013__emal_43202__ivesplit_42401__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47013__emal_43202__ivesplit_42401__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47013__emal_43202__ivesplit_42401__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47013__emal_43202__ivesplit_42401__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47013__emal_43202__ivesplit_42401__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47013__emal_43202__ivesplit_42401__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47013__emal_43202__ivesplit_42401__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47013__emal_43202__ivesplit_42401__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47013__emal_43202__ivesplit_42401__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47013__emal_43202__ivesplit_42401__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47013__emal_43202__ivesplit_42401__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47013__emal_43202__ivesplit_42401__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47013__emal_43202__ivesplit_42401__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47013__emal_43202__ivesplit_42401__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47013__emal_43202__ivesplit_42401__desc) & (-1 ^ (3))))[1]) = 0; }



              if (!((SACp_pinl_47013__emal_43202__ivesplit_42401__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
              {

                int SAC_size = 1;
                SAC_size *=
                SACp_pinl_47013__emal_43202__ivesplit_42401__shp0 =
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47013__emal_43202__ivesplit_42401__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47001__icc_4672__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47013__emal_43202__ivesplit_42401__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47013__emal_43202__ivesplit_42401__sz = SAC_size;
                if (!((SACp_pinl_47013__emal_43202__ivesplit_42401__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
              }

              { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7535 "/home/rubenhensen/sac/a.out.c" 3 4
             ((void) sizeof ((
# 7535 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7535 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ? 1 : 0), __extension__ ({ if (
# 7535 "/home/rubenhensen/sac/a.out.c"
             SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7535 "/home/rubenhensen/sac/a.out.c" 3 4
             ) ; else __assert_fail (
# 7535 "/home/rubenhensen/sac/a.out.c"
             "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7535 "/home/rubenhensen/sac/a.out.c" 3 4
             , "/home/rubenhensen/sac/a.out.c", 7535, __extension__ __PRETTY_FUNCTION__); }))
# 7535 "/home/rubenhensen/sac/a.out.c"
             ; SACp_pinl_47013__emal_43202__ivesplit_42401 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47013__emal_43202__ivesplit_42401__sz * sizeof (*SACp_pinl_47013__emal_43202__ivesplit_42401)); break; case SAC_HM_multi_threaded: SACp_pinl_47013__emal_43202__ivesplit_42401 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47013__emal_43202__ivesplit_42401__sz * sizeof (*SACp_pinl_47013__emal_43202__ivesplit_42401), 0); break; case SAC_HM_any_threaded: SACp_pinl_47013__emal_43202__ivesplit_42401 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47013__emal_43202__ivesplit_42401__sz * sizeof (*SACp_pinl_47013__emal_43202__ivesplit_42401), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47013__emal_43202__ivesplit_42401__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47013__emal_43202__ivesplit_42401__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47013__emal_43202__ivesplit_42401__desc) & (-1 ^ (3))))[1]) = 0; } }



             
              for (int SAC_i = 0; SAC_i < SACp_pinl_47001__icc_4672__dim; SAC_i++) {
                { SACp_pinl_47013__emal_43202__ivesplit_42401[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47001__icc_4672__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
              }




              {
                int SAC_i, SAC_l;
                SAC_l = 0;
                SAC_l = ( SACp_pinl_47000__icc_4671[0]);
                for (SAC_i = (1); SAC_i < SACp_pinl_47013__emal_43202__ivesplit_42401__sz; SAC_i++)
                {

                  SAC_l *= ( SACp_pinl_47013__emal_43202__ivesplit_42401[SAC_i]);
                }
                SACp_pinl_47012__emal_43201__ivesli_42455 = SAC_l;
              }

              { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47000__icc_4671__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_47000__icc_4671__sz * sizeof (*SACp_pinl_47000__icc_4671)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47000__icc_4671, ((((SAC_HM_header_t *)SACp_pinl_47000__icc_4671) - 1)->data1.arena)); } else { if (SACp_pinl_47000__icc_4671__sz * sizeof (*SACp_pinl_47000__icc_4671) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47000__icc_4671) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47000__icc_4671, ((((SAC_HM_header_t *)SACp_pinl_47000__icc_4671) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47000__icc_4671, ((((SAC_HM_header_t *)SACp_pinl_47000__icc_4671) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47000__icc_4671__sz * sizeof (*SACp_pinl_47000__icc_4671))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47000__icc_4671, ((((SAC_HM_header_t *)SACp_pinl_47000__icc_4671) - 1)->data1.arena)); } else { if (((((SACp_pinl_47000__icc_4671__sz * sizeof (*SACp_pinl_47000__icc_4671))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47000__icc_4671) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47000__icc_4671, ((((SAC_HM_header_t *)SACp_pinl_47000__icc_4671) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47000__icc_4671, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47000__icc_4671); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47000__icc_4671); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47000__icc_4671, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47000__icc_4671); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47000__icc_4671); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47000__icc_4671__desc) & (-1 ^ (3))))); } } } } else { } }
              { { free (SACp_pinl_47013__emal_43202__ivesplit_42401); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47013__emal_43202__ivesplit_42401__desc) & (-1 ^ (3))))); } } }



             
              if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "1st argument of _idx_sel_ is not a scalar!"); };
              { SACp_pinl_47011__emal_43200__icc_4673 = ( SACp_pinl_47001__icc_4672[SACp_pinl_47012__emal_43201__ivesli_42455]); }

              { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47001__icc_4672__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_47001__icc_4672); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47001__icc_4672__desc) & (-1 ^ (3))))); } } } } else { } }
              { ; ; }
              if (!SACp_pinl_47014__emal_43203__icc_4670_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Primitive function _sel_VxA_ guard failed"); }
              { ; ; }
              ; ; { SACp_pinl_47010__emal_43199__cwc_784 = (SACp_pinl_47011__emal_43200__icc_4673) == (2); };
              { ; ; }
              if (SACp_pinl_47010__emal_43199__cwc_784)
              {
                { ; ; }



                SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




                SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

              }
              else
              {
                { ; ; }



                SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




                SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

              }
            }
            else
            {
              { ; ; }



              SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_cwc_774, &SACp_cwc_774__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




              SACp_cwc_774__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_774__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_774__desc) & (-1 ^ (3))))[3]);

            }
          }
        }
      }
    }



    { *SAC_arg_1__p = SACp_cwc_774; *SAC_arg_1__desc__p = SACp_cwc_774__desc; }
    return;
   
  }



}
}
# 7646 "/home/rubenhensen/sac/a.out.c"
void SACwf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48528_SACl_b;
    SAC_array_descriptor_t _tcp_48528_SACl_b__desc = 
# 7656 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7656 "/home/rubenhensen/sac/a.out.c"
   ;
    const int _tcp_48528_SACl_b__shp0 = 2;
    const int _tcp_48528_SACl_b__shp1 = 3;
    const int _tcp_48528_SACl_b__sz = 6;
    const int _tcp_48528_SACl_b__dim = 2;




    int * _tcp_48527_SACl_a;
    SAC_array_descriptor_t _tcp_48527_SACl_a__desc = 
# 7666 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7666 "/home/rubenhensen/sac/a.out.c"
   ;
    const int _tcp_48527_SACl_a__shp0 = 3;
    const int _tcp_48527_SACl_a__sz = 3;
    const int _tcp_48527_SACl_a__dim = 1;




    int * _tcp_48526_SACl_b;
    SAC_array_descriptor_t _tcp_48526_SACl_b__desc = 
# 7675 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7675 "/home/rubenhensen/sac/a.out.c"
   ;
    const int _tcp_48526_SACl_b__shp0 = 2;
    const int _tcp_48526_SACl_b__shp1 = 3;
    const int _tcp_48526_SACl_b__sz = 6;
    const int _tcp_48526_SACl_b__dim = 2;




    int * SACp_pinl_47538__emal_43337__cwc_1704;
    SAC_array_descriptor_t SACp_pinl_47538__emal_43337__cwc_1704__desc = 
# 7685 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7685 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47538__emal_43337__cwc_1704__shp0;
    int SACp_pinl_47538__emal_43337__cwc_1704__sz;
    const int SACp_pinl_47538__emal_43337__cwc_1704__dim = 1;




    int * SACp_pinl_47537__emal_43336__cwc_1707;
    SAC_array_descriptor_t SACp_pinl_47537__emal_43336__cwc_1707__desc = 
# 7694 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7694 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47537__emal_43336__cwc_1707__shp0 = 1;
    const int SACp_pinl_47537__emal_43336__cwc_1707__sz = 1;
    const int SACp_pinl_47537__emal_43336__cwc_1707__dim = 1;




    
# 7702 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 7702 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47536__emal_43335__icc_3878_pred;
   
   




    int * SACp_pinl_47535__emal_43334__ivesplit_42431;
    SAC_array_descriptor_t SACp_pinl_47535__emal_43334__ivesplit_42431__desc = 
# 7710 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7710 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47535__emal_43334__ivesplit_42431__shp0;
    int SACp_pinl_47535__emal_43334__ivesplit_42431__sz;
    const int SACp_pinl_47535__emal_43334__ivesplit_42431__dim = 1;




    int SACp_pinl_47534__emal_43333__ivesli_42471;
   
   




    int SACp_pinl_47533__emal_43332__icc_3881;
   
   




    
# 7732 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 7732 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47532__emal_43331__cwc_1710;
   
   




    int * SACp_pinl_47531__emal_43330__cwc_1712;
    SAC_array_descriptor_t SACp_pinl_47531__emal_43330__cwc_1712__desc = 
# 7740 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7740 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47531__emal_43330__cwc_1712__shp0 = 1;
    const int SACp_pinl_47531__emal_43330__cwc_1712__sz = 1;
    const int SACp_pinl_47531__emal_43330__cwc_1712__dim = 1;




    
# 7748 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 7748 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47530__emal_43329__icc_3884_pred;
   
   




    int * SACp_pinl_47529__emal_43328__ivesplit_42433;
    SAC_array_descriptor_t SACp_pinl_47529__emal_43328__ivesplit_42433__desc = 
# 7756 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7756 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47529__emal_43328__ivesplit_42433__shp0;
    int SACp_pinl_47529__emal_43328__ivesplit_42433__sz;
    const int SACp_pinl_47529__emal_43328__ivesplit_42433__dim = 1;




    int SACp_pinl_47528__emal_43327__ivesli_42470;
   
   




    int SACp_pinl_47527__emal_43326__icc_3887;
   
   




    
# 7778 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 7778 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47526__emal_43325__cwc_1715;
   
   




    int * SACp_pinl_47520__idc_3893;
    SAC_array_descriptor_t SACp_pinl_47520__idc_3893__desc = 
# 7786 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7786 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47520__idc_3893__shp0 = 1;
    const int SACp_pinl_47520__idc_3893__sz = 1;
    const int SACp_pinl_47520__idc_3893__dim = 1;




    int * SACp_pinl_47518__idc_3890;
    SAC_array_descriptor_t SACp_pinl_47518__idc_3890__desc = 
# 7795 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7795 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47518__idc_3890__shp0 = 1;
    const int SACp_pinl_47518__idc_3890__sz = 1;
    const int SACp_pinl_47518__idc_3890__dim = 1;




    int * SACp_pinl_47509__icc_3886;
    SAC_array_descriptor_t SACp_pinl_47509__icc_3886__desc = 
# 7804 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7804 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47509__icc_3886__sz = 0;
    int SACp_pinl_47509__icc_3886__dim = 0;




    int * SACp_pinl_47508__icc_3885;
    SAC_array_descriptor_t SACp_pinl_47508__icc_3885__desc = 
# 7812 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7812 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47508__icc_3885__shp0 = 1;
    const int SACp_pinl_47508__icc_3885__sz = 1;
    const int SACp_pinl_47508__icc_3885__dim = 1;




    int * SACp_pinl_47506__icc_3880;
    SAC_array_descriptor_t SACp_pinl_47506__icc_3880__desc = 
# 7821 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7821 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47506__icc_3880__sz = 0;
    int SACp_pinl_47506__icc_3880__dim = 0;




    int * SACp_pinl_47505__icc_3879;
    SAC_array_descriptor_t SACp_pinl_47505__icc_3879__desc = 
# 7829 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7829 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47505__icc_3879__shp0 = 1;
    const int SACp_pinl_47505__icc_3879__sz = 1;
    const int SACp_pinl_47505__icc_3879__dim = 1;




    int * SACp_pinl_47504__emal_43355__cwc_1723;
    SAC_array_descriptor_t SACp_pinl_47504__emal_43355__cwc_1723__desc = 
# 7838 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7838 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47504__emal_43355__cwc_1723__shp0;
    int SACp_pinl_47504__emal_43355__cwc_1723__sz;
    const int SACp_pinl_47504__emal_43355__cwc_1723__dim = 1;




    int * SACp_pinl_47503__emal_43354__cwc_1726;
    SAC_array_descriptor_t SACp_pinl_47503__emal_43354__cwc_1726__desc = 
# 7847 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7847 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47503__emal_43354__cwc_1726__shp0 = 1;
    const int SACp_pinl_47503__emal_43354__cwc_1726__sz = 1;
    const int SACp_pinl_47503__emal_43354__cwc_1726__dim = 1;




    
# 7855 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 7855 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47502__emal_43353__icc_3860_pred;
   
   




    int * SACp_pinl_47501__emal_43352__ivesplit_42435;
    SAC_array_descriptor_t SACp_pinl_47501__emal_43352__ivesplit_42435__desc = 
# 7863 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7863 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47501__emal_43352__ivesplit_42435__shp0;
    int SACp_pinl_47501__emal_43352__ivesplit_42435__sz;
    const int SACp_pinl_47501__emal_43352__ivesplit_42435__dim = 1;




    int SACp_pinl_47500__emal_43351__ivesli_42473;
   
   




    int SACp_pinl_47499__emal_43350__icc_3863;
   
   




    
# 7885 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 7885 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47498__emal_43349__cwc_1729;
   
   




    int * SACp_pinl_47497__emal_43348__cwc_1731;
    SAC_array_descriptor_t SACp_pinl_47497__emal_43348__cwc_1731__desc = 
# 7893 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7893 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47497__emal_43348__cwc_1731__shp0 = 1;
    const int SACp_pinl_47497__emal_43348__cwc_1731__sz = 1;
    const int SACp_pinl_47497__emal_43348__cwc_1731__dim = 1;




    
# 7901 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 7901 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47496__emal_43347__icc_3866_pred;
   
   




    int * SACp_pinl_47495__emal_43346__ivesplit_42437;
    SAC_array_descriptor_t SACp_pinl_47495__emal_43346__ivesplit_42437__desc = 
# 7909 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7909 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47495__emal_43346__ivesplit_42437__shp0;
    int SACp_pinl_47495__emal_43346__ivesplit_42437__sz;
    const int SACp_pinl_47495__emal_43346__ivesplit_42437__dim = 1;




    int SACp_pinl_47494__emal_43345__ivesli_42472;
   
   




    int SACp_pinl_47493__emal_43344__icc_3869;
   
   




    
# 7931 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 7931 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47492__emal_43343__cwc_1734;
   
   




    int * SACp_pinl_47486__idc_3875;
    SAC_array_descriptor_t SACp_pinl_47486__idc_3875__desc = 
# 7939 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7939 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47486__idc_3875__shp0 = 1;
    const int SACp_pinl_47486__idc_3875__sz = 1;
    const int SACp_pinl_47486__idc_3875__dim = 1;




    int * SACp_pinl_47484__idc_3872;
    SAC_array_descriptor_t SACp_pinl_47484__idc_3872__desc = 
# 7948 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7948 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47484__idc_3872__shp0 = 1;
    const int SACp_pinl_47484__idc_3872__sz = 1;
    const int SACp_pinl_47484__idc_3872__dim = 1;




    int * SACp_pinl_47475__icc_3868;
    SAC_array_descriptor_t SACp_pinl_47475__icc_3868__desc = 
# 7957 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7957 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47475__icc_3868__sz = 0;
    int SACp_pinl_47475__icc_3868__dim = 0;




    int * SACp_pinl_47474__icc_3867;
    SAC_array_descriptor_t SACp_pinl_47474__icc_3867__desc = 
# 7965 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7965 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47474__icc_3867__shp0 = 1;
    const int SACp_pinl_47474__icc_3867__sz = 1;
    const int SACp_pinl_47474__icc_3867__dim = 1;




    int * SACp_pinl_47472__icc_3862;
    SAC_array_descriptor_t SACp_pinl_47472__icc_3862__desc = 
# 7974 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7974 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47472__icc_3862__sz = 0;
    int SACp_pinl_47472__icc_3862__dim = 0;




    int * SACp_pinl_47471__icc_3861;
    SAC_array_descriptor_t SACp_pinl_47471__icc_3861__desc = 
# 7982 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7982 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47471__icc_3861__shp0 = 1;
    const int SACp_pinl_47471__icc_3861__sz = 1;
    const int SACp_pinl_47471__icc_3861__dim = 1;




    int * SACp_pinl_47470__emal_43369__cwc_1742;
    SAC_array_descriptor_t SACp_pinl_47470__emal_43369__cwc_1742__desc = 
# 7991 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7991 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47470__emal_43369__cwc_1742__shp0;
    int SACp_pinl_47470__emal_43369__cwc_1742__sz;
    const int SACp_pinl_47470__emal_43369__cwc_1742__dim = 1;




    int * SACp_pinl_47469__emal_43368__cwc_1745;
    SAC_array_descriptor_t SACp_pinl_47469__emal_43368__cwc_1745__desc = 
# 8000 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8000 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47469__emal_43368__cwc_1745__shp0 = 1;
    const int SACp_pinl_47469__emal_43368__cwc_1745__sz = 1;
    const int SACp_pinl_47469__emal_43368__cwc_1745__dim = 1;




    
# 8008 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8008 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47468__emal_43367__icc_3842_pred;
   
   




    int * SACp_pinl_47467__emal_43366__ivesplit_42439;
    SAC_array_descriptor_t SACp_pinl_47467__emal_43366__ivesplit_42439__desc = 
# 8016 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8016 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47467__emal_43366__ivesplit_42439__shp0;
    int SACp_pinl_47467__emal_43366__ivesplit_42439__sz;
    const int SACp_pinl_47467__emal_43366__ivesplit_42439__dim = 1;




    int SACp_pinl_47466__emal_43365__ivesli_42475;
   
   




    int SACp_pinl_47465__emal_43364__icc_3845;
   
   




    
# 8038 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8038 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47464__emal_43363__cwc_1748;
   
   




    int * SACp_pinl_47463__emal_43362__cwc_1750;
    SAC_array_descriptor_t SACp_pinl_47463__emal_43362__cwc_1750__desc = 
# 8046 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8046 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47463__emal_43362__cwc_1750__shp0 = 1;
    const int SACp_pinl_47463__emal_43362__cwc_1750__sz = 1;
    const int SACp_pinl_47463__emal_43362__cwc_1750__dim = 1;




    
# 8054 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8054 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47462__emal_43361__icc_3848_pred;
   
   




    int * SACp_pinl_47461__emal_43360__ivesplit_42441;
    SAC_array_descriptor_t SACp_pinl_47461__emal_43360__ivesplit_42441__desc = 
# 8062 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8062 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47461__emal_43360__ivesplit_42441__shp0;
    int SACp_pinl_47461__emal_43360__ivesplit_42441__sz;
    const int SACp_pinl_47461__emal_43360__ivesplit_42441__dim = 1;




    int SACp_pinl_47460__emal_43359__ivesli_42474;
   
   




    int SACp_pinl_47459__emal_43358__icc_3851;
   
   




    
# 8084 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8084 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47458__emal_43357__cwc_1753;
   
   




    int * SACp_pinl_47452__idc_3857;
    SAC_array_descriptor_t SACp_pinl_47452__idc_3857__desc = 
# 8092 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8092 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47452__idc_3857__shp0 = 1;
    const int SACp_pinl_47452__idc_3857__sz = 1;
    const int SACp_pinl_47452__idc_3857__dim = 1;




    int * SACp_pinl_47450__idc_3854;
    SAC_array_descriptor_t SACp_pinl_47450__idc_3854__desc = 
# 8101 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8101 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47450__idc_3854__shp0 = 1;
    const int SACp_pinl_47450__idc_3854__sz = 1;
    const int SACp_pinl_47450__idc_3854__dim = 1;




    int * SACp_pinl_47441__icc_3850;
    SAC_array_descriptor_t SACp_pinl_47441__icc_3850__desc = 
# 8110 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8110 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47441__icc_3850__sz = 0;
    int SACp_pinl_47441__icc_3850__dim = 0;




    int * SACp_pinl_47440__icc_3849;
    SAC_array_descriptor_t SACp_pinl_47440__icc_3849__desc = 
# 8118 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8118 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47440__icc_3849__shp0 = 1;
    const int SACp_pinl_47440__icc_3849__sz = 1;
    const int SACp_pinl_47440__icc_3849__dim = 1;




    int * SACp_pinl_47438__icc_3844;
    SAC_array_descriptor_t SACp_pinl_47438__icc_3844__desc = 
# 8127 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8127 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47438__icc_3844__sz = 0;
    int SACp_pinl_47438__icc_3844__dim = 0;




    int * SACp_pinl_47437__icc_3843;
    SAC_array_descriptor_t SACp_pinl_47437__icc_3843__desc = 
# 8135 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8135 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47437__icc_3843__shp0 = 1;
    const int SACp_pinl_47437__icc_3843__sz = 1;
    const int SACp_pinl_47437__icc_3843__dim = 1;




    int SACp_pinl_47436__emal_43341__cwc_1721;
   
   




    
# 8150 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8150 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47435__emal_43340__cwc_1737;
   
   




    int SACp_pinl_47434__emal_43339__cwc_1740;
   
   




    
# 8164 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8164 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47433__emal_43338__cwc_1756;
   
   




    int SACp_pinl_47428__emal_43323__cwc_1702;
   
   




    
# 8178 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8178 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47427__emal_43322__cwc_1718;
   
   




    int * SACp_pinl_47426__emal_43321__cwc_1738;
    SAC_array_descriptor_t SACp_pinl_47426__emal_43321__cwc_1738__desc = 
# 8186 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8186 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47426__emal_43321__cwc_1738__shp0;
    int SACp_pinl_47426__emal_43321__cwc_1738__sz;
    const int SACp_pinl_47426__emal_43321__cwc_1738__dim = 1;




    int * SACp_pinl_47425__emal_43320__cwc_1758;
    SAC_array_descriptor_t SACp_pinl_47425__emal_43320__cwc_1758__desc = 
# 8195 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8195 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47425__emal_43320__cwc_1758__shp0 = 1;
    const int SACp_pinl_47425__emal_43320__cwc_1758__sz = 1;
    const int SACp_pinl_47425__emal_43320__cwc_1758__dim = 1;




    
# 8203 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8203 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47424__emal_43319__icc_3833_pred;
   
   




    int * SACp_pinl_47423__emal_43318__ivesplit_42429;
    SAC_array_descriptor_t SACp_pinl_47423__emal_43318__ivesplit_42429__desc = 
# 8211 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8211 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47423__emal_43318__ivesplit_42429__shp0;
    int SACp_pinl_47423__emal_43318__ivesplit_42429__sz;
    const int SACp_pinl_47423__emal_43318__ivesplit_42429__dim = 1;




    int SACp_pinl_47422__emal_43317__ivesli_42469;
   
   




    int SACp_pinl_47421__emal_43316__icc_3836;
   
   




    
# 8233 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8233 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47420__emal_43315__cwc_1761;
   
   




    int * SACp_pinl_47417__idc_3839;
    SAC_array_descriptor_t SACp_pinl_47417__idc_3839__desc = 
# 8241 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8241 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47417__idc_3839__shp0 = 1;
    const int SACp_pinl_47417__idc_3839__sz = 1;
    const int SACp_pinl_47417__idc_3839__dim = 1;




    int * SACp_pinl_47409__icc_3835;
    SAC_array_descriptor_t SACp_pinl_47409__icc_3835__desc = 
# 8250 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8250 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47409__icc_3835__sz = 0;
    int SACp_pinl_47409__icc_3835__dim = 0;




    int * SACp_pinl_47408__icc_3834;
    SAC_array_descriptor_t SACp_pinl_47408__icc_3834__desc = 
# 8258 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8258 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47408__icc_3834__shp0 = 1;
    const int SACp_pinl_47408__icc_3834__sz = 1;
    const int SACp_pinl_47408__icc_3834__dim = 1;




    int SACp_pinl_47407__emal_43384__asd_43079_a;
   
   




    int * SACp_pinl_47405__emal_43383__cwc_1769;
    SAC_array_descriptor_t SACp_pinl_47405__emal_43383__cwc_1769__desc = 
# 8274 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8274 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47405__emal_43383__cwc_1769__shp0;
    int SACp_pinl_47405__emal_43383__cwc_1769__sz;
    const int SACp_pinl_47405__emal_43383__cwc_1769__dim = 1;




    int * SACp_pinl_47404__emal_43382__cwc_1772;
    SAC_array_descriptor_t SACp_pinl_47404__emal_43382__cwc_1772__desc = 
# 8283 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8283 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47404__emal_43382__cwc_1772__shp0 = 1;
    const int SACp_pinl_47404__emal_43382__cwc_1772__sz = 1;
    const int SACp_pinl_47404__emal_43382__cwc_1772__dim = 1;




    
# 8291 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8291 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47403__emal_43381__icc_3815_pred;
   
   




    int * SACp_pinl_47402__emal_43380__ivesplit_42443;
    SAC_array_descriptor_t SACp_pinl_47402__emal_43380__ivesplit_42443__desc = 
# 8299 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8299 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47402__emal_43380__ivesplit_42443__shp0;
    int SACp_pinl_47402__emal_43380__ivesplit_42443__sz;
    const int SACp_pinl_47402__emal_43380__ivesplit_42443__dim = 1;




    int SACp_pinl_47401__emal_43379__ivesli_42477;
   
   




    int SACp_pinl_47400__emal_43378__icc_3818;
   
   




    
# 8321 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8321 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47399__emal_43377__cwc_1775;
   
   




    int * SACp_pinl_47398__emal_43376__cwc_1777;
    SAC_array_descriptor_t SACp_pinl_47398__emal_43376__cwc_1777__desc = 
# 8329 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8329 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47398__emal_43376__cwc_1777__shp0 = 1;
    const int SACp_pinl_47398__emal_43376__cwc_1777__sz = 1;
    const int SACp_pinl_47398__emal_43376__cwc_1777__dim = 1;




    
# 8337 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8337 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47397__emal_43375__icc_3821_pred;
   
   




    int * SACp_pinl_47396__emal_43374__ivesplit_42445;
    SAC_array_descriptor_t SACp_pinl_47396__emal_43374__ivesplit_42445__desc = 
# 8345 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8345 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47396__emal_43374__ivesplit_42445__shp0;
    int SACp_pinl_47396__emal_43374__ivesplit_42445__sz;
    const int SACp_pinl_47396__emal_43374__ivesplit_42445__dim = 1;




    int SACp_pinl_47395__emal_43373__ivesli_42476;
   
   




    int SACp_pinl_47394__emal_43372__icc_3824;
   
   




    
# 8367 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8367 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47393__emal_43371__cwc_1780;
   
   




    int * SACp_pinl_47387__idc_3830;
    SAC_array_descriptor_t SACp_pinl_47387__idc_3830__desc = 
# 8375 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8375 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47387__idc_3830__shp0 = 1;
    const int SACp_pinl_47387__idc_3830__sz = 1;
    const int SACp_pinl_47387__idc_3830__dim = 1;




    int * SACp_pinl_47385__idc_3827;
    SAC_array_descriptor_t SACp_pinl_47385__idc_3827__desc = 
# 8384 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8384 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47385__idc_3827__shp0 = 1;
    const int SACp_pinl_47385__idc_3827__sz = 1;
    const int SACp_pinl_47385__idc_3827__dim = 1;




    int * SACp_pinl_47376__icc_3823;
    SAC_array_descriptor_t SACp_pinl_47376__icc_3823__desc = 
# 8393 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8393 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47376__icc_3823__sz = 0;
    int SACp_pinl_47376__icc_3823__dim = 0;




    int * SACp_pinl_47375__icc_3822;
    SAC_array_descriptor_t SACp_pinl_47375__icc_3822__desc = 
# 8401 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8401 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47375__icc_3822__shp0 = 1;
    const int SACp_pinl_47375__icc_3822__sz = 1;
    const int SACp_pinl_47375__icc_3822__dim = 1;




    int * SACp_pinl_47373__icc_3817;
    SAC_array_descriptor_t SACp_pinl_47373__icc_3817__desc = 
# 8410 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8410 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47373__icc_3817__sz = 0;
    int SACp_pinl_47373__icc_3817__dim = 0;




    int * SACp_pinl_47372__icc_3816;
    SAC_array_descriptor_t SACp_pinl_47372__icc_3816__desc = 
# 8418 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8418 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47372__icc_3816__shp0 = 1;
    const int SACp_pinl_47372__icc_3816__sz = 1;
    const int SACp_pinl_47372__icc_3816__dim = 1;




    int SACp_pinl_47371__emal_43314__cwc_1719;
   
   




    
# 8433 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8433 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47370__emal_43313__cwc_1764;
   
   




    int SACp_pinl_47369__emal_43312__cwc_1767;
   
   




    
# 8447 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8447 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47368__emal_43311__cwc_1783;
   
   




    int SACp_emal_43310__cwc_1765;
   
   




    
# 8461 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8461 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43309__cwc_1785;
   
   




    int * SACp_cwc_1700;
    SAC_array_descriptor_t SACp_cwc_1700__desc = 
# 8469 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8469 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_cwc_1700__sz = 0;
    int SACp_cwc_1700__dim = 0;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_43310__cwc_1765 = SACl_a__dim; }; }
    ; ; { SACp_emal_43309__cwc_1785 = (SACp_emal_43310__cwc_1765) == (0); };
    { ; ; }
    if (SACp_emal_43309__cwc_1785)
    {
      { ; ; }
      { { SACp_pinl_47369__emal_43312__cwc_1767 = SACl_b__dim; }; }
      ; ; { SACp_pinl_47368__emal_43311__cwc_1783 = (SACp_pinl_47369__emal_43312__cwc_1767) == (2); };
      { ; ; }
      if (SACp_pinl_47368__emal_43311__cwc_1783)
      {
        { ; ; }
        { { if (!((1 == SACp_pinl_47405__emal_43383__cwc_1769__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47405__emal_43383__cwc_1769"); }; { if ((((6 + (SACp_pinl_47405__emal_43383__cwc_1769__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47405__emal_43383__cwc_1769__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47405__emal_43383__cwc_1769__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47405__emal_43383__cwc_1769__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47405__emal_43383__cwc_1769__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47405__emal_43383__cwc_1769__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47405__emal_43383__cwc_1769__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47405__emal_43383__cwc_1769__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47405__emal_43383__cwc_1769__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47405__emal_43383__cwc_1769__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47405__emal_43383__cwc_1769__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47405__emal_43383__cwc_1769__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47405__emal_43383__cwc_1769__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47405__emal_43383__cwc_1769__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47405__emal_43383__cwc_1769__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47405__emal_43383__cwc_1769__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47405__emal_43383__cwc_1769__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47405__emal_43383__cwc_1769__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47405__emal_43383__cwc_1769__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47405__emal_43383__cwc_1769__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47405__emal_43383__cwc_1769__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        {

          int SAC_size = 1;
          SAC_size *=
          SACp_pinl_47405__emal_43383__cwc_1769__shp0 =
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47405__emal_43383__cwc_1769__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47405__emal_43383__cwc_1769__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47405__emal_43383__cwc_1769__sz = SAC_size;
          if (!((SACp_pinl_47405__emal_43383__cwc_1769__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8514 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 8514 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8514 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 8514 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8514 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 8514 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8514 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 8514, __extension__ __PRETTY_FUNCTION__); }))
# 8514 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_47405__emal_43383__cwc_1769 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47405__emal_43383__cwc_1769__sz * sizeof (*SACp_pinl_47405__emal_43383__cwc_1769)); break; case SAC_HM_multi_threaded: SACp_pinl_47405__emal_43383__cwc_1769 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47405__emal_43383__cwc_1769__sz * sizeof (*SACp_pinl_47405__emal_43383__cwc_1769), 0); break; case SAC_HM_any_threaded: SACp_pinl_47405__emal_43383__cwc_1769 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47405__emal_43383__cwc_1769__sz * sizeof (*SACp_pinl_47405__emal_43383__cwc_1769), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47405__emal_43383__cwc_1769__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47405__emal_43383__cwc_1769__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47405__emal_43383__cwc_1769__desc) & (-1 ^ (3))))[1]) = 0; } }



       
        for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
          { SACp_pinl_47405__emal_43383__cwc_1769[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
        }

        { { if (!((1 == SACp_pinl_47404__emal_43382__cwc_1772__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47404__emal_43382__cwc_1772"); }; { { if ((((SACp_pinl_47404__emal_43382__cwc_1772__sz * sizeof (*SACp_pinl_47404__emal_43382__cwc_1772)) + ((6 + (SACp_pinl_47404__emal_43382__cwc_1772__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47404__emal_43382__cwc_1772__sz * sizeof (*SACp_pinl_47404__emal_43382__cwc_1772)) + ((6 + (SACp_pinl_47404__emal_43382__cwc_1772__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47404__emal_43382__cwc_1772__sz * sizeof (*SACp_pinl_47404__emal_43382__cwc_1772)) + ((6 + (SACp_pinl_47404__emal_43382__cwc_1772__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47404__emal_43382__cwc_1772 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47404__emal_43382__cwc_1772 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47404__emal_43382__cwc_1772__sz * sizeof (*SACp_pinl_47404__emal_43382__cwc_1772)) + ((6 + (SACp_pinl_47404__emal_43382__cwc_1772__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47404__emal_43382__cwc_1772 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47404__emal_43382__cwc_1772 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47404__emal_43382__cwc_1772__sz * sizeof (*SACp_pinl_47404__emal_43382__cwc_1772)) + ((6 + (SACp_pinl_47404__emal_43382__cwc_1772__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47404__emal_43382__cwc_1772__sz * sizeof (*SACp_pinl_47404__emal_43382__cwc_1772)) + ((6 + (SACp_pinl_47404__emal_43382__cwc_1772__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47404__emal_43382__cwc_1772__sz * sizeof (*SACp_pinl_47404__emal_43382__cwc_1772)) + ((6 + (SACp_pinl_47404__emal_43382__cwc_1772__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47404__emal_43382__cwc_1772__sz * sizeof (*SACp_pinl_47404__emal_43382__cwc_1772)) + ((6 + (SACp_pinl_47404__emal_43382__cwc_1772__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47404__emal_43382__cwc_1772__sz * sizeof (*SACp_pinl_47404__emal_43382__cwc_1772)) + ((6 + (SACp_pinl_47404__emal_43382__cwc_1772__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47404__emal_43382__cwc_1772 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47404__emal_43382__cwc_1772 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47404__emal_43382__cwc_1772 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47404__emal_43382__cwc_1772 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47404__emal_43382__cwc_1772__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47404__emal_43382__cwc_1772, SACp_pinl_47404__emal_43382__cwc_1772__sz * sizeof (*SACp_pinl_47404__emal_43382__cwc_1772), ((6 + (SACp_pinl_47404__emal_43382__cwc_1772__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47404__emal_43382__cwc_1772__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47404__emal_43382__cwc_1772__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47404__emal_43382__cwc_1772__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47404__emal_43382__cwc_1772__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47404__emal_43382__cwc_1772__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_47404__emal_43382__cwc_1772[0] = 0; }




        if ((SACp_pinl_47404__emal_43382__cwc_1772__dim != 1) && (SACp_pinl_47404__emal_43382__cwc_1772__shp0 != SACp_pinl_47405__emal_43383__cwc_1769__dim)) {
          SACp_pinl_47403__emal_43381__icc_3815_pred = 0;
          SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47404__emal_43382__cwc_1772""' with shape %s ""And `" "SACp_pinl_47405__emal_43383__cwc_1769""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47404__emal_43382__cwc_1772__desc), SAC_PrintShape (SACp_pinl_47405__emal_43383__cwc_1769__desc));
        }
        else {
          int SAC_all = 1; if (0 || (( SACp_pinl_47404__emal_43382__cwc_1772[0]) >= SACp_pinl_47405__emal_43383__cwc_1769__shp0))
          {

            SAC_all = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47404__emal_43382__cwc_1772""' with shape %s ""And `" "SACp_pinl_47405__emal_43383__cwc_1769""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47404__emal_43382__cwc_1772__desc), SAC_PrintShape (SACp_pinl_47405__emal_43383__cwc_1769__desc));
          }
          SACp_pinl_47403__emal_43381__icc_3815_pred = SAC_all;
        }




        if (!((SACp_pinl_47385__idc_3827__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47385__idc_3827__shp0 == SACp_pinl_47404__emal_43382__cwc_1772__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        SACp_pinl_47385__idc_3827__desc = SACp_pinl_47404__emal_43382__cwc_1772__desc;
        ;
        ;
        { SACp_pinl_47385__idc_3827 = SACp_pinl_47404__emal_43382__cwc_1772; }

        if (!SACp_pinl_47403__emal_43381__icc_3815_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }



        SACp_pinl_47373__icc_3817__desc = SACp_pinl_47405__emal_43383__cwc_1769__desc;
        SACp_pinl_47373__icc_3817__sz = SACp_pinl_47405__emal_43383__cwc_1769__sz;
        SACp_pinl_47373__icc_3817__dim = SACp_pinl_47405__emal_43383__cwc_1769__dim;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47373__icc_3817__desc) & (-1 ^ (3))))[3]) = SACp_pinl_47405__emal_43383__cwc_1769__dim;
        { SACp_pinl_47373__icc_3817 = SACp_pinl_47405__emal_43383__cwc_1769; }




        if (!((SACp_pinl_47372__icc_3816__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47372__icc_3816__shp0 == SACp_pinl_47385__idc_3827__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        SACp_pinl_47372__icc_3816__desc = SACp_pinl_47385__idc_3827__desc;
        ;
        ;
        { SACp_pinl_47372__icc_3816 = SACp_pinl_47385__idc_3827; }

        { { if (!((1 == SACp_pinl_47402__emal_43380__ivesplit_42443__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47402__emal_43380__ivesplit_42443"); }; { if ((((6 + (SACp_pinl_47402__emal_43380__ivesplit_42443__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47402__emal_43380__ivesplit_42443__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47402__emal_43380__ivesplit_42443__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47402__emal_43380__ivesplit_42443__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47402__emal_43380__ivesplit_42443__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47402__emal_43380__ivesplit_42443__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47402__emal_43380__ivesplit_42443__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47402__emal_43380__ivesplit_42443__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47402__emal_43380__ivesplit_42443__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47402__emal_43380__ivesplit_42443__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47402__emal_43380__ivesplit_42443__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47402__emal_43380__ivesplit_42443__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47402__emal_43380__ivesplit_42443__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47402__emal_43380__ivesplit_42443__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47402__emal_43380__ivesplit_42443__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47402__emal_43380__ivesplit_42443__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47402__emal_43380__ivesplit_42443__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47402__emal_43380__ivesplit_42443__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47402__emal_43380__ivesplit_42443__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47402__emal_43380__ivesplit_42443__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47402__emal_43380__ivesplit_42443__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        {

          int SAC_size = 1;
          SAC_size *=
          SACp_pinl_47402__emal_43380__ivesplit_42443__shp0 =
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47402__emal_43380__ivesplit_42443__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47373__icc_3817__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47402__emal_43380__ivesplit_42443__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47402__emal_43380__ivesplit_42443__sz = SAC_size;
          if (!((SACp_pinl_47402__emal_43380__ivesplit_42443__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8599 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 8599 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8599 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 8599 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8599 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 8599 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8599 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 8599, __extension__ __PRETTY_FUNCTION__); }))
# 8599 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_47402__emal_43380__ivesplit_42443 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47402__emal_43380__ivesplit_42443__sz * sizeof (*SACp_pinl_47402__emal_43380__ivesplit_42443)); break; case SAC_HM_multi_threaded: SACp_pinl_47402__emal_43380__ivesplit_42443 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47402__emal_43380__ivesplit_42443__sz * sizeof (*SACp_pinl_47402__emal_43380__ivesplit_42443), 0); break; case SAC_HM_any_threaded: SACp_pinl_47402__emal_43380__ivesplit_42443 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47402__emal_43380__ivesplit_42443__sz * sizeof (*SACp_pinl_47402__emal_43380__ivesplit_42443), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47402__emal_43380__ivesplit_42443__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47402__emal_43380__ivesplit_42443__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47402__emal_43380__ivesplit_42443__desc) & (-1 ^ (3))))[1]) = 0; } }



       
        for (int SAC_i = 0; SAC_i < SACp_pinl_47373__icc_3817__dim; SAC_i++) {
          { SACp_pinl_47402__emal_43380__ivesplit_42443[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47373__icc_3817__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
        }




        {
          int SAC_i, SAC_l;
          SAC_l = 0;
          SAC_l = ( SACp_pinl_47372__icc_3816[0]);
          for (SAC_i = (1); SAC_i < SACp_pinl_47402__emal_43380__ivesplit_42443__sz; SAC_i++)
          {

            SAC_l *= ( SACp_pinl_47402__emal_43380__ivesplit_42443[SAC_i]);
          }
          SACp_pinl_47401__emal_43379__ivesli_42477 = SAC_l;
        }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47372__icc_3816__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_47372__icc_3816__sz * sizeof (*SACp_pinl_47372__icc_3816)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47372__icc_3816, ((((SAC_HM_header_t *)SACp_pinl_47372__icc_3816) - 1)->data1.arena)); } else { if (SACp_pinl_47372__icc_3816__sz * sizeof (*SACp_pinl_47372__icc_3816) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47372__icc_3816) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47372__icc_3816, ((((SAC_HM_header_t *)SACp_pinl_47372__icc_3816) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47372__icc_3816, ((((SAC_HM_header_t *)SACp_pinl_47372__icc_3816) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47372__icc_3816__sz * sizeof (*SACp_pinl_47372__icc_3816))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47372__icc_3816, ((((SAC_HM_header_t *)SACp_pinl_47372__icc_3816) - 1)->data1.arena)); } else { if (((((SACp_pinl_47372__icc_3816__sz * sizeof (*SACp_pinl_47372__icc_3816))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47372__icc_3816) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47372__icc_3816, ((((SAC_HM_header_t *)SACp_pinl_47372__icc_3816) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47372__icc_3816, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47372__icc_3816); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47372__icc_3816); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47372__icc_3816, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47372__icc_3816); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47372__icc_3816); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47372__icc_3816__desc) & (-1 ^ (3))))); } } } } else { } }
        { { free (SACp_pinl_47402__emal_43380__ivesplit_42443); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47402__emal_43380__ivesplit_42443__desc) & (-1 ^ (3))))); } } }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47400__emal_43378__icc_3818 = ( SACp_pinl_47373__icc_3817[SACp_pinl_47401__emal_43379__ivesli_42477]); }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47373__icc_3817__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_47373__icc_3817); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47373__icc_3817__desc) & (-1 ^ (3))))); } } } } else { } }
        { ; ; }
        if (!SACp_pinl_47403__emal_43381__icc_3815_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        ; ; { SACp_pinl_47399__emal_43377__cwc_1775 = (SACp_pinl_47400__emal_43378__icc_3818) == (2); };
        { ; ; }
        { { if (!((1 == SACp_pinl_47398__emal_43376__cwc_1777__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47398__emal_43376__cwc_1777"); }; { { if ((((SACp_pinl_47398__emal_43376__cwc_1777__sz * sizeof (*SACp_pinl_47398__emal_43376__cwc_1777)) + ((6 + (SACp_pinl_47398__emal_43376__cwc_1777__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47398__emal_43376__cwc_1777__sz * sizeof (*SACp_pinl_47398__emal_43376__cwc_1777)) + ((6 + (SACp_pinl_47398__emal_43376__cwc_1777__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47398__emal_43376__cwc_1777__sz * sizeof (*SACp_pinl_47398__emal_43376__cwc_1777)) + ((6 + (SACp_pinl_47398__emal_43376__cwc_1777__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47398__emal_43376__cwc_1777 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47398__emal_43376__cwc_1777 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47398__emal_43376__cwc_1777__sz * sizeof (*SACp_pinl_47398__emal_43376__cwc_1777)) + ((6 + (SACp_pinl_47398__emal_43376__cwc_1777__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47398__emal_43376__cwc_1777 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47398__emal_43376__cwc_1777 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47398__emal_43376__cwc_1777__sz * sizeof (*SACp_pinl_47398__emal_43376__cwc_1777)) + ((6 + (SACp_pinl_47398__emal_43376__cwc_1777__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47398__emal_43376__cwc_1777__sz * sizeof (*SACp_pinl_47398__emal_43376__cwc_1777)) + ((6 + (SACp_pinl_47398__emal_43376__cwc_1777__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47398__emal_43376__cwc_1777__sz * sizeof (*SACp_pinl_47398__emal_43376__cwc_1777)) + ((6 + (SACp_pinl_47398__emal_43376__cwc_1777__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47398__emal_43376__cwc_1777__sz * sizeof (*SACp_pinl_47398__emal_43376__cwc_1777)) + ((6 + (SACp_pinl_47398__emal_43376__cwc_1777__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47398__emal_43376__cwc_1777__sz * sizeof (*SACp_pinl_47398__emal_43376__cwc_1777)) + ((6 + (SACp_pinl_47398__emal_43376__cwc_1777__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47398__emal_43376__cwc_1777 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47398__emal_43376__cwc_1777 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47398__emal_43376__cwc_1777 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47398__emal_43376__cwc_1777 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47398__emal_43376__cwc_1777__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47398__emal_43376__cwc_1777, SACp_pinl_47398__emal_43376__cwc_1777__sz * sizeof (*SACp_pinl_47398__emal_43376__cwc_1777), ((6 + (SACp_pinl_47398__emal_43376__cwc_1777__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47398__emal_43376__cwc_1777__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47398__emal_43376__cwc_1777__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47398__emal_43376__cwc_1777__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47398__emal_43376__cwc_1777__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47398__emal_43376__cwc_1777__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_47398__emal_43376__cwc_1777[0] = 1; }




        if ((SACp_pinl_47398__emal_43376__cwc_1777__dim != 1) && (SACp_pinl_47398__emal_43376__cwc_1777__shp0 != SACp_pinl_47405__emal_43383__cwc_1769__dim)) {
          SACp_pinl_47397__emal_43375__icc_3821_pred = 0;
          SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47398__emal_43376__cwc_1777""' with shape %s ""And `" "SACp_pinl_47405__emal_43383__cwc_1769""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47398__emal_43376__cwc_1777__desc), SAC_PrintShape (SACp_pinl_47405__emal_43383__cwc_1769__desc));
        }
        else {
          int SAC_all = 1; if (0 || (( SACp_pinl_47398__emal_43376__cwc_1777[0]) >= SACp_pinl_47405__emal_43383__cwc_1769__shp0))
          {

            SAC_all = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47398__emal_43376__cwc_1777""' with shape %s ""And `" "SACp_pinl_47405__emal_43383__cwc_1769""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47398__emal_43376__cwc_1777__desc), SAC_PrintShape (SACp_pinl_47405__emal_43383__cwc_1769__desc));
          }
          SACp_pinl_47397__emal_43375__icc_3821_pred = SAC_all;
        }




        if (!((SACp_pinl_47387__idc_3830__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47387__idc_3830__shp0 == SACp_pinl_47398__emal_43376__cwc_1777__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        SACp_pinl_47387__idc_3830__desc = SACp_pinl_47398__emal_43376__cwc_1777__desc;
        ;
        ;
        { SACp_pinl_47387__idc_3830 = SACp_pinl_47398__emal_43376__cwc_1777; }

        if (!SACp_pinl_47397__emal_43375__icc_3821_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }



        SACp_pinl_47376__icc_3823__desc = SACp_pinl_47405__emal_43383__cwc_1769__desc;
        SACp_pinl_47376__icc_3823__sz = SACp_pinl_47405__emal_43383__cwc_1769__sz;
        SACp_pinl_47376__icc_3823__dim = SACp_pinl_47405__emal_43383__cwc_1769__dim;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47376__icc_3823__desc) & (-1 ^ (3))))[3]) = SACp_pinl_47405__emal_43383__cwc_1769__dim;
        { SACp_pinl_47376__icc_3823 = SACp_pinl_47405__emal_43383__cwc_1769; }




        if (!((SACp_pinl_47375__icc_3822__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47375__icc_3822__shp0 == SACp_pinl_47387__idc_3830__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        SACp_pinl_47375__icc_3822__desc = SACp_pinl_47387__idc_3830__desc;
        ;
        ;
        { SACp_pinl_47375__icc_3822 = SACp_pinl_47387__idc_3830; }

        { { if (!((1 == SACp_pinl_47396__emal_43374__ivesplit_42445__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47396__emal_43374__ivesplit_42445"); }; { if ((((6 + (SACp_pinl_47396__emal_43374__ivesplit_42445__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47396__emal_43374__ivesplit_42445__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47396__emal_43374__ivesplit_42445__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47396__emal_43374__ivesplit_42445__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47396__emal_43374__ivesplit_42445__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47396__emal_43374__ivesplit_42445__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47396__emal_43374__ivesplit_42445__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47396__emal_43374__ivesplit_42445__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47396__emal_43374__ivesplit_42445__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47396__emal_43374__ivesplit_42445__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47396__emal_43374__ivesplit_42445__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47396__emal_43374__ivesplit_42445__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47396__emal_43374__ivesplit_42445__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47396__emal_43374__ivesplit_42445__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47396__emal_43374__ivesplit_42445__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47396__emal_43374__ivesplit_42445__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47396__emal_43374__ivesplit_42445__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47396__emal_43374__ivesplit_42445__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47396__emal_43374__ivesplit_42445__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47396__emal_43374__ivesplit_42445__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47396__emal_43374__ivesplit_42445__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        {

          int SAC_size = 1;
          SAC_size *=
          SACp_pinl_47396__emal_43374__ivesplit_42445__shp0 =
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47396__emal_43374__ivesplit_42445__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47376__icc_3823__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47396__emal_43374__ivesplit_42445__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47396__emal_43374__ivesplit_42445__sz = SAC_size;
          if (!((SACp_pinl_47396__emal_43374__ivesplit_42445__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8714 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 8714 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8714 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 8714 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8714 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 8714 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8714 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 8714, __extension__ __PRETTY_FUNCTION__); }))
# 8714 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_47396__emal_43374__ivesplit_42445 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47396__emal_43374__ivesplit_42445__sz * sizeof (*SACp_pinl_47396__emal_43374__ivesplit_42445)); break; case SAC_HM_multi_threaded: SACp_pinl_47396__emal_43374__ivesplit_42445 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47396__emal_43374__ivesplit_42445__sz * sizeof (*SACp_pinl_47396__emal_43374__ivesplit_42445), 0); break; case SAC_HM_any_threaded: SACp_pinl_47396__emal_43374__ivesplit_42445 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47396__emal_43374__ivesplit_42445__sz * sizeof (*SACp_pinl_47396__emal_43374__ivesplit_42445), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47396__emal_43374__ivesplit_42445__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47396__emal_43374__ivesplit_42445__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47396__emal_43374__ivesplit_42445__desc) & (-1 ^ (3))))[1]) = 0; } }



       
        for (int SAC_i = 0; SAC_i < SACp_pinl_47376__icc_3823__dim; SAC_i++) {
          { SACp_pinl_47396__emal_43374__ivesplit_42445[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47376__icc_3823__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
        }




        {
          int SAC_i, SAC_l;
          SAC_l = 0;
          SAC_l = ( SACp_pinl_47375__icc_3822[0]);
          for (SAC_i = (1); SAC_i < SACp_pinl_47396__emal_43374__ivesplit_42445__sz; SAC_i++)
          {

            SAC_l *= ( SACp_pinl_47396__emal_43374__ivesplit_42445[SAC_i]);
          }
          SACp_pinl_47395__emal_43373__ivesli_42476 = SAC_l;
        }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47375__icc_3822__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_47375__icc_3822__sz * sizeof (*SACp_pinl_47375__icc_3822)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47375__icc_3822, ((((SAC_HM_header_t *)SACp_pinl_47375__icc_3822) - 1)->data1.arena)); } else { if (SACp_pinl_47375__icc_3822__sz * sizeof (*SACp_pinl_47375__icc_3822) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47375__icc_3822) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47375__icc_3822, ((((SAC_HM_header_t *)SACp_pinl_47375__icc_3822) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47375__icc_3822, ((((SAC_HM_header_t *)SACp_pinl_47375__icc_3822) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47375__icc_3822__sz * sizeof (*SACp_pinl_47375__icc_3822))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47375__icc_3822, ((((SAC_HM_header_t *)SACp_pinl_47375__icc_3822) - 1)->data1.arena)); } else { if (((((SACp_pinl_47375__icc_3822__sz * sizeof (*SACp_pinl_47375__icc_3822))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47375__icc_3822) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47375__icc_3822, ((((SAC_HM_header_t *)SACp_pinl_47375__icc_3822) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47375__icc_3822, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47375__icc_3822); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47375__icc_3822); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47375__icc_3822, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47375__icc_3822); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47375__icc_3822); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47375__icc_3822__desc) & (-1 ^ (3))))); } } } } else { } }
        { { free (SACp_pinl_47396__emal_43374__ivesplit_42445); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47396__emal_43374__ivesplit_42445__desc) & (-1 ^ (3))))); } } }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47394__emal_43372__icc_3824 = ( SACp_pinl_47376__icc_3823[SACp_pinl_47395__emal_43373__ivesli_42476]); }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47376__icc_3823__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_47376__icc_3823); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47376__icc_3823__desc) & (-1 ^ (3))))); } } } } else { } }
        { ; ; }
        if (!SACp_pinl_47397__emal_43375__icc_3821_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_47393__emal_43371__cwc_1780 = (SACp_pinl_47394__emal_43372__icc_3824) == (3); };
        { ; ; }
        ; ; { SACp_pinl_47393__emal_43371__cwc_1780 = (SACp_pinl_47393__emal_43371__cwc_1780) & (SACp_pinl_47399__emal_43377__cwc_1775); };
        { ; ; }
        if (SACp_pinl_47393__emal_43371__cwc_1780)
        {
          { ; ; }
          { if (!((SACl_a__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_47407__emal_43384__asd_43079_a = ( SACl_a[0]); } }
          { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }



          if (!((_tcp_48526_SACl_b__dim == SACl_b__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          if (!((_tcp_48526_SACl_b__shp0 == (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (0))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          if (!((_tcp_48526_SACl_b__shp1 == (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (1))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          _tcp_48526_SACl_b__desc = SACl_b__desc;
          ;
          ;
          { _tcp_48526_SACl_b = SACl_b; }




          SACf__MAIN___rtpf_31_impl_pluscarret__i__i_2_3 (&SACp_cwc_1700, &SACp_cwc_1700__desc, SACp_pinl_47407__emal_43384__asd_43079_a, _tcp_48526_SACl_b, _tcp_48526_SACl_b__desc);




          SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

        }
        else
        {
          { ; ; }



          SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_cwc_1700, &SACp_cwc_1700__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




          SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

        }
      }
      else
      {
        { ; ; }



        SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_cwc_1700, &SACp_cwc_1700__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




        SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
        SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

      }
    }
    else
    {
      { ; ; }
      { { SACp_pinl_47371__emal_43314__cwc_1719 = SACl_a__dim; }; }
      ; ; { SACp_pinl_47370__emal_43313__cwc_1764 = (SACp_pinl_47371__emal_43314__cwc_1719) == (1); };
      { ; ; }
      if (SACp_pinl_47370__emal_43313__cwc_1764)
      {
        { ; ; }
        { { if (!((1 == SACp_pinl_47426__emal_43321__cwc_1738__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47426__emal_43321__cwc_1738"); }; { if ((((6 + (SACp_pinl_47426__emal_43321__cwc_1738__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47426__emal_43321__cwc_1738__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47426__emal_43321__cwc_1738__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47426__emal_43321__cwc_1738__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47426__emal_43321__cwc_1738__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47426__emal_43321__cwc_1738__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47426__emal_43321__cwc_1738__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47426__emal_43321__cwc_1738__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47426__emal_43321__cwc_1738__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47426__emal_43321__cwc_1738__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47426__emal_43321__cwc_1738__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47426__emal_43321__cwc_1738__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47426__emal_43321__cwc_1738__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47426__emal_43321__cwc_1738__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47426__emal_43321__cwc_1738__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47426__emal_43321__cwc_1738__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47426__emal_43321__cwc_1738__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47426__emal_43321__cwc_1738__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47426__emal_43321__cwc_1738__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47426__emal_43321__cwc_1738__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47426__emal_43321__cwc_1738__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        {

          int SAC_size = 1;
          SAC_size *=
          SACp_pinl_47426__emal_43321__cwc_1738__shp0 =
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47426__emal_43321__cwc_1738__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47426__emal_43321__cwc_1738__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47426__emal_43321__cwc_1738__sz = SAC_size;
          if (!((SACp_pinl_47426__emal_43321__cwc_1738__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8847 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 8847 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8847 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 8847 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8847 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 8847 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8847 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 8847, __extension__ __PRETTY_FUNCTION__); }))
# 8847 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_47426__emal_43321__cwc_1738 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47426__emal_43321__cwc_1738__sz * sizeof (*SACp_pinl_47426__emal_43321__cwc_1738)); break; case SAC_HM_multi_threaded: SACp_pinl_47426__emal_43321__cwc_1738 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47426__emal_43321__cwc_1738__sz * sizeof (*SACp_pinl_47426__emal_43321__cwc_1738), 0); break; case SAC_HM_any_threaded: SACp_pinl_47426__emal_43321__cwc_1738 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47426__emal_43321__cwc_1738__sz * sizeof (*SACp_pinl_47426__emal_43321__cwc_1738), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47426__emal_43321__cwc_1738__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47426__emal_43321__cwc_1738__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47426__emal_43321__cwc_1738__desc) & (-1 ^ (3))))[1]) = 0; } }



       
        for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
          { SACp_pinl_47426__emal_43321__cwc_1738[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
        }

        { { if (!((1 == SACp_pinl_47425__emal_43320__cwc_1758__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47425__emal_43320__cwc_1758"); }; { { if ((((SACp_pinl_47425__emal_43320__cwc_1758__sz * sizeof (*SACp_pinl_47425__emal_43320__cwc_1758)) + ((6 + (SACp_pinl_47425__emal_43320__cwc_1758__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47425__emal_43320__cwc_1758__sz * sizeof (*SACp_pinl_47425__emal_43320__cwc_1758)) + ((6 + (SACp_pinl_47425__emal_43320__cwc_1758__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47425__emal_43320__cwc_1758__sz * sizeof (*SACp_pinl_47425__emal_43320__cwc_1758)) + ((6 + (SACp_pinl_47425__emal_43320__cwc_1758__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47425__emal_43320__cwc_1758 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47425__emal_43320__cwc_1758 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47425__emal_43320__cwc_1758__sz * sizeof (*SACp_pinl_47425__emal_43320__cwc_1758)) + ((6 + (SACp_pinl_47425__emal_43320__cwc_1758__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47425__emal_43320__cwc_1758 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47425__emal_43320__cwc_1758 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47425__emal_43320__cwc_1758__sz * sizeof (*SACp_pinl_47425__emal_43320__cwc_1758)) + ((6 + (SACp_pinl_47425__emal_43320__cwc_1758__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47425__emal_43320__cwc_1758__sz * sizeof (*SACp_pinl_47425__emal_43320__cwc_1758)) + ((6 + (SACp_pinl_47425__emal_43320__cwc_1758__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47425__emal_43320__cwc_1758__sz * sizeof (*SACp_pinl_47425__emal_43320__cwc_1758)) + ((6 + (SACp_pinl_47425__emal_43320__cwc_1758__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47425__emal_43320__cwc_1758__sz * sizeof (*SACp_pinl_47425__emal_43320__cwc_1758)) + ((6 + (SACp_pinl_47425__emal_43320__cwc_1758__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47425__emal_43320__cwc_1758__sz * sizeof (*SACp_pinl_47425__emal_43320__cwc_1758)) + ((6 + (SACp_pinl_47425__emal_43320__cwc_1758__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47425__emal_43320__cwc_1758 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47425__emal_43320__cwc_1758 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47425__emal_43320__cwc_1758 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47425__emal_43320__cwc_1758 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47425__emal_43320__cwc_1758__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47425__emal_43320__cwc_1758, SACp_pinl_47425__emal_43320__cwc_1758__sz * sizeof (*SACp_pinl_47425__emal_43320__cwc_1758), ((6 + (SACp_pinl_47425__emal_43320__cwc_1758__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47425__emal_43320__cwc_1758__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47425__emal_43320__cwc_1758__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47425__emal_43320__cwc_1758__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47425__emal_43320__cwc_1758__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47425__emal_43320__cwc_1758__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_47425__emal_43320__cwc_1758[0] = 0; }




        if ((SACp_pinl_47425__emal_43320__cwc_1758__dim != 1) && (SACp_pinl_47425__emal_43320__cwc_1758__shp0 != SACp_pinl_47426__emal_43321__cwc_1738__dim)) {
          SACp_pinl_47424__emal_43319__icc_3833_pred = 0;
          SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47425__emal_43320__cwc_1758""' with shape %s ""And `" "SACp_pinl_47426__emal_43321__cwc_1738""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47425__emal_43320__cwc_1758__desc), SAC_PrintShape (SACp_pinl_47426__emal_43321__cwc_1738__desc));
        }
        else {
          int SAC_all = 1; if (0 || (( SACp_pinl_47425__emal_43320__cwc_1758[0]) >= SACp_pinl_47426__emal_43321__cwc_1738__shp0))
          {

            SAC_all = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47425__emal_43320__cwc_1758""' with shape %s ""And `" "SACp_pinl_47426__emal_43321__cwc_1738""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47425__emal_43320__cwc_1758__desc), SAC_PrintShape (SACp_pinl_47426__emal_43321__cwc_1738__desc));
          }
          SACp_pinl_47424__emal_43319__icc_3833_pred = SAC_all;
        }




        if (!((SACp_pinl_47417__idc_3839__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47417__idc_3839__shp0 == SACp_pinl_47425__emal_43320__cwc_1758__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        SACp_pinl_47417__idc_3839__desc = SACp_pinl_47425__emal_43320__cwc_1758__desc;
        ;
        ;
        { SACp_pinl_47417__idc_3839 = SACp_pinl_47425__emal_43320__cwc_1758; }

        if (!SACp_pinl_47424__emal_43319__icc_3833_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }



        SACp_pinl_47409__icc_3835__desc = SACp_pinl_47426__emal_43321__cwc_1738__desc;
        SACp_pinl_47409__icc_3835__sz = SACp_pinl_47426__emal_43321__cwc_1738__sz;
        SACp_pinl_47409__icc_3835__dim = SACp_pinl_47426__emal_43321__cwc_1738__dim;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47409__icc_3835__desc) & (-1 ^ (3))))[3]) = SACp_pinl_47426__emal_43321__cwc_1738__dim;
        { SACp_pinl_47409__icc_3835 = SACp_pinl_47426__emal_43321__cwc_1738; }




        if (!((SACp_pinl_47408__icc_3834__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47408__icc_3834__shp0 == SACp_pinl_47417__idc_3839__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        SACp_pinl_47408__icc_3834__desc = SACp_pinl_47417__idc_3839__desc;
        ;
        ;
        { SACp_pinl_47408__icc_3834 = SACp_pinl_47417__idc_3839; }

        { { if (!((1 == SACp_pinl_47423__emal_43318__ivesplit_42429__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47423__emal_43318__ivesplit_42429"); }; { if ((((6 + (SACp_pinl_47423__emal_43318__ivesplit_42429__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47423__emal_43318__ivesplit_42429__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47423__emal_43318__ivesplit_42429__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47423__emal_43318__ivesplit_42429__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47423__emal_43318__ivesplit_42429__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47423__emal_43318__ivesplit_42429__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47423__emal_43318__ivesplit_42429__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47423__emal_43318__ivesplit_42429__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47423__emal_43318__ivesplit_42429__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47423__emal_43318__ivesplit_42429__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47423__emal_43318__ivesplit_42429__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47423__emal_43318__ivesplit_42429__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47423__emal_43318__ivesplit_42429__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47423__emal_43318__ivesplit_42429__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47423__emal_43318__ivesplit_42429__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47423__emal_43318__ivesplit_42429__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47423__emal_43318__ivesplit_42429__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47423__emal_43318__ivesplit_42429__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47423__emal_43318__ivesplit_42429__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47423__emal_43318__ivesplit_42429__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47423__emal_43318__ivesplit_42429__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
        {

          int SAC_size = 1;
          SAC_size *=
          SACp_pinl_47423__emal_43318__ivesplit_42429__shp0 =
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47423__emal_43318__ivesplit_42429__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47409__icc_3835__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47423__emal_43318__ivesplit_42429__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47423__emal_43318__ivesplit_42429__sz = SAC_size;
          if (!((SACp_pinl_47423__emal_43318__ivesplit_42429__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8932 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 8932 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8932 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 8932 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8932 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 8932 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8932 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 8932, __extension__ __PRETTY_FUNCTION__); }))
# 8932 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_47423__emal_43318__ivesplit_42429 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47423__emal_43318__ivesplit_42429__sz * sizeof (*SACp_pinl_47423__emal_43318__ivesplit_42429)); break; case SAC_HM_multi_threaded: SACp_pinl_47423__emal_43318__ivesplit_42429 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47423__emal_43318__ivesplit_42429__sz * sizeof (*SACp_pinl_47423__emal_43318__ivesplit_42429), 0); break; case SAC_HM_any_threaded: SACp_pinl_47423__emal_43318__ivesplit_42429 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47423__emal_43318__ivesplit_42429__sz * sizeof (*SACp_pinl_47423__emal_43318__ivesplit_42429), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47423__emal_43318__ivesplit_42429__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47423__emal_43318__ivesplit_42429__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47423__emal_43318__ivesplit_42429__desc) & (-1 ^ (3))))[1]) = 0; } }



       
        for (int SAC_i = 0; SAC_i < SACp_pinl_47409__icc_3835__dim; SAC_i++) {
          { SACp_pinl_47423__emal_43318__ivesplit_42429[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47409__icc_3835__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
        }




        {
          int SAC_i, SAC_l;
          SAC_l = 0;
          SAC_l = ( SACp_pinl_47408__icc_3834[0]);
          for (SAC_i = (1); SAC_i < SACp_pinl_47423__emal_43318__ivesplit_42429__sz; SAC_i++)
          {

            SAC_l *= ( SACp_pinl_47423__emal_43318__ivesplit_42429[SAC_i]);
          }
          SACp_pinl_47422__emal_43317__ivesli_42469 = SAC_l;
        }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47408__icc_3834__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_47408__icc_3834__sz * sizeof (*SACp_pinl_47408__icc_3834)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47408__icc_3834, ((((SAC_HM_header_t *)SACp_pinl_47408__icc_3834) - 1)->data1.arena)); } else { if (SACp_pinl_47408__icc_3834__sz * sizeof (*SACp_pinl_47408__icc_3834) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47408__icc_3834) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47408__icc_3834, ((((SAC_HM_header_t *)SACp_pinl_47408__icc_3834) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47408__icc_3834, ((((SAC_HM_header_t *)SACp_pinl_47408__icc_3834) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47408__icc_3834__sz * sizeof (*SACp_pinl_47408__icc_3834))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47408__icc_3834, ((((SAC_HM_header_t *)SACp_pinl_47408__icc_3834) - 1)->data1.arena)); } else { if (((((SACp_pinl_47408__icc_3834__sz * sizeof (*SACp_pinl_47408__icc_3834))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47408__icc_3834) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47408__icc_3834, ((((SAC_HM_header_t *)SACp_pinl_47408__icc_3834) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47408__icc_3834, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47408__icc_3834); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47408__icc_3834); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47408__icc_3834, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47408__icc_3834); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47408__icc_3834); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47408__icc_3834__desc) & (-1 ^ (3))))); } } } } else { } }
        { { free (SACp_pinl_47423__emal_43318__ivesplit_42429); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47423__emal_43318__ivesplit_42429__desc) & (-1 ^ (3))))); } } }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47421__emal_43316__icc_3836 = ( SACp_pinl_47409__icc_3835[SACp_pinl_47422__emal_43317__ivesli_42469]); }

        { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47409__icc_3835__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_47409__icc_3835); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47409__icc_3835__desc) & (-1 ^ (3))))); } } } } else { } }
        { ; ; }
        if (!SACp_pinl_47424__emal_43319__icc_3833_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        ; ; { SACp_pinl_47420__emal_43315__cwc_1761 = (SACp_pinl_47421__emal_43316__icc_3836) == (3); };
        { ; ; }
        if (SACp_pinl_47420__emal_43315__cwc_1761)
        {
          { ; ; }
          { { SACp_pinl_47434__emal_43339__cwc_1740 = SACl_b__dim; }; }
          ; ; { SACp_pinl_47433__emal_43338__cwc_1756 = (SACp_pinl_47434__emal_43339__cwc_1740) == (2); };
          { ; ; }
          if (SACp_pinl_47433__emal_43338__cwc_1756)
          {
            { ; ; }
            { { if (!((1 == SACp_pinl_47470__emal_43369__cwc_1742__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47470__emal_43369__cwc_1742"); }; { if ((((6 + (SACp_pinl_47470__emal_43369__cwc_1742__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47470__emal_43369__cwc_1742__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47470__emal_43369__cwc_1742__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47470__emal_43369__cwc_1742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47470__emal_43369__cwc_1742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47470__emal_43369__cwc_1742__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47470__emal_43369__cwc_1742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47470__emal_43369__cwc_1742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47470__emal_43369__cwc_1742__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47470__emal_43369__cwc_1742__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47470__emal_43369__cwc_1742__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47470__emal_43369__cwc_1742__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47470__emal_43369__cwc_1742__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47470__emal_43369__cwc_1742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47470__emal_43369__cwc_1742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47470__emal_43369__cwc_1742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47470__emal_43369__cwc_1742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47470__emal_43369__cwc_1742__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47470__emal_43369__cwc_1742__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47470__emal_43369__cwc_1742__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_47470__emal_43369__cwc_1742__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_47470__emal_43369__cwc_1742__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47470__emal_43369__cwc_1742__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47470__emal_43369__cwc_1742__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47470__emal_43369__cwc_1742__sz = SAC_size;
              if (!((SACp_pinl_47470__emal_43369__cwc_1742__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8995 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 8995 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8995 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 8995 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8995 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 8995 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8995 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 8995, __extension__ __PRETTY_FUNCTION__); }))
# 8995 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_47470__emal_43369__cwc_1742 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47470__emal_43369__cwc_1742__sz * sizeof (*SACp_pinl_47470__emal_43369__cwc_1742)); break; case SAC_HM_multi_threaded: SACp_pinl_47470__emal_43369__cwc_1742 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47470__emal_43369__cwc_1742__sz * sizeof (*SACp_pinl_47470__emal_43369__cwc_1742), 0); break; case SAC_HM_any_threaded: SACp_pinl_47470__emal_43369__cwc_1742 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47470__emal_43369__cwc_1742__sz * sizeof (*SACp_pinl_47470__emal_43369__cwc_1742), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47470__emal_43369__cwc_1742__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47470__emal_43369__cwc_1742__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47470__emal_43369__cwc_1742__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
              { SACp_pinl_47470__emal_43369__cwc_1742[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }

            { { if (!((1 == SACp_pinl_47469__emal_43368__cwc_1745__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47469__emal_43368__cwc_1745"); }; { { if ((((SACp_pinl_47469__emal_43368__cwc_1745__sz * sizeof (*SACp_pinl_47469__emal_43368__cwc_1745)) + ((6 + (SACp_pinl_47469__emal_43368__cwc_1745__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47469__emal_43368__cwc_1745__sz * sizeof (*SACp_pinl_47469__emal_43368__cwc_1745)) + ((6 + (SACp_pinl_47469__emal_43368__cwc_1745__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47469__emal_43368__cwc_1745__sz * sizeof (*SACp_pinl_47469__emal_43368__cwc_1745)) + ((6 + (SACp_pinl_47469__emal_43368__cwc_1745__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47469__emal_43368__cwc_1745 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47469__emal_43368__cwc_1745 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47469__emal_43368__cwc_1745__sz * sizeof (*SACp_pinl_47469__emal_43368__cwc_1745)) + ((6 + (SACp_pinl_47469__emal_43368__cwc_1745__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47469__emal_43368__cwc_1745 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47469__emal_43368__cwc_1745 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47469__emal_43368__cwc_1745__sz * sizeof (*SACp_pinl_47469__emal_43368__cwc_1745)) + ((6 + (SACp_pinl_47469__emal_43368__cwc_1745__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47469__emal_43368__cwc_1745__sz * sizeof (*SACp_pinl_47469__emal_43368__cwc_1745)) + ((6 + (SACp_pinl_47469__emal_43368__cwc_1745__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47469__emal_43368__cwc_1745__sz * sizeof (*SACp_pinl_47469__emal_43368__cwc_1745)) + ((6 + (SACp_pinl_47469__emal_43368__cwc_1745__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47469__emal_43368__cwc_1745__sz * sizeof (*SACp_pinl_47469__emal_43368__cwc_1745)) + ((6 + (SACp_pinl_47469__emal_43368__cwc_1745__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47469__emal_43368__cwc_1745__sz * sizeof (*SACp_pinl_47469__emal_43368__cwc_1745)) + ((6 + (SACp_pinl_47469__emal_43368__cwc_1745__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47469__emal_43368__cwc_1745 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47469__emal_43368__cwc_1745 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47469__emal_43368__cwc_1745 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47469__emal_43368__cwc_1745 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47469__emal_43368__cwc_1745__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47469__emal_43368__cwc_1745, SACp_pinl_47469__emal_43368__cwc_1745__sz * sizeof (*SACp_pinl_47469__emal_43368__cwc_1745), ((6 + (SACp_pinl_47469__emal_43368__cwc_1745__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47469__emal_43368__cwc_1745__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47469__emal_43368__cwc_1745__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47469__emal_43368__cwc_1745__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_47469__emal_43368__cwc_1745__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47469__emal_43368__cwc_1745__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_47469__emal_43368__cwc_1745[0] = 0; }




            if ((SACp_pinl_47469__emal_43368__cwc_1745__dim != 1) && (SACp_pinl_47469__emal_43368__cwc_1745__shp0 != SACp_pinl_47470__emal_43369__cwc_1742__dim)) {
              SACp_pinl_47468__emal_43367__icc_3842_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47469__emal_43368__cwc_1745""' with shape %s ""And `" "SACp_pinl_47470__emal_43369__cwc_1742""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47469__emal_43368__cwc_1745__desc), SAC_PrintShape (SACp_pinl_47470__emal_43369__cwc_1742__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_47469__emal_43368__cwc_1745[0]) >= SACp_pinl_47470__emal_43369__cwc_1742__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47469__emal_43368__cwc_1745""' with shape %s ""And `" "SACp_pinl_47470__emal_43369__cwc_1742""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47469__emal_43368__cwc_1745__desc), SAC_PrintShape (SACp_pinl_47470__emal_43369__cwc_1742__desc));
              }
              SACp_pinl_47468__emal_43367__icc_3842_pred = SAC_all;
            }




            if (!((SACp_pinl_47450__idc_3854__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47450__idc_3854__shp0 == SACp_pinl_47469__emal_43368__cwc_1745__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            SACp_pinl_47450__idc_3854__desc = SACp_pinl_47469__emal_43368__cwc_1745__desc;
            ;
            ;
            { SACp_pinl_47450__idc_3854 = SACp_pinl_47469__emal_43368__cwc_1745; }

            if (!SACp_pinl_47468__emal_43367__icc_3842_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_47438__icc_3844__desc = SACp_pinl_47470__emal_43369__cwc_1742__desc;
            SACp_pinl_47438__icc_3844__sz = SACp_pinl_47470__emal_43369__cwc_1742__sz;
            SACp_pinl_47438__icc_3844__dim = SACp_pinl_47470__emal_43369__cwc_1742__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47438__icc_3844__desc) & (-1 ^ (3))))[3]) = SACp_pinl_47470__emal_43369__cwc_1742__dim;
            { SACp_pinl_47438__icc_3844 = SACp_pinl_47470__emal_43369__cwc_1742; }




            if (!((SACp_pinl_47437__icc_3843__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47437__icc_3843__shp0 == SACp_pinl_47450__idc_3854__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            SACp_pinl_47437__icc_3843__desc = SACp_pinl_47450__idc_3854__desc;
            ;
            ;
            { SACp_pinl_47437__icc_3843 = SACp_pinl_47450__idc_3854; }

            { { if (!((1 == SACp_pinl_47467__emal_43366__ivesplit_42439__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47467__emal_43366__ivesplit_42439"); }; { if ((((6 + (SACp_pinl_47467__emal_43366__ivesplit_42439__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47467__emal_43366__ivesplit_42439__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47467__emal_43366__ivesplit_42439__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47467__emal_43366__ivesplit_42439__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47467__emal_43366__ivesplit_42439__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47467__emal_43366__ivesplit_42439__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47467__emal_43366__ivesplit_42439__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47467__emal_43366__ivesplit_42439__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47467__emal_43366__ivesplit_42439__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47467__emal_43366__ivesplit_42439__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47467__emal_43366__ivesplit_42439__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47467__emal_43366__ivesplit_42439__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47467__emal_43366__ivesplit_42439__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47467__emal_43366__ivesplit_42439__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47467__emal_43366__ivesplit_42439__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47467__emal_43366__ivesplit_42439__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47467__emal_43366__ivesplit_42439__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47467__emal_43366__ivesplit_42439__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47467__emal_43366__ivesplit_42439__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47467__emal_43366__ivesplit_42439__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_47467__emal_43366__ivesplit_42439__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_47467__emal_43366__ivesplit_42439__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47467__emal_43366__ivesplit_42439__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47438__icc_3844__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47467__emal_43366__ivesplit_42439__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47467__emal_43366__ivesplit_42439__sz = SAC_size;
              if (!((SACp_pinl_47467__emal_43366__ivesplit_42439__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 9080 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 9080 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9080 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 9080 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9080 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 9080 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 9080 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 9080, __extension__ __PRETTY_FUNCTION__); }))
# 9080 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_47467__emal_43366__ivesplit_42439 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47467__emal_43366__ivesplit_42439__sz * sizeof (*SACp_pinl_47467__emal_43366__ivesplit_42439)); break; case SAC_HM_multi_threaded: SACp_pinl_47467__emal_43366__ivesplit_42439 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47467__emal_43366__ivesplit_42439__sz * sizeof (*SACp_pinl_47467__emal_43366__ivesplit_42439), 0); break; case SAC_HM_any_threaded: SACp_pinl_47467__emal_43366__ivesplit_42439 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47467__emal_43366__ivesplit_42439__sz * sizeof (*SACp_pinl_47467__emal_43366__ivesplit_42439), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47467__emal_43366__ivesplit_42439__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47467__emal_43366__ivesplit_42439__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47467__emal_43366__ivesplit_42439__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_47438__icc_3844__dim; SAC_i++) {
              { SACp_pinl_47467__emal_43366__ivesplit_42439[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47438__icc_3844__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_47437__icc_3843[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_47467__emal_43366__ivesplit_42439__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_47467__emal_43366__ivesplit_42439[SAC_i]);
              }
              SACp_pinl_47466__emal_43365__ivesli_42475 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47437__icc_3843__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_47437__icc_3843__sz * sizeof (*SACp_pinl_47437__icc_3843)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47437__icc_3843, ((((SAC_HM_header_t *)SACp_pinl_47437__icc_3843) - 1)->data1.arena)); } else { if (SACp_pinl_47437__icc_3843__sz * sizeof (*SACp_pinl_47437__icc_3843) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47437__icc_3843) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47437__icc_3843, ((((SAC_HM_header_t *)SACp_pinl_47437__icc_3843) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47437__icc_3843, ((((SAC_HM_header_t *)SACp_pinl_47437__icc_3843) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47437__icc_3843__sz * sizeof (*SACp_pinl_47437__icc_3843))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47437__icc_3843, ((((SAC_HM_header_t *)SACp_pinl_47437__icc_3843) - 1)->data1.arena)); } else { if (((((SACp_pinl_47437__icc_3843__sz * sizeof (*SACp_pinl_47437__icc_3843))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47437__icc_3843) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47437__icc_3843, ((((SAC_HM_header_t *)SACp_pinl_47437__icc_3843) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47437__icc_3843, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47437__icc_3843); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47437__icc_3843); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47437__icc_3843, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47437__icc_3843); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47437__icc_3843); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47437__icc_3843__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_47467__emal_43366__ivesplit_42439); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47467__emal_43366__ivesplit_42439__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_47465__emal_43364__icc_3845 = ( SACp_pinl_47438__icc_3844[SACp_pinl_47466__emal_43365__ivesli_42475]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47438__icc_3844__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_47438__icc_3844); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47438__icc_3844__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_47468__emal_43367__icc_3842_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            ; ; { SACp_pinl_47464__emal_43363__cwc_1748 = (SACp_pinl_47465__emal_43364__icc_3845) == (2); };
            { ; ; }
            { { if (!((1 == SACp_pinl_47463__emal_43362__cwc_1750__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47463__emal_43362__cwc_1750"); }; { { if ((((SACp_pinl_47463__emal_43362__cwc_1750__sz * sizeof (*SACp_pinl_47463__emal_43362__cwc_1750)) + ((6 + (SACp_pinl_47463__emal_43362__cwc_1750__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47463__emal_43362__cwc_1750__sz * sizeof (*SACp_pinl_47463__emal_43362__cwc_1750)) + ((6 + (SACp_pinl_47463__emal_43362__cwc_1750__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47463__emal_43362__cwc_1750__sz * sizeof (*SACp_pinl_47463__emal_43362__cwc_1750)) + ((6 + (SACp_pinl_47463__emal_43362__cwc_1750__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47463__emal_43362__cwc_1750 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47463__emal_43362__cwc_1750 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47463__emal_43362__cwc_1750__sz * sizeof (*SACp_pinl_47463__emal_43362__cwc_1750)) + ((6 + (SACp_pinl_47463__emal_43362__cwc_1750__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47463__emal_43362__cwc_1750 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47463__emal_43362__cwc_1750 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47463__emal_43362__cwc_1750__sz * sizeof (*SACp_pinl_47463__emal_43362__cwc_1750)) + ((6 + (SACp_pinl_47463__emal_43362__cwc_1750__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47463__emal_43362__cwc_1750__sz * sizeof (*SACp_pinl_47463__emal_43362__cwc_1750)) + ((6 + (SACp_pinl_47463__emal_43362__cwc_1750__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47463__emal_43362__cwc_1750__sz * sizeof (*SACp_pinl_47463__emal_43362__cwc_1750)) + ((6 + (SACp_pinl_47463__emal_43362__cwc_1750__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47463__emal_43362__cwc_1750__sz * sizeof (*SACp_pinl_47463__emal_43362__cwc_1750)) + ((6 + (SACp_pinl_47463__emal_43362__cwc_1750__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47463__emal_43362__cwc_1750__sz * sizeof (*SACp_pinl_47463__emal_43362__cwc_1750)) + ((6 + (SACp_pinl_47463__emal_43362__cwc_1750__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47463__emal_43362__cwc_1750 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47463__emal_43362__cwc_1750 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47463__emal_43362__cwc_1750 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47463__emal_43362__cwc_1750 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47463__emal_43362__cwc_1750__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47463__emal_43362__cwc_1750, SACp_pinl_47463__emal_43362__cwc_1750__sz * sizeof (*SACp_pinl_47463__emal_43362__cwc_1750), ((6 + (SACp_pinl_47463__emal_43362__cwc_1750__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47463__emal_43362__cwc_1750__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47463__emal_43362__cwc_1750__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47463__emal_43362__cwc_1750__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_47463__emal_43362__cwc_1750__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47463__emal_43362__cwc_1750__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_47463__emal_43362__cwc_1750[0] = 1; }




            if ((SACp_pinl_47463__emal_43362__cwc_1750__dim != 1) && (SACp_pinl_47463__emal_43362__cwc_1750__shp0 != SACp_pinl_47470__emal_43369__cwc_1742__dim)) {
              SACp_pinl_47462__emal_43361__icc_3848_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47463__emal_43362__cwc_1750""' with shape %s ""And `" "SACp_pinl_47470__emal_43369__cwc_1742""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47463__emal_43362__cwc_1750__desc), SAC_PrintShape (SACp_pinl_47470__emal_43369__cwc_1742__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_47463__emal_43362__cwc_1750[0]) >= SACp_pinl_47470__emal_43369__cwc_1742__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47463__emal_43362__cwc_1750""' with shape %s ""And `" "SACp_pinl_47470__emal_43369__cwc_1742""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47463__emal_43362__cwc_1750__desc), SAC_PrintShape (SACp_pinl_47470__emal_43369__cwc_1742__desc));
              }
              SACp_pinl_47462__emal_43361__icc_3848_pred = SAC_all;
            }




            if (!((SACp_pinl_47452__idc_3857__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47452__idc_3857__shp0 == SACp_pinl_47463__emal_43362__cwc_1750__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            SACp_pinl_47452__idc_3857__desc = SACp_pinl_47463__emal_43362__cwc_1750__desc;
            ;
            ;
            { SACp_pinl_47452__idc_3857 = SACp_pinl_47463__emal_43362__cwc_1750; }

            if (!SACp_pinl_47462__emal_43361__icc_3848_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_47441__icc_3850__desc = SACp_pinl_47470__emal_43369__cwc_1742__desc;
            SACp_pinl_47441__icc_3850__sz = SACp_pinl_47470__emal_43369__cwc_1742__sz;
            SACp_pinl_47441__icc_3850__dim = SACp_pinl_47470__emal_43369__cwc_1742__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47441__icc_3850__desc) & (-1 ^ (3))))[3]) = SACp_pinl_47470__emal_43369__cwc_1742__dim;
            { SACp_pinl_47441__icc_3850 = SACp_pinl_47470__emal_43369__cwc_1742; }




            if (!((SACp_pinl_47440__icc_3849__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47440__icc_3849__shp0 == SACp_pinl_47452__idc_3857__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            SACp_pinl_47440__icc_3849__desc = SACp_pinl_47452__idc_3857__desc;
            ;
            ;
            { SACp_pinl_47440__icc_3849 = SACp_pinl_47452__idc_3857; }

            { { if (!((1 == SACp_pinl_47461__emal_43360__ivesplit_42441__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47461__emal_43360__ivesplit_42441"); }; { if ((((6 + (SACp_pinl_47461__emal_43360__ivesplit_42441__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47461__emal_43360__ivesplit_42441__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47461__emal_43360__ivesplit_42441__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47461__emal_43360__ivesplit_42441__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47461__emal_43360__ivesplit_42441__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47461__emal_43360__ivesplit_42441__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47461__emal_43360__ivesplit_42441__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47461__emal_43360__ivesplit_42441__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47461__emal_43360__ivesplit_42441__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47461__emal_43360__ivesplit_42441__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47461__emal_43360__ivesplit_42441__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47461__emal_43360__ivesplit_42441__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47461__emal_43360__ivesplit_42441__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47461__emal_43360__ivesplit_42441__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47461__emal_43360__ivesplit_42441__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47461__emal_43360__ivesplit_42441__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47461__emal_43360__ivesplit_42441__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47461__emal_43360__ivesplit_42441__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47461__emal_43360__ivesplit_42441__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47461__emal_43360__ivesplit_42441__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_47461__emal_43360__ivesplit_42441__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_47461__emal_43360__ivesplit_42441__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47461__emal_43360__ivesplit_42441__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47441__icc_3850__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47461__emal_43360__ivesplit_42441__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47461__emal_43360__ivesplit_42441__sz = SAC_size;
              if (!((SACp_pinl_47461__emal_43360__ivesplit_42441__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 9195 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 9195 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9195 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 9195 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9195 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 9195 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 9195 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 9195, __extension__ __PRETTY_FUNCTION__); }))
# 9195 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_47461__emal_43360__ivesplit_42441 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47461__emal_43360__ivesplit_42441__sz * sizeof (*SACp_pinl_47461__emal_43360__ivesplit_42441)); break; case SAC_HM_multi_threaded: SACp_pinl_47461__emal_43360__ivesplit_42441 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47461__emal_43360__ivesplit_42441__sz * sizeof (*SACp_pinl_47461__emal_43360__ivesplit_42441), 0); break; case SAC_HM_any_threaded: SACp_pinl_47461__emal_43360__ivesplit_42441 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47461__emal_43360__ivesplit_42441__sz * sizeof (*SACp_pinl_47461__emal_43360__ivesplit_42441), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47461__emal_43360__ivesplit_42441__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47461__emal_43360__ivesplit_42441__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47461__emal_43360__ivesplit_42441__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_47441__icc_3850__dim; SAC_i++) {
              { SACp_pinl_47461__emal_43360__ivesplit_42441[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47441__icc_3850__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_47440__icc_3849[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_47461__emal_43360__ivesplit_42441__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_47461__emal_43360__ivesplit_42441[SAC_i]);
              }
              SACp_pinl_47460__emal_43359__ivesli_42474 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47440__icc_3849__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_47440__icc_3849__sz * sizeof (*SACp_pinl_47440__icc_3849)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47440__icc_3849, ((((SAC_HM_header_t *)SACp_pinl_47440__icc_3849) - 1)->data1.arena)); } else { if (SACp_pinl_47440__icc_3849__sz * sizeof (*SACp_pinl_47440__icc_3849) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47440__icc_3849) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47440__icc_3849, ((((SAC_HM_header_t *)SACp_pinl_47440__icc_3849) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47440__icc_3849, ((((SAC_HM_header_t *)SACp_pinl_47440__icc_3849) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47440__icc_3849__sz * sizeof (*SACp_pinl_47440__icc_3849))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47440__icc_3849, ((((SAC_HM_header_t *)SACp_pinl_47440__icc_3849) - 1)->data1.arena)); } else { if (((((SACp_pinl_47440__icc_3849__sz * sizeof (*SACp_pinl_47440__icc_3849))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47440__icc_3849) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47440__icc_3849, ((((SAC_HM_header_t *)SACp_pinl_47440__icc_3849) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47440__icc_3849, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47440__icc_3849); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47440__icc_3849); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47440__icc_3849, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47440__icc_3849); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47440__icc_3849); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47440__icc_3849__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_47461__emal_43360__ivesplit_42441); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47461__emal_43360__ivesplit_42441__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_47459__emal_43358__icc_3851 = ( SACp_pinl_47441__icc_3850[SACp_pinl_47460__emal_43359__ivesli_42474]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47441__icc_3850__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_47441__icc_3850); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47441__icc_3850__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_47462__emal_43361__icc_3848_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            { ; ;



            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            ;

            }
            ; ; { SACp_pinl_47458__emal_43357__cwc_1753 = (SACp_pinl_47459__emal_43358__icc_3851) == (3); };
            { ; ; }
            ; ; { SACp_pinl_47458__emal_43357__cwc_1753 = (SACp_pinl_47458__emal_43357__cwc_1753) & (SACp_pinl_47464__emal_43363__cwc_1748); };
            { ; ; }
            if (SACp_pinl_47458__emal_43357__cwc_1753)
            {
              { ; ; }



              if (!((_tcp_48528_SACl_b__dim == SACl_b__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
              if (!((_tcp_48528_SACl_b__shp0 == (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (0))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
              if (!((_tcp_48528_SACl_b__shp1 == (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (1))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
              _tcp_48528_SACl_b__desc = SACl_b__desc;
              ;
              ;
              { _tcp_48528_SACl_b = SACl_b; }




              if (!((_tcp_48527_SACl_a__dim == SACl_a__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
              if (!((_tcp_48527_SACl_a__shp0 == (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (0))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
              _tcp_48527_SACl_a__desc = SACl_a__desc;
              ;
              ;
              { _tcp_48527_SACl_a = SACl_a; }




              SACf__MAIN___rtpf_31_impl_pluscarret__i_3__i_2_3 (&SACp_cwc_1700, &SACp_cwc_1700__desc, _tcp_48527_SACl_a, _tcp_48527_SACl_a__desc, _tcp_48528_SACl_b, _tcp_48528_SACl_b__desc);




              SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

            }
            else
            {
              { ; ; }



              SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_cwc_1700, &SACp_cwc_1700__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




              SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

            }
          }
          else
          {
            { ; ; }



            SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_cwc_1700, &SACp_cwc_1700__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

          }
        }
        else
        {
          { ; ; }
          { { SACp_pinl_47436__emal_43341__cwc_1721 = SACl_b__dim; }; }
          ; ; { SACp_pinl_47435__emal_43340__cwc_1737 = (SACp_pinl_47436__emal_43341__cwc_1721) == (2); };
          { ; ; }
          if (SACp_pinl_47435__emal_43340__cwc_1737)
          {
            { ; ; }
            { { if (!((1 == SACp_pinl_47504__emal_43355__cwc_1723__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47504__emal_43355__cwc_1723"); }; { if ((((6 + (SACp_pinl_47504__emal_43355__cwc_1723__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47504__emal_43355__cwc_1723__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47504__emal_43355__cwc_1723__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47504__emal_43355__cwc_1723__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47504__emal_43355__cwc_1723__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47504__emal_43355__cwc_1723__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47504__emal_43355__cwc_1723__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47504__emal_43355__cwc_1723__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47504__emal_43355__cwc_1723__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47504__emal_43355__cwc_1723__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47504__emal_43355__cwc_1723__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47504__emal_43355__cwc_1723__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47504__emal_43355__cwc_1723__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47504__emal_43355__cwc_1723__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47504__emal_43355__cwc_1723__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47504__emal_43355__cwc_1723__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47504__emal_43355__cwc_1723__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47504__emal_43355__cwc_1723__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47504__emal_43355__cwc_1723__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47504__emal_43355__cwc_1723__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_47504__emal_43355__cwc_1723__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_47504__emal_43355__cwc_1723__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47504__emal_43355__cwc_1723__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47504__emal_43355__cwc_1723__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47504__emal_43355__cwc_1723__sz = SAC_size;
              if (!((SACp_pinl_47504__emal_43355__cwc_1723__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 9336 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 9336 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9336 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 9336 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9336 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 9336 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 9336 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 9336, __extension__ __PRETTY_FUNCTION__); }))
# 9336 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_47504__emal_43355__cwc_1723 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47504__emal_43355__cwc_1723__sz * sizeof (*SACp_pinl_47504__emal_43355__cwc_1723)); break; case SAC_HM_multi_threaded: SACp_pinl_47504__emal_43355__cwc_1723 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47504__emal_43355__cwc_1723__sz * sizeof (*SACp_pinl_47504__emal_43355__cwc_1723), 0); break; case SAC_HM_any_threaded: SACp_pinl_47504__emal_43355__cwc_1723 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47504__emal_43355__cwc_1723__sz * sizeof (*SACp_pinl_47504__emal_43355__cwc_1723), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47504__emal_43355__cwc_1723__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47504__emal_43355__cwc_1723__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47504__emal_43355__cwc_1723__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
              { SACp_pinl_47504__emal_43355__cwc_1723[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }

            { { if (!((1 == SACp_pinl_47503__emal_43354__cwc_1726__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47503__emal_43354__cwc_1726"); }; { { if ((((SACp_pinl_47503__emal_43354__cwc_1726__sz * sizeof (*SACp_pinl_47503__emal_43354__cwc_1726)) + ((6 + (SACp_pinl_47503__emal_43354__cwc_1726__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47503__emal_43354__cwc_1726__sz * sizeof (*SACp_pinl_47503__emal_43354__cwc_1726)) + ((6 + (SACp_pinl_47503__emal_43354__cwc_1726__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47503__emal_43354__cwc_1726__sz * sizeof (*SACp_pinl_47503__emal_43354__cwc_1726)) + ((6 + (SACp_pinl_47503__emal_43354__cwc_1726__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47503__emal_43354__cwc_1726 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47503__emal_43354__cwc_1726 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47503__emal_43354__cwc_1726__sz * sizeof (*SACp_pinl_47503__emal_43354__cwc_1726)) + ((6 + (SACp_pinl_47503__emal_43354__cwc_1726__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47503__emal_43354__cwc_1726 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47503__emal_43354__cwc_1726 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47503__emal_43354__cwc_1726__sz * sizeof (*SACp_pinl_47503__emal_43354__cwc_1726)) + ((6 + (SACp_pinl_47503__emal_43354__cwc_1726__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47503__emal_43354__cwc_1726__sz * sizeof (*SACp_pinl_47503__emal_43354__cwc_1726)) + ((6 + (SACp_pinl_47503__emal_43354__cwc_1726__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47503__emal_43354__cwc_1726__sz * sizeof (*SACp_pinl_47503__emal_43354__cwc_1726)) + ((6 + (SACp_pinl_47503__emal_43354__cwc_1726__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47503__emal_43354__cwc_1726__sz * sizeof (*SACp_pinl_47503__emal_43354__cwc_1726)) + ((6 + (SACp_pinl_47503__emal_43354__cwc_1726__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47503__emal_43354__cwc_1726__sz * sizeof (*SACp_pinl_47503__emal_43354__cwc_1726)) + ((6 + (SACp_pinl_47503__emal_43354__cwc_1726__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47503__emal_43354__cwc_1726 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47503__emal_43354__cwc_1726 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47503__emal_43354__cwc_1726 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47503__emal_43354__cwc_1726 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47503__emal_43354__cwc_1726__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47503__emal_43354__cwc_1726, SACp_pinl_47503__emal_43354__cwc_1726__sz * sizeof (*SACp_pinl_47503__emal_43354__cwc_1726), ((6 + (SACp_pinl_47503__emal_43354__cwc_1726__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47503__emal_43354__cwc_1726__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47503__emal_43354__cwc_1726__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47503__emal_43354__cwc_1726__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_47503__emal_43354__cwc_1726__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47503__emal_43354__cwc_1726__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_47503__emal_43354__cwc_1726[0] = 0; }




            if ((SACp_pinl_47503__emal_43354__cwc_1726__dim != 1) && (SACp_pinl_47503__emal_43354__cwc_1726__shp0 != SACp_pinl_47504__emal_43355__cwc_1723__dim)) {
              SACp_pinl_47502__emal_43353__icc_3860_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47503__emal_43354__cwc_1726""' with shape %s ""And `" "SACp_pinl_47504__emal_43355__cwc_1723""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47503__emal_43354__cwc_1726__desc), SAC_PrintShape (SACp_pinl_47504__emal_43355__cwc_1723__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_47503__emal_43354__cwc_1726[0]) >= SACp_pinl_47504__emal_43355__cwc_1723__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47503__emal_43354__cwc_1726""' with shape %s ""And `" "SACp_pinl_47504__emal_43355__cwc_1723""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47503__emal_43354__cwc_1726__desc), SAC_PrintShape (SACp_pinl_47504__emal_43355__cwc_1723__desc));
              }
              SACp_pinl_47502__emal_43353__icc_3860_pred = SAC_all;
            }




            if (!((SACp_pinl_47484__idc_3872__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47484__idc_3872__shp0 == SACp_pinl_47503__emal_43354__cwc_1726__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            SACp_pinl_47484__idc_3872__desc = SACp_pinl_47503__emal_43354__cwc_1726__desc;
            ;
            ;
            { SACp_pinl_47484__idc_3872 = SACp_pinl_47503__emal_43354__cwc_1726; }

            if (!SACp_pinl_47502__emal_43353__icc_3860_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_47472__icc_3862__desc = SACp_pinl_47504__emal_43355__cwc_1723__desc;
            SACp_pinl_47472__icc_3862__sz = SACp_pinl_47504__emal_43355__cwc_1723__sz;
            SACp_pinl_47472__icc_3862__dim = SACp_pinl_47504__emal_43355__cwc_1723__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47472__icc_3862__desc) & (-1 ^ (3))))[3]) = SACp_pinl_47504__emal_43355__cwc_1723__dim;
            { SACp_pinl_47472__icc_3862 = SACp_pinl_47504__emal_43355__cwc_1723; }




            if (!((SACp_pinl_47471__icc_3861__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47471__icc_3861__shp0 == SACp_pinl_47484__idc_3872__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            SACp_pinl_47471__icc_3861__desc = SACp_pinl_47484__idc_3872__desc;
            ;
            ;
            { SACp_pinl_47471__icc_3861 = SACp_pinl_47484__idc_3872; }

            { { if (!((1 == SACp_pinl_47501__emal_43352__ivesplit_42435__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47501__emal_43352__ivesplit_42435"); }; { if ((((6 + (SACp_pinl_47501__emal_43352__ivesplit_42435__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47501__emal_43352__ivesplit_42435__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47501__emal_43352__ivesplit_42435__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47501__emal_43352__ivesplit_42435__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47501__emal_43352__ivesplit_42435__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47501__emal_43352__ivesplit_42435__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47501__emal_43352__ivesplit_42435__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47501__emal_43352__ivesplit_42435__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47501__emal_43352__ivesplit_42435__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47501__emal_43352__ivesplit_42435__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47501__emal_43352__ivesplit_42435__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47501__emal_43352__ivesplit_42435__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47501__emal_43352__ivesplit_42435__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47501__emal_43352__ivesplit_42435__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47501__emal_43352__ivesplit_42435__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47501__emal_43352__ivesplit_42435__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47501__emal_43352__ivesplit_42435__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47501__emal_43352__ivesplit_42435__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47501__emal_43352__ivesplit_42435__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47501__emal_43352__ivesplit_42435__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_47501__emal_43352__ivesplit_42435__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_47501__emal_43352__ivesplit_42435__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47501__emal_43352__ivesplit_42435__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47472__icc_3862__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47501__emal_43352__ivesplit_42435__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47501__emal_43352__ivesplit_42435__sz = SAC_size;
              if (!((SACp_pinl_47501__emal_43352__ivesplit_42435__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 9421 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 9421 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9421 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 9421 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9421 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 9421 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 9421 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 9421, __extension__ __PRETTY_FUNCTION__); }))
# 9421 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_47501__emal_43352__ivesplit_42435 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47501__emal_43352__ivesplit_42435__sz * sizeof (*SACp_pinl_47501__emal_43352__ivesplit_42435)); break; case SAC_HM_multi_threaded: SACp_pinl_47501__emal_43352__ivesplit_42435 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47501__emal_43352__ivesplit_42435__sz * sizeof (*SACp_pinl_47501__emal_43352__ivesplit_42435), 0); break; case SAC_HM_any_threaded: SACp_pinl_47501__emal_43352__ivesplit_42435 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47501__emal_43352__ivesplit_42435__sz * sizeof (*SACp_pinl_47501__emal_43352__ivesplit_42435), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47501__emal_43352__ivesplit_42435__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47501__emal_43352__ivesplit_42435__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47501__emal_43352__ivesplit_42435__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_47472__icc_3862__dim; SAC_i++) {
              { SACp_pinl_47501__emal_43352__ivesplit_42435[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47472__icc_3862__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_47471__icc_3861[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_47501__emal_43352__ivesplit_42435__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_47501__emal_43352__ivesplit_42435[SAC_i]);
              }
              SACp_pinl_47500__emal_43351__ivesli_42473 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47471__icc_3861__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_47471__icc_3861__sz * sizeof (*SACp_pinl_47471__icc_3861)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47471__icc_3861, ((((SAC_HM_header_t *)SACp_pinl_47471__icc_3861) - 1)->data1.arena)); } else { if (SACp_pinl_47471__icc_3861__sz * sizeof (*SACp_pinl_47471__icc_3861) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47471__icc_3861) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47471__icc_3861, ((((SAC_HM_header_t *)SACp_pinl_47471__icc_3861) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47471__icc_3861, ((((SAC_HM_header_t *)SACp_pinl_47471__icc_3861) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47471__icc_3861__sz * sizeof (*SACp_pinl_47471__icc_3861))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47471__icc_3861, ((((SAC_HM_header_t *)SACp_pinl_47471__icc_3861) - 1)->data1.arena)); } else { if (((((SACp_pinl_47471__icc_3861__sz * sizeof (*SACp_pinl_47471__icc_3861))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47471__icc_3861) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47471__icc_3861, ((((SAC_HM_header_t *)SACp_pinl_47471__icc_3861) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47471__icc_3861, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47471__icc_3861); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47471__icc_3861); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47471__icc_3861, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47471__icc_3861); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47471__icc_3861); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47471__icc_3861__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_47501__emal_43352__ivesplit_42435); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47501__emal_43352__ivesplit_42435__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_47499__emal_43350__icc_3863 = ( SACp_pinl_47472__icc_3862[SACp_pinl_47500__emal_43351__ivesli_42473]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47472__icc_3862__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_47472__icc_3862); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47472__icc_3862__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_47502__emal_43353__icc_3860_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            ; ; { SACp_pinl_47498__emal_43349__cwc_1729 = (SACp_pinl_47499__emal_43350__icc_3863) == (2); };
            { ; ; }
            { { if (!((1 == SACp_pinl_47497__emal_43348__cwc_1731__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47497__emal_43348__cwc_1731"); }; { { if ((((SACp_pinl_47497__emal_43348__cwc_1731__sz * sizeof (*SACp_pinl_47497__emal_43348__cwc_1731)) + ((6 + (SACp_pinl_47497__emal_43348__cwc_1731__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47497__emal_43348__cwc_1731__sz * sizeof (*SACp_pinl_47497__emal_43348__cwc_1731)) + ((6 + (SACp_pinl_47497__emal_43348__cwc_1731__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47497__emal_43348__cwc_1731__sz * sizeof (*SACp_pinl_47497__emal_43348__cwc_1731)) + ((6 + (SACp_pinl_47497__emal_43348__cwc_1731__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47497__emal_43348__cwc_1731 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47497__emal_43348__cwc_1731 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47497__emal_43348__cwc_1731__sz * sizeof (*SACp_pinl_47497__emal_43348__cwc_1731)) + ((6 + (SACp_pinl_47497__emal_43348__cwc_1731__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47497__emal_43348__cwc_1731 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47497__emal_43348__cwc_1731 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47497__emal_43348__cwc_1731__sz * sizeof (*SACp_pinl_47497__emal_43348__cwc_1731)) + ((6 + (SACp_pinl_47497__emal_43348__cwc_1731__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47497__emal_43348__cwc_1731__sz * sizeof (*SACp_pinl_47497__emal_43348__cwc_1731)) + ((6 + (SACp_pinl_47497__emal_43348__cwc_1731__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47497__emal_43348__cwc_1731__sz * sizeof (*SACp_pinl_47497__emal_43348__cwc_1731)) + ((6 + (SACp_pinl_47497__emal_43348__cwc_1731__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47497__emal_43348__cwc_1731__sz * sizeof (*SACp_pinl_47497__emal_43348__cwc_1731)) + ((6 + (SACp_pinl_47497__emal_43348__cwc_1731__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47497__emal_43348__cwc_1731__sz * sizeof (*SACp_pinl_47497__emal_43348__cwc_1731)) + ((6 + (SACp_pinl_47497__emal_43348__cwc_1731__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47497__emal_43348__cwc_1731 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47497__emal_43348__cwc_1731 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47497__emal_43348__cwc_1731 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47497__emal_43348__cwc_1731 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47497__emal_43348__cwc_1731__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47497__emal_43348__cwc_1731, SACp_pinl_47497__emal_43348__cwc_1731__sz * sizeof (*SACp_pinl_47497__emal_43348__cwc_1731), ((6 + (SACp_pinl_47497__emal_43348__cwc_1731__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47497__emal_43348__cwc_1731__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47497__emal_43348__cwc_1731__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47497__emal_43348__cwc_1731__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_47497__emal_43348__cwc_1731__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47497__emal_43348__cwc_1731__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            ;

            }



            { SACp_pinl_47497__emal_43348__cwc_1731[0] = 1; }




            if ((SACp_pinl_47497__emal_43348__cwc_1731__dim != 1) && (SACp_pinl_47497__emal_43348__cwc_1731__shp0 != SACp_pinl_47504__emal_43355__cwc_1723__dim)) {
              SACp_pinl_47496__emal_43347__icc_3866_pred = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47497__emal_43348__cwc_1731""' with shape %s ""And `" "SACp_pinl_47504__emal_43355__cwc_1723""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47497__emal_43348__cwc_1731__desc), SAC_PrintShape (SACp_pinl_47504__emal_43355__cwc_1723__desc));
            }
            else {
              int SAC_all = 1; if (0 || (( SACp_pinl_47497__emal_43348__cwc_1731[0]) >= SACp_pinl_47504__emal_43355__cwc_1723__shp0))
              {

                SAC_all = 0;
                SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47497__emal_43348__cwc_1731""' with shape %s ""And `" "SACp_pinl_47504__emal_43355__cwc_1723""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47497__emal_43348__cwc_1731__desc), SAC_PrintShape (SACp_pinl_47504__emal_43355__cwc_1723__desc));
              }
              SACp_pinl_47496__emal_43347__icc_3866_pred = SAC_all;
            }




            if (!((SACp_pinl_47486__idc_3875__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47486__idc_3875__shp0 == SACp_pinl_47497__emal_43348__cwc_1731__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            SACp_pinl_47486__idc_3875__desc = SACp_pinl_47497__emal_43348__cwc_1731__desc;
            ;
            ;
            { SACp_pinl_47486__idc_3875 = SACp_pinl_47497__emal_43348__cwc_1731; }

            if (!SACp_pinl_47496__emal_43347__icc_3866_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }



            SACp_pinl_47475__icc_3868__desc = SACp_pinl_47504__emal_43355__cwc_1723__desc;
            SACp_pinl_47475__icc_3868__sz = SACp_pinl_47504__emal_43355__cwc_1723__sz;
            SACp_pinl_47475__icc_3868__dim = SACp_pinl_47504__emal_43355__cwc_1723__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47475__icc_3868__desc) & (-1 ^ (3))))[3]) = SACp_pinl_47504__emal_43355__cwc_1723__dim;
            { SACp_pinl_47475__icc_3868 = SACp_pinl_47504__emal_43355__cwc_1723; }




            if (!((SACp_pinl_47474__icc_3867__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            if (!((SACp_pinl_47474__icc_3867__shp0 == SACp_pinl_47486__idc_3875__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            SACp_pinl_47474__icc_3867__desc = SACp_pinl_47486__idc_3875__desc;
            ;
            ;
            { SACp_pinl_47474__icc_3867 = SACp_pinl_47486__idc_3875; }

            { { if (!((1 == SACp_pinl_47495__emal_43346__ivesplit_42437__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47495__emal_43346__ivesplit_42437"); }; { if ((((6 + (SACp_pinl_47495__emal_43346__ivesplit_42437__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47495__emal_43346__ivesplit_42437__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47495__emal_43346__ivesplit_42437__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47495__emal_43346__ivesplit_42437__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47495__emal_43346__ivesplit_42437__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47495__emal_43346__ivesplit_42437__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47495__emal_43346__ivesplit_42437__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47495__emal_43346__ivesplit_42437__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47495__emal_43346__ivesplit_42437__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47495__emal_43346__ivesplit_42437__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47495__emal_43346__ivesplit_42437__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47495__emal_43346__ivesplit_42437__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47495__emal_43346__ivesplit_42437__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47495__emal_43346__ivesplit_42437__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47495__emal_43346__ivesplit_42437__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47495__emal_43346__ivesplit_42437__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47495__emal_43346__ivesplit_42437__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47495__emal_43346__ivesplit_42437__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47495__emal_43346__ivesplit_42437__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47495__emal_43346__ivesplit_42437__desc) & (-1 ^ (3))))[1]) = 0; }



            if (!((SACp_pinl_47495__emal_43346__ivesplit_42437__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            {

              int SAC_size = 1;
              SAC_size *=
              SACp_pinl_47495__emal_43346__ivesplit_42437__shp0 =
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47495__emal_43346__ivesplit_42437__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47475__icc_3868__dim;
              (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47495__emal_43346__ivesplit_42437__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47495__emal_43346__ivesplit_42437__sz = SAC_size;
              if (!((SACp_pinl_47495__emal_43346__ivesplit_42437__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
            }

            { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 9536 "/home/rubenhensen/sac/a.out.c" 3 4
           ((void) sizeof ((
# 9536 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9536 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ? 1 : 0), __extension__ ({ if (
# 9536 "/home/rubenhensen/sac/a.out.c"
           SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9536 "/home/rubenhensen/sac/a.out.c" 3 4
           ) ; else __assert_fail (
# 9536 "/home/rubenhensen/sac/a.out.c"
           "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 9536 "/home/rubenhensen/sac/a.out.c" 3 4
           , "/home/rubenhensen/sac/a.out.c", 9536, __extension__ __PRETTY_FUNCTION__); }))
# 9536 "/home/rubenhensen/sac/a.out.c"
           ; SACp_pinl_47495__emal_43346__ivesplit_42437 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47495__emal_43346__ivesplit_42437__sz * sizeof (*SACp_pinl_47495__emal_43346__ivesplit_42437)); break; case SAC_HM_multi_threaded: SACp_pinl_47495__emal_43346__ivesplit_42437 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47495__emal_43346__ivesplit_42437__sz * sizeof (*SACp_pinl_47495__emal_43346__ivesplit_42437), 0); break; case SAC_HM_any_threaded: SACp_pinl_47495__emal_43346__ivesplit_42437 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47495__emal_43346__ivesplit_42437__sz * sizeof (*SACp_pinl_47495__emal_43346__ivesplit_42437), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47495__emal_43346__ivesplit_42437__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47495__emal_43346__ivesplit_42437__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47495__emal_43346__ivesplit_42437__desc) & (-1 ^ (3))))[1]) = 0; } }



           
            for (int SAC_i = 0; SAC_i < SACp_pinl_47475__icc_3868__dim; SAC_i++) {
              { SACp_pinl_47495__emal_43346__ivesplit_42437[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47475__icc_3868__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
            }




            {
              int SAC_i, SAC_l;
              SAC_l = 0;
              SAC_l = ( SACp_pinl_47474__icc_3867[0]);
              for (SAC_i = (1); SAC_i < SACp_pinl_47495__emal_43346__ivesplit_42437__sz; SAC_i++)
              {

                SAC_l *= ( SACp_pinl_47495__emal_43346__ivesplit_42437[SAC_i]);
              }
              SACp_pinl_47494__emal_43345__ivesli_42472 = SAC_l;
            }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47474__icc_3867__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_47474__icc_3867__sz * sizeof (*SACp_pinl_47474__icc_3867)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47474__icc_3867, ((((SAC_HM_header_t *)SACp_pinl_47474__icc_3867) - 1)->data1.arena)); } else { if (SACp_pinl_47474__icc_3867__sz * sizeof (*SACp_pinl_47474__icc_3867) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47474__icc_3867) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47474__icc_3867, ((((SAC_HM_header_t *)SACp_pinl_47474__icc_3867) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47474__icc_3867, ((((SAC_HM_header_t *)SACp_pinl_47474__icc_3867) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47474__icc_3867__sz * sizeof (*SACp_pinl_47474__icc_3867))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47474__icc_3867, ((((SAC_HM_header_t *)SACp_pinl_47474__icc_3867) - 1)->data1.arena)); } else { if (((((SACp_pinl_47474__icc_3867__sz * sizeof (*SACp_pinl_47474__icc_3867))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47474__icc_3867) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47474__icc_3867, ((((SAC_HM_header_t *)SACp_pinl_47474__icc_3867) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47474__icc_3867, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47474__icc_3867); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47474__icc_3867); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47474__icc_3867, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47474__icc_3867); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47474__icc_3867); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47474__icc_3867__desc) & (-1 ^ (3))))); } } } } else { } }
            { { free (SACp_pinl_47495__emal_43346__ivesplit_42437); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47495__emal_43346__ivesplit_42437__desc) & (-1 ^ (3))))); } } }



           
            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "1st argument of _idx_sel_ is not a scalar!"); };
            { SACp_pinl_47493__emal_43344__icc_3869 = ( SACp_pinl_47475__icc_3868[SACp_pinl_47494__emal_43345__ivesli_42472]); }

            { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47475__icc_3868__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_47475__icc_3868); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47475__icc_3868__desc) & (-1 ^ (3))))); } } } } else { } }
            { ; ; }
            if (!SACp_pinl_47496__emal_43347__icc_3866_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }
            { ; ; }
            { ; ;



            if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
            ;

            }
            ; ; { SACp_pinl_47492__emal_43343__cwc_1734 = (SACp_pinl_47493__emal_43344__icc_3869) == (3); };
            { ; ; }
            ; ; { SACp_pinl_47492__emal_43343__cwc_1734 = (SACp_pinl_47492__emal_43343__cwc_1734) & (SACp_pinl_47498__emal_43349__cwc_1729); };
            { ; ; }
            if (SACp_pinl_47492__emal_43343__cwc_1734)
            {
              { ; ; }



              SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_cwc_1700, &SACp_cwc_1700__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




              SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

            }
            else
            {
              { ; ; }



              SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_cwc_1700, &SACp_cwc_1700__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




              SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
              SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

            }
          }
          else
          {
            { ; ; }



            SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_cwc_1700, &SACp_cwc_1700__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

          }
        }
      }
      else
      {
        { ; ; }
        { { SACp_pinl_47428__emal_43323__cwc_1702 = SACl_b__dim; }; }
        ; ; { SACp_pinl_47427__emal_43322__cwc_1718 = (SACp_pinl_47428__emal_43323__cwc_1702) == (2); };
        { ; ; }
        if (SACp_pinl_47427__emal_43322__cwc_1718)
        {
          { ; ; }
          { { if (!((1 == SACp_pinl_47538__emal_43337__cwc_1704__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47538__emal_43337__cwc_1704"); }; { if ((((6 + (SACp_pinl_47538__emal_43337__cwc_1704__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47538__emal_43337__cwc_1704__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47538__emal_43337__cwc_1704__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47538__emal_43337__cwc_1704__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47538__emal_43337__cwc_1704__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47538__emal_43337__cwc_1704__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47538__emal_43337__cwc_1704__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47538__emal_43337__cwc_1704__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47538__emal_43337__cwc_1704__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47538__emal_43337__cwc_1704__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47538__emal_43337__cwc_1704__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47538__emal_43337__cwc_1704__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47538__emal_43337__cwc_1704__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47538__emal_43337__cwc_1704__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47538__emal_43337__cwc_1704__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47538__emal_43337__cwc_1704__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47538__emal_43337__cwc_1704__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47538__emal_43337__cwc_1704__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47538__emal_43337__cwc_1704__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47538__emal_43337__cwc_1704__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_47538__emal_43337__cwc_1704__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          {

            int SAC_size = 1;
            SAC_size *=
            SACp_pinl_47538__emal_43337__cwc_1704__shp0 =
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47538__emal_43337__cwc_1704__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47538__emal_43337__cwc_1704__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47538__emal_43337__cwc_1704__sz = SAC_size;
            if (!((SACp_pinl_47538__emal_43337__cwc_1704__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
          }

          { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 9657 "/home/rubenhensen/sac/a.out.c" 3 4
         ((void) sizeof ((
# 9657 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9657 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ? 1 : 0), __extension__ ({ if (
# 9657 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9657 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ; else __assert_fail (
# 9657 "/home/rubenhensen/sac/a.out.c"
         "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 9657 "/home/rubenhensen/sac/a.out.c" 3 4
         , "/home/rubenhensen/sac/a.out.c", 9657, __extension__ __PRETTY_FUNCTION__); }))
# 9657 "/home/rubenhensen/sac/a.out.c"
         ; SACp_pinl_47538__emal_43337__cwc_1704 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47538__emal_43337__cwc_1704__sz * sizeof (*SACp_pinl_47538__emal_43337__cwc_1704)); break; case SAC_HM_multi_threaded: SACp_pinl_47538__emal_43337__cwc_1704 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47538__emal_43337__cwc_1704__sz * sizeof (*SACp_pinl_47538__emal_43337__cwc_1704), 0); break; case SAC_HM_any_threaded: SACp_pinl_47538__emal_43337__cwc_1704 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47538__emal_43337__cwc_1704__sz * sizeof (*SACp_pinl_47538__emal_43337__cwc_1704), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47538__emal_43337__cwc_1704__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47538__emal_43337__cwc_1704__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47538__emal_43337__cwc_1704__desc) & (-1 ^ (3))))[1]) = 0; } }



         
          for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
            { SACp_pinl_47538__emal_43337__cwc_1704[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
          }

          { { if (!((1 == SACp_pinl_47537__emal_43336__cwc_1707__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47537__emal_43336__cwc_1707"); }; { { if ((((SACp_pinl_47537__emal_43336__cwc_1707__sz * sizeof (*SACp_pinl_47537__emal_43336__cwc_1707)) + ((6 + (SACp_pinl_47537__emal_43336__cwc_1707__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47537__emal_43336__cwc_1707__sz * sizeof (*SACp_pinl_47537__emal_43336__cwc_1707)) + ((6 + (SACp_pinl_47537__emal_43336__cwc_1707__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47537__emal_43336__cwc_1707__sz * sizeof (*SACp_pinl_47537__emal_43336__cwc_1707)) + ((6 + (SACp_pinl_47537__emal_43336__cwc_1707__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47537__emal_43336__cwc_1707 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47537__emal_43336__cwc_1707 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47537__emal_43336__cwc_1707__sz * sizeof (*SACp_pinl_47537__emal_43336__cwc_1707)) + ((6 + (SACp_pinl_47537__emal_43336__cwc_1707__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47537__emal_43336__cwc_1707 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47537__emal_43336__cwc_1707 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47537__emal_43336__cwc_1707__sz * sizeof (*SACp_pinl_47537__emal_43336__cwc_1707)) + ((6 + (SACp_pinl_47537__emal_43336__cwc_1707__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47537__emal_43336__cwc_1707__sz * sizeof (*SACp_pinl_47537__emal_43336__cwc_1707)) + ((6 + (SACp_pinl_47537__emal_43336__cwc_1707__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47537__emal_43336__cwc_1707__sz * sizeof (*SACp_pinl_47537__emal_43336__cwc_1707)) + ((6 + (SACp_pinl_47537__emal_43336__cwc_1707__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47537__emal_43336__cwc_1707__sz * sizeof (*SACp_pinl_47537__emal_43336__cwc_1707)) + ((6 + (SACp_pinl_47537__emal_43336__cwc_1707__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47537__emal_43336__cwc_1707__sz * sizeof (*SACp_pinl_47537__emal_43336__cwc_1707)) + ((6 + (SACp_pinl_47537__emal_43336__cwc_1707__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47537__emal_43336__cwc_1707 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47537__emal_43336__cwc_1707 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47537__emal_43336__cwc_1707 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47537__emal_43336__cwc_1707 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47537__emal_43336__cwc_1707__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47537__emal_43336__cwc_1707, SACp_pinl_47537__emal_43336__cwc_1707__sz * sizeof (*SACp_pinl_47537__emal_43336__cwc_1707), ((6 + (SACp_pinl_47537__emal_43336__cwc_1707__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47537__emal_43336__cwc_1707__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47537__emal_43336__cwc_1707__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47537__emal_43336__cwc_1707__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_47537__emal_43336__cwc_1707__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_47537__emal_43336__cwc_1707__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          ;

          }



          { SACp_pinl_47537__emal_43336__cwc_1707[0] = 0; }




          if ((SACp_pinl_47537__emal_43336__cwc_1707__dim != 1) && (SACp_pinl_47537__emal_43336__cwc_1707__shp0 != SACp_pinl_47538__emal_43337__cwc_1704__dim)) {
            SACp_pinl_47536__emal_43335__icc_3878_pred = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47537__emal_43336__cwc_1707""' with shape %s ""And `" "SACp_pinl_47538__emal_43337__cwc_1704""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47537__emal_43336__cwc_1707__desc), SAC_PrintShape (SACp_pinl_47538__emal_43337__cwc_1704__desc));
          }
          else {
            int SAC_all = 1; if (0 || (( SACp_pinl_47537__emal_43336__cwc_1707[0]) >= SACp_pinl_47538__emal_43337__cwc_1704__shp0))
            {

              SAC_all = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47537__emal_43336__cwc_1707""' with shape %s ""And `" "SACp_pinl_47538__emal_43337__cwc_1704""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47537__emal_43336__cwc_1707__desc), SAC_PrintShape (SACp_pinl_47538__emal_43337__cwc_1704__desc));
            }
            SACp_pinl_47536__emal_43335__icc_3878_pred = SAC_all;
          }




          if (!((SACp_pinl_47518__idc_3890__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_47518__idc_3890__shp0 == SACp_pinl_47537__emal_43336__cwc_1707__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          SACp_pinl_47518__idc_3890__desc = SACp_pinl_47537__emal_43336__cwc_1707__desc;
          ;
          ;
          { SACp_pinl_47518__idc_3890 = SACp_pinl_47537__emal_43336__cwc_1707; }

          if (!SACp_pinl_47536__emal_43335__icc_3878_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }



          SACp_pinl_47506__icc_3880__desc = SACp_pinl_47538__emal_43337__cwc_1704__desc;
          SACp_pinl_47506__icc_3880__sz = SACp_pinl_47538__emal_43337__cwc_1704__sz;
          SACp_pinl_47506__icc_3880__dim = SACp_pinl_47538__emal_43337__cwc_1704__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47506__icc_3880__desc) & (-1 ^ (3))))[3]) = SACp_pinl_47538__emal_43337__cwc_1704__dim;
          { SACp_pinl_47506__icc_3880 = SACp_pinl_47538__emal_43337__cwc_1704; }




          if (!((SACp_pinl_47505__icc_3879__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_47505__icc_3879__shp0 == SACp_pinl_47518__idc_3890__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          SACp_pinl_47505__icc_3879__desc = SACp_pinl_47518__idc_3890__desc;
          ;
          ;
          { SACp_pinl_47505__icc_3879 = SACp_pinl_47518__idc_3890; }

          { { if (!((1 == SACp_pinl_47535__emal_43334__ivesplit_42431__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47535__emal_43334__ivesplit_42431"); }; { if ((((6 + (SACp_pinl_47535__emal_43334__ivesplit_42431__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47535__emal_43334__ivesplit_42431__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47535__emal_43334__ivesplit_42431__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47535__emal_43334__ivesplit_42431__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47535__emal_43334__ivesplit_42431__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47535__emal_43334__ivesplit_42431__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47535__emal_43334__ivesplit_42431__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47535__emal_43334__ivesplit_42431__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47535__emal_43334__ivesplit_42431__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47535__emal_43334__ivesplit_42431__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47535__emal_43334__ivesplit_42431__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47535__emal_43334__ivesplit_42431__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47535__emal_43334__ivesplit_42431__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47535__emal_43334__ivesplit_42431__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47535__emal_43334__ivesplit_42431__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47535__emal_43334__ivesplit_42431__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47535__emal_43334__ivesplit_42431__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47535__emal_43334__ivesplit_42431__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47535__emal_43334__ivesplit_42431__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47535__emal_43334__ivesplit_42431__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_47535__emal_43334__ivesplit_42431__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          {

            int SAC_size = 1;
            SAC_size *=
            SACp_pinl_47535__emal_43334__ivesplit_42431__shp0 =
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47535__emal_43334__ivesplit_42431__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47506__icc_3880__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47535__emal_43334__ivesplit_42431__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47535__emal_43334__ivesplit_42431__sz = SAC_size;
            if (!((SACp_pinl_47535__emal_43334__ivesplit_42431__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
          }

          { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 9742 "/home/rubenhensen/sac/a.out.c" 3 4
         ((void) sizeof ((
# 9742 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9742 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ? 1 : 0), __extension__ ({ if (
# 9742 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9742 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ; else __assert_fail (
# 9742 "/home/rubenhensen/sac/a.out.c"
         "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 9742 "/home/rubenhensen/sac/a.out.c" 3 4
         , "/home/rubenhensen/sac/a.out.c", 9742, __extension__ __PRETTY_FUNCTION__); }))
# 9742 "/home/rubenhensen/sac/a.out.c"
         ; SACp_pinl_47535__emal_43334__ivesplit_42431 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47535__emal_43334__ivesplit_42431__sz * sizeof (*SACp_pinl_47535__emal_43334__ivesplit_42431)); break; case SAC_HM_multi_threaded: SACp_pinl_47535__emal_43334__ivesplit_42431 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47535__emal_43334__ivesplit_42431__sz * sizeof (*SACp_pinl_47535__emal_43334__ivesplit_42431), 0); break; case SAC_HM_any_threaded: SACp_pinl_47535__emal_43334__ivesplit_42431 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47535__emal_43334__ivesplit_42431__sz * sizeof (*SACp_pinl_47535__emal_43334__ivesplit_42431), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47535__emal_43334__ivesplit_42431__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47535__emal_43334__ivesplit_42431__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47535__emal_43334__ivesplit_42431__desc) & (-1 ^ (3))))[1]) = 0; } }



         
          for (int SAC_i = 0; SAC_i < SACp_pinl_47506__icc_3880__dim; SAC_i++) {
            { SACp_pinl_47535__emal_43334__ivesplit_42431[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47506__icc_3880__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
          }




          {
            int SAC_i, SAC_l;
            SAC_l = 0;
            SAC_l = ( SACp_pinl_47505__icc_3879[0]);
            for (SAC_i = (1); SAC_i < SACp_pinl_47535__emal_43334__ivesplit_42431__sz; SAC_i++)
            {

              SAC_l *= ( SACp_pinl_47535__emal_43334__ivesplit_42431[SAC_i]);
            }
            SACp_pinl_47534__emal_43333__ivesli_42471 = SAC_l;
          }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47505__icc_3879__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_47505__icc_3879__sz * sizeof (*SACp_pinl_47505__icc_3879)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47505__icc_3879, ((((SAC_HM_header_t *)SACp_pinl_47505__icc_3879) - 1)->data1.arena)); } else { if (SACp_pinl_47505__icc_3879__sz * sizeof (*SACp_pinl_47505__icc_3879) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47505__icc_3879) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47505__icc_3879, ((((SAC_HM_header_t *)SACp_pinl_47505__icc_3879) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47505__icc_3879, ((((SAC_HM_header_t *)SACp_pinl_47505__icc_3879) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47505__icc_3879__sz * sizeof (*SACp_pinl_47505__icc_3879))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47505__icc_3879, ((((SAC_HM_header_t *)SACp_pinl_47505__icc_3879) - 1)->data1.arena)); } else { if (((((SACp_pinl_47505__icc_3879__sz * sizeof (*SACp_pinl_47505__icc_3879))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47505__icc_3879) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47505__icc_3879, ((((SAC_HM_header_t *)SACp_pinl_47505__icc_3879) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47505__icc_3879, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47505__icc_3879); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47505__icc_3879); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47505__icc_3879, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47505__icc_3879); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47505__icc_3879); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47505__icc_3879__desc) & (-1 ^ (3))))); } } } } else { } }
          { { free (SACp_pinl_47535__emal_43334__ivesplit_42431); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47535__emal_43334__ivesplit_42431__desc) & (-1 ^ (3))))); } } }



         
          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "1st argument of _idx_sel_ is not a scalar!"); };
          { SACp_pinl_47533__emal_43332__icc_3881 = ( SACp_pinl_47506__icc_3880[SACp_pinl_47534__emal_43333__ivesli_42471]); }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47506__icc_3880__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_47506__icc_3880); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47506__icc_3880__desc) & (-1 ^ (3))))); } } } } else { } }
          { ; ; }
          if (!SACp_pinl_47536__emal_43335__icc_3878_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }
          { ; ; }
          ; ; { SACp_pinl_47532__emal_43331__cwc_1710 = (SACp_pinl_47533__emal_43332__icc_3881) == (2); };
          { ; ; }
          { { if (!((1 == SACp_pinl_47531__emal_43330__cwc_1712__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47531__emal_43330__cwc_1712"); }; { { if ((((SACp_pinl_47531__emal_43330__cwc_1712__sz * sizeof (*SACp_pinl_47531__emal_43330__cwc_1712)) + ((6 + (SACp_pinl_47531__emal_43330__cwc_1712__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47531__emal_43330__cwc_1712__sz * sizeof (*SACp_pinl_47531__emal_43330__cwc_1712)) + ((6 + (SACp_pinl_47531__emal_43330__cwc_1712__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47531__emal_43330__cwc_1712__sz * sizeof (*SACp_pinl_47531__emal_43330__cwc_1712)) + ((6 + (SACp_pinl_47531__emal_43330__cwc_1712__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47531__emal_43330__cwc_1712 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47531__emal_43330__cwc_1712 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47531__emal_43330__cwc_1712__sz * sizeof (*SACp_pinl_47531__emal_43330__cwc_1712)) + ((6 + (SACp_pinl_47531__emal_43330__cwc_1712__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47531__emal_43330__cwc_1712 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47531__emal_43330__cwc_1712 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47531__emal_43330__cwc_1712__sz * sizeof (*SACp_pinl_47531__emal_43330__cwc_1712)) + ((6 + (SACp_pinl_47531__emal_43330__cwc_1712__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47531__emal_43330__cwc_1712__sz * sizeof (*SACp_pinl_47531__emal_43330__cwc_1712)) + ((6 + (SACp_pinl_47531__emal_43330__cwc_1712__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47531__emal_43330__cwc_1712__sz * sizeof (*SACp_pinl_47531__emal_43330__cwc_1712)) + ((6 + (SACp_pinl_47531__emal_43330__cwc_1712__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47531__emal_43330__cwc_1712__sz * sizeof (*SACp_pinl_47531__emal_43330__cwc_1712)) + ((6 + (SACp_pinl_47531__emal_43330__cwc_1712__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47531__emal_43330__cwc_1712__sz * sizeof (*SACp_pinl_47531__emal_43330__cwc_1712)) + ((6 + (SACp_pinl_47531__emal_43330__cwc_1712__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47531__emal_43330__cwc_1712 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47531__emal_43330__cwc_1712 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47531__emal_43330__cwc_1712 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47531__emal_43330__cwc_1712 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47531__emal_43330__cwc_1712__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47531__emal_43330__cwc_1712, SACp_pinl_47531__emal_43330__cwc_1712__sz * sizeof (*SACp_pinl_47531__emal_43330__cwc_1712), ((6 + (SACp_pinl_47531__emal_43330__cwc_1712__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47531__emal_43330__cwc_1712__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47531__emal_43330__cwc_1712__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47531__emal_43330__cwc_1712__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_47531__emal_43330__cwc_1712__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_47531__emal_43330__cwc_1712__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          ;

          }



          { SACp_pinl_47531__emal_43330__cwc_1712[0] = 1; }




          if ((SACp_pinl_47531__emal_43330__cwc_1712__dim != 1) && (SACp_pinl_47531__emal_43330__cwc_1712__shp0 != SACp_pinl_47538__emal_43337__cwc_1704__dim)) {
            SACp_pinl_47530__emal_43329__icc_3884_pred = 0;
            SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47531__emal_43330__cwc_1712""' with shape %s ""And `" "SACp_pinl_47538__emal_43337__cwc_1704""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47531__emal_43330__cwc_1712__desc), SAC_PrintShape (SACp_pinl_47538__emal_43337__cwc_1704__desc));
          }
          else {
            int SAC_all = 1; if (0 || (( SACp_pinl_47531__emal_43330__cwc_1712[0]) >= SACp_pinl_47538__emal_43337__cwc_1704__shp0))
            {

              SAC_all = 0;
              SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Arrays `" "SACp_pinl_47531__emal_43330__cwc_1712""' with shape %s ""And `" "SACp_pinl_47538__emal_43337__cwc_1704""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_pinl_47531__emal_43330__cwc_1712__desc), SAC_PrintShape (SACp_pinl_47538__emal_43337__cwc_1704__desc));
            }
            SACp_pinl_47530__emal_43329__icc_3884_pred = SAC_all;
          }




          if (!((SACp_pinl_47520__idc_3893__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_47520__idc_3893__shp0 == SACp_pinl_47531__emal_43330__cwc_1712__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          SACp_pinl_47520__idc_3893__desc = SACp_pinl_47531__emal_43330__cwc_1712__desc;
          ;
          ;
          { SACp_pinl_47520__idc_3893 = SACp_pinl_47531__emal_43330__cwc_1712; }

          if (!SACp_pinl_47530__emal_43329__icc_3884_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }



          SACp_pinl_47509__icc_3886__desc = SACp_pinl_47538__emal_43337__cwc_1704__desc;
          SACp_pinl_47509__icc_3886__sz = SACp_pinl_47538__emal_43337__cwc_1704__sz;
          SACp_pinl_47509__icc_3886__dim = SACp_pinl_47538__emal_43337__cwc_1704__dim;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47509__icc_3886__desc) & (-1 ^ (3))))[3]) = SACp_pinl_47538__emal_43337__cwc_1704__dim;
          { SACp_pinl_47509__icc_3886 = SACp_pinl_47538__emal_43337__cwc_1704; }




          if (!((SACp_pinl_47508__icc_3885__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          if (!((SACp_pinl_47508__icc_3885__shp0 == SACp_pinl_47520__idc_3893__shp0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          SACp_pinl_47508__icc_3885__desc = SACp_pinl_47520__idc_3893__desc;
          ;
          ;
          { SACp_pinl_47508__icc_3885 = SACp_pinl_47520__idc_3893; }

          { { if (!((1 == SACp_pinl_47529__emal_43328__ivesplit_42433__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47529__emal_43328__ivesplit_42433"); }; { if ((((6 + (SACp_pinl_47529__emal_43328__ivesplit_42433__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47529__emal_43328__ivesplit_42433__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47529__emal_43328__ivesplit_42433__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47529__emal_43328__ivesplit_42433__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47529__emal_43328__ivesplit_42433__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47529__emal_43328__ivesplit_42433__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47529__emal_43328__ivesplit_42433__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47529__emal_43328__ivesplit_42433__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47529__emal_43328__ivesplit_42433__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47529__emal_43328__ivesplit_42433__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47529__emal_43328__ivesplit_42433__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47529__emal_43328__ivesplit_42433__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47529__emal_43328__ivesplit_42433__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47529__emal_43328__ivesplit_42433__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47529__emal_43328__ivesplit_42433__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47529__emal_43328__ivesplit_42433__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47529__emal_43328__ivesplit_42433__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47529__emal_43328__ivesplit_42433__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47529__emal_43328__ivesplit_42433__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47529__emal_43328__ivesplit_42433__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_pinl_47529__emal_43328__ivesplit_42433__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          {

            int SAC_size = 1;
            SAC_size *=
            SACp_pinl_47529__emal_43328__ivesplit_42433__shp0 =
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47529__emal_43328__ivesplit_42433__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47509__icc_3886__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47529__emal_43328__ivesplit_42433__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47529__emal_43328__ivesplit_42433__sz = SAC_size;
            if (!((SACp_pinl_47529__emal_43328__ivesplit_42433__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
          }

          { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 9857 "/home/rubenhensen/sac/a.out.c" 3 4
         ((void) sizeof ((
# 9857 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9857 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ? 1 : 0), __extension__ ({ if (
# 9857 "/home/rubenhensen/sac/a.out.c"
         SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9857 "/home/rubenhensen/sac/a.out.c" 3 4
         ) ; else __assert_fail (
# 9857 "/home/rubenhensen/sac/a.out.c"
         "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 9857 "/home/rubenhensen/sac/a.out.c" 3 4
         , "/home/rubenhensen/sac/a.out.c", 9857, __extension__ __PRETTY_FUNCTION__); }))
# 9857 "/home/rubenhensen/sac/a.out.c"
         ; SACp_pinl_47529__emal_43328__ivesplit_42433 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47529__emal_43328__ivesplit_42433__sz * sizeof (*SACp_pinl_47529__emal_43328__ivesplit_42433)); break; case SAC_HM_multi_threaded: SACp_pinl_47529__emal_43328__ivesplit_42433 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47529__emal_43328__ivesplit_42433__sz * sizeof (*SACp_pinl_47529__emal_43328__ivesplit_42433), 0); break; case SAC_HM_any_threaded: SACp_pinl_47529__emal_43328__ivesplit_42433 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47529__emal_43328__ivesplit_42433__sz * sizeof (*SACp_pinl_47529__emal_43328__ivesplit_42433), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47529__emal_43328__ivesplit_42433__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47529__emal_43328__ivesplit_42433__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47529__emal_43328__ivesplit_42433__desc) & (-1 ^ (3))))[1]) = 0; } }



         
          for (int SAC_i = 0; SAC_i < SACp_pinl_47509__icc_3886__dim; SAC_i++) {
            { SACp_pinl_47529__emal_43328__ivesplit_42433[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47509__icc_3886__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
          }




          {
            int SAC_i, SAC_l;
            SAC_l = 0;
            SAC_l = ( SACp_pinl_47508__icc_3885[0]);
            for (SAC_i = (1); SAC_i < SACp_pinl_47529__emal_43328__ivesplit_42433__sz; SAC_i++)
            {

              SAC_l *= ( SACp_pinl_47529__emal_43328__ivesplit_42433[SAC_i]);
            }
            SACp_pinl_47528__emal_43327__ivesli_42470 = SAC_l;
          }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47508__icc_3885__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACp_pinl_47508__icc_3885__sz * sizeof (*SACp_pinl_47508__icc_3885)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47508__icc_3885, ((((SAC_HM_header_t *)SACp_pinl_47508__icc_3885) - 1)->data1.arena)); } else { if (SACp_pinl_47508__icc_3885__sz * sizeof (*SACp_pinl_47508__icc_3885) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47508__icc_3885) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47508__icc_3885, ((((SAC_HM_header_t *)SACp_pinl_47508__icc_3885) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47508__icc_3885, ((((SAC_HM_header_t *)SACp_pinl_47508__icc_3885) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47508__icc_3885__sz * sizeof (*SACp_pinl_47508__icc_3885))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47508__icc_3885, ((((SAC_HM_header_t *)SACp_pinl_47508__icc_3885) - 1)->data1.arena)); } else { if (((((SACp_pinl_47508__icc_3885__sz * sizeof (*SACp_pinl_47508__icc_3885))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47508__icc_3885) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47508__icc_3885, ((((SAC_HM_header_t *)SACp_pinl_47508__icc_3885) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47508__icc_3885, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47508__icc_3885); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47508__icc_3885); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47508__icc_3885, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47508__icc_3885); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47508__icc_3885); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47508__icc_3885__desc) & (-1 ^ (3))))); } } } } else { } }
          { { free (SACp_pinl_47529__emal_43328__ivesplit_42433); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47529__emal_43328__ivesplit_42433__desc) & (-1 ^ (3))))); } } }



         
          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "1st argument of _idx_sel_ is not a scalar!"); };
          { SACp_pinl_47527__emal_43326__icc_3887 = ( SACp_pinl_47509__icc_3886[SACp_pinl_47528__emal_43327__ivesli_42470]); }

          { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47509__icc_3886__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_47509__icc_3886); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47509__icc_3886__desc) & (-1 ^ (3))))); } } } } else { } }
          { ; ; }
          if (!SACp_pinl_47530__emal_43329__icc_3884_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Primitive function _sel_VxA_ guard failed"); }
          { ; ; }
          { ; ;



          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
          ;

          }
          ; ; { SACp_pinl_47526__emal_43325__cwc_1715 = (SACp_pinl_47527__emal_43326__icc_3887) == (3); };
          { ; ; }
          ; ; { SACp_pinl_47526__emal_43325__cwc_1715 = (SACp_pinl_47526__emal_43325__cwc_1715) & (SACp_pinl_47532__emal_43331__cwc_1710); };
          { ; ; }
          if (SACp_pinl_47526__emal_43325__cwc_1715)
          {
            { ; ; }



            SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_cwc_1700, &SACp_cwc_1700__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

          }
          else
          {
            { ; ; }



            SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_cwc_1700, &SACp_cwc_1700__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




            SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

          }
        }
        else
        {
          { ; ; }



          SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_cwc_1700, &SACp_cwc_1700__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




          SACp_cwc_1700__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_1700__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1700__desc) & (-1 ^ (3))))[3]);

        }
      }
    }



    { *SAC_arg_1__p = SACp_cwc_1700; *SAC_arg_1__desc__p = SACp_cwc_1700__desc; }
    return;
   
  }



}
}
# 9975 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN__main (int * SAC_arg_1__p) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48525_SACp_emal_43389__pinl_10005_rshp;
    SAC_array_descriptor_t _tcp_48525_SACp_emal_43389__pinl_10005_rshp__desc = 
# 9985 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9985 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48525_SACp_emal_43389__pinl_10005_rshp__shp0;
    int _tcp_48525_SACp_emal_43389__pinl_10005_rshp__sz;
    const int _tcp_48525_SACp_emal_43389__pinl_10005_rshp__dim = 1;




    int * _tcp_48524_SACp_emal_43390__pinl_10003_lshp;
    SAC_array_descriptor_t _tcp_48524_SACp_emal_43390__pinl_10003_lshp__desc = 
# 9994 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9994 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48524_SACp_emal_43390__pinl_10003_lshp__shp0;
    int _tcp_48524_SACp_emal_43390__pinl_10003_lshp__sz;
    const int _tcp_48524_SACp_emal_43390__pinl_10003_lshp__dim = 1;




    int * _tcp_48523_SACp_emal_43389__pinl_10005_rshp;
    SAC_array_descriptor_t _tcp_48523_SACp_emal_43389__pinl_10005_rshp__desc = 
# 10003 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10003 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48523_SACp_emal_43389__pinl_10005_rshp__shp0;
    int _tcp_48523_SACp_emal_43389__pinl_10005_rshp__sz;
    const int _tcp_48523_SACp_emal_43389__pinl_10005_rshp__dim = 1;




    int * _tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld;
    SAC_array_descriptor_t _tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc = 
# 10012 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10012 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld__shp0;
    int _tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz;
    const int _tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim = 1;




    int * _tcp_48521_SACp_emal_43389__pinl_10005_rshp;
    SAC_array_descriptor_t _tcp_48521_SACp_emal_43389__pinl_10005_rshp__desc = 
# 10021 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10021 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48521_SACp_emal_43389__pinl_10005_rshp__shp0;
    int _tcp_48521_SACp_emal_43389__pinl_10005_rshp__sz;
    const int _tcp_48521_SACp_emal_43389__pinl_10005_rshp__dim = 1;




    int * _tcp_48520_SACp_emal_43386__pinl_10081_lshp;
    SAC_array_descriptor_t _tcp_48520_SACp_emal_43386__pinl_10081_lshp__desc = 
# 10030 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10030 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48520_SACp_emal_43386__pinl_10081_lshp__shp0;
    int _tcp_48520_SACp_emal_43386__pinl_10081_lshp__sz;
    const int _tcp_48520_SACp_emal_43386__pinl_10081_lshp__dim = 1;




    int * _tcp_48519_SACp_emal_43389__pinl_10005_rshp;
    SAC_array_descriptor_t _tcp_48519_SACp_emal_43389__pinl_10005_rshp__desc = 
# 10039 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10039 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48519_SACp_emal_43389__pinl_10005_rshp__shp0;
    int _tcp_48519_SACp_emal_43389__pinl_10005_rshp__sz;
    const int _tcp_48519_SACp_emal_43389__pinl_10005_rshp__dim = 1;




    int * _tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld;
    SAC_array_descriptor_t _tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc = 
# 10048 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10048 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld__shp0;
    int _tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz;
    const int _tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim = 1;




    
# 10056 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10056 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47554__emal_43403__hce_50__SSA0_1;
   
   




    
# 10063 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10063 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47553__emal_43402__hce_50;
   
   




    
# 10070 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10070 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47550__emal_43405__hce_50__SSA0_1;
   
   




    
# 10077 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10077 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47549__emal_43404__hce_50;
   
   




    
# 10084 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10084 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47546__emal_43407__hce_43__SSA0_1;
   
   




    
# 10091 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10091 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47545__emal_43406__hce_43;
   
   




    
# 10098 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10098 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47542__emal_43409__hce_43__SSA0_1;
   
   




    
# 10105 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10105 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47541__emal_43408__hce_43;
   
   

    const int SACp_emal_43401__isaa_30949__rso_407_TheWorld = 0;



    int * SACp_emal_43400__isaa_30950__rso_407_TheWorld;
    SAC_array_descriptor_t SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc = 
# 10114 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10114 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43400__isaa_30950__rso_407_TheWorld__shp0 = 0;
    const int SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz = 0;
    const int SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim = 1;

    const int SACp_emal_43399__flat_55 = 1;



    
# 10123 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10123 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43398__flat_51;
   
   




    int * SACp_emal_43397__flat_60;
    SAC_array_descriptor_t SACp_emal_43397__flat_60__desc = 
# 10131 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10131 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43397__flat_60__shp0 = 2;
    const int SACp_emal_43397__flat_60__sz = 2;
    const int SACp_emal_43397__flat_60__dim = 1;




    
# 10139 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10139 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43396__flat_70;
   
   




    int * SACp_emal_43395__flat_81;
    SAC_array_descriptor_t SACp_emal_43395__flat_81__desc = 
# 10147 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10147 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43395__flat_81__shp0 = 2;
    const int SACp_emal_43395__flat_81__sz = 2;
    const int SACp_emal_43395__flat_81__dim = 1;




    int * SACp_emal_43394__flat_77;
    SAC_array_descriptor_t SACp_emal_43394__flat_77__desc = 
# 10156 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10156 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43394__flat_77__shp0 = 3;
    const int SACp_emal_43394__flat_77__sz = 3;
    const int SACp_emal_43394__flat_77__dim = 1;




    int * SACp_emal_43393__flat_85;
    SAC_array_descriptor_t SACp_emal_43393__flat_85__desc = 
# 10165 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10165 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43393__flat_85__shp0 = 3;
    const int SACp_emal_43393__flat_85__sz = 3;
    const int SACp_emal_43393__flat_85__dim = 1;




    int * SACp_emal_43392__flat_96;
    SAC_array_descriptor_t SACp_emal_43392__flat_96__desc = 
# 10174 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10174 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43392__flat_96__shp0 = 2;
    const int SACp_emal_43392__flat_96__shp1 = 3;
    const int SACp_emal_43392__flat_96__sz = 6;
    const int SACp_emal_43392__flat_96__dim = 2;




    int * SACp_emal_43391__flat_93;
    SAC_array_descriptor_t SACp_emal_43391__flat_93__desc = 
# 10184 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10184 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43391__flat_93__shp0 = 2;
    const int SACp_emal_43391__flat_93__sz = 2;
    const int SACp_emal_43391__flat_93__dim = 1;




    int * SACp_emal_43390__pinl_10003_lshp;
    SAC_array_descriptor_t SACp_emal_43390__pinl_10003_lshp__desc = 
# 10193 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10193 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43390__pinl_10003_lshp__shp0 = 1;
    const int SACp_emal_43390__pinl_10003_lshp__sz = 1;
    const int SACp_emal_43390__pinl_10003_lshp__dim = 1;




    int * SACp_emal_43389__pinl_10005_rshp;
    SAC_array_descriptor_t SACp_emal_43389__pinl_10005_rshp__desc = 
# 10202 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10202 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43389__pinl_10005_rshp__shp0 = 2;
    const int SACp_emal_43389__pinl_10005_rshp__sz = 2;
    const int SACp_emal_43389__pinl_10005_rshp__dim = 1;




    int * SACp_emal_43388__pinl_10048_a__SSA0_1;
    SAC_array_descriptor_t SACp_emal_43388__pinl_10048_a__SSA0_1__desc = 
# 10211 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10211 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43388__pinl_10048_a__SSA0_1__sz = 0;
    int SACp_emal_43388__pinl_10048_a__SSA0_1__dim = 0;




    int * SACp_emal_43387__flat_130;
    SAC_array_descriptor_t SACp_emal_43387__flat_130__desc = 
# 10219 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10219 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43387__flat_130__shp0 = 3;
    const int SACp_emal_43387__flat_130__sz = 3;
    const int SACp_emal_43387__flat_130__dim = 1;




    int * SACp_emal_43386__pinl_10081_lshp;
    SAC_array_descriptor_t SACp_emal_43386__pinl_10081_lshp__desc = 
# 10228 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10228 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43386__pinl_10081_lshp__shp0 = 1;
    const int SACp_emal_43386__pinl_10081_lshp__sz = 1;
    const int SACp_emal_43386__pinl_10081_lshp__dim = 1;




    int * SACp_emal_43385__pinl_10100_a__SSA0_1;
    SAC_array_descriptor_t SACp_emal_43385__pinl_10100_a__SSA0_1__desc = 
# 10237 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10237 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43385__pinl_10100_a__SSA0_1__sz = 0;
    int SACp_emal_43385__pinl_10100_a__SSA0_1__dim = 0;




    
# 10244 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10244 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10006__hce_43;
   
   




    
# 10251 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10251 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10000__flat_330;
   
   




    int * SACp_pinl_9997_b__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_9997_b__SSA0_1__desc = 
# 10259 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10259 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_9997_b__SSA0_1__sz = 0;
    int SACp_pinl_9997_b__SSA0_1__dim = 0;




    int * SACp_pinl_9996_a__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_9996_a__SSA0_1__desc = 
# 10267 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10267 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_9996_a__SSA0_1__sz = 0;
    int SACp_pinl_9996_a__SSA0_1__dim = 0;




    int * SACp_pinl_9995__rtpf_20_res;
    SAC_array_descriptor_t SACp_pinl_9995__rtpf_20_res__desc = 
# 10275 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10275 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_9995__rtpf_20_res__sz = 0;
    int SACp_pinl_9995__rtpf_20_res__dim = 0;




    int * SACp_pinl_10021__rtpf_20_res;
    SAC_array_descriptor_t SACp_pinl_10021__rtpf_20_res__desc = 
# 10283 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10283 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_10021__rtpf_20_res__sz = 0;
    int SACp_pinl_10021__rtpf_20_res__dim = 0;




    
# 10290 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10290 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10058__hce_43;
   
   




    
# 10297 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10297 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10052__flat_330;
   
   




    int * SACp_pinl_10049_b__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_10049_b__SSA0_1__desc = 
# 10305 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10305 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_10049_b__SSA0_1__sz = 0;
    int SACp_pinl_10049_b__SSA0_1__dim = 0;




    int * SACp_pinl_10047__rtpf_20_res;
    SAC_array_descriptor_t SACp_pinl_10047__rtpf_20_res__desc = 
# 10313 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10313 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_10047__rtpf_20_res__sz = 0;
    int SACp_pinl_10047__rtpf_20_res__dim = 0;




    
# 10320 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10320 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10084__hce_50;
   
   




    
# 10327 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10327 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10078__flat_394;
   
   




    int * SACp_pinl_10075_b__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_10075_b__SSA0_1__desc = 
# 10335 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10335 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_10075_b__SSA0_1__sz = 0;
    int SACp_pinl_10075_b__SSA0_1__dim = 0;




    int * SACp_pinl_10074_a__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_10074_a__SSA0_1__desc = 
# 10343 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10343 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_10074_a__SSA0_1__sz = 0;
    int SACp_pinl_10074_a__SSA0_1__dim = 0;




    int * SACp_pinl_10073__rtpf_33_res;
    SAC_array_descriptor_t SACp_pinl_10073__rtpf_33_res__desc = 
# 10351 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10351 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_10073__rtpf_33_res__sz = 0;
    int SACp_pinl_10073__rtpf_33_res__dim = 0;




    
# 10358 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10358 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10110__hce_50;
   
   




    
# 10365 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10365 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10104__flat_394;
   
   




    int * SACp_pinl_10101_b__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_10101_b__SSA0_1__desc = 
# 10373 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10373 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_10101_b__SSA0_1__sz = 0;
    int SACp_pinl_10101_b__SSA0_1__dim = 0;




    int * SACp_pinl_10099__rtpf_33_res;
    SAC_array_descriptor_t SACp_pinl_10099__rtpf_33_res__desc = 
# 10381 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 10381 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_10099__rtpf_33_res__sz = 0;
    int SACp_pinl_10099__rtpf_33_res__dim = 0;




    
# 10388 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10388 "/home/rubenhensen/sac/a.out.c"
   SACp_flat_84;
   
   




    
# 10395 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 10395 "/home/rubenhensen/sac/a.out.c"
   SACp_flat_76;
   
   


   
    { { if (!((1 == SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43400__isaa_30950__rso_407_TheWorld"); }; { { if ((((SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz * sizeof (*SACp_emal_43400__isaa_30950__rso_407_TheWorld)) + ((6 + (SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz * sizeof (*SACp_emal_43400__isaa_30950__rso_407_TheWorld)) + ((6 + (SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz * sizeof (*SACp_emal_43400__isaa_30950__rso_407_TheWorld)) + ((6 + (SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43400__isaa_30950__rso_407_TheWorld = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43400__isaa_30950__rso_407_TheWorld = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz * sizeof (*SACp_emal_43400__isaa_30950__rso_407_TheWorld)) + ((6 + (SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43400__isaa_30950__rso_407_TheWorld = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43400__isaa_30950__rso_407_TheWorld = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz * sizeof (*SACp_emal_43400__isaa_30950__rso_407_TheWorld)) + ((6 + (SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz * sizeof (*SACp_emal_43400__isaa_30950__rso_407_TheWorld)) + ((6 + (SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz * sizeof (*SACp_emal_43400__isaa_30950__rso_407_TheWorld)) + ((6 + (SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz * sizeof (*SACp_emal_43400__isaa_30950__rso_407_TheWorld)) + ((6 + (SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz * sizeof (*SACp_emal_43400__isaa_30950__rso_407_TheWorld)) + ((6 + (SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43400__isaa_30950__rso_407_TheWorld = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43400__isaa_30950__rso_407_TheWorld = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43400__isaa_30950__rso_407_TheWorld = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43400__isaa_30950__rso_407_TheWorld = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43400__isaa_30950__rso_407_TheWorld, SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz * sizeof (*SACp_emal_43400__isaa_30950__rso_407_TheWorld), ((6 + (SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 4, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43400__isaa_30950__rso_407_TheWorld__shp0 == 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 4, 1, "Assignment with incompatible types found"); };
    ;

    }







    SACf__MAIN_CL_INIT__init ();

    { { SACp_emal_43398__flat_51 = 
# 10419 "/home/rubenhensen/sac/a.out.c" 3 4
   1
# 10419 "/home/rubenhensen/sac/a.out.c"
   ; }; }



    SACf_ScalarIO__print__bl (SACp_emal_43398__flat_51);

    { { if (!((1 == SACp_emal_43397__flat_60__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43397__flat_60"); }; { { if ((((SACp_emal_43397__flat_60__sz * sizeof (*SACp_emal_43397__flat_60)) + ((6 + (SACp_emal_43397__flat_60__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43397__flat_60__sz * sizeof (*SACp_emal_43397__flat_60)) + ((6 + (SACp_emal_43397__flat_60__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43397__flat_60__sz * sizeof (*SACp_emal_43397__flat_60)) + ((6 + (SACp_emal_43397__flat_60__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43397__flat_60 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43397__flat_60 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43397__flat_60__sz * sizeof (*SACp_emal_43397__flat_60)) + ((6 + (SACp_emal_43397__flat_60__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43397__flat_60 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43397__flat_60 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43397__flat_60__sz * sizeof (*SACp_emal_43397__flat_60)) + ((6 + (SACp_emal_43397__flat_60__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43397__flat_60__sz * sizeof (*SACp_emal_43397__flat_60)) + ((6 + (SACp_emal_43397__flat_60__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43397__flat_60__sz * sizeof (*SACp_emal_43397__flat_60)) + ((6 + (SACp_emal_43397__flat_60__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43397__flat_60__sz * sizeof (*SACp_emal_43397__flat_60)) + ((6 + (SACp_emal_43397__flat_60__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43397__flat_60__sz * sizeof (*SACp_emal_43397__flat_60)) + ((6 + (SACp_emal_43397__flat_60__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43397__flat_60 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43397__flat_60 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43397__flat_60 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43397__flat_60 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43397__flat_60__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43397__flat_60, SACp_emal_43397__flat_60__sz * sizeof (*SACp_emal_43397__flat_60), ((6 + (SACp_emal_43397__flat_60__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43397__flat_60__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43397__flat_60__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43397__flat_60__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43397__flat_60__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 7, 26, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43397__flat_60__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 7, 26, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43397__flat_60[0] = 2; }
    { SACp_emal_43397__flat_60[1] = 4; }




    SACf_ScalarIO__print__bl (SACp_emal_43398__flat_51);




    SACf_ScalarIO__print__bl (SACp_emal_43398__flat_51);

    { { SACp_emal_43396__flat_70 = 
# 10450 "/home/rubenhensen/sac/a.out.c" 3 4
   0
# 10450 "/home/rubenhensen/sac/a.out.c"
   ; }; }



    SACf_ScalarIO__print__bl (SACp_emal_43396__flat_70);

    { { if (!((1 == SACp_emal_43395__flat_81__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43395__flat_81"); }; { { if ((((SACp_emal_43395__flat_81__sz * sizeof (*SACp_emal_43395__flat_81)) + ((6 + (SACp_emal_43395__flat_81__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43395__flat_81__sz * sizeof (*SACp_emal_43395__flat_81)) + ((6 + (SACp_emal_43395__flat_81__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43395__flat_81__sz * sizeof (*SACp_emal_43395__flat_81)) + ((6 + (SACp_emal_43395__flat_81__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43395__flat_81 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43395__flat_81 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43395__flat_81__sz * sizeof (*SACp_emal_43395__flat_81)) + ((6 + (SACp_emal_43395__flat_81__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43395__flat_81 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43395__flat_81 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43395__flat_81__sz * sizeof (*SACp_emal_43395__flat_81)) + ((6 + (SACp_emal_43395__flat_81__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43395__flat_81__sz * sizeof (*SACp_emal_43395__flat_81)) + ((6 + (SACp_emal_43395__flat_81__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43395__flat_81__sz * sizeof (*SACp_emal_43395__flat_81)) + ((6 + (SACp_emal_43395__flat_81__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43395__flat_81__sz * sizeof (*SACp_emal_43395__flat_81)) + ((6 + (SACp_emal_43395__flat_81__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43395__flat_81__sz * sizeof (*SACp_emal_43395__flat_81)) + ((6 + (SACp_emal_43395__flat_81__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43395__flat_81 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43395__flat_81 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43395__flat_81 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43395__flat_81 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43395__flat_81__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43395__flat_81, SACp_emal_43395__flat_81__sz * sizeof (*SACp_emal_43395__flat_81), ((6 + (SACp_emal_43395__flat_81__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43395__flat_81__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43395__flat_81__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43395__flat_81__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43395__flat_81__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 11, 36, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43395__flat_81__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 11, 36, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43395__flat_81[0] = 4; }
    { SACp_emal_43395__flat_81[1] = 8; }

    { { if (!((1 == SACp_emal_43394__flat_77__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43394__flat_77"); }; { { if ((((SACp_emal_43394__flat_77__sz * sizeof (*SACp_emal_43394__flat_77)) + ((6 + (SACp_emal_43394__flat_77__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43394__flat_77__sz * sizeof (*SACp_emal_43394__flat_77)) + ((6 + (SACp_emal_43394__flat_77__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43394__flat_77__sz * sizeof (*SACp_emal_43394__flat_77)) + ((6 + (SACp_emal_43394__flat_77__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43394__flat_77 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43394__flat_77 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43394__flat_77__sz * sizeof (*SACp_emal_43394__flat_77)) + ((6 + (SACp_emal_43394__flat_77__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43394__flat_77 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43394__flat_77 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43394__flat_77__sz * sizeof (*SACp_emal_43394__flat_77)) + ((6 + (SACp_emal_43394__flat_77__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43394__flat_77__sz * sizeof (*SACp_emal_43394__flat_77)) + ((6 + (SACp_emal_43394__flat_77__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43394__flat_77__sz * sizeof (*SACp_emal_43394__flat_77)) + ((6 + (SACp_emal_43394__flat_77__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43394__flat_77__sz * sizeof (*SACp_emal_43394__flat_77)) + ((6 + (SACp_emal_43394__flat_77__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43394__flat_77__sz * sizeof (*SACp_emal_43394__flat_77)) + ((6 + (SACp_emal_43394__flat_77__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43394__flat_77 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43394__flat_77 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43394__flat_77 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43394__flat_77 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43394__flat_77__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43394__flat_77, SACp_emal_43394__flat_77__sz * sizeof (*SACp_emal_43394__flat_77), ((6 + (SACp_emal_43394__flat_77__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43394__flat_77__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43394__flat_77__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43394__flat_77__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43394__flat_77__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 11, 27, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43394__flat_77__shp0 == 3))) { SAC_RuntimeWarningLoc ("./week2.sac", 11, 27, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43394__flat_77[0] = 2; }
    { SACp_emal_43394__flat_77[1] = 4; }
    { SACp_emal_43394__flat_77[2] = 8; }




    SACf__MAIN__commonPostfix__i_3__i_2 (&SACp_flat_76, SACp_emal_43394__flat_77, SACp_emal_43394__flat_77__desc, SACp_emal_43395__flat_81, SACp_emal_43395__flat_81__desc);




    ;




    SACf_ScalarIO__print__bl (SACp_flat_76);

    { { if (!((1 == SACp_emal_43393__flat_85__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43393__flat_85"); }; { { if ((((SACp_emal_43393__flat_85__sz * sizeof (*SACp_emal_43393__flat_85)) + ((6 + (SACp_emal_43393__flat_85__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43393__flat_85__sz * sizeof (*SACp_emal_43393__flat_85)) + ((6 + (SACp_emal_43393__flat_85__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43393__flat_85__sz * sizeof (*SACp_emal_43393__flat_85)) + ((6 + (SACp_emal_43393__flat_85__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43393__flat_85 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43393__flat_85 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43393__flat_85__sz * sizeof (*SACp_emal_43393__flat_85)) + ((6 + (SACp_emal_43393__flat_85__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43393__flat_85 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43393__flat_85 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43393__flat_85__sz * sizeof (*SACp_emal_43393__flat_85)) + ((6 + (SACp_emal_43393__flat_85__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43393__flat_85__sz * sizeof (*SACp_emal_43393__flat_85)) + ((6 + (SACp_emal_43393__flat_85__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43393__flat_85__sz * sizeof (*SACp_emal_43393__flat_85)) + ((6 + (SACp_emal_43393__flat_85__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43393__flat_85__sz * sizeof (*SACp_emal_43393__flat_85)) + ((6 + (SACp_emal_43393__flat_85__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43393__flat_85__sz * sizeof (*SACp_emal_43393__flat_85)) + ((6 + (SACp_emal_43393__flat_85__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43393__flat_85 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43393__flat_85 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43393__flat_85 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43393__flat_85 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43393__flat_85__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43393__flat_85, SACp_emal_43393__flat_85__sz * sizeof (*SACp_emal_43393__flat_85), ((6 + (SACp_emal_43393__flat_85__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43393__flat_85__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43393__flat_85__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43393__flat_85__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43393__flat_85__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 12, 27, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43393__flat_85__shp0 == 3))) { SAC_RuntimeWarningLoc ("./week2.sac", 12, 27, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43393__flat_85[0] = 2; }
    { SACp_emal_43393__flat_85[1] = 4; }
    { SACp_emal_43393__flat_85[2] = 7; }




    SACf__MAIN__commonPostfix__i_3__i_2 (&SACp_flat_84, SACp_emal_43393__flat_85, SACp_emal_43393__flat_85__desc, SACp_emal_43397__flat_60, SACp_emal_43397__flat_60__desc);




    ;




    SACf_ScalarIO__print__bl (SACp_flat_84);

    { { if (!((2 == SACp_emal_43392__flat_96__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43392__flat_96"); }; { { if ((((SACp_emal_43392__flat_96__sz * sizeof (*SACp_emal_43392__flat_96)) + ((6 + (SACp_emal_43392__flat_96__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43392__flat_96__sz * sizeof (*SACp_emal_43392__flat_96)) + ((6 + (SACp_emal_43392__flat_96__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43392__flat_96__sz * sizeof (*SACp_emal_43392__flat_96)) + ((6 + (SACp_emal_43392__flat_96__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43392__flat_96 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43392__flat_96 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43392__flat_96__sz * sizeof (*SACp_emal_43392__flat_96)) + ((6 + (SACp_emal_43392__flat_96__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43392__flat_96 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43392__flat_96 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43392__flat_96__sz * sizeof (*SACp_emal_43392__flat_96)) + ((6 + (SACp_emal_43392__flat_96__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43392__flat_96__sz * sizeof (*SACp_emal_43392__flat_96)) + ((6 + (SACp_emal_43392__flat_96__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43392__flat_96__sz * sizeof (*SACp_emal_43392__flat_96)) + ((6 + (SACp_emal_43392__flat_96__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43392__flat_96__sz * sizeof (*SACp_emal_43392__flat_96)) + ((6 + (SACp_emal_43392__flat_96__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43392__flat_96__sz * sizeof (*SACp_emal_43392__flat_96)) + ((6 + (SACp_emal_43392__flat_96__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43392__flat_96 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43392__flat_96 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43392__flat_96 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43392__flat_96 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43392__flat_96__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43392__flat_96, SACp_emal_43392__flat_96__sz * sizeof (*SACp_emal_43392__flat_96), ((6 + (SACp_emal_43392__flat_96__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43392__flat_96__desc) & (-1 ^ (3))))[0]) = 5; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43392__flat_96__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43392__flat_96__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43392__flat_96__dim == (2)))) { SAC_RuntimeWarningLoc ("./week2.sac", 14, 30, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43392__flat_96__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 14, 30, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43392__flat_96__shp1 == 3))) { SAC_RuntimeWarningLoc ("./week2.sac", 14, 30, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43392__flat_96[0] = 3; }
    { SACp_emal_43392__flat_96[1] = 7; }
    { SACp_emal_43392__flat_96[2] = 1; }
    { SACp_emal_43392__flat_96[3] = 1; }
    { SACp_emal_43392__flat_96[4] = 2; }
    { SACp_emal_43392__flat_96[5] = 3; }

    { { if (!((1 == SACp_emal_43391__flat_93__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43391__flat_93"); }; { { if ((((SACp_emal_43391__flat_93__sz * sizeof (*SACp_emal_43391__flat_93)) + ((6 + (SACp_emal_43391__flat_93__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43391__flat_93__sz * sizeof (*SACp_emal_43391__flat_93)) + ((6 + (SACp_emal_43391__flat_93__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43391__flat_93__sz * sizeof (*SACp_emal_43391__flat_93)) + ((6 + (SACp_emal_43391__flat_93__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43391__flat_93 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43391__flat_93 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43391__flat_93__sz * sizeof (*SACp_emal_43391__flat_93)) + ((6 + (SACp_emal_43391__flat_93__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43391__flat_93 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43391__flat_93 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43391__flat_93__sz * sizeof (*SACp_emal_43391__flat_93)) + ((6 + (SACp_emal_43391__flat_93__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43391__flat_93__sz * sizeof (*SACp_emal_43391__flat_93)) + ((6 + (SACp_emal_43391__flat_93__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43391__flat_93__sz * sizeof (*SACp_emal_43391__flat_93)) + ((6 + (SACp_emal_43391__flat_93__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43391__flat_93__sz * sizeof (*SACp_emal_43391__flat_93)) + ((6 + (SACp_emal_43391__flat_93__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43391__flat_93__sz * sizeof (*SACp_emal_43391__flat_93)) + ((6 + (SACp_emal_43391__flat_93__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43391__flat_93 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43391__flat_93 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43391__flat_93 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43391__flat_93 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43391__flat_93__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43391__flat_93, SACp_emal_43391__flat_93__sz * sizeof (*SACp_emal_43391__flat_93), ((6 + (SACp_emal_43391__flat_93__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43391__flat_93__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43391__flat_93__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43391__flat_93__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43391__flat_93__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 14, 23, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43391__flat_93__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 14, 23, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43391__flat_93[0] = 2; }
    { SACp_emal_43391__flat_93[1] = 1; }

    { { if (!((1 == SACp_emal_43390__pinl_10003_lshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43390__pinl_10003_lshp"); }; { { if ((((SACp_emal_43390__pinl_10003_lshp__sz * sizeof (*SACp_emal_43390__pinl_10003_lshp)) + ((6 + (SACp_emal_43390__pinl_10003_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43390__pinl_10003_lshp__sz * sizeof (*SACp_emal_43390__pinl_10003_lshp)) + ((6 + (SACp_emal_43390__pinl_10003_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43390__pinl_10003_lshp__sz * sizeof (*SACp_emal_43390__pinl_10003_lshp)) + ((6 + (SACp_emal_43390__pinl_10003_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43390__pinl_10003_lshp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43390__pinl_10003_lshp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43390__pinl_10003_lshp__sz * sizeof (*SACp_emal_43390__pinl_10003_lshp)) + ((6 + (SACp_emal_43390__pinl_10003_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43390__pinl_10003_lshp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43390__pinl_10003_lshp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43390__pinl_10003_lshp__sz * sizeof (*SACp_emal_43390__pinl_10003_lshp)) + ((6 + (SACp_emal_43390__pinl_10003_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43390__pinl_10003_lshp__sz * sizeof (*SACp_emal_43390__pinl_10003_lshp)) + ((6 + (SACp_emal_43390__pinl_10003_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43390__pinl_10003_lshp__sz * sizeof (*SACp_emal_43390__pinl_10003_lshp)) + ((6 + (SACp_emal_43390__pinl_10003_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43390__pinl_10003_lshp__sz * sizeof (*SACp_emal_43390__pinl_10003_lshp)) + ((6 + (SACp_emal_43390__pinl_10003_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43390__pinl_10003_lshp__sz * sizeof (*SACp_emal_43390__pinl_10003_lshp)) + ((6 + (SACp_emal_43390__pinl_10003_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43390__pinl_10003_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43390__pinl_10003_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43390__pinl_10003_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43390__pinl_10003_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43390__pinl_10003_lshp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43390__pinl_10003_lshp, SACp_emal_43390__pinl_10003_lshp__sz * sizeof (*SACp_emal_43390__pinl_10003_lshp), ((6 + (SACp_emal_43390__pinl_10003_lshp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43390__pinl_10003_lshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43390__pinl_10003_lshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43390__pinl_10003_lshp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43390__pinl_10003_lshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43390__pinl_10003_lshp__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43390__pinl_10003_lshp[0] = 2; }

    { { if (!((1 == SACp_emal_43389__pinl_10005_rshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43389__pinl_10005_rshp"); }; { { if ((((SACp_emal_43389__pinl_10005_rshp__sz * sizeof (*SACp_emal_43389__pinl_10005_rshp)) + ((6 + (SACp_emal_43389__pinl_10005_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43389__pinl_10005_rshp__sz * sizeof (*SACp_emal_43389__pinl_10005_rshp)) + ((6 + (SACp_emal_43389__pinl_10005_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43389__pinl_10005_rshp__sz * sizeof (*SACp_emal_43389__pinl_10005_rshp)) + ((6 + (SACp_emal_43389__pinl_10005_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43389__pinl_10005_rshp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43389__pinl_10005_rshp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43389__pinl_10005_rshp__sz * sizeof (*SACp_emal_43389__pinl_10005_rshp)) + ((6 + (SACp_emal_43389__pinl_10005_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43389__pinl_10005_rshp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43389__pinl_10005_rshp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43389__pinl_10005_rshp__sz * sizeof (*SACp_emal_43389__pinl_10005_rshp)) + ((6 + (SACp_emal_43389__pinl_10005_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43389__pinl_10005_rshp__sz * sizeof (*SACp_emal_43389__pinl_10005_rshp)) + ((6 + (SACp_emal_43389__pinl_10005_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43389__pinl_10005_rshp__sz * sizeof (*SACp_emal_43389__pinl_10005_rshp)) + ((6 + (SACp_emal_43389__pinl_10005_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43389__pinl_10005_rshp__sz * sizeof (*SACp_emal_43389__pinl_10005_rshp)) + ((6 + (SACp_emal_43389__pinl_10005_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43389__pinl_10005_rshp__sz * sizeof (*SACp_emal_43389__pinl_10005_rshp)) + ((6 + (SACp_emal_43389__pinl_10005_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43389__pinl_10005_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43389__pinl_10005_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43389__pinl_10005_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43389__pinl_10005_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43389__pinl_10005_rshp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43389__pinl_10005_rshp, SACp_emal_43389__pinl_10005_rshp__sz * sizeof (*SACp_emal_43389__pinl_10005_rshp), ((6 + (SACp_emal_43389__pinl_10005_rshp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43389__pinl_10005_rshp__desc) & (-1 ^ (3))))[0]) = 4; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43389__pinl_10005_rshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43389__pinl_10005_rshp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43389__pinl_10005_rshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43389__pinl_10005_rshp__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43389__pinl_10005_rshp[0] = 2; }
    { SACp_emal_43389__pinl_10005_rshp[1] = 3; }




    if (!((_tcp_48525_SACp_emal_43389__pinl_10005_rshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 55, "Assignment with incompatible types found"); };
    _tcp_48525_SACp_emal_43389__pinl_10005_rshp__desc = SACp_emal_43389__pinl_10005_rshp__desc;
    _tcp_48525_SACp_emal_43389__pinl_10005_rshp__shp0 = SACp_emal_43389__pinl_10005_rshp__shp0;
    _tcp_48525_SACp_emal_43389__pinl_10005_rshp__sz = SACp_emal_43389__pinl_10005_rshp__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48525_SACp_emal_43389__pinl_10005_rshp__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43389__pinl_10005_rshp__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48525_SACp_emal_43389__pinl_10005_rshp__desc) & (-1 ^ (3))))[4]) = SACp_emal_43389__pinl_10005_rshp__sz;
    { _tcp_48525_SACp_emal_43389__pinl_10005_rshp = SACp_emal_43389__pinl_10005_rshp; }




    if (!((_tcp_48524_SACp_emal_43390__pinl_10003_lshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 55, "Assignment with incompatible types found"); };
    _tcp_48524_SACp_emal_43390__pinl_10003_lshp__desc = SACp_emal_43390__pinl_10003_lshp__desc;
    _tcp_48524_SACp_emal_43390__pinl_10003_lshp__shp0 = SACp_emal_43390__pinl_10003_lshp__shp0;
    _tcp_48524_SACp_emal_43390__pinl_10003_lshp__sz = SACp_emal_43390__pinl_10003_lshp__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48524_SACp_emal_43390__pinl_10003_lshp__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43390__pinl_10003_lshp__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48524_SACp_emal_43390__pinl_10003_lshp__desc) & (-1 ^ (3))))[4]) = SACp_emal_43390__pinl_10003_lshp__sz;
    { _tcp_48524_SACp_emal_43390__pinl_10003_lshp = SACp_emal_43390__pinl_10003_lshp; }




    SACf__MAIN__commonPrefix__i_X__i_X (&SACp_pinl_10000__flat_330, _tcp_48524_SACp_emal_43390__pinl_10003_lshp, _tcp_48524_SACp_emal_43390__pinl_10003_lshp__desc, _tcp_48525_SACp_emal_43389__pinl_10005_rshp, _tcp_48525_SACp_emal_43389__pinl_10005_rshp__desc);




    ;

    if (SACp_pinl_10000__flat_330)
    {
      { ; ; }
      { { SACp_pinl_47541__emal_43408__hce_43 = 
# 10632 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 10632 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10006__hce_43 = SACp_pinl_47541__emal_43408__hce_43; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Type pattern pre-condition of carretplus failed"); SACp_pinl_47542__emal_43409__hce_43__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10006__hce_43 = SACp_pinl_47542__emal_43409__hce_43__SSA0_1; }

    }
    if (!SACp_pinl_10006__hce_43) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Type pattern pre-condition of carretplus failedType pattern pre-condition of carretplus failed"); }



    SACp_pinl_9997_b__SSA0_1__desc = SACp_emal_43392__flat_96__desc;
    SACp_pinl_9997_b__SSA0_1__sz = SACp_emal_43392__flat_96__sz;
    SACp_pinl_9997_b__SSA0_1__dim = SACp_emal_43392__flat_96__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9997_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43392__flat_96__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9997_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_43392__flat_96__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9997_b__SSA0_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_43392__flat_96__sz;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9997_b__SSA0_1__desc) & (-1 ^ (3))))[3]) = SACp_emal_43392__flat_96__dim;
    { SACp_pinl_9997_b__SSA0_1 = SACp_emal_43392__flat_96; }




    SACp_pinl_9996_a__SSA0_1__desc = SACp_emal_43391__flat_93__desc;
    SACp_pinl_9996_a__SSA0_1__sz = SACp_emal_43391__flat_93__sz;
    SACp_pinl_9996_a__SSA0_1__dim = SACp_emal_43391__flat_93__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9996_a__SSA0_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43391__flat_93__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9996_a__SSA0_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_43391__flat_93__sz;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9996_a__SSA0_1__desc) & (-1 ^ (3))))[3]) = SACp_emal_43391__flat_93__dim;
    { SACp_pinl_9996_a__SSA0_1 = SACp_emal_43391__flat_93; }




    SACwf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_pinl_9995__rtpf_20_res, &SACp_pinl_9995__rtpf_20_res__desc, SACp_pinl_9996_a__SSA0_1, SACp_pinl_9996_a__SSA0_1__desc, SACp_pinl_9997_b__SSA0_1, SACp_pinl_9997_b__SSA0_1__desc);




    SACp_pinl_9995__rtpf_20_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9995__rtpf_20_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_9995__rtpf_20_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9995__rtpf_20_res__desc) & (-1 ^ (3))))[3]);

    if (!SACp_pinl_10006__hce_43) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Type pattern pre-condition of carretplus failed"); }
    { ; ; }



    SACwf_StdIO__print__i_S (SACp_pinl_9995__rtpf_20_res, SACp_pinl_9995__rtpf_20_res__desc);




    SACf__MAIN___rtpf_18_impl_carretplus__i_2_3__i_2 (&SACp_pinl_10021__rtpf_20_res, &SACp_pinl_10021__rtpf_20_res__desc, SACp_emal_43392__flat_96, SACp_emal_43392__flat_96__desc, SACp_emal_43391__flat_93, SACp_emal_43391__flat_93__desc);




    SACp_pinl_10021__rtpf_20_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10021__rtpf_20_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_10021__rtpf_20_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10021__rtpf_20_res__desc) & (-1 ^ (3))))[3]);




    SACwf_StdIO__print__i_S (SACp_pinl_10021__rtpf_20_res, SACp_pinl_10021__rtpf_20_res__desc);




    if (!((_tcp_48523_SACp_emal_43389__pinl_10005_rshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 55, "Assignment with incompatible types found"); };
    _tcp_48523_SACp_emal_43389__pinl_10005_rshp__desc = SACp_emal_43389__pinl_10005_rshp__desc;
    _tcp_48523_SACp_emal_43389__pinl_10005_rshp__shp0 = SACp_emal_43389__pinl_10005_rshp__shp0;
    _tcp_48523_SACp_emal_43389__pinl_10005_rshp__sz = SACp_emal_43389__pinl_10005_rshp__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48523_SACp_emal_43389__pinl_10005_rshp__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43389__pinl_10005_rshp__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48523_SACp_emal_43389__pinl_10005_rshp__desc) & (-1 ^ (3))))[4]) = SACp_emal_43389__pinl_10005_rshp__sz;
    { _tcp_48523_SACp_emal_43389__pinl_10005_rshp = SACp_emal_43389__pinl_10005_rshp; }




    if (!((_tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 55, "Assignment with incompatible types found"); };
    _tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc = SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc;
    _tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld__shp0 = SACp_emal_43400__isaa_30950__rso_407_TheWorld__shp0;
    _tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz = SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43400__isaa_30950__rso_407_TheWorld__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc) & (-1 ^ (3))))[4]) = SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz;
    { _tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld = SACp_emal_43400__isaa_30950__rso_407_TheWorld; }




    SACf__MAIN__commonPrefix__i_X__i_X (&SACp_pinl_10052__flat_330, _tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld, _tcp_48522_SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc, _tcp_48523_SACp_emal_43389__pinl_10005_rshp, _tcp_48523_SACp_emal_43389__pinl_10005_rshp__desc);




    ;

    if (SACp_pinl_10052__flat_330)
    {
      { ; ; }
      { { SACp_pinl_47545__emal_43406__hce_43 = 
# 10750 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 10750 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10058__hce_43 = SACp_pinl_47545__emal_43406__hce_43; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Type pattern pre-condition of carretplus failed"); SACp_pinl_47546__emal_43407__hce_43__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10058__hce_43 = SACp_pinl_47546__emal_43407__hce_43__SSA0_1; }

    }
    if (!SACp_pinl_10058__hce_43) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Type pattern pre-condition of carretplus failedType pattern pre-condition of carretplus failed"); }



    SACp_pinl_10049_b__SSA0_1__desc = SACp_emal_43392__flat_96__desc;
    SACp_pinl_10049_b__SSA0_1__sz = SACp_emal_43392__flat_96__sz;
    SACp_pinl_10049_b__SSA0_1__dim = SACp_emal_43392__flat_96__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10049_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43392__flat_96__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10049_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_43392__flat_96__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10049_b__SSA0_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_43392__flat_96__sz;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10049_b__SSA0_1__desc) & (-1 ^ (3))))[3]) = SACp_emal_43392__flat_96__dim;
    { SACp_pinl_10049_b__SSA0_1 = SACp_emal_43392__flat_96; }

    { { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43388__pinl_10048_a__SSA0_1"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 10788 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 10788 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10788 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 10788 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10788 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 10788 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 10788 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 10788, __extension__ __PRETTY_FUNCTION__); }))
# 10788 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43388__pinl_10048_a__SSA0_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43388__pinl_10048_a__SSA0_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43388__pinl_10048_a__SSA0_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43388__pinl_10048_a__SSA0_1__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43388__pinl_10048_a__SSA0_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43388__pinl_10048_a__SSA0_1__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43388__pinl_10048_a__SSA0_1__desc) & (-1 ^ (3))))[3]) = SACp_emal_43388__pinl_10048_a__SSA0_1__dim = 0; }



    if (!((SACp_emal_43388__pinl_10048_a__SSA0_1__dim == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43388__pinl_10048_a__SSA0_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_43388__pinl_10048_a__SSA0_1__sz = SAC_size * 1;
      if (!((SACp_emal_43388__pinl_10048_a__SSA0_1__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 10800 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 10800 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10800 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 10800 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10800 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 10800 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 10800 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 10800, __extension__ __PRETTY_FUNCTION__); }))
# 10800 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43388__pinl_10048_a__SSA0_1 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43388__pinl_10048_a__SSA0_1__sz * sizeof (*SACp_emal_43388__pinl_10048_a__SSA0_1)); break; case SAC_HM_multi_threaded: SACp_emal_43388__pinl_10048_a__SSA0_1 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43388__pinl_10048_a__SSA0_1__sz * sizeof (*SACp_emal_43388__pinl_10048_a__SSA0_1), 0); break; case SAC_HM_any_threaded: SACp_emal_43388__pinl_10048_a__SSA0_1 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43388__pinl_10048_a__SSA0_1__sz * sizeof (*SACp_emal_43388__pinl_10048_a__SSA0_1), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43388__pinl_10048_a__SSA0_1__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43388__pinl_10048_a__SSA0_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43388__pinl_10048_a__SSA0_1__desc) & (-1 ^ (3))))[1]) = 0; } }
    { if (!((SACp_emal_43388__pinl_10048_a__SSA0_1__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_43388__pinl_10048_a__SSA0_1[0] = SACp_emal_43399__flat_55; } }



    SACwf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (&SACp_pinl_10047__rtpf_20_res, &SACp_pinl_10047__rtpf_20_res__desc, SACp_emal_43388__pinl_10048_a__SSA0_1, SACp_emal_43388__pinl_10048_a__SSA0_1__desc, SACp_pinl_10049_b__SSA0_1, SACp_pinl_10049_b__SSA0_1__desc);




    SACp_pinl_10047__rtpf_20_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10047__rtpf_20_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_10047__rtpf_20_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10047__rtpf_20_res__desc) & (-1 ^ (3))))[3]);

    if (!SACp_pinl_10058__hce_43) { SAC_RuntimeErrorLoc ("./week2.sac", 56, 1, "Type pattern pre-condition of carretplus failed"); }
    { ; ; }



    SACwf_StdIO__print__i_S (SACp_pinl_10047__rtpf_20_res, SACp_pinl_10047__rtpf_20_res__desc);

    { { if (!((1 == SACp_emal_43387__flat_130__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43387__flat_130"); }; { { if ((((SACp_emal_43387__flat_130__sz * sizeof (*SACp_emal_43387__flat_130)) + ((6 + (SACp_emal_43387__flat_130__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43387__flat_130__sz * sizeof (*SACp_emal_43387__flat_130)) + ((6 + (SACp_emal_43387__flat_130__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43387__flat_130__sz * sizeof (*SACp_emal_43387__flat_130)) + ((6 + (SACp_emal_43387__flat_130__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43387__flat_130 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43387__flat_130 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43387__flat_130__sz * sizeof (*SACp_emal_43387__flat_130)) + ((6 + (SACp_emal_43387__flat_130__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43387__flat_130 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43387__flat_130 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43387__flat_130__sz * sizeof (*SACp_emal_43387__flat_130)) + ((6 + (SACp_emal_43387__flat_130__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43387__flat_130__sz * sizeof (*SACp_emal_43387__flat_130)) + ((6 + (SACp_emal_43387__flat_130__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43387__flat_130__sz * sizeof (*SACp_emal_43387__flat_130)) + ((6 + (SACp_emal_43387__flat_130__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43387__flat_130__sz * sizeof (*SACp_emal_43387__flat_130)) + ((6 + (SACp_emal_43387__flat_130__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43387__flat_130__sz * sizeof (*SACp_emal_43387__flat_130)) + ((6 + (SACp_emal_43387__flat_130__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43387__flat_130 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43387__flat_130 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43387__flat_130 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43387__flat_130 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43387__flat_130__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43387__flat_130, SACp_emal_43387__flat_130__sz * sizeof (*SACp_emal_43387__flat_130), ((6 + (SACp_emal_43387__flat_130__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43387__flat_130__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43387__flat_130__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43387__flat_130__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43387__flat_130__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 19, 23, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43387__flat_130__shp0 == 3))) { SAC_RuntimeWarningLoc ("./week2.sac", 19, 23, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43387__flat_130[0] = 3; }
    { SACp_emal_43387__flat_130[1] = 2; }
    { SACp_emal_43387__flat_130[2] = 1; }

    { { if (!((1 == SACp_emal_43386__pinl_10081_lshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43386__pinl_10081_lshp"); }; { { if ((((SACp_emal_43386__pinl_10081_lshp__sz * sizeof (*SACp_emal_43386__pinl_10081_lshp)) + ((6 + (SACp_emal_43386__pinl_10081_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43386__pinl_10081_lshp__sz * sizeof (*SACp_emal_43386__pinl_10081_lshp)) + ((6 + (SACp_emal_43386__pinl_10081_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43386__pinl_10081_lshp__sz * sizeof (*SACp_emal_43386__pinl_10081_lshp)) + ((6 + (SACp_emal_43386__pinl_10081_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43386__pinl_10081_lshp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43386__pinl_10081_lshp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43386__pinl_10081_lshp__sz * sizeof (*SACp_emal_43386__pinl_10081_lshp)) + ((6 + (SACp_emal_43386__pinl_10081_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43386__pinl_10081_lshp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43386__pinl_10081_lshp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43386__pinl_10081_lshp__sz * sizeof (*SACp_emal_43386__pinl_10081_lshp)) + ((6 + (SACp_emal_43386__pinl_10081_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43386__pinl_10081_lshp__sz * sizeof (*SACp_emal_43386__pinl_10081_lshp)) + ((6 + (SACp_emal_43386__pinl_10081_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43386__pinl_10081_lshp__sz * sizeof (*SACp_emal_43386__pinl_10081_lshp)) + ((6 + (SACp_emal_43386__pinl_10081_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43386__pinl_10081_lshp__sz * sizeof (*SACp_emal_43386__pinl_10081_lshp)) + ((6 + (SACp_emal_43386__pinl_10081_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43386__pinl_10081_lshp__sz * sizeof (*SACp_emal_43386__pinl_10081_lshp)) + ((6 + (SACp_emal_43386__pinl_10081_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43386__pinl_10081_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43386__pinl_10081_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43386__pinl_10081_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43386__pinl_10081_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43386__pinl_10081_lshp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43386__pinl_10081_lshp, SACp_emal_43386__pinl_10081_lshp__sz * sizeof (*SACp_emal_43386__pinl_10081_lshp), ((6 + (SACp_emal_43386__pinl_10081_lshp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43386__pinl_10081_lshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43386__pinl_10081_lshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43386__pinl_10081_lshp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43386__pinl_10081_lshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43386__pinl_10081_lshp__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43386__pinl_10081_lshp[0] = 3; }




    if (!((_tcp_48521_SACp_emal_43389__pinl_10005_rshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 55, "Assignment with incompatible types found"); };
    _tcp_48521_SACp_emal_43389__pinl_10005_rshp__desc = SACp_emal_43389__pinl_10005_rshp__desc;
    _tcp_48521_SACp_emal_43389__pinl_10005_rshp__shp0 = SACp_emal_43389__pinl_10005_rshp__shp0;
    _tcp_48521_SACp_emal_43389__pinl_10005_rshp__sz = SACp_emal_43389__pinl_10005_rshp__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48521_SACp_emal_43389__pinl_10005_rshp__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43389__pinl_10005_rshp__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48521_SACp_emal_43389__pinl_10005_rshp__desc) & (-1 ^ (3))))[4]) = SACp_emal_43389__pinl_10005_rshp__sz;
    { _tcp_48521_SACp_emal_43389__pinl_10005_rshp = SACp_emal_43389__pinl_10005_rshp; }




    if (!((_tcp_48520_SACp_emal_43386__pinl_10081_lshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 55, "Assignment with incompatible types found"); };
    _tcp_48520_SACp_emal_43386__pinl_10081_lshp__desc = SACp_emal_43386__pinl_10081_lshp__desc;
    _tcp_48520_SACp_emal_43386__pinl_10081_lshp__shp0 = SACp_emal_43386__pinl_10081_lshp__shp0;
    _tcp_48520_SACp_emal_43386__pinl_10081_lshp__sz = SACp_emal_43386__pinl_10081_lshp__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48520_SACp_emal_43386__pinl_10081_lshp__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43386__pinl_10081_lshp__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48520_SACp_emal_43386__pinl_10081_lshp__desc) & (-1 ^ (3))))[4]) = SACp_emal_43386__pinl_10081_lshp__sz;
    { _tcp_48520_SACp_emal_43386__pinl_10081_lshp = SACp_emal_43386__pinl_10081_lshp; }




    SACf__MAIN__commonPostfix__i_X__i_X (&SACp_pinl_10078__flat_394, _tcp_48520_SACp_emal_43386__pinl_10081_lshp, _tcp_48520_SACp_emal_43386__pinl_10081_lshp__desc, _tcp_48521_SACp_emal_43389__pinl_10005_rshp, _tcp_48521_SACp_emal_43389__pinl_10005_rshp__desc);




    ;

    if (SACp_pinl_10078__flat_394)
    {
      { ; ; }
      { { SACp_pinl_47549__emal_43404__hce_50 = 
# 10885 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 10885 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10084__hce_50 = SACp_pinl_47549__emal_43404__hce_50; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Type pattern pre-condition of pluscarret failed"); SACp_pinl_47550__emal_43405__hce_50__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10084__hce_50 = SACp_pinl_47550__emal_43405__hce_50__SSA0_1; }

    }
    if (!SACp_pinl_10084__hce_50) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Type pattern pre-condition of pluscarret failedType pattern pre-condition of pluscarret failed"); }



    SACp_pinl_10075_b__SSA0_1__desc = SACp_emal_43392__flat_96__desc;
    SACp_pinl_10075_b__SSA0_1__sz = SACp_emal_43392__flat_96__sz;
    SACp_pinl_10075_b__SSA0_1__dim = SACp_emal_43392__flat_96__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10075_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43392__flat_96__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10075_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_43392__flat_96__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10075_b__SSA0_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_43392__flat_96__sz;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10075_b__SSA0_1__desc) & (-1 ^ (3))))[3]) = SACp_emal_43392__flat_96__dim;
    { SACp_pinl_10075_b__SSA0_1 = SACp_emal_43392__flat_96; }




    SACp_pinl_10074_a__SSA0_1__desc = SACp_emal_43387__flat_130__desc;
    SACp_pinl_10074_a__SSA0_1__sz = SACp_emal_43387__flat_130__sz;
    SACp_pinl_10074_a__SSA0_1__dim = SACp_emal_43387__flat_130__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10074_a__SSA0_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43387__flat_130__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10074_a__SSA0_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_43387__flat_130__sz;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10074_a__SSA0_1__desc) & (-1 ^ (3))))[3]) = SACp_emal_43387__flat_130__dim;
    { SACp_pinl_10074_a__SSA0_1 = SACp_emal_43387__flat_130; }




    SACwf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_pinl_10073__rtpf_33_res, &SACp_pinl_10073__rtpf_33_res__desc, SACp_pinl_10074_a__SSA0_1, SACp_pinl_10074_a__SSA0_1__desc, SACp_pinl_10075_b__SSA0_1, SACp_pinl_10075_b__SSA0_1__desc);




    SACp_pinl_10073__rtpf_33_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10073__rtpf_33_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_10073__rtpf_33_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10073__rtpf_33_res__desc) & (-1 ^ (3))))[3]);

    if (!SACp_pinl_10084__hce_50) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Type pattern pre-condition of pluscarret failed"); }
    { ; ; }



    SACwf_StdIO__print__i_S (SACp_pinl_10073__rtpf_33_res, SACp_pinl_10073__rtpf_33_res__desc);




    if (!((_tcp_48519_SACp_emal_43389__pinl_10005_rshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 55, "Assignment with incompatible types found"); };
    _tcp_48519_SACp_emal_43389__pinl_10005_rshp__desc = SACp_emal_43389__pinl_10005_rshp__desc;
    _tcp_48519_SACp_emal_43389__pinl_10005_rshp__shp0 = SACp_emal_43389__pinl_10005_rshp__shp0;
    _tcp_48519_SACp_emal_43389__pinl_10005_rshp__sz = SACp_emal_43389__pinl_10005_rshp__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48519_SACp_emal_43389__pinl_10005_rshp__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43389__pinl_10005_rshp__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48519_SACp_emal_43389__pinl_10005_rshp__desc) & (-1 ^ (3))))[4]) = SACp_emal_43389__pinl_10005_rshp__sz;
    { _tcp_48519_SACp_emal_43389__pinl_10005_rshp = SACp_emal_43389__pinl_10005_rshp; }




    if (!((_tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 55, "Assignment with incompatible types found"); };
    _tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc = SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc;
    _tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld__shp0 = SACp_emal_43400__isaa_30950__rso_407_TheWorld__shp0;
    _tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz = SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43400__isaa_30950__rso_407_TheWorld__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc) & (-1 ^ (3))))[4]) = SACp_emal_43400__isaa_30950__rso_407_TheWorld__sz;
    { _tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld = SACp_emal_43400__isaa_30950__rso_407_TheWorld; }




    SACf__MAIN__commonPostfix__i_X__i_X (&SACp_pinl_10104__flat_394, _tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld, _tcp_48518_SACp_emal_43400__isaa_30950__rso_407_TheWorld__desc, _tcp_48519_SACp_emal_43389__pinl_10005_rshp, _tcp_48519_SACp_emal_43389__pinl_10005_rshp__desc);




    ;

    if (SACp_pinl_10104__flat_394)
    {
      { ; ; }
      { { SACp_pinl_47553__emal_43402__hce_50 = 
# 10987 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 10987 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10110__hce_50 = SACp_pinl_47553__emal_43402__hce_50; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Type pattern pre-condition of pluscarret failed"); SACp_pinl_47554__emal_43403__hce_50__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10110__hce_50 = SACp_pinl_47554__emal_43403__hce_50__SSA0_1; }

    }
    if (!SACp_pinl_10110__hce_50) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Type pattern pre-condition of pluscarret failedType pattern pre-condition of pluscarret failed"); }



    SACp_pinl_10101_b__SSA0_1__desc = SACp_emal_43392__flat_96__desc;
    SACp_pinl_10101_b__SSA0_1__sz = SACp_emal_43392__flat_96__sz;
    SACp_pinl_10101_b__SSA0_1__dim = SACp_emal_43392__flat_96__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10101_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43392__flat_96__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10101_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_43392__flat_96__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10101_b__SSA0_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_43392__flat_96__sz;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10101_b__SSA0_1__desc) & (-1 ^ (3))))[3]) = SACp_emal_43392__flat_96__dim;
    { SACp_pinl_10101_b__SSA0_1 = SACp_emal_43392__flat_96; }

    { { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43385__pinl_10100_a__SSA0_1"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 11025 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 11025 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11025 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 11025 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11025 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 11025 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 11025 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 11025, __extension__ __PRETTY_FUNCTION__); }))
# 11025 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43385__pinl_10100_a__SSA0_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43385__pinl_10100_a__SSA0_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43385__pinl_10100_a__SSA0_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43385__pinl_10100_a__SSA0_1__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43385__pinl_10100_a__SSA0_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43385__pinl_10100_a__SSA0_1__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43385__pinl_10100_a__SSA0_1__desc) & (-1 ^ (3))))[3]) = SACp_emal_43385__pinl_10100_a__SSA0_1__dim = 0; }



    if (!((SACp_emal_43385__pinl_10100_a__SSA0_1__dim == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43385__pinl_10100_a__SSA0_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_43385__pinl_10100_a__SSA0_1__sz = SAC_size * 1;
      if (!((SACp_emal_43385__pinl_10100_a__SSA0_1__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 11037 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 11037 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11037 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 11037 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11037 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 11037 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 11037 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 11037, __extension__ __PRETTY_FUNCTION__); }))
# 11037 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43385__pinl_10100_a__SSA0_1 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43385__pinl_10100_a__SSA0_1__sz * sizeof (*SACp_emal_43385__pinl_10100_a__SSA0_1)); break; case SAC_HM_multi_threaded: SACp_emal_43385__pinl_10100_a__SSA0_1 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43385__pinl_10100_a__SSA0_1__sz * sizeof (*SACp_emal_43385__pinl_10100_a__SSA0_1), 0); break; case SAC_HM_any_threaded: SACp_emal_43385__pinl_10100_a__SSA0_1 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43385__pinl_10100_a__SSA0_1__sz * sizeof (*SACp_emal_43385__pinl_10100_a__SSA0_1), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43385__pinl_10100_a__SSA0_1__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43385__pinl_10100_a__SSA0_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43385__pinl_10100_a__SSA0_1__desc) & (-1 ^ (3))))[1]) = 0; } }
    { if (!((SACp_emal_43385__pinl_10100_a__SSA0_1__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_43385__pinl_10100_a__SSA0_1[0] = SACp_emal_43399__flat_55; } }
    { ; ; }



    SACwf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (&SACp_pinl_10099__rtpf_33_res, &SACp_pinl_10099__rtpf_33_res__desc, SACp_emal_43385__pinl_10100_a__SSA0_1, SACp_emal_43385__pinl_10100_a__SSA0_1__desc, SACp_pinl_10101_b__SSA0_1, SACp_pinl_10101_b__SSA0_1__desc);




    SACp_pinl_10099__rtpf_33_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10099__rtpf_33_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_10099__rtpf_33_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10099__rtpf_33_res__desc) & (-1 ^ (3))))[3]);

    if (!SACp_pinl_10110__hce_50) { SAC_RuntimeErrorLoc ("./week2.sac", 74, 1, "Type pattern pre-condition of pluscarret failed"); }
    { ; ; }



    SACwf_StdIO__print__i_S (SACp_pinl_10099__rtpf_33_res, SACp_pinl_10099__rtpf_33_res__desc);




    { *SAC_arg_1__p = SACp_emal_43401__isaa_30949__rso_407_TheWorld; }
    return;
   
  }



}
}
# 11079 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN_CL_INIT__init (void) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
   



    SACf_World_CL_INIT__init_TheWorld__SACt_World__World (&SACo_World__TheWorld, &SACo_World__TheWorld__desc);




    SACf_Terminal_CL_INIT__init_TheTerminal__SACt_Terminal__Terminal (&SACo_Terminal__TheTerminal, &SACo_Terminal__TheTerminal__desc);




    SACf_TermFile_CL_INIT__init_stdout__SACt_TermFile__TermFile (&SACo_TermFile__stdout, &SACo_TermFile__stdout__desc);




    return;
   
  }



}
}
# 11121 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___PL__i__i (int * SAC_arg_1__p, int SACl_a, int SACl_b) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int SACp_emal_43410__flat_155;
   
   





   




   

   
    ; ; { SACp_emal_43410__flat_155 = (SACl_b) + (SACl_a); };
    ;
    ;



    { *SAC_arg_1__p = SACp_emal_43410__flat_155; }
    return;
   
  }



}
}
# 11170 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_8_impl__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int SACp_emal_43488__isaa_31132_b;
   
   




    int * SACp_emal_43487__isaa_31133_b;
    SAC_array_descriptor_t SACp_emal_43487__isaa_31133_b__desc = 
# 11187 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11187 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43487__isaa_31133_b__shp0;
    int SACp_emal_43487__isaa_31133_b__sz;
    const int SACp_emal_43487__isaa_31133_b__dim = 1;




    int SACp_emal_43486__isaa_31135_a;
   
   




    int * SACp_emal_43485__isaa_31136_a;
    SAC_array_descriptor_t SACp_emal_43485__isaa_31136_a__desc = 
# 11203 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11203 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43485__isaa_31136_a__shp0;
    int SACp_emal_43485__isaa_31136_a__sz;
    const int SACp_emal_43485__isaa_31136_a__dim = 1;




    int SACp_emal_43484__ivesplit_31233;
   
   




    int SACp_emal_43483__uprf_20222;
   
   




    
# 11225 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11225 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43482__uprf_20216;
   
   




    
# 11232 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11232 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43481__uprf_20210;
   
   




    int * SACp_emal_43480__idc_4994;
    SAC_array_descriptor_t SACp_emal_43480__idc_4994__desc = 
# 11240 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11240 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43480__idc_4994__shp0 = 1;
    const int SACp_emal_43480__idc_4994__sz = 1;
    const int SACp_emal_43480__idc_4994__dim = 1;




    
# 11248 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11248 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43479__uprf_20204;
   
   




    int SACp_emal_43478__uprf_20203;
   
   




    int * SACp_emal_43477__idc_4998;
    SAC_array_descriptor_t SACp_emal_43477__idc_4998__desc = 
# 11263 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11263 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43477__idc_4998__shp0 = 1;
    const int SACp_emal_43477__idc_4998__sz = 1;
    const int SACp_emal_43477__idc_4998__dim = 1;




    int SACp_emal_43476__pinl_20105__icc_6985;
   
   




    int SACp_emal_43475__pinl_20108__icc_6991;
   
   




    
# 11285 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11285 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43472__uprf_20196;
   
   




    
# 11292 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11292 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43471__uprf_20190;
   
   




    
# 11299 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11299 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43470__uprf_20181;
   
   




    
# 11306 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11306 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43469__uprf_20175;
   
   




    int * SACp_emal_43468__idc_5004;
    SAC_array_descriptor_t SACp_emal_43468__idc_5004__desc = 
# 11314 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11314 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43468__idc_5004__shp0 = 1;
    const int SACp_emal_43468__idc_5004__sz = 1;
    const int SACp_emal_43468__idc_5004__dim = 1;




    int SACp_emal_43467__ivesli_42481;
   
   




    int SACp_emal_43466__icc_4939;
   
   




    int SACp_emal_43465__ivesli_42480;
   
   




    int SACp_emal_43464__icc_4945;
   
   




    int * SACp_emal_43462__icc_4951;
    SAC_array_descriptor_t SACp_emal_43462__icc_4951__desc = 
# 11351 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11351 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43462__icc_4951__shp0;
    int SACp_emal_43462__icc_4951__sz;
    const int SACp_emal_43462__icc_4951__dim = 1;




    
# 11359 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11359 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43461__icc_4971_pred;
   
   




    
# 11366 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11366 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43460__icc_4976_pred;
   
   




    int * SACp_emal_43459__flat_199;
    SAC_array_descriptor_t SACp_emal_43459__flat_199__desc = 
# 11374 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11374 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43459__flat_199__shp0;
    int SACp_emal_43459__flat_199__sz;
    const int SACp_emal_43459__flat_199__dim = 1;




    
# 11382 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11382 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43458__icc_4970_pred;
   
   




    
# 11389 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11389 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43457__icc_4972_pred;
   
   




    
# 11396 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11396 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43456__icc_4973_pred;
   
   




    int SACp_emal_43455__icc_4983;
   
   




    int * SACp_emal_43454__pinl_10232_new_shape;
    SAC_array_descriptor_t SACp_emal_43454__pinl_10232_new_shape__desc = 
# 11411 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11411 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43454__pinl_10232_new_shape__shp0;
    int SACp_emal_43454__pinl_10232_new_shape__sz;
    const int SACp_emal_43454__pinl_10232_new_shape__dim = 1;




    
# 11419 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11419 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43453__pinl_10241__icc_5145_pred;
   
   




    
# 11426 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11426 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43452__pinl_10248__icc_5150_pred;
   
   




    int * SACp_emal_43451__pinl_10230__flat_322;
    SAC_array_descriptor_t SACp_emal_43451__pinl_10230__flat_322__desc = 
# 11434 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11434 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43451__pinl_10230__flat_322__shp0;
    int SACp_emal_43451__pinl_10230__flat_322__sz;
    const int SACp_emal_43451__pinl_10230__flat_322__dim = 1;




    
# 11442 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11442 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43450__pinl_10250__icc_5144_pred;
   
   




    
# 11449 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11449 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43449__pinl_10252__icc_5146_pred;
   
   




    
# 11456 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11456 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43448__pinl_10255__icc_5147_pred;
   
   




    int * SACp_emal_43447__pinl_10283_new_shape;
    SAC_array_descriptor_t SACp_emal_43447__pinl_10283_new_shape__desc = 
# 11464 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11464 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43447__pinl_10283_new_shape__shp0;
    int SACp_emal_43447__pinl_10283_new_shape__sz;
    const int SACp_emal_43447__pinl_10283_new_shape__dim = 1;




    
# 11472 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11472 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43446__pinl_10292__icc_5145_pred;
   
   




    
# 11479 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11479 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43445__pinl_10299__icc_5150_pred;
   
   




    int * SACp_emal_43444__pinl_10281__flat_322;
    SAC_array_descriptor_t SACp_emal_43444__pinl_10281__flat_322__desc = 
# 11487 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11487 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43444__pinl_10281__flat_322__shp0;
    int SACp_emal_43444__pinl_10281__flat_322__sz;
    const int SACp_emal_43444__pinl_10281__flat_322__dim = 1;




    
# 11495 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11495 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43443__pinl_10301__icc_5144_pred;
   
   




    
# 11502 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11502 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43442__pinl_10303__icc_5146_pred;
   
   




    
# 11509 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11509 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43441__pinl_10306__icc_5147_pred;
   
   




    int * SACp_emal_43436__pinl_10234_new_idx;
    SAC_array_descriptor_t SACp_emal_43436__pinl_10234_new_idx__desc = 
# 11517 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11517 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43436__pinl_10234_new_idx__shp0;
    int SACp_emal_43436__pinl_10234_new_idx__sz;
    const int SACp_emal_43436__pinl_10234_new_idx__dim = 1;




    
# 11525 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11525 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43435__pinl_10257__icc_5151_pred;
   
   




    
# 11532 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11532 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43434__pinl_10259__icc_5152_pred;
   
   




    
# 11539 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11539 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43433__pinl_10261__icc_5153_pred;
   
   




    int SACp_emal_43432__ivesli_42479;
   
   




    int SACp_emal_43431__pinl_10220__icc_5156;
   
   




    int * SACp_emal_43430__pinl_10224__icc_5162;
    SAC_array_descriptor_t SACp_emal_43430__pinl_10224__icc_5162__desc = 
# 11561 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11561 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43430__pinl_10224__icc_5162__sz = 0;
    int SACp_emal_43430__pinl_10224__icc_5162__dim = 0;




    
# 11568 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11568 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43429__icc_4978_pred;
   
   




    int SACp_emal_43428__idc_5029;
   
   




    int * SACp_emal_43425__pinl_10285_new_idx;
    SAC_array_descriptor_t SACp_emal_43425__pinl_10285_new_idx__desc = 
# 11583 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11583 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43425__pinl_10285_new_idx__shp0;
    int SACp_emal_43425__pinl_10285_new_idx__sz;
    const int SACp_emal_43425__pinl_10285_new_idx__dim = 1;




    
# 11591 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11591 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43424__pinl_10308__icc_5151_pred;
   
   




    
# 11598 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11598 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43423__pinl_10310__icc_5152_pred;
   
   




    
# 11605 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11605 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43422__pinl_10312__icc_5153_pred;
   
   




    int SACp_emal_43421__ivesli_42478;
   
   




    int SACp_emal_43420__pinl_10271__icc_5156;
   
   




    int * SACp_emal_43419__pinl_10275__icc_5162;
    SAC_array_descriptor_t SACp_emal_43419__pinl_10275__icc_5162__desc = 
# 11627 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11627 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43419__pinl_10275__icc_5162__sz = 0;
    int SACp_emal_43419__pinl_10275__icc_5162__dim = 0;




    
# 11634 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11634 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43418__icc_4977_pred;
   
   




    int SACp_emal_43417__idc_5030;
   
   




    int * SACp_emal_43416__icc_4980;
    SAC_array_descriptor_t SACp_emal_43416__icc_4980__desc = 
# 11649 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11649 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43416__icc_4980__sz = 0;
    int SACp_emal_43416__icc_4980__dim = 0;




    int * SACp_emal_43415__icc_4979;
    SAC_array_descriptor_t SACp_emal_43415__icc_4979__desc = 
# 11657 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11657 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43415__icc_4979__sz = 0;
    int SACp_emal_43415__icc_4979__dim = 0;




    int SACp_emal_43414__asd_43078__icc_4980;
   
   




    int SACp_emal_43413__asd_43077__icc_4979;
   
   




    int * SACp_emal_43411__icc_4987;
    SAC_array_descriptor_t SACp_emal_43411__icc_4987__desc = 
# 11679 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11679 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43411__icc_4987__sz = 0;
    int SACp_emal_43411__icc_4987__dim = 0;




    int SACp_wlidx_42330__pinl_10275__icc_5162;
   
   




    int SACp_wlidx_42329__pinl_10224__icc_5162;
   
   




    int SACp_wlidx_42328__icc_4987;
   
   




    int SACp_wlidx_42327__icc_4951;
   
   




    int * SACp_pinl_10233_iv;
    SAC_array_descriptor_t SACp_pinl_10233_iv__desc = 
# 11715 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11715 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_10233_iv__shp0;
    int SACp_pinl_10233_iv__sz;
    const int SACp_pinl_10233_iv__dim = 1;




    int * SACp_pinl_10284_iv;
    SAC_array_descriptor_t SACp_pinl_10284_iv__desc = 
# 11724 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11724 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_10284_iv__shp0;
    int SACp_pinl_10284_iv__sz;
    const int SACp_pinl_10284_iv__dim = 1;




    int SACp_eat_430;
   
   




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 11740 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11740 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACl_iv__shp0;
    int SACl_iv__sz;
    const int SACl_iv__dim = 1;




    int * SACp_seri_34_index_min;
    SAC_array_descriptor_t SACp_seri_34_index_min__desc = 
# 11749 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11749 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_seri_34_index_min__shp0 = 1;
    const int SACp_seri_34_index_min__sz = 1;
    const int SACp_seri_34_index_min__dim = 1;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_43488__isaa_31132_b = SACl_b__dim; }; }
    { { if (!((1 == SACp_emal_43487__isaa_31133_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43487__isaa_31133_b"); }; { if ((((6 + (SACp_emal_43487__isaa_31133_b__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43487__isaa_31133_b__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43487__isaa_31133_b__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43487__isaa_31133_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43487__isaa_31133_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43487__isaa_31133_b__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43487__isaa_31133_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43487__isaa_31133_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43487__isaa_31133_b__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43487__isaa_31133_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43487__isaa_31133_b__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43487__isaa_31133_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43487__isaa_31133_b__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43487__isaa_31133_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43487__isaa_31133_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43487__isaa_31133_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43487__isaa_31133_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43487__isaa_31133_b__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43487__isaa_31133_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43487__isaa_31133_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43487__isaa_31133_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43487__isaa_31133_b__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43487__isaa_31133_b__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43487__isaa_31133_b__desc) & (-1 ^ (3))))[4]) = SACp_emal_43487__isaa_31133_b__sz = SAC_size;
      if (!((SACp_emal_43487__isaa_31133_b__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 11784 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 11784 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11784 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 11784 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11784 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 11784 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 11784 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 11784, __extension__ __PRETTY_FUNCTION__); }))
# 11784 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43487__isaa_31133_b = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43487__isaa_31133_b__sz * sizeof (*SACp_emal_43487__isaa_31133_b)); break; case SAC_HM_multi_threaded: SACp_emal_43487__isaa_31133_b = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43487__isaa_31133_b__sz * sizeof (*SACp_emal_43487__isaa_31133_b), 0); break; case SAC_HM_any_threaded: SACp_emal_43487__isaa_31133_b = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43487__isaa_31133_b__sz * sizeof (*SACp_emal_43487__isaa_31133_b), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43487__isaa_31133_b__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43487__isaa_31133_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43487__isaa_31133_b__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
      { SACp_emal_43487__isaa_31133_b[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { SACp_emal_43486__isaa_31135_a = SACl_a__dim; }; }
    { { if (!((1 == SACp_emal_43485__isaa_31136_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43485__isaa_31136_a"); }; { if ((((6 + (SACp_emal_43485__isaa_31136_a__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43485__isaa_31136_a__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43485__isaa_31136_a__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43485__isaa_31136_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43485__isaa_31136_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43485__isaa_31136_a__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43485__isaa_31136_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43485__isaa_31136_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43485__isaa_31136_a__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43485__isaa_31136_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43485__isaa_31136_a__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43485__isaa_31136_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43485__isaa_31136_a__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43485__isaa_31136_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43485__isaa_31136_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43485__isaa_31136_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43485__isaa_31136_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43485__isaa_31136_a__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43485__isaa_31136_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43485__isaa_31136_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43485__isaa_31136_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43485__isaa_31136_a__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43485__isaa_31136_a__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43485__isaa_31136_a__desc) & (-1 ^ (3))))[4]) = SACp_emal_43485__isaa_31136_a__sz = SAC_size;
      if (!((SACp_emal_43485__isaa_31136_a__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 11809 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 11809 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11809 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 11809 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11809 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 11809 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 11809 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 11809, __extension__ __PRETTY_FUNCTION__); }))
# 11809 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43485__isaa_31136_a = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43485__isaa_31136_a__sz * sizeof (*SACp_emal_43485__isaa_31136_a)); break; case SAC_HM_multi_threaded: SACp_emal_43485__isaa_31136_a = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43485__isaa_31136_a__sz * sizeof (*SACp_emal_43485__isaa_31136_a), 0); break; case SAC_HM_any_threaded: SACp_emal_43485__isaa_31136_a = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43485__isaa_31136_a__sz * sizeof (*SACp_emal_43485__isaa_31136_a), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43485__isaa_31136_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43485__isaa_31136_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43485__isaa_31136_a__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
      { SACp_emal_43485__isaa_31136_a[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_43484__ivesplit_31233 = 0; }; }
    ; ; { SACp_emal_43483__uprf_20222 = (SACp_emal_43488__isaa_31132_b) < (SACp_emal_43486__isaa_31135_a) ? (SACp_emal_43488__isaa_31132_b) : (SACp_emal_43486__isaa_31135_a); };
    if (SACp_emal_43483__uprf_20222 >= 0) { { SACp_emal_43482__uprf_20216 = SACp_emal_43483__uprf_20222; }; SACp_emal_43482__uprf_20216 = 1; } else { SACp_emal_43482__uprf_20216 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_43483__uprf_20222"); }
    if (SACp_emal_43483__uprf_20222 >= 0) { { SACp_emal_43481__uprf_20210 = SACp_emal_43483__uprf_20222; }; SACp_emal_43481__uprf_20210 = 1; } else { SACp_emal_43481__uprf_20210 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_43483__uprf_20222"); }
    { { if (!((1 == SACp_emal_43480__idc_4994__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43480__idc_4994"); }; { { if ((((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994)) + ((6 + (SACp_emal_43480__idc_4994__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994)) + ((6 + (SACp_emal_43480__idc_4994__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994)) + ((6 + (SACp_emal_43480__idc_4994__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43480__idc_4994 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43480__idc_4994 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994)) + ((6 + (SACp_emal_43480__idc_4994__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43480__idc_4994 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43480__idc_4994 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994)) + ((6 + (SACp_emal_43480__idc_4994__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994)) + ((6 + (SACp_emal_43480__idc_4994__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994)) + ((6 + (SACp_emal_43480__idc_4994__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994)) + ((6 + (SACp_emal_43480__idc_4994__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994)) + ((6 + (SACp_emal_43480__idc_4994__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43480__idc_4994 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43480__idc_4994 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43480__idc_4994 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43480__idc_4994 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43480__idc_4994__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43480__idc_4994, SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994), ((6 + (SACp_emal_43480__idc_4994__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43480__idc_4994__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43480__idc_4994__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43480__idc_4994__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43480__idc_4994__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43480__idc_4994__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43480__idc_4994[0] = SACp_emal_43483__uprf_20222; }

    if (SACp_emal_43484__ivesplit_31233 <= SACp_emal_43483__uprf_20222) { SACp_emal_43479__uprf_20204 = 1; } else { SACp_emal_43479__uprf_20204 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Scalar constraint `" "SACp_emal_43484__ivesplit_31233" " (" "%d" ") <= " "SACp_emal_43483__uprf_20222" " (" "%d" ")" "' violated", SACp_emal_43484__ivesplit_31233, SACp_emal_43483__uprf_20222); }
    { ; ; }
    { { SACp_emal_43478__uprf_20203 = SACp_emal_43484__ivesplit_31233; } }
    { { if (!((1 == SACp_emal_43477__idc_4998__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43477__idc_4998"); }; { { if ((((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998)) + ((6 + (SACp_emal_43477__idc_4998__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998)) + ((6 + (SACp_emal_43477__idc_4998__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998)) + ((6 + (SACp_emal_43477__idc_4998__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43477__idc_4998 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43477__idc_4998 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998)) + ((6 + (SACp_emal_43477__idc_4998__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43477__idc_4998 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43477__idc_4998 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998)) + ((6 + (SACp_emal_43477__idc_4998__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998)) + ((6 + (SACp_emal_43477__idc_4998__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998)) + ((6 + (SACp_emal_43477__idc_4998__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998)) + ((6 + (SACp_emal_43477__idc_4998__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998)) + ((6 + (SACp_emal_43477__idc_4998__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43477__idc_4998 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43477__idc_4998 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43477__idc_4998 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43477__idc_4998 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43477__idc_4998__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43477__idc_4998, SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998), ((6 + (SACp_emal_43477__idc_4998__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43477__idc_4998__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43477__idc_4998__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43477__idc_4998__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43477__idc_4998__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43477__idc_4998__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43477__idc_4998[0] = SACp_emal_43478__uprf_20203; }

    { ; ; }
    if (!SACp_emal_43481__uprf_20210) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43479__uprf_20204) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43482__uprf_20216) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_43476__pinl_20105__icc_6985 = ( SACp_emal_43477__idc_4998[SACp_emal_43484__ivesplit_31233]); }

    { { { if (((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43477__idc_4998, ((((SAC_HM_header_t *)SACp_emal_43477__idc_4998) - 1)->data1.arena)); } else { if (SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43477__idc_4998) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43477__idc_4998, ((((SAC_HM_header_t *)SACp_emal_43477__idc_4998) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43477__idc_4998, ((((SAC_HM_header_t *)SACp_emal_43477__idc_4998) - 1)->data1.arena)); } } else { if (((((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43477__idc_4998, ((((SAC_HM_header_t *)SACp_emal_43477__idc_4998) - 1)->data1.arena)); } else { if (((((SACp_emal_43477__idc_4998__sz * sizeof (*SACp_emal_43477__idc_4998))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43477__idc_4998) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43477__idc_4998, ((((SAC_HM_header_t *)SACp_emal_43477__idc_4998) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43477__idc_4998, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43477__idc_4998); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43477__idc_4998); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43477__idc_4998, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43477__idc_4998); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43477__idc_4998); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43477__idc_4998__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_43475__pinl_20108__icc_6991 = ( SACp_emal_43480__idc_4994[SACp_emal_43484__ivesplit_31233]); }

    { { { if (((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43480__idc_4994, ((((SAC_HM_header_t *)SACp_emal_43480__idc_4994) - 1)->data1.arena)); } else { if (SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43480__idc_4994) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43480__idc_4994, ((((SAC_HM_header_t *)SACp_emal_43480__idc_4994) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43480__idc_4994, ((((SAC_HM_header_t *)SACp_emal_43480__idc_4994) - 1)->data1.arena)); } } else { if (((((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43480__idc_4994, ((((SAC_HM_header_t *)SACp_emal_43480__idc_4994) - 1)->data1.arena)); } else { if (((((SACp_emal_43480__idc_4994__sz * sizeof (*SACp_emal_43480__idc_4994))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43480__idc_4994) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43480__idc_4994, ((((SAC_HM_header_t *)SACp_emal_43480__idc_4994) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43480__idc_4994, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43480__idc_4994); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43480__idc_4994); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43480__idc_4994, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43480__idc_4994); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43480__idc_4994); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43480__idc_4994__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_43462__icc_4951__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43462__icc_4951"); }; { if ((((6 + (SACp_emal_43462__icc_4951__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43462__icc_4951__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43462__icc_4951__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43462__icc_4951__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43462__icc_4951__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43462__icc_4951__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43462__icc_4951__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43462__icc_4951__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43462__icc_4951__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43462__icc_4951__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43462__icc_4951__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43462__icc_4951__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43462__icc_4951__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43462__icc_4951__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43462__icc_4951__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43462__icc_4951__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43462__icc_4951__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43462__icc_4951__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43462__icc_4951__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43462__icc_4951__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43462__icc_4951__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43462__icc_4951__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43462__icc_4951__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43475__pinl_20108__icc_6991;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43462__icc_4951__desc) & (-1 ^ (3))))[4]) = SACp_emal_43462__icc_4951__sz = SAC_size;
      if (!((SACp_emal_43462__icc_4951__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 11896 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 11896 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11896 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 11896 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11896 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 11896 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 11896 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 11896, __extension__ __PRETTY_FUNCTION__); }))
# 11896 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43462__icc_4951 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43462__icc_4951__sz * sizeof (*SACp_emal_43462__icc_4951)); break; case SAC_HM_multi_threaded: SACp_emal_43462__icc_4951 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43462__icc_4951__sz * sizeof (*SACp_emal_43462__icc_4951), 0); break; case SAC_HM_any_threaded: SACp_emal_43462__icc_4951 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43462__icc_4951__sz * sizeof (*SACp_emal_43462__icc_4951), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43462__icc_4951__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43462__icc_4951__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43462__icc_4951__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_43462__icc_4951_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_43462__icc_4951_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_43476__pinl_20105__icc_6985;




      SACp_wlidx_42327__icc_4951
        = SAC_schedule_start0 * SAC_SACp_emal_43462__icc_4951_shpfac0;

      { int SAC_stop_SACp_eat_430 = SACp_emal_43476__pinl_20105__icc_6985; for (SACp_eat_430 = 0; SACp_eat_430 < SACp_emal_43476__pinl_20105__icc_6985;) {
     



      if (!((0 == (SACp_emal_43462__icc_4951__dim - SACp_seri_34_index_min__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_43462__icc_4951_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
      { SACp_emal_43462__icc_4951[SACp_wlidx_42327__icc_4951] = SACp_emal_43484__ivesplit_31233; };

      SACp_wlidx_42327__icc_4951 = SACp_wlidx_42327__icc_4951 + 1;
      SACp_eat_430 = SACp_eat_430 + 1;
      } }
# 11966 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_43476__pinl_20105__icc_6985;
      SAC_schedule_stop0 = SACp_emal_43475__pinl_20108__icc_6991;




      SACp_wlidx_42327__icc_4951
        = SAC_schedule_start0 * SAC_SACp_emal_43462__icc_4951_shpfac0;

      { int SAC_stop_SACp_eat_430 = SACp_emal_43475__pinl_20108__icc_6991; for (SACp_eat_430 = SACp_emal_43476__pinl_20105__icc_6985; SACp_eat_430 < SACp_emal_43475__pinl_20108__icc_6991;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_430 >= 0) { { SACp_emal_43472__uprf_20196 = SACp_eat_430; }; SACp_emal_43472__uprf_20196 = 1; } else { SACp_emal_43472__uprf_20196 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_eat_430"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_430 < SACp_emal_43488__isaa_31132_b) { SACp_emal_43471__uprf_20190 = 1; } else { SACp_emal_43471__uprf_20190 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Scalar constraint `" "SACp_eat_430" " (" "%d" ") < " "SACp_emal_43488__isaa_31132_b" " (" "%d" ")" "' violated", SACp_eat_430, SACp_emal_43488__isaa_31132_b); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_430 >= 0) { { SACp_emal_43470__uprf_20181 = SACp_eat_430; }; SACp_emal_43470__uprf_20181 = 1; } else { SACp_emal_43470__uprf_20181 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_eat_430"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_430 < SACp_emal_43486__isaa_31135_a) { SACp_emal_43469__uprf_20175 = 1; } else { SACp_emal_43469__uprf_20175 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Scalar constraint `" "SACp_eat_430" " (" "%d" ") < " "SACp_emal_43486__isaa_31135_a" " (" "%d" ")" "' violated", SACp_eat_430, SACp_emal_43486__isaa_31135_a); }
      { { if (!((1 == SACp_emal_43468__idc_5004__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43468__idc_5004"); }; { { if ((((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004)) + ((6 + (SACp_emal_43468__idc_5004__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004)) + ((6 + (SACp_emal_43468__idc_5004__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004)) + ((6 + (SACp_emal_43468__idc_5004__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43468__idc_5004 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43468__idc_5004 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004)) + ((6 + (SACp_emal_43468__idc_5004__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43468__idc_5004 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43468__idc_5004 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004)) + ((6 + (SACp_emal_43468__idc_5004__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004)) + ((6 + (SACp_emal_43468__idc_5004__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004)) + ((6 + (SACp_emal_43468__idc_5004__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004)) + ((6 + (SACp_emal_43468__idc_5004__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004)) + ((6 + (SACp_emal_43468__idc_5004__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43468__idc_5004 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43468__idc_5004 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43468__idc_5004 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43468__idc_5004 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43468__idc_5004__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43468__idc_5004, SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004), ((6 + (SACp_emal_43468__idc_5004__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43468__idc_5004__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43468__idc_5004__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43468__idc_5004__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_43468__idc_5004__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      if (!((SACp_emal_43468__idc_5004__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_43468__idc_5004[0] = SACp_eat_430; }

      if (!SACp_emal_43471__uprf_20190) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_43472__uprf_20196) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_43467__ivesli_42481 = ( SACp_emal_43468__idc_5004[0]);

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_43466__icc_4939 = ( SACp_emal_43487__isaa_31133_b[SACp_emal_43467__ivesli_42481]); }

      { ; ; }
      if (!SACp_emal_43471__uprf_20190) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_43472__uprf_20196) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      if (!SACp_emal_43469__uprf_20175) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_43470__uprf_20181) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_43465__ivesli_42480 = ( SACp_emal_43468__idc_5004[0]);

      { { { if (((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43468__idc_5004, ((((SAC_HM_header_t *)SACp_emal_43468__idc_5004) - 1)->data1.arena)); } else { if (SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43468__idc_5004) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43468__idc_5004, ((((SAC_HM_header_t *)SACp_emal_43468__idc_5004) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43468__idc_5004, ((((SAC_HM_header_t *)SACp_emal_43468__idc_5004) - 1)->data1.arena)); } } else { if (((((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43468__idc_5004, ((((SAC_HM_header_t *)SACp_emal_43468__idc_5004) - 1)->data1.arena)); } else { if (((((SACp_emal_43468__idc_5004__sz * sizeof (*SACp_emal_43468__idc_5004))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43468__idc_5004) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43468__idc_5004, ((((SAC_HM_header_t *)SACp_emal_43468__idc_5004) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43468__idc_5004, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43468__idc_5004); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43468__idc_5004); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43468__idc_5004, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43468__idc_5004); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43468__idc_5004); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43468__idc_5004__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_43464__icc_4945 = ( SACp_emal_43485__isaa_31136_a[SACp_emal_43465__ivesli_42480]); }

      { ; ; }
      if (!SACp_emal_43469__uprf_20175) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_43470__uprf_20181) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      ; ; { SACp_emal_43464__icc_4945 = (SACp_emal_43464__icc_4945) < (SACp_emal_43466__icc_4939) ? (SACp_emal_43464__icc_4945) : (SACp_emal_43466__icc_4939); };
      { ; ; }



      if (!((0 == (SACp_emal_43462__icc_4951__dim - SACp_seri_34_index_min__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_43462__icc_4951_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
      { SACp_emal_43462__icc_4951[SACp_wlidx_42327__icc_4951] = SACp_emal_43464__icc_4945; };

      { ; ; }
      SACp_wlidx_42327__icc_4951 = SACp_wlidx_42327__icc_4951 + 1;
      SACp_eat_430 = SACp_eat_430 + 1;
      } }
# 12119 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_48542_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_43481__uprf_20210) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43479__uprf_20204) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43482__uprf_20216) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43462__icc_4951__sz; SAC_i++) { if (( SACp_emal_43462__icc_4951[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_43462__icc_4951"); } { SACp_emal_43461__icc_4971_pred = ( SACp_emal_43462__icc_4951[SAC_i]); }; } SACp_emal_43461__icc_4971_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43462__icc_4951__sz; SAC_i++) { if (( SACp_emal_43462__icc_4951[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_43462__icc_4951"); } { SACp_emal_43460__icc_4976_pred = ( SACp_emal_43462__icc_4951[SAC_i]); }; } SACp_emal_43460__icc_4976_pred = SAC_all; }
    { { if (!((1 == SACp_emal_43459__flat_199__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43459__flat_199"); }; { if ((((6 + (SACp_emal_43459__flat_199__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43459__flat_199__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43459__flat_199__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43459__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43459__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43459__flat_199__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43459__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43459__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43459__flat_199__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43459__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43459__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43459__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43459__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43459__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43459__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43459__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43459__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43459__flat_199__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43459__flat_199__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43459__flat_199__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43459__flat_199__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43459__flat_199__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43459__flat_199__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43462__icc_4951__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43459__flat_199__desc) & (-1 ^ (3))))[4]) = SACp_emal_43459__flat_199__sz = SAC_size * SACp_emal_43462__icc_4951__sz;
      if (!((SACp_emal_43459__flat_199__sz >= 0))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12150 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12150 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12150 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12150 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12150 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12150 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12150 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12150, __extension__ __PRETTY_FUNCTION__); }))
# 12150 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43459__flat_199 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43459__flat_199__sz * sizeof (*SACp_emal_43459__flat_199)); break; case SAC_HM_multi_threaded: SACp_emal_43459__flat_199 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43459__flat_199__sz * sizeof (*SACp_emal_43459__flat_199), 0); break; case SAC_HM_any_threaded: SACp_emal_43459__flat_199 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43459__flat_199__sz * sizeof (*SACp_emal_43459__flat_199), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43459__flat_199__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43459__flat_199__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43459__flat_199__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_43459__flat_199__sz; SAC_i++) { { SACp_emal_43459__flat_199[SAC_i] = (( SACp_emal_43462__icc_4951[SAC_i])) * (0); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43459__flat_199__sz; SAC_i++) { if (( SACp_emal_43459__flat_199[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_43459__flat_199"); } { SACp_emal_43458__icc_4970_pred = ( SACp_emal_43459__flat_199[SAC_i]); }; } SACp_emal_43458__icc_4970_pred = SAC_all; }
        if (SACp_emal_43459__flat_199__dim != SACp_emal_43462__icc_4951__dim) {
      SACp_emal_43457__icc_4972_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Arrays `" "SACp_emal_43459__flat_199""' with shape %s ""And `" "SACp_emal_43462__icc_4951""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_43459__flat_199__desc), SAC_PrintShape (SACp_emal_43462__icc_4951__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_43459__flat_199__shp0 != SACp_emal_43462__icc_4951__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Arrays `" "SACp_emal_43459__flat_199""' with shape %s ""And `" "SACp_emal_43462__icc_4951""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_43459__flat_199__desc), SAC_PrintShape (SACp_emal_43462__icc_4951__desc));
      }
      SACp_emal_43457__icc_4972_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43459__flat_199__sz && SAC_i < SACp_emal_43462__icc_4951__sz; SAC_i++) { if (( SACp_emal_43459__flat_199[SAC_i]) > ( SACp_emal_43462__icc_4951[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Vector constraint `" "SACp_emal_43459__flat_199" " < " "SACp_emal_43462__icc_4951" "' violated"); } } SACp_emal_43456__icc_4973_pred = SAC_all; }
    if (!SACp_emal_43460__icc_4976_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43456__icc_4973_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43457__icc_4972_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43461__icc_4971_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43458__icc_4970_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_43455__icc_4983 = SACp_emal_43484__ivesplit_31233; } }
    { { if (!((1 == SACp_emal_43454__pinl_10232_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43454__pinl_10232_new_shape"); }; { if ((((6 + (SACp_emal_43454__pinl_10232_new_shape__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43454__pinl_10232_new_shape__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43454__pinl_10232_new_shape__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43454__pinl_10232_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43454__pinl_10232_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43454__pinl_10232_new_shape__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43454__pinl_10232_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43454__pinl_10232_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43454__pinl_10232_new_shape__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43454__pinl_10232_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43454__pinl_10232_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43454__pinl_10232_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43454__pinl_10232_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43454__pinl_10232_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43454__pinl_10232_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43454__pinl_10232_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43454__pinl_10232_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43454__pinl_10232_new_shape__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43454__pinl_10232_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43454__pinl_10232_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_43487__isaa_31133_b__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_43454__pinl_10232_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43454__pinl_10232_new_shape__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43454__pinl_10232_new_shape__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43487__isaa_31133_b__sz - (((SACp_emal_43475__pinl_20108__icc_6991) < 0) ? (-(SACp_emal_43475__pinl_20108__icc_6991)) : (SACp_emal_43475__pinl_20108__icc_6991));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43454__pinl_10232_new_shape__desc) & (-1 ^ (3))))[4]) = SACp_emal_43454__pinl_10232_new_shape__sz = SAC_size;
      if (!((SACp_emal_43454__pinl_10232_new_shape__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12200 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12200 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12200 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12200 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12200 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12200 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12200 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12200, __extension__ __PRETTY_FUNCTION__); }))
# 12200 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43454__pinl_10232_new_shape = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43454__pinl_10232_new_shape__sz * sizeof (*SACp_emal_43454__pinl_10232_new_shape)); break; case SAC_HM_multi_threaded: SACp_emal_43454__pinl_10232_new_shape = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43454__pinl_10232_new_shape__sz * sizeof (*SACp_emal_43454__pinl_10232_new_shape), 0); break; case SAC_HM_any_threaded: SACp_emal_43454__pinl_10232_new_shape = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43454__pinl_10232_new_shape__sz * sizeof (*SACp_emal_43454__pinl_10232_new_shape), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43454__pinl_10232_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43454__pinl_10232_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43454__pinl_10232_new_shape__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 12207 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 12207 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_43475__pinl_20108__icc_6991;
      SAC_cond = (SACp_emal_43475__pinl_20108__icc_6991 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_43487__isaa_31133_b__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_43487__isaa_31133_b__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_43454__pinl_10232_new_shape[SAC_i] = ( SACp_emal_43487__isaa_31133_b[SAC_off + SAC_i]); };
      }
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43454__pinl_10232_new_shape__sz; SAC_i++) { if (( SACp_emal_43454__pinl_10232_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_43454__pinl_10232_new_shape"); } { SACp_emal_43453__pinl_10241__icc_5145_pred = ( SACp_emal_43454__pinl_10232_new_shape[SAC_i]); }; } SACp_emal_43453__pinl_10241__icc_5145_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43454__pinl_10232_new_shape__sz; SAC_i++) { if (( SACp_emal_43454__pinl_10232_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Non-negativity constraint violated " "for vector " "SACp_emal_43454__pinl_10232_new_shape"); } { SACp_emal_43452__pinl_10248__icc_5150_pred = ( SACp_emal_43454__pinl_10232_new_shape[SAC_i]); }; } SACp_emal_43452__pinl_10248__icc_5150_pred = SAC_all; }
    { { if (!((1 == SACp_emal_43451__pinl_10230__flat_322__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43451__pinl_10230__flat_322"); }; { if ((((6 + (SACp_emal_43451__pinl_10230__flat_322__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43451__pinl_10230__flat_322__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43451__pinl_10230__flat_322__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43451__pinl_10230__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43451__pinl_10230__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43451__pinl_10230__flat_322__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43451__pinl_10230__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43451__pinl_10230__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43451__pinl_10230__flat_322__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43451__pinl_10230__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43451__pinl_10230__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43451__pinl_10230__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43451__pinl_10230__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43451__pinl_10230__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43451__pinl_10230__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43451__pinl_10230__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43451__pinl_10230__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43451__pinl_10230__flat_322__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43451__pinl_10230__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43451__pinl_10230__flat_322__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43451__pinl_10230__flat_322__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43451__pinl_10230__flat_322__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43451__pinl_10230__flat_322__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43454__pinl_10232_new_shape__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43451__pinl_10230__flat_322__desc) & (-1 ^ (3))))[4]) = SACp_emal_43451__pinl_10230__flat_322__sz = SAC_size * SACp_emal_43454__pinl_10232_new_shape__sz;
      if (!((SACp_emal_43451__pinl_10230__flat_322__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12240 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12240 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12240 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12240 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12240 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12240 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12240 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12240, __extension__ __PRETTY_FUNCTION__); }))
# 12240 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43451__pinl_10230__flat_322 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43451__pinl_10230__flat_322__sz * sizeof (*SACp_emal_43451__pinl_10230__flat_322)); break; case SAC_HM_multi_threaded: SACp_emal_43451__pinl_10230__flat_322 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43451__pinl_10230__flat_322__sz * sizeof (*SACp_emal_43451__pinl_10230__flat_322), 0); break; case SAC_HM_any_threaded: SACp_emal_43451__pinl_10230__flat_322 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43451__pinl_10230__flat_322__sz * sizeof (*SACp_emal_43451__pinl_10230__flat_322), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43451__pinl_10230__flat_322__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43451__pinl_10230__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43451__pinl_10230__flat_322__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_43451__pinl_10230__flat_322__sz; SAC_i++) { { SACp_emal_43451__pinl_10230__flat_322[SAC_i] = (0) * (( SACp_emal_43454__pinl_10232_new_shape[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43451__pinl_10230__flat_322__sz; SAC_i++) { if (( SACp_emal_43451__pinl_10230__flat_322[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_43451__pinl_10230__flat_322"); } { SACp_emal_43450__pinl_10250__icc_5144_pred = ( SACp_emal_43451__pinl_10230__flat_322[SAC_i]); }; } SACp_emal_43450__pinl_10250__icc_5144_pred = SAC_all; }
        if (SACp_emal_43451__pinl_10230__flat_322__dim != SACp_emal_43454__pinl_10232_new_shape__dim) {
      SACp_emal_43449__pinl_10252__icc_5146_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_43451__pinl_10230__flat_322""' with shape %s ""And `" "SACp_emal_43454__pinl_10232_new_shape""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_43451__pinl_10230__flat_322__desc), SAC_PrintShape (SACp_emal_43454__pinl_10232_new_shape__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_43451__pinl_10230__flat_322__shp0 != SACp_emal_43454__pinl_10232_new_shape__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_43451__pinl_10230__flat_322""' with shape %s ""And `" "SACp_emal_43454__pinl_10232_new_shape""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_43451__pinl_10230__flat_322__desc), SAC_PrintShape (SACp_emal_43454__pinl_10232_new_shape__desc));
      }
      SACp_emal_43449__pinl_10252__icc_5146_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43451__pinl_10230__flat_322__sz && SAC_i < SACp_emal_43454__pinl_10232_new_shape__sz; SAC_i++) { if (( SACp_emal_43451__pinl_10230__flat_322[SAC_i]) > ( SACp_emal_43454__pinl_10232_new_shape[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Vector constraint `" "SACp_emal_43451__pinl_10230__flat_322" " < " "SACp_emal_43454__pinl_10232_new_shape" "' violated"); } } SACp_emal_43448__pinl_10255__icc_5147_pred = SAC_all; }
    if (!SACp_emal_43452__pinl_10248__icc_5150_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43448__pinl_10255__icc_5147_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43449__pinl_10252__icc_5146_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43453__pinl_10241__icc_5145_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43450__pinl_10250__icc_5144_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { { if (!((1 == SACp_emal_43447__pinl_10283_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43447__pinl_10283_new_shape"); }; { if ((((6 + (SACp_emal_43447__pinl_10283_new_shape__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43447__pinl_10283_new_shape__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43447__pinl_10283_new_shape__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43447__pinl_10283_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43447__pinl_10283_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43447__pinl_10283_new_shape__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43447__pinl_10283_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43447__pinl_10283_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43447__pinl_10283_new_shape__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43447__pinl_10283_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43447__pinl_10283_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43447__pinl_10283_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43447__pinl_10283_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43447__pinl_10283_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43447__pinl_10283_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43447__pinl_10283_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43447__pinl_10283_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43447__pinl_10283_new_shape__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43447__pinl_10283_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43447__pinl_10283_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_43485__isaa_31136_a__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_43447__pinl_10283_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43447__pinl_10283_new_shape__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43447__pinl_10283_new_shape__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43485__isaa_31136_a__sz - (((SACp_emal_43475__pinl_20108__icc_6991) < 0) ? (-(SACp_emal_43475__pinl_20108__icc_6991)) : (SACp_emal_43475__pinl_20108__icc_6991));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43447__pinl_10283_new_shape__desc) & (-1 ^ (3))))[4]) = SACp_emal_43447__pinl_10283_new_shape__sz = SAC_size;
      if (!((SACp_emal_43447__pinl_10283_new_shape__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12281 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12281 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12281 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12281 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12281 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12281 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12281 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12281, __extension__ __PRETTY_FUNCTION__); }))
# 12281 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43447__pinl_10283_new_shape = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43447__pinl_10283_new_shape__sz * sizeof (*SACp_emal_43447__pinl_10283_new_shape)); break; case SAC_HM_multi_threaded: SACp_emal_43447__pinl_10283_new_shape = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43447__pinl_10283_new_shape__sz * sizeof (*SACp_emal_43447__pinl_10283_new_shape), 0); break; case SAC_HM_any_threaded: SACp_emal_43447__pinl_10283_new_shape = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43447__pinl_10283_new_shape__sz * sizeof (*SACp_emal_43447__pinl_10283_new_shape), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43447__pinl_10283_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43447__pinl_10283_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43447__pinl_10283_new_shape__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 12288 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 12288 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_43475__pinl_20108__icc_6991;
      SAC_cond = (SACp_emal_43475__pinl_20108__icc_6991 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_43485__isaa_31136_a__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_43485__isaa_31136_a__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_43447__pinl_10283_new_shape[SAC_i] = ( SACp_emal_43485__isaa_31136_a[SAC_off + SAC_i]); };
      }
    }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43447__pinl_10283_new_shape__sz; SAC_i++) { if (( SACp_emal_43447__pinl_10283_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_43447__pinl_10283_new_shape"); } { SACp_emal_43446__pinl_10292__icc_5145_pred = ( SACp_emal_43447__pinl_10283_new_shape[SAC_i]); }; } SACp_emal_43446__pinl_10292__icc_5145_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43447__pinl_10283_new_shape__sz; SAC_i++) { if (( SACp_emal_43447__pinl_10283_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Non-negativity constraint violated " "for vector " "SACp_emal_43447__pinl_10283_new_shape"); } { SACp_emal_43445__pinl_10299__icc_5150_pred = ( SACp_emal_43447__pinl_10283_new_shape[SAC_i]); }; } SACp_emal_43445__pinl_10299__icc_5150_pred = SAC_all; }
    { { if (!((1 == SACp_emal_43444__pinl_10281__flat_322__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43444__pinl_10281__flat_322"); }; { if ((((6 + (SACp_emal_43444__pinl_10281__flat_322__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43444__pinl_10281__flat_322__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43444__pinl_10281__flat_322__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43444__pinl_10281__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43444__pinl_10281__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43444__pinl_10281__flat_322__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43444__pinl_10281__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43444__pinl_10281__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43444__pinl_10281__flat_322__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43444__pinl_10281__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43444__pinl_10281__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43444__pinl_10281__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43444__pinl_10281__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43444__pinl_10281__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43444__pinl_10281__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43444__pinl_10281__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43444__pinl_10281__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43444__pinl_10281__flat_322__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43444__pinl_10281__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43444__pinl_10281__flat_322__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43444__pinl_10281__flat_322__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43444__pinl_10281__flat_322__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43444__pinl_10281__flat_322__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43447__pinl_10283_new_shape__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43444__pinl_10281__flat_322__desc) & (-1 ^ (3))))[4]) = SACp_emal_43444__pinl_10281__flat_322__sz = SAC_size * SACp_emal_43447__pinl_10283_new_shape__sz;
      if (!((SACp_emal_43444__pinl_10281__flat_322__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12322 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12322 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12322 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12322 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12322 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12322 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12322 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12322, __extension__ __PRETTY_FUNCTION__); }))
# 12322 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43444__pinl_10281__flat_322 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43444__pinl_10281__flat_322__sz * sizeof (*SACp_emal_43444__pinl_10281__flat_322)); break; case SAC_HM_multi_threaded: SACp_emal_43444__pinl_10281__flat_322 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43444__pinl_10281__flat_322__sz * sizeof (*SACp_emal_43444__pinl_10281__flat_322), 0); break; case SAC_HM_any_threaded: SACp_emal_43444__pinl_10281__flat_322 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43444__pinl_10281__flat_322__sz * sizeof (*SACp_emal_43444__pinl_10281__flat_322), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43444__pinl_10281__flat_322__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43444__pinl_10281__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43444__pinl_10281__flat_322__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_43444__pinl_10281__flat_322__sz; SAC_i++) { { SACp_emal_43444__pinl_10281__flat_322[SAC_i] = (0) * (( SACp_emal_43447__pinl_10283_new_shape[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43444__pinl_10281__flat_322__sz; SAC_i++) { if (( SACp_emal_43444__pinl_10281__flat_322[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_43444__pinl_10281__flat_322"); } { SACp_emal_43443__pinl_10301__icc_5144_pred = ( SACp_emal_43444__pinl_10281__flat_322[SAC_i]); }; } SACp_emal_43443__pinl_10301__icc_5144_pred = SAC_all; }
        if (SACp_emal_43444__pinl_10281__flat_322__dim != SACp_emal_43447__pinl_10283_new_shape__dim) {
      SACp_emal_43442__pinl_10303__icc_5146_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_43444__pinl_10281__flat_322""' with shape %s ""And `" "SACp_emal_43447__pinl_10283_new_shape""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_43444__pinl_10281__flat_322__desc), SAC_PrintShape (SACp_emal_43447__pinl_10283_new_shape__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_43444__pinl_10281__flat_322__shp0 != SACp_emal_43447__pinl_10283_new_shape__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_43444__pinl_10281__flat_322""' with shape %s ""And `" "SACp_emal_43447__pinl_10283_new_shape""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_43444__pinl_10281__flat_322__desc), SAC_PrintShape (SACp_emal_43447__pinl_10283_new_shape__desc));
      }
      SACp_emal_43442__pinl_10303__icc_5146_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43444__pinl_10281__flat_322__sz && SAC_i < SACp_emal_43447__pinl_10283_new_shape__sz; SAC_i++) { if (( SACp_emal_43444__pinl_10281__flat_322[SAC_i]) > ( SACp_emal_43447__pinl_10283_new_shape[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Vector constraint `" "SACp_emal_43444__pinl_10281__flat_322" " < " "SACp_emal_43447__pinl_10283_new_shape" "' violated"); } } SACp_emal_43441__pinl_10306__icc_5147_pred = SAC_all; }
    if (!SACp_emal_43445__pinl_10299__icc_5150_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43441__pinl_10306__icc_5147_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43442__pinl_10303__icc_5146_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43446__pinl_10292__icc_5145_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43443__pinl_10301__icc_5144_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { { if (!(((SACp_emal_43462__icc_4951__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43411__icc_4987"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12345 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12345 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12345 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12345 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12345 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12345 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12345 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12345, __extension__ __PRETTY_FUNCTION__); }))
# 12345 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43411__icc_4987__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_43462__icc_4951__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43411__icc_4987__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_43462__icc_4951__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43411__icc_4987__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_43462__icc_4951__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[3]) = SACp_emal_43411__icc_4987__dim = (SACp_emal_43462__icc_4951__sz) + (0); }



   
    if (!((SACp_emal_43462__icc_4951__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_43411__icc_4987__dim == SACp_emal_43462__icc_4951__sz + (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_43462__icc_4951__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_43462__icc_4951[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[4]) = SACp_emal_43411__icc_4987__sz = SAC_size;
      if (!((SACp_emal_43411__icc_4987__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12365 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12365 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12365 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12365 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12365 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12365 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12365 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12365, __extension__ __PRETTY_FUNCTION__); }))
# 12365 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43411__icc_4987 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43411__icc_4987__sz * sizeof (*SACp_emal_43411__icc_4987)); break; case SAC_HM_multi_threaded: SACp_emal_43411__icc_4987 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43411__icc_4987__sz * sizeof (*SACp_emal_43411__icc_4987), 0); break; case SAC_HM_any_threaded: SACp_emal_43411__icc_4987 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43411__icc_4987__sz * sizeof (*SACp_emal_43411__icc_4987), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACl_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACl_iv"); }; { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACl_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACl_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACl_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43459__flat_199__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[4]) = SACl_iv__sz = SAC_size * SACp_emal_43459__flat_199__sz;
      if (!((SACl_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12380 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12380 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12380 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12380 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12380 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12380 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12380 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12380, __extension__ __PRETTY_FUNCTION__); }))
# 12380 "/home/rubenhensen/sac/a.out.c"
   ; SACl_iv = (int *)SAC_HM_MallocAnyChunk_st (SACl_iv__sz * sizeof (*SACl_iv)); break; case SAC_HM_multi_threaded: SACl_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACl_iv__sz * sizeof (*SACl_iv), 0); break; case SAC_HM_any_threaded: SACl_iv = (int *)SAC_HM_MallocAnyChunk_at (SACl_iv__sz * sizeof (*SACl_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACl_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACl_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_43411__icc_4987__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_43411__icc_4987_shpfac0; SAC_d = SACp_emal_43411__icc_4987__dim - 1; SACp_wlidx_42328__icc_4987 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_43411__icc_4987_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_43459__flat_199[SAC_d]) <= ( SACl_iv[SAC_d])) && (( SACl_iv[SAC_d]) < ( SACp_emal_43462__icc_4951[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!(((SACp_emal_43454__pinl_10232_new_shape__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43430__pinl_10224__icc_5162"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12395 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12395 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12395 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12395 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12395 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12395 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12395 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12395, __extension__ __PRETTY_FUNCTION__); }))
# 12395 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43430__pinl_10224__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_43454__pinl_10232_new_shape__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43430__pinl_10224__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_43454__pinl_10232_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43430__pinl_10224__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_43454__pinl_10232_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[3]) = SACp_emal_43430__pinl_10224__icc_5162__dim = (SACp_emal_43454__pinl_10232_new_shape__sz) + (0); }



   
    if (!((SACp_emal_43454__pinl_10232_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_43430__pinl_10224__icc_5162__dim == SACp_emal_43454__pinl_10232_new_shape__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_43454__pinl_10232_new_shape__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_43454__pinl_10232_new_shape[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[4]) = SACp_emal_43430__pinl_10224__icc_5162__sz = SAC_size;
      if (!((SACp_emal_43430__pinl_10224__icc_5162__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12415 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12415 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12415 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12415 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12415 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12415 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12415 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12415, __extension__ __PRETTY_FUNCTION__); }))
# 12415 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43430__pinl_10224__icc_5162 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43430__pinl_10224__icc_5162__sz * sizeof (*SACp_emal_43430__pinl_10224__icc_5162)); break; case SAC_HM_multi_threaded: SACp_emal_43430__pinl_10224__icc_5162 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43430__pinl_10224__icc_5162__sz * sizeof (*SACp_emal_43430__pinl_10224__icc_5162), 0); break; case SAC_HM_any_threaded: SACp_emal_43430__pinl_10224__icc_5162 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43430__pinl_10224__icc_5162__sz * sizeof (*SACp_emal_43430__pinl_10224__icc_5162), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_10233_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_10233_iv"); }; { if ((((6 + (SACp_pinl_10233_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_10233_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_10233_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_10233_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_10233_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_10233_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_10233_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_10233_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_10233_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_10233_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_10233_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_10233_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_10233_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_10233_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_10233_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_10233_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_10233_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10233_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10233_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10233_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_10233_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_10233_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10233_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43451__pinl_10230__flat_322__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10233_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_10233_iv__sz = SAC_size * SACp_emal_43451__pinl_10230__flat_322__sz;
      if (!((SACp_pinl_10233_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12430 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12430 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12430 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12430 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12430 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12430 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12430 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12430, __extension__ __PRETTY_FUNCTION__); }))
# 12430 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_10233_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_10233_iv__sz * sizeof (*SACp_pinl_10233_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_10233_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_10233_iv__sz * sizeof (*SACp_pinl_10233_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_10233_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_10233_iv__sz * sizeof (*SACp_pinl_10233_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10233_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10233_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10233_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_10233_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_10233_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_43430__pinl_10224__icc_5162__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_43430__pinl_10224__icc_5162_shpfac0; SAC_d = SACp_emal_43430__pinl_10224__icc_5162__dim - 1; SACp_wlidx_42329__pinl_10224__icc_5162 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_43430__pinl_10224__icc_5162_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_43451__pinl_10230__flat_322[SAC_d]) <= ( SACp_pinl_10233_iv[SAC_d])) && (( SACp_pinl_10233_iv[SAC_d]) < ( SACp_emal_43454__pinl_10232_new_shape[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!((1 == SACp_emal_43436__pinl_10234_new_idx__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43436__pinl_10234_new_idx"); }; { if ((((6 + (SACp_emal_43436__pinl_10234_new_idx__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43436__pinl_10234_new_idx__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43436__pinl_10234_new_idx__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43436__pinl_10234_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43436__pinl_10234_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43436__pinl_10234_new_idx__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43436__pinl_10234_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43436__pinl_10234_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43436__pinl_10234_new_idx__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43436__pinl_10234_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43436__pinl_10234_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43436__pinl_10234_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43436__pinl_10234_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43436__pinl_10234_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43436__pinl_10234_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43436__pinl_10234_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43436__pinl_10234_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43436__pinl_10234_new_idx__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43436__pinl_10234_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43436__pinl_10234_new_idx__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACl_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_pinl_10233_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_43436__pinl_10234_new_idx__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43436__pinl_10234_new_idx__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43436__pinl_10234_new_idx__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_iv__sz + SACp_pinl_10233_iv__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43436__pinl_10234_new_idx__desc) & (-1 ^ (3))))[4]) = SACp_emal_43436__pinl_10234_new_idx__sz = SAC_size;
      if (!((SACp_emal_43436__pinl_10234_new_idx__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12463 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12463 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12463 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12463 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12463 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12463 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12463 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12463, __extension__ __PRETTY_FUNCTION__); }))
# 12463 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43436__pinl_10234_new_idx = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43436__pinl_10234_new_idx__sz * sizeof (*SACp_emal_43436__pinl_10234_new_idx)); break; case SAC_HM_multi_threaded: SACp_emal_43436__pinl_10234_new_idx = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43436__pinl_10234_new_idx__sz * sizeof (*SACp_emal_43436__pinl_10234_new_idx), 0); break; case SAC_HM_any_threaded: SACp_emal_43436__pinl_10234_new_idx = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43436__pinl_10234_new_idx__sz * sizeof (*SACp_emal_43436__pinl_10234_new_idx), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43436__pinl_10234_new_idx__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43436__pinl_10234_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43436__pinl_10234_new_idx__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACl_iv__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_43436__pinl_10234_new_idx[SAC_i] = ( SACl_iv[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_pinl_10233_iv__sz; SAC_i++) { { SACp_emal_43436__pinl_10234_new_idx[SAC_off + SAC_i] = ( SACp_pinl_10233_iv[SAC_i]); }; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    if ((SACp_emal_43436__pinl_10234_new_idx__dim == 1) && (SACp_emal_43436__pinl_10234_new_idx__shp0 == SACl_b__dim)) { SACp_emal_43435__pinl_10257__icc_5151_pred = 1; } else { SACp_emal_43435__pinl_10257__icc_5151_pred = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays " "SACp_emal_43436__pinl_10234_new_idx" " and " "SACl_b" " do not adhere to shape matches dim constraint"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43436__pinl_10234_new_idx__sz; SAC_i++) { if (( SACp_emal_43436__pinl_10234_new_idx[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for vector " "SACp_emal_43436__pinl_10234_new_idx"); } { SACp_emal_43434__pinl_10259__icc_5152_pred = ( SACp_emal_43436__pinl_10234_new_idx[SAC_i]); }; } SACp_emal_43434__pinl_10259__icc_5152_pred = SAC_all; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }



    if ((SACp_emal_43436__pinl_10234_new_idx__dim != 1) && (SACp_emal_43436__pinl_10234_new_idx__shp0 != SACl_b__dim)) {
      SACp_emal_43433__pinl_10261__icc_5153_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_43436__pinl_10234_new_idx""' with shape %s ""And `" "SACl_b""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_43436__pinl_10234_new_idx__desc), SAC_PrintShape (SACl_b__desc));
    }
    else {
      int SAC_all = 1; for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
        if (( SACp_emal_43436__pinl_10234_new_idx[SAC_i]) >= (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))])) {
          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_43436__pinl_10234_new_idx""' with shape %s ""And `" "SACl_b""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_43436__pinl_10234_new_idx__desc), SAC_PrintShape (SACl_b__desc));
        }
      }
      SACp_emal_43433__pinl_10261__icc_5153_pred = SAC_all;
    }

    if (!SACp_emal_43433__pinl_10261__icc_5153_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43434__pinl_10259__icc_5152_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43435__pinl_10257__icc_5151_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      for (SAC_i = 0; SAC_i < SACp_emal_43436__pinl_10234_new_idx__sz; SAC_i++)
      {

        SAC_l = ( SACp_emal_43487__isaa_31133_b[SAC_i]) * SAC_l + ( SACp_emal_43436__pinl_10234_new_idx[SAC_i]);
      }
      for (SAC_i = SACp_emal_43436__pinl_10234_new_idx__sz; SAC_i < SACp_emal_43487__isaa_31133_b__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_43487__isaa_31133_b[SAC_i]);
      }
      SACp_emal_43432__ivesli_42479 = SAC_l;
    }

    { { free (SACp_emal_43436__pinl_10234_new_idx); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43436__pinl_10234_new_idx__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_43431__pinl_10220__icc_5156 = ( SACl_b[SACp_emal_43432__ivesli_42479]); }

    { ; ; }
    if (!SACp_emal_43433__pinl_10261__icc_5153_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43434__pinl_10259__icc_5152_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43435__pinl_10257__icc_5151_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_43430__pinl_10224__icc_5162__dim - SACp_pinl_10233_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_43430__pinl_10224__icc_5162_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal size found!"); };
    { SACp_emal_43430__pinl_10224__icc_5162[SACp_wlidx_42329__pinl_10224__icc_5162] = SACp_emal_43431__pinl_10220__icc_5156; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_43430__pinl_10224__icc_5162__dim - SACp_pinl_10233_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_43430__pinl_10224__icc_5162_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal size found!"); };
    { SACp_emal_43430__pinl_10224__icc_5162[SACp_wlidx_42329__pinl_10224__icc_5162] = SACp_emal_43484__ivesplit_31233; };

    }
    SACp_wlidx_42329__pinl_10224__icc_5162 = SACp_wlidx_42329__pinl_10224__icc_5162 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_10233_iv[SAC_d] = ( SACp_pinl_10233_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_10233_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_10233_iv[SAC_d] = 0; SAC_d--; SACp_pinl_10233_iv[SAC_d] = ( SACp_pinl_10233_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_10233_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_10233_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10233_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_43452__pinl_10248__icc_5150_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43448__pinl_10255__icc_5147_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43449__pinl_10252__icc_5146_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43453__pinl_10241__icc_5145_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43450__pinl_10250__icc_5144_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Assignment with incompatible types found"); };
    ;

    }
        if (SACp_emal_43430__pinl_10224__icc_5162__dim != 0) {
      SACp_emal_43429__icc_4978_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Array `" "SACp_emal_43430__pinl_10224__icc_5162""' with shape %s ""does not adhere to `dim == 0' constraint", SAC_PrintShape (SACp_emal_43430__pinl_10224__icc_5162__desc));
    }
    else {
      if (0)
      {

        SACp_emal_43429__icc_4978_pred = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Array `" "SACp_emal_43430__pinl_10224__icc_5162""' with shape %s ""does not adhere to `shp == []' constraint", SAC_PrintShape (SACp_emal_43430__pinl_10224__icc_5162__desc));
      }
      else {
        SACp_emal_43429__icc_4978_pred = 1;
      }
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_43430__pinl_10224__icc_5162__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_43428__idc_5029 = ( SACp_emal_43430__pinl_10224__icc_5162[0]); } }
    { { free (SACp_emal_43430__pinl_10224__icc_5162); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43430__pinl_10224__icc_5162__desc) & (-1 ^ (3))))); } } }
    { { if (!(((SACp_emal_43447__pinl_10283_new_shape__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43419__pinl_10275__icc_5162"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12623 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12623 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12623 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12623 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12623 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12623 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12623 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12623, __extension__ __PRETTY_FUNCTION__); }))
# 12623 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43419__pinl_10275__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_43447__pinl_10283_new_shape__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43419__pinl_10275__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_43447__pinl_10283_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43419__pinl_10275__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_43447__pinl_10283_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[3]) = SACp_emal_43419__pinl_10275__icc_5162__dim = (SACp_emal_43447__pinl_10283_new_shape__sz) + (0); }



   
    if (!((SACp_emal_43447__pinl_10283_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_43419__pinl_10275__icc_5162__dim == SACp_emal_43447__pinl_10283_new_shape__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_43447__pinl_10283_new_shape__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_43447__pinl_10283_new_shape[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[4]) = SACp_emal_43419__pinl_10275__icc_5162__sz = SAC_size;
      if (!((SACp_emal_43419__pinl_10275__icc_5162__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12643 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12643 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12643 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12643 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12643 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12643 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12643 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12643, __extension__ __PRETTY_FUNCTION__); }))
# 12643 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43419__pinl_10275__icc_5162 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43419__pinl_10275__icc_5162__sz * sizeof (*SACp_emal_43419__pinl_10275__icc_5162)); break; case SAC_HM_multi_threaded: SACp_emal_43419__pinl_10275__icc_5162 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43419__pinl_10275__icc_5162__sz * sizeof (*SACp_emal_43419__pinl_10275__icc_5162), 0); break; case SAC_HM_any_threaded: SACp_emal_43419__pinl_10275__icc_5162 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43419__pinl_10275__icc_5162__sz * sizeof (*SACp_emal_43419__pinl_10275__icc_5162), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_10284_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_10284_iv"); }; { if ((((6 + (SACp_pinl_10284_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_10284_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_10284_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_10284_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_10284_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_10284_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_10284_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_10284_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_10284_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_10284_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_10284_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_10284_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_10284_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_10284_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_10284_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_10284_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_10284_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10284_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10284_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10284_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_10284_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_10284_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10284_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43444__pinl_10281__flat_322__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10284_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_10284_iv__sz = SAC_size * SACp_emal_43444__pinl_10281__flat_322__sz;
      if (!((SACp_pinl_10284_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12658 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12658 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12658 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12658 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12658 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12658 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12658 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12658, __extension__ __PRETTY_FUNCTION__); }))
# 12658 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_10284_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_10284_iv__sz * sizeof (*SACp_pinl_10284_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_10284_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_10284_iv__sz * sizeof (*SACp_pinl_10284_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_10284_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_10284_iv__sz * sizeof (*SACp_pinl_10284_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10284_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10284_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10284_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_10284_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_10284_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_43419__pinl_10275__icc_5162__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_43419__pinl_10275__icc_5162_shpfac0; SAC_d = SACp_emal_43419__pinl_10275__icc_5162__dim - 1; SACp_wlidx_42330__pinl_10275__icc_5162 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_43419__pinl_10275__icc_5162_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_43444__pinl_10281__flat_322[SAC_d]) <= ( SACp_pinl_10284_iv[SAC_d])) && (( SACp_pinl_10284_iv[SAC_d]) < ( SACp_emal_43447__pinl_10283_new_shape[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!((1 == SACp_emal_43425__pinl_10285_new_idx__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43425__pinl_10285_new_idx"); }; { if ((((6 + (SACp_emal_43425__pinl_10285_new_idx__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43425__pinl_10285_new_idx__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43425__pinl_10285_new_idx__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43425__pinl_10285_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43425__pinl_10285_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43425__pinl_10285_new_idx__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43425__pinl_10285_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43425__pinl_10285_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43425__pinl_10285_new_idx__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43425__pinl_10285_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43425__pinl_10285_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43425__pinl_10285_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43425__pinl_10285_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43425__pinl_10285_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43425__pinl_10285_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43425__pinl_10285_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43425__pinl_10285_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43425__pinl_10285_new_idx__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43425__pinl_10285_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43425__pinl_10285_new_idx__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACl_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_pinl_10284_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_43425__pinl_10285_new_idx__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43425__pinl_10285_new_idx__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43425__pinl_10285_new_idx__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_iv__sz + SACp_pinl_10284_iv__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43425__pinl_10285_new_idx__desc) & (-1 ^ (3))))[4]) = SACp_emal_43425__pinl_10285_new_idx__sz = SAC_size;
      if (!((SACp_emal_43425__pinl_10285_new_idx__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12691 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12691 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12691 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12691 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12691 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12691 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12691 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12691, __extension__ __PRETTY_FUNCTION__); }))
# 12691 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43425__pinl_10285_new_idx = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43425__pinl_10285_new_idx__sz * sizeof (*SACp_emal_43425__pinl_10285_new_idx)); break; case SAC_HM_multi_threaded: SACp_emal_43425__pinl_10285_new_idx = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43425__pinl_10285_new_idx__sz * sizeof (*SACp_emal_43425__pinl_10285_new_idx), 0); break; case SAC_HM_any_threaded: SACp_emal_43425__pinl_10285_new_idx = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43425__pinl_10285_new_idx__sz * sizeof (*SACp_emal_43425__pinl_10285_new_idx), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43425__pinl_10285_new_idx__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43425__pinl_10285_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43425__pinl_10285_new_idx__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACl_iv__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_43425__pinl_10285_new_idx[SAC_i] = ( SACl_iv[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_pinl_10284_iv__sz; SAC_i++) { { SACp_emal_43425__pinl_10285_new_idx[SAC_off + SAC_i] = ( SACp_pinl_10284_iv[SAC_i]); }; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    if ((SACp_emal_43425__pinl_10285_new_idx__dim == 1) && (SACp_emal_43425__pinl_10285_new_idx__shp0 == SACl_a__dim)) { SACp_emal_43424__pinl_10308__icc_5151_pred = 1; } else { SACp_emal_43424__pinl_10308__icc_5151_pred = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays " "SACp_emal_43425__pinl_10285_new_idx" " and " "SACl_a" " do not adhere to shape matches dim constraint"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43425__pinl_10285_new_idx__sz; SAC_i++) { if (( SACp_emal_43425__pinl_10285_new_idx[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for vector " "SACp_emal_43425__pinl_10285_new_idx"); } { SACp_emal_43423__pinl_10310__icc_5152_pred = ( SACp_emal_43425__pinl_10285_new_idx[SAC_i]); }; } SACp_emal_43423__pinl_10310__icc_5152_pred = SAC_all; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }



    if ((SACp_emal_43425__pinl_10285_new_idx__dim != 1) && (SACp_emal_43425__pinl_10285_new_idx__shp0 != SACl_a__dim)) {
      SACp_emal_43422__pinl_10312__icc_5153_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_43425__pinl_10285_new_idx""' with shape %s ""And `" "SACl_a""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_43425__pinl_10285_new_idx__desc), SAC_PrintShape (SACl_a__desc));
    }
    else {
      int SAC_all = 1; for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
        if (( SACp_emal_43425__pinl_10285_new_idx[SAC_i]) >= (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))])) {
          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_43425__pinl_10285_new_idx""' with shape %s ""And `" "SACl_a""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_43425__pinl_10285_new_idx__desc), SAC_PrintShape (SACl_a__desc));
        }
      }
      SACp_emal_43422__pinl_10312__icc_5153_pred = SAC_all;
    }

    if (!SACp_emal_43422__pinl_10312__icc_5153_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43423__pinl_10310__icc_5152_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43424__pinl_10308__icc_5151_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      for (SAC_i = 0; SAC_i < SACp_emal_43425__pinl_10285_new_idx__sz; SAC_i++)
      {

        SAC_l = ( SACp_emal_43485__isaa_31136_a[SAC_i]) * SAC_l + ( SACp_emal_43425__pinl_10285_new_idx[SAC_i]);
      }
      for (SAC_i = SACp_emal_43425__pinl_10285_new_idx__sz; SAC_i < SACp_emal_43485__isaa_31136_a__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_43485__isaa_31136_a[SAC_i]);
      }
      SACp_emal_43421__ivesli_42478 = SAC_l;
    }

    { { free (SACp_emal_43425__pinl_10285_new_idx); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43425__pinl_10285_new_idx__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_43420__pinl_10271__icc_5156 = ( SACl_a[SACp_emal_43421__ivesli_42478]); }

    { ; ; }
    if (!SACp_emal_43422__pinl_10312__icc_5153_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43423__pinl_10310__icc_5152_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43424__pinl_10308__icc_5151_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_43419__pinl_10275__icc_5162__dim - SACp_pinl_10284_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_43419__pinl_10275__icc_5162_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal size found!"); };
    { SACp_emal_43419__pinl_10275__icc_5162[SACp_wlidx_42330__pinl_10275__icc_5162] = SACp_emal_43420__pinl_10271__icc_5156; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_43419__pinl_10275__icc_5162__dim - SACp_pinl_10284_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_43419__pinl_10275__icc_5162_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal size found!"); };
    { SACp_emal_43419__pinl_10275__icc_5162[SACp_wlidx_42330__pinl_10275__icc_5162] = SACp_emal_43484__ivesplit_31233; };

    }
    SACp_wlidx_42330__pinl_10275__icc_5162 = SACp_wlidx_42330__pinl_10275__icc_5162 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_10284_iv[SAC_d] = ( SACp_pinl_10284_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_10284_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_10284_iv[SAC_d] = 0; SAC_d--; SACp_pinl_10284_iv[SAC_d] = ( SACp_pinl_10284_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_10284_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_10284_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10284_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_43445__pinl_10299__icc_5150_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43441__pinl_10306__icc_5147_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43442__pinl_10303__icc_5146_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43446__pinl_10292__icc_5145_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43443__pinl_10301__icc_5144_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Assignment with incompatible types found"); };
    ;

    }
        if (SACp_emal_43419__pinl_10275__icc_5162__dim != 0) {
      SACp_emal_43418__icc_4977_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Array `" "SACp_emal_43419__pinl_10275__icc_5162""' with shape %s ""does not adhere to `dim == 0' constraint", SAC_PrintShape (SACp_emal_43419__pinl_10275__icc_5162__desc));
    }
    else {
      if (0)
      {

        SACp_emal_43418__icc_4977_pred = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Array `" "SACp_emal_43419__pinl_10275__icc_5162""' with shape %s ""does not adhere to `shp == []' constraint", SAC_PrintShape (SACp_emal_43419__pinl_10275__icc_5162__desc));
      }
      else {
        SACp_emal_43418__icc_4977_pred = 1;
      }
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_43419__pinl_10275__icc_5162__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_43417__idc_5030 = ( SACp_emal_43419__pinl_10275__icc_5162[0]); } }
    { { free (SACp_emal_43419__pinl_10275__icc_5162); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43419__pinl_10275__icc_5162__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_43429__icc_4978_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    if (!SACp_emal_43418__icc_4977_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    { { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43416__icc_4980"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12853 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12853 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12853 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12853 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12853 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12853 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12853 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12853, __extension__ __PRETTY_FUNCTION__); }))
# 12853 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43416__icc_4980__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43416__icc_4980__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43416__icc_4980__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43416__icc_4980__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43416__icc_4980__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43416__icc_4980__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43416__icc_4980__desc) & (-1 ^ (3))))[3]) = SACp_emal_43416__icc_4980__dim = 0; }



    if (!((SACp_emal_43416__icc_4980__dim == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43416__icc_4980__desc) & (-1 ^ (3))))[4]) = SACp_emal_43416__icc_4980__sz = SAC_size * 1;
      if (!((SACp_emal_43416__icc_4980__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12865 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12865 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12865 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12865 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12865 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12865 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12865 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12865, __extension__ __PRETTY_FUNCTION__); }))
# 12865 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43416__icc_4980 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43416__icc_4980__sz * sizeof (*SACp_emal_43416__icc_4980)); break; case SAC_HM_multi_threaded: SACp_emal_43416__icc_4980 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43416__icc_4980__sz * sizeof (*SACp_emal_43416__icc_4980), 0); break; case SAC_HM_any_threaded: SACp_emal_43416__icc_4980 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43416__icc_4980__sz * sizeof (*SACp_emal_43416__icc_4980), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43416__icc_4980__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43416__icc_4980__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43416__icc_4980__desc) & (-1 ^ (3))))[1]) = 0; } }
    { if (!((SACp_emal_43416__icc_4980__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_43416__icc_4980[0] = SACp_emal_43428__idc_5029; } }
    { ; ; }
    { { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43415__icc_4979"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12868 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12868 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12868 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12868 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12868 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12868 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12868 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12868, __extension__ __PRETTY_FUNCTION__); }))
# 12868 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43415__icc_4979__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43415__icc_4979__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43415__icc_4979__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43415__icc_4979__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43415__icc_4979__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43415__icc_4979__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43415__icc_4979__desc) & (-1 ^ (3))))[3]) = SACp_emal_43415__icc_4979__dim = 0; }



    if (!((SACp_emal_43415__icc_4979__dim == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43415__icc_4979__desc) & (-1 ^ (3))))[4]) = SACp_emal_43415__icc_4979__sz = SAC_size * 1;
      if (!((SACp_emal_43415__icc_4979__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 12880 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 12880 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12880 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 12880 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 12880 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 12880 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 12880 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 12880, __extension__ __PRETTY_FUNCTION__); }))
# 12880 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43415__icc_4979 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43415__icc_4979__sz * sizeof (*SACp_emal_43415__icc_4979)); break; case SAC_HM_multi_threaded: SACp_emal_43415__icc_4979 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43415__icc_4979__sz * sizeof (*SACp_emal_43415__icc_4979), 0); break; case SAC_HM_any_threaded: SACp_emal_43415__icc_4979 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43415__icc_4979__sz * sizeof (*SACp_emal_43415__icc_4979), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43415__icc_4979__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43415__icc_4979__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43415__icc_4979__desc) & (-1 ^ (3))))[1]) = 0; } }
    { if (!((SACp_emal_43415__icc_4979__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_43415__icc_4979[0] = SACp_emal_43417__idc_5030; } }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_43416__icc_4980__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_43414__asd_43078__icc_4980 = ( SACp_emal_43416__icc_4980[0]); } }
    { { free (SACp_emal_43416__icc_4980); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43416__icc_4980__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_43415__icc_4979__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_43413__asd_43077__icc_4979 = ( SACp_emal_43415__icc_4979[0]); } }
    { { free (SACp_emal_43415__icc_4979); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43415__icc_4979__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_43413__asd_43077__icc_4979 = (SACp_emal_43413__asd_43077__icc_4979) + (SACp_emal_43414__asd_43078__icc_4980); };
    { ; ; }
    if (!SACp_emal_43429__icc_4978_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    if (!SACp_emal_43418__icc_4977_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_43411__icc_4987__dim - SACl_iv__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_43411__icc_4987_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
    { SACp_emal_43411__icc_4987[SACp_wlidx_42328__icc_4987] = SACp_emal_43413__asd_43077__icc_4979; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_43411__icc_4987__dim - SACl_iv__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_43411__icc_4987_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
    { SACp_emal_43411__icc_4987[SACp_wlidx_42328__icc_4987] = SACp_emal_43455__icc_4983; };

    }
    SACp_wlidx_42328__icc_4987 = SACp_wlidx_42328__icc_4987 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACl_iv[SAC_d] = ( SACl_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACl_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACl_iv[SAC_d] = 0; SAC_d--; SACl_iv[SAC_d] = ( SACl_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACl_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43411__icc_4987__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_emal_43462__icc_4951); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43462__icc_4951__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_43459__flat_199); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43459__flat_199__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { { free (SACl_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_43444__pinl_10281__flat_322); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43444__pinl_10281__flat_322__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_43447__pinl_10283_new_shape); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43447__pinl_10283_new_shape__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_43451__pinl_10230__flat_322); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43451__pinl_10230__flat_322__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_43454__pinl_10232_new_shape); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43454__pinl_10232_new_shape__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_43487__isaa_31133_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43487__isaa_31133_b__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_43485__isaa_31136_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43485__isaa_31136_a__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))); } } } } else { } }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
    if (!SACp_emal_43460__icc_4976_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43456__icc_4973_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43457__icc_4972_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43461__icc_4971_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_43458__icc_4970_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_43411__icc_4987; *SAC_arg_1__desc__p = SACp_emal_43411__icc_4987__desc; }
    return;
   
  }



}
}
# 12985 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___PL__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    
# 12994 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12994 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47566__emal_43509__hce_41__SSA0_1;
   
   




    
# 13001 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13001 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47564__emal_43511__hce_42__SSA0_1;
   
   




    
# 13008 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13008 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47563__emal_43510__hce_42;
   
   




    
# 13015 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13015 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47560__emal_43512__hce_39__SSA0_1;
   
   




    
# 13022 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13022 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47558__emal_43514__hce_40__SSA0_1;
   
   




    
# 13029 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13029 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47557__emal_43513__hce_40;
   
   




    int SACp_emal_43508__isaa_31296_b;
   
   




    int * SACp_emal_43507__isaa_31297_b;
    SAC_array_descriptor_t SACp_emal_43507__isaa_31297_b__desc = 
# 13044 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13044 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43507__isaa_31297_b__shp0;
    int SACp_emal_43507__isaa_31297_b__sz;
    const int SACp_emal_43507__isaa_31297_b__dim = 1;




    int SACp_emal_43506__isaa_31299_a;
   
   




    int * SACp_emal_43505__isaa_31300_a;
    SAC_array_descriptor_t SACp_emal_43505__isaa_31300_a__desc = 
# 13060 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13060 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43505__isaa_31300_a__shp0;
    int SACp_emal_43505__isaa_31300_a__sz;
    const int SACp_emal_43505__isaa_31300_a__dim = 1;




    
# 13068 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13068 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43503__pinl_10321__flat_157;
   
   




    int * SACp_emal_43502__pinl_10325__flat_161;
    SAC_array_descriptor_t SACp_emal_43502__pinl_10325__flat_161__desc = 
# 13076 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13076 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43502__pinl_10325__flat_161__shp0;
    int SACp_emal_43502__pinl_10325__flat_161__sz;
    const int SACp_emal_43502__pinl_10325__flat_161__dim = 1;




    
# 13084 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13084 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43501__pinl_10334__icc_4911_pred;
   
   




    int * SACp_emal_43500__ctz_20233;
    SAC_array_descriptor_t SACp_emal_43500__ctz_20233__desc = 
# 13092 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13092 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43500__ctz_20233__shp0;
    int SACp_emal_43500__ctz_20233__sz;
    const int SACp_emal_43500__ctz_20233__dim = 1;




    
# 13100 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13100 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_43499__pinl_10319__icc_4914;
    SAC_array_descriptor_t SACp_emal_43499__pinl_10319__icc_4914__desc = 
# 13101 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13101 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43499__pinl_10319__icc_4914__shp0;
    int SACp_emal_43499__pinl_10319__icc_4914__sz;
    const int SACp_emal_43499__pinl_10319__icc_4914__dim = 1;




    
# 13109 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13109 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43498__pinl_10323__flat_159;
   
   




    int SACp_emal_43497__isaa_31325__rtpf_10_res;
   
   




    int * SACp_emal_43496__isaa_31326__rtpf_10_res;
    SAC_array_descriptor_t SACp_emal_43496__isaa_31326__rtpf_10_res__desc = 
# 13124 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13124 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43496__isaa_31326__rtpf_10_res__shp0;
    int SACp_emal_43496__isaa_31326__rtpf_10_res__sz;
    const int SACp_emal_43496__isaa_31326__rtpf_10_res__dim = 1;




    
# 13132 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13132 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43494__pinl_10343__flat_164;
   
   




    int * SACp_emal_43493__pinl_10347__flat_168;
    SAC_array_descriptor_t SACp_emal_43493__pinl_10347__flat_168__desc = 
# 13140 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13140 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43493__pinl_10347__flat_168__shp0;
    int SACp_emal_43493__pinl_10347__flat_168__sz;
    const int SACp_emal_43493__pinl_10347__flat_168__dim = 1;




    
# 13148 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13148 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43492__pinl_10356__icc_4917_pred;
   
   




    int * SACp_emal_43491__ctz_20229;
    SAC_array_descriptor_t SACp_emal_43491__ctz_20229__desc = 
# 13156 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13156 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43491__ctz_20229__shp0;
    int SACp_emal_43491__ctz_20229__sz;
    const int SACp_emal_43491__ctz_20229__dim = 1;




    
# 13164 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13164 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_43490__pinl_10341__icc_4920;
    SAC_array_descriptor_t SACp_emal_43490__pinl_10341__icc_4920__desc = 
# 13165 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13165 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43490__pinl_10341__icc_4920__shp0;
    int SACp_emal_43490__pinl_10341__icc_4920__sz;
    const int SACp_emal_43490__pinl_10341__icc_4920__dim = 1;




    
# 13173 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13173 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43489__pinl_10345__flat_166;
   
   




    
# 13180 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13180 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10331__hce_39;
   
   




    
# 13187 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13187 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10330__hce_40;
   
   




    
# 13194 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13194 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10353__hce_41;
   
   




    
# 13201 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13201 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_10352__hce_42;
   
   




    int * SACp_rtpf_10_res;
    SAC_array_descriptor_t SACp_rtpf_10_res__desc = 
# 13209 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13209 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_rtpf_10_res__sz = 0;
    int SACp_rtpf_10_res__dim = 0;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_43508__isaa_31296_b = SACl_b__dim; }; }
    { { if (!((1 == SACp_emal_43507__isaa_31297_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43507__isaa_31297_b"); }; { if ((((6 + (SACp_emal_43507__isaa_31297_b__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43507__isaa_31297_b__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43507__isaa_31297_b__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43507__isaa_31297_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43507__isaa_31297_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43507__isaa_31297_b__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43507__isaa_31297_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43507__isaa_31297_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43507__isaa_31297_b__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43507__isaa_31297_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43507__isaa_31297_b__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43507__isaa_31297_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43507__isaa_31297_b__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43507__isaa_31297_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43507__isaa_31297_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43507__isaa_31297_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43507__isaa_31297_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43507__isaa_31297_b__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43507__isaa_31297_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43507__isaa_31297_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43507__isaa_31297_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43507__isaa_31297_b__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43507__isaa_31297_b__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43507__isaa_31297_b__desc) & (-1 ^ (3))))[4]) = SACp_emal_43507__isaa_31297_b__sz = SAC_size;
      if (!((SACp_emal_43507__isaa_31297_b__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13251 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 13251 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13251 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13251 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13251 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 13251 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13251 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 13251, __extension__ __PRETTY_FUNCTION__); }))
# 13251 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43507__isaa_31297_b = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43507__isaa_31297_b__sz * sizeof (*SACp_emal_43507__isaa_31297_b)); break; case SAC_HM_multi_threaded: SACp_emal_43507__isaa_31297_b = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43507__isaa_31297_b__sz * sizeof (*SACp_emal_43507__isaa_31297_b), 0); break; case SAC_HM_any_threaded: SACp_emal_43507__isaa_31297_b = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43507__isaa_31297_b__sz * sizeof (*SACp_emal_43507__isaa_31297_b), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43507__isaa_31297_b__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43507__isaa_31297_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43507__isaa_31297_b__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
      { SACp_emal_43507__isaa_31297_b[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { SACp_emal_43506__isaa_31299_a = SACl_a__dim; }; }
    { { if (!((1 == SACp_emal_43505__isaa_31300_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43505__isaa_31300_a"); }; { if ((((6 + (SACp_emal_43505__isaa_31300_a__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43505__isaa_31300_a__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43505__isaa_31300_a__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43505__isaa_31300_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43505__isaa_31300_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43505__isaa_31300_a__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43505__isaa_31300_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43505__isaa_31300_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43505__isaa_31300_a__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43505__isaa_31300_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43505__isaa_31300_a__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43505__isaa_31300_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43505__isaa_31300_a__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43505__isaa_31300_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43505__isaa_31300_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43505__isaa_31300_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43505__isaa_31300_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43505__isaa_31300_a__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43505__isaa_31300_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43505__isaa_31300_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43505__isaa_31300_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43505__isaa_31300_a__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43505__isaa_31300_a__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43505__isaa_31300_a__desc) & (-1 ^ (3))))[4]) = SACp_emal_43505__isaa_31300_a__sz = SAC_size;
      if (!((SACp_emal_43505__isaa_31300_a__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13276 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 13276 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13276 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13276 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13276 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 13276 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13276 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 13276, __extension__ __PRETTY_FUNCTION__); }))
# 13276 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43505__isaa_31300_a = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43505__isaa_31300_a__sz * sizeof (*SACp_emal_43505__isaa_31300_a)); break; case SAC_HM_multi_threaded: SACp_emal_43505__isaa_31300_a = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43505__isaa_31300_a__sz * sizeof (*SACp_emal_43505__isaa_31300_a), 0); break; case SAC_HM_any_threaded: SACp_emal_43505__isaa_31300_a = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43505__isaa_31300_a__sz * sizeof (*SACp_emal_43505__isaa_31300_a), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43505__isaa_31300_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43505__isaa_31300_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43505__isaa_31300_a__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
      { SACp_emal_43505__isaa_31300_a[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; ; { SACp_emal_43508__isaa_31296_b = (SACp_emal_43506__isaa_31299_a) - (SACp_emal_43508__isaa_31296_b); };
    ; ; { SACp_emal_43503__pinl_10321__flat_157 = (SACp_emal_43508__isaa_31296_b) == (0); };
    { ; ; }
    if (SACp_emal_43503__pinl_10321__flat_157)
    {
      { ; ; }
      { { SACp_pinl_47557__emal_43513__hce_40 = 
# 13291 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 13291 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10330__hce_40 = SACp_pinl_47557__emal_43513__hce_40; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `d' in a"); SACp_pinl_47558__emal_43514__hce_40__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10330__hce_40 = SACp_pinl_47558__emal_43514__hce_40__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_43502__pinl_10325__flat_161__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43502__pinl_10325__flat_161"); }; { if ((((6 + (SACp_emal_43502__pinl_10325__flat_161__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43502__pinl_10325__flat_161__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43502__pinl_10325__flat_161__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43502__pinl_10325__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43502__pinl_10325__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43502__pinl_10325__flat_161__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43502__pinl_10325__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43502__pinl_10325__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43502__pinl_10325__flat_161__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43502__pinl_10325__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43502__pinl_10325__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43502__pinl_10325__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43502__pinl_10325__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43502__pinl_10325__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43502__pinl_10325__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43502__pinl_10325__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43502__pinl_10325__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43502__pinl_10325__flat_161__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43502__pinl_10325__flat_161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43502__pinl_10325__flat_161__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_43507__isaa_31297_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_43502__pinl_10325__flat_161__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43502__pinl_10325__flat_161__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43502__pinl_10325__flat_161__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_43506__isaa_31299_a) < 0) ? (-(SACp_emal_43506__isaa_31299_a)) : (SACp_emal_43506__isaa_31299_a));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43502__pinl_10325__flat_161__desc) & (-1 ^ (3))))[4]) = SACp_emal_43502__pinl_10325__flat_161__sz = SAC_size;
      if (!((SACp_emal_43502__pinl_10325__flat_161__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13334 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 13334 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13334 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13334 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13334 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 13334 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13334 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 13334, __extension__ __PRETTY_FUNCTION__); }))
# 13334 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43502__pinl_10325__flat_161 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43502__pinl_10325__flat_161__sz * sizeof (*SACp_emal_43502__pinl_10325__flat_161)); break; case SAC_HM_multi_threaded: SACp_emal_43502__pinl_10325__flat_161 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43502__pinl_10325__flat_161__sz * sizeof (*SACp_emal_43502__pinl_10325__flat_161), 0); break; case SAC_HM_any_threaded: SACp_emal_43502__pinl_10325__flat_161 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43502__pinl_10325__flat_161__sz * sizeof (*SACp_emal_43502__pinl_10325__flat_161), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43502__pinl_10325__flat_161__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43502__pinl_10325__flat_161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43502__pinl_10325__flat_161__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 13341 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 13341 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_43506__isaa_31299_a;
      SAC_cond = (SACp_emal_43506__isaa_31299_a < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_43507__isaa_31297_b__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_43507__isaa_31297_b__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 39, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_43502__pinl_10325__flat_161[SAC_i] = ( SACp_emal_43507__isaa_31297_b[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_43507__isaa_31297_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43507__isaa_31297_b__desc) & (-1 ^ (3))))); } } }
        if (SACp_emal_43505__isaa_31300_a__dim != SACp_emal_43502__pinl_10325__flat_161__dim) {
      SACp_emal_43501__pinl_10334__icc_4911_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_43505__isaa_31300_a""' with shape %s ""And `" "SACp_emal_43502__pinl_10325__flat_161""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_43505__isaa_31300_a__desc), SAC_PrintShape (SACp_emal_43502__pinl_10325__flat_161__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_43505__isaa_31300_a__shp0 != SACp_emal_43502__pinl_10325__flat_161__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_43505__isaa_31300_a""' with shape %s ""And `" "SACp_emal_43502__pinl_10325__flat_161""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_43505__isaa_31300_a__desc), SAC_PrintShape (SACp_emal_43502__pinl_10325__flat_161__desc));
      }
      SACp_emal_43501__pinl_10334__icc_4911_pred = SAC_all;
    }

    if (!SACp_emal_43501__pinl_10334__icc_4911_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { { if (!((1 == SACp_emal_43500__ctz_20233__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43500__ctz_20233"); }; { if ((((6 + (SACp_emal_43500__ctz_20233__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43500__ctz_20233__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43500__ctz_20233__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43500__ctz_20233__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43500__ctz_20233__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43500__ctz_20233__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43500__ctz_20233__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43500__ctz_20233__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43500__ctz_20233__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43500__ctz_20233__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43500__ctz_20233__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43500__ctz_20233__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43500__ctz_20233__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43500__ctz_20233__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43500__ctz_20233__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43500__ctz_20233__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43500__ctz_20233__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43500__ctz_20233__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43500__ctz_20233__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43500__ctz_20233__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43500__ctz_20233__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43500__ctz_20233__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43500__ctz_20233__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43502__pinl_10325__flat_161__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43500__ctz_20233__desc) & (-1 ^ (3))))[4]) = SACp_emal_43500__ctz_20233__sz = SAC_size * SACp_emal_43502__pinl_10325__flat_161__sz;
      if (!((SACp_emal_43500__ctz_20233__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13387 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 13387 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13387 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13387 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13387 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 13387 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13387 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 13387, __extension__ __PRETTY_FUNCTION__); }))
# 13387 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43500__ctz_20233 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43500__ctz_20233__sz * sizeof (*SACp_emal_43500__ctz_20233)); break; case SAC_HM_multi_threaded: SACp_emal_43500__ctz_20233 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43500__ctz_20233__sz * sizeof (*SACp_emal_43500__ctz_20233), 0); break; case SAC_HM_any_threaded: SACp_emal_43500__ctz_20233 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43500__ctz_20233__sz * sizeof (*SACp_emal_43500__ctz_20233), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43500__ctz_20233__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43500__ctz_20233__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43500__ctz_20233__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_43500__ctz_20233__sz; SAC_i++) { { SACp_emal_43500__ctz_20233[SAC_i] = (( SACp_emal_43505__isaa_31300_a[SAC_i])) - (( SACp_emal_43502__pinl_10325__flat_161[SAC_i])); }; } }
    { { free (SACp_emal_43502__pinl_10325__flat_161); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43502__pinl_10325__flat_161__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_43499__pinl_10319__icc_4914__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43499__pinl_10319__icc_4914"); }; { if ((((6 + (SACp_emal_43499__pinl_10319__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43499__pinl_10319__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43499__pinl_10319__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43499__pinl_10319__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43499__pinl_10319__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43499__pinl_10319__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43499__pinl_10319__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43499__pinl_10319__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43499__pinl_10319__icc_4914__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43499__pinl_10319__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43499__pinl_10319__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43499__pinl_10319__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43499__pinl_10319__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43499__pinl_10319__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43499__pinl_10319__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43499__pinl_10319__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43499__pinl_10319__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43499__pinl_10319__icc_4914__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43499__pinl_10319__icc_4914__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43499__pinl_10319__icc_4914__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43499__pinl_10319__icc_4914__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43499__pinl_10319__icc_4914__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43499__pinl_10319__icc_4914__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43500__ctz_20233__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43499__pinl_10319__icc_4914__desc) & (-1 ^ (3))))[4]) = SACp_emal_43499__pinl_10319__icc_4914__sz = SAC_size * SACp_emal_43500__ctz_20233__sz;
      if (!((SACp_emal_43499__pinl_10319__icc_4914__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13404 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 13404 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13404 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13404 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13404 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 13404 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13404 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 13404, __extension__ __PRETTY_FUNCTION__); }))
# 13404 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43499__pinl_10319__icc_4914 = (
# 13404 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13404 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_43499__pinl_10319__icc_4914__sz * sizeof (*SACp_emal_43499__pinl_10319__icc_4914)); break; case SAC_HM_multi_threaded: SACp_emal_43499__pinl_10319__icc_4914 = (
# 13404 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13404 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43499__pinl_10319__icc_4914__sz * sizeof (*SACp_emal_43499__pinl_10319__icc_4914), 0); break; case SAC_HM_any_threaded: SACp_emal_43499__pinl_10319__icc_4914 = (
# 13404 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13404 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_43499__pinl_10319__icc_4914__sz * sizeof (*SACp_emal_43499__pinl_10319__icc_4914), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43499__pinl_10319__icc_4914__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43499__pinl_10319__icc_4914__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43499__pinl_10319__icc_4914__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_43499__pinl_10319__icc_4914__sz; SAC_i++) { { SACp_emal_43499__pinl_10319__icc_4914[SAC_i] = (( SACp_emal_43500__ctz_20233[SAC_i])) == (0); }; } }
    { { free (SACp_emal_43500__ctz_20233); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43500__ctz_20233__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_43501__pinl_10334__icc_4911_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43499__pinl_10319__icc_4914__sz; SAC_i++) { if (( SACp_emal_43499__pinl_10319__icc_4914[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_43498__pinl_10323__flat_159 = SAC_all; }
    { { free (SACp_emal_43499__pinl_10319__icc_4914); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43499__pinl_10319__icc_4914__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_43498__pinl_10323__flat_159)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10331__hce_39 = SACp_pinl_10330__hce_40; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `shp' in a"); SACp_pinl_47560__emal_43512__hce_39__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10331__hce_39 = SACp_pinl_47560__emal_43512__hce_39__SSA0_1; }

    }
    if (!SACp_pinl_10331__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failedType pattern pre-condition of + failed"); }



    SACwf__MAIN___rtpf_8_impl__i_S__i_S (&SACp_rtpf_10_res, &SACp_rtpf_10_res__desc, SACl_a, SACl_a__desc, SACl_b, SACl_b__desc);




    SACp_rtpf_10_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_rtpf_10_res__desc) & (-1 ^ (3))))[4]);
    SACp_rtpf_10_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_rtpf_10_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_43497__isaa_31325__rtpf_10_res = SACp_rtpf_10_res__dim; }; }
    { { if (!((1 == SACp_emal_43496__isaa_31326__rtpf_10_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43496__isaa_31326__rtpf_10_res"); }; { if ((((6 + (SACp_emal_43496__isaa_31326__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43496__isaa_31326__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43496__isaa_31326__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43496__isaa_31326__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43496__isaa_31326__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43496__isaa_31326__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43496__isaa_31326__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43496__isaa_31326__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43496__isaa_31326__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43496__isaa_31326__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43496__isaa_31326__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43496__isaa_31326__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43496__isaa_31326__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43496__isaa_31326__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43496__isaa_31326__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43496__isaa_31326__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43496__isaa_31326__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43496__isaa_31326__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43496__isaa_31326__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43496__isaa_31326__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43496__isaa_31326__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43496__isaa_31326__rtpf_10_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43496__isaa_31326__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_rtpf_10_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43496__isaa_31326__rtpf_10_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_43496__isaa_31326__rtpf_10_res__sz = SAC_size;
      if (!((SACp_emal_43496__isaa_31326__rtpf_10_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13475 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 13475 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13475 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13475 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13475 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 13475 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13475 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 13475, __extension__ __PRETTY_FUNCTION__); }))
# 13475 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43496__isaa_31326__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43496__isaa_31326__rtpf_10_res__sz * sizeof (*SACp_emal_43496__isaa_31326__rtpf_10_res)); break; case SAC_HM_multi_threaded: SACp_emal_43496__isaa_31326__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43496__isaa_31326__rtpf_10_res__sz * sizeof (*SACp_emal_43496__isaa_31326__rtpf_10_res), 0); break; case SAC_HM_any_threaded: SACp_emal_43496__isaa_31326__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43496__isaa_31326__rtpf_10_res__sz * sizeof (*SACp_emal_43496__isaa_31326__rtpf_10_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43496__isaa_31326__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43496__isaa_31326__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43496__isaa_31326__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_rtpf_10_res__dim; SAC_i++) {
      { SACp_emal_43496__isaa_31326__rtpf_10_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    if (!SACp_pinl_10331__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failed"); }
    ;
    ; ; { SACp_emal_43497__isaa_31325__rtpf_10_res = (SACp_emal_43506__isaa_31299_a) - (SACp_emal_43497__isaa_31325__rtpf_10_res); };
    ; ; { SACp_emal_43494__pinl_10343__flat_164 = (SACp_emal_43497__isaa_31325__rtpf_10_res) == (0); };
    { ; ; }
    if (SACp_emal_43494__pinl_10343__flat_164)
    {
      { ; ; }
      { { SACp_pinl_47563__emal_43510__hce_42 = 
# 13492 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 13492 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10352__hce_42 = SACp_pinl_47563__emal_43510__hce_42; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `d' in a"); SACp_pinl_47564__emal_43511__hce_42__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10352__hce_42 = SACp_pinl_47564__emal_43511__hce_42__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_43493__pinl_10347__flat_168__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43493__pinl_10347__flat_168"); }; { if ((((6 + (SACp_emal_43493__pinl_10347__flat_168__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43493__pinl_10347__flat_168__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43493__pinl_10347__flat_168__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43493__pinl_10347__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43493__pinl_10347__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43493__pinl_10347__flat_168__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43493__pinl_10347__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43493__pinl_10347__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43493__pinl_10347__flat_168__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43493__pinl_10347__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43493__pinl_10347__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43493__pinl_10347__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43493__pinl_10347__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43493__pinl_10347__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43493__pinl_10347__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43493__pinl_10347__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43493__pinl_10347__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43493__pinl_10347__flat_168__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43493__pinl_10347__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43493__pinl_10347__flat_168__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_43496__isaa_31326__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_43493__pinl_10347__flat_168__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43493__pinl_10347__flat_168__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43493__pinl_10347__flat_168__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_43506__isaa_31299_a) < 0) ? (-(SACp_emal_43506__isaa_31299_a)) : (SACp_emal_43506__isaa_31299_a));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43493__pinl_10347__flat_168__desc) & (-1 ^ (3))))[4]) = SACp_emal_43493__pinl_10347__flat_168__sz = SAC_size;
      if (!((SACp_emal_43493__pinl_10347__flat_168__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13535 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 13535 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13535 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13535 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13535 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 13535 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13535 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 13535, __extension__ __PRETTY_FUNCTION__); }))
# 13535 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43493__pinl_10347__flat_168 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43493__pinl_10347__flat_168__sz * sizeof (*SACp_emal_43493__pinl_10347__flat_168)); break; case SAC_HM_multi_threaded: SACp_emal_43493__pinl_10347__flat_168 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43493__pinl_10347__flat_168__sz * sizeof (*SACp_emal_43493__pinl_10347__flat_168), 0); break; case SAC_HM_any_threaded: SACp_emal_43493__pinl_10347__flat_168 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43493__pinl_10347__flat_168__sz * sizeof (*SACp_emal_43493__pinl_10347__flat_168), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43493__pinl_10347__flat_168__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43493__pinl_10347__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43493__pinl_10347__flat_168__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 13542 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 13542 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_43506__isaa_31299_a;
      SAC_cond = (SACp_emal_43506__isaa_31299_a < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_43496__isaa_31326__rtpf_10_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_43496__isaa_31326__rtpf_10_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_43493__pinl_10347__flat_168[SAC_i] = ( SACp_emal_43496__isaa_31326__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_43496__isaa_31326__rtpf_10_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43496__isaa_31326__rtpf_10_res__desc) & (-1 ^ (3))))); } } }
    { ; ; }
        if (SACp_emal_43505__isaa_31300_a__dim != SACp_emal_43493__pinl_10347__flat_168__dim) {
      SACp_emal_43492__pinl_10356__icc_4917_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_43505__isaa_31300_a""' with shape %s ""And `" "SACp_emal_43493__pinl_10347__flat_168""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_43505__isaa_31300_a__desc), SAC_PrintShape (SACp_emal_43493__pinl_10347__flat_168__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_43505__isaa_31300_a__shp0 != SACp_emal_43493__pinl_10347__flat_168__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_43505__isaa_31300_a""' with shape %s ""And `" "SACp_emal_43493__pinl_10347__flat_168""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_43505__isaa_31300_a__desc), SAC_PrintShape (SACp_emal_43493__pinl_10347__flat_168__desc));
      }
      SACp_emal_43492__pinl_10356__icc_4917_pred = SAC_all;
    }

    if (!SACp_emal_43492__pinl_10356__icc_4917_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { { if (!((1 == SACp_emal_43491__ctz_20229__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43491__ctz_20229"); }; { if ((((6 + (SACp_emal_43491__ctz_20229__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43491__ctz_20229__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43491__ctz_20229__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43491__ctz_20229__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43491__ctz_20229__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43491__ctz_20229__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43491__ctz_20229__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43491__ctz_20229__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43491__ctz_20229__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43491__ctz_20229__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43491__ctz_20229__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43491__ctz_20229__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43491__ctz_20229__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43491__ctz_20229__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43491__ctz_20229__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43491__ctz_20229__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43491__ctz_20229__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43491__ctz_20229__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43491__ctz_20229__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43491__ctz_20229__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43491__ctz_20229__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43491__ctz_20229__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43491__ctz_20229__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43493__pinl_10347__flat_168__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43491__ctz_20229__desc) & (-1 ^ (3))))[4]) = SACp_emal_43491__ctz_20229__sz = SAC_size * SACp_emal_43493__pinl_10347__flat_168__sz;
      if (!((SACp_emal_43491__ctz_20229__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13589 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 13589 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13589 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13589 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13589 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 13589 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13589 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 13589, __extension__ __PRETTY_FUNCTION__); }))
# 13589 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43491__ctz_20229 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43491__ctz_20229__sz * sizeof (*SACp_emal_43491__ctz_20229)); break; case SAC_HM_multi_threaded: SACp_emal_43491__ctz_20229 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43491__ctz_20229__sz * sizeof (*SACp_emal_43491__ctz_20229), 0); break; case SAC_HM_any_threaded: SACp_emal_43491__ctz_20229 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43491__ctz_20229__sz * sizeof (*SACp_emal_43491__ctz_20229), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43491__ctz_20229__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43491__ctz_20229__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43491__ctz_20229__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_43491__ctz_20229__sz; SAC_i++) { { SACp_emal_43491__ctz_20229[SAC_i] = (( SACp_emal_43505__isaa_31300_a[SAC_i])) - (( SACp_emal_43493__pinl_10347__flat_168[SAC_i])); }; } }
    { { free (SACp_emal_43493__pinl_10347__flat_168); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43493__pinl_10347__flat_168__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_43505__isaa_31300_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43505__isaa_31300_a__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_43490__pinl_10341__icc_4920__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43490__pinl_10341__icc_4920"); }; { if ((((6 + (SACp_emal_43490__pinl_10341__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43490__pinl_10341__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43490__pinl_10341__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43490__pinl_10341__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43490__pinl_10341__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43490__pinl_10341__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43490__pinl_10341__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43490__pinl_10341__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43490__pinl_10341__icc_4920__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43490__pinl_10341__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43490__pinl_10341__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43490__pinl_10341__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43490__pinl_10341__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43490__pinl_10341__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43490__pinl_10341__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43490__pinl_10341__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43490__pinl_10341__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43490__pinl_10341__icc_4920__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43490__pinl_10341__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43490__pinl_10341__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43490__pinl_10341__icc_4920__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43490__pinl_10341__icc_4920__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43490__pinl_10341__icc_4920__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43491__ctz_20229__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43490__pinl_10341__icc_4920__desc) & (-1 ^ (3))))[4]) = SACp_emal_43490__pinl_10341__icc_4920__sz = SAC_size * SACp_emal_43491__ctz_20229__sz;
      if (!((SACp_emal_43490__pinl_10341__icc_4920__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13607 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 13607 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13607 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13607 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13607 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 13607 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13607 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 13607, __extension__ __PRETTY_FUNCTION__); }))
# 13607 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43490__pinl_10341__icc_4920 = (
# 13607 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13607 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_43490__pinl_10341__icc_4920__sz * sizeof (*SACp_emal_43490__pinl_10341__icc_4920)); break; case SAC_HM_multi_threaded: SACp_emal_43490__pinl_10341__icc_4920 = (
# 13607 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13607 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43490__pinl_10341__icc_4920__sz * sizeof (*SACp_emal_43490__pinl_10341__icc_4920), 0); break; case SAC_HM_any_threaded: SACp_emal_43490__pinl_10341__icc_4920 = (
# 13607 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13607 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_43490__pinl_10341__icc_4920__sz * sizeof (*SACp_emal_43490__pinl_10341__icc_4920), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43490__pinl_10341__icc_4920__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43490__pinl_10341__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43490__pinl_10341__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_43490__pinl_10341__icc_4920__sz; SAC_i++) { { SACp_emal_43490__pinl_10341__icc_4920[SAC_i] = (( SACp_emal_43491__ctz_20229[SAC_i])) == (0); }; } }
    { { free (SACp_emal_43491__ctz_20229); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43491__ctz_20229__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_43492__pinl_10356__icc_4917_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43490__pinl_10341__icc_4920__sz; SAC_i++) { if (( SACp_emal_43490__pinl_10341__icc_4920[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_43489__pinl_10345__flat_166 = SAC_all; }
    { { free (SACp_emal_43490__pinl_10341__icc_4920); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43490__pinl_10341__icc_4920__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_43489__pinl_10345__flat_166)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10353__hce_41 = SACp_pinl_10352__hce_42; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `shp' in a"); SACp_pinl_47566__emal_43509__hce_41__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10353__hce_41 = SACp_pinl_47566__emal_43509__hce_41__SSA0_1; }

    }
    if (!SACp_pinl_10353__hce_41) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failed"); }
    ;



    { *SAC_arg_1__p = SACp_rtpf_10_res; *SAC_arg_1__desc__p = SACp_rtpf_10_res__desc; }
    return;
   
  }



}
}
# 13665 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN__commonPrefix__i_X__i_X (
# 13665 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 13665 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    
# 13674 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13674 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47696__emal_43581__uprf_20537;
   
   

    const int SACp_pinl_47695__emal_43580__ivesplit_31429 = 0;



    int SACp_pinl_47694__emal_43579__uprf_20539;
   
   




    int * SACp_pinl_47693__emal_43578__pinl_10694__idc_8099;
    SAC_array_descriptor_t SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__desc = 
# 13690 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13690 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__shp0 = 1;
    const int SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz = 1;
    const int SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim = 1;




    
# 13698 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13698 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47692__emal_43577__uprf_20529;
   
   




    int SACp_pinl_47691__emal_43576__uprf_20528;
   
   




    int * SACp_pinl_47690__emal_43575__pinl_10701__idc_8103;
    SAC_array_descriptor_t SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__desc = 
# 13713 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13713 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__shp0 = 1;
    const int SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz = 1;
    const int SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim = 1;




    int SACp_pinl_47689__emal_43574__pinl_20308__icc_6985;
   
   




    int SACp_pinl_47688__emal_43573__pinl_20311__icc_6991;
   
   




    int SACp_pinl_47687__emal_43572__uprf_20498;
   
   




    
# 13742 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13742 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47684__emal_43569__uprf_20521;
   
   




    
# 13749 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13749 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47683__emal_43568__uprf_20515;
   
   




    
# 13756 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13756 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47682__emal_43567__uprf_20506;
   
   




    
# 13763 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13763 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47681__emal_43566__uprf_20500;
   
   




    int * SACp_pinl_47680__emal_43565__pinl_10713__idc_8109;
    SAC_array_descriptor_t SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__desc = 
# 13771 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13771 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__shp0 = 1;
    const int SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz = 1;
    const int SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim = 1;




    int SACp_pinl_47679__emal_43564__ivesli_42487;
   
   




    int SACp_pinl_47678__emal_43563__pinl_10666__icc_8082;
   
   




    int SACp_pinl_47677__emal_43562__ivesli_42486;
   
   




    int SACp_pinl_47676__emal_43561__pinl_10669__icc_8088;
   
   




    
# 13807 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13807 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47674__emal_43559__pinl_10679__flat_3875;
   
   




    
# 13814 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13814 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_47673__emal_43558__pinl_10673__icc_8094;
    SAC_array_descriptor_t SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc = 
# 13815 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13815 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__shp0;
    int SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__sz;
    const int SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim = 1;




    
# 13823 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13823 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47672__emal_43557__uprf_20476;
   
   




    
# 13830 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13830 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47671__emal_43556__uprf_20470;
   
   




    int * SACp_pinl_47670__emal_43555__pinl_10813__idc_8060;
    SAC_array_descriptor_t SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__desc = 
# 13838 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13838 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__shp0 = 1;
    const int SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz = 1;
    const int SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim = 1;




    int SACp_pinl_47669__emal_43554__ivesli_42485;
   
   




    
# 13853 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13853 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47668__emal_43553__pinl_10770__icc_8039;
   
   




    
# 13860 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13860 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47666__emal_43551__uprf_20457;
   
   

    const int SACp_pinl_47665__emal_43550__ivesplit_31412 = 0;



    int SACp_pinl_47664__emal_43549__uprf_20459;
   
   




    int * SACp_pinl_47663__emal_43548__pinl_10392__idc_8099;
    SAC_array_descriptor_t SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__desc = 
# 13876 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13876 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__shp0 = 1;
    const int SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz = 1;
    const int SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim = 1;




    
# 13884 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13884 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47662__emal_43547__uprf_20449;
   
   




    int SACp_pinl_47661__emal_43546__uprf_20448;
   
   




    int * SACp_pinl_47660__emal_43545__pinl_10399__idc_8103;
    SAC_array_descriptor_t SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__desc = 
# 13899 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13899 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__shp0 = 1;
    const int SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz = 1;
    const int SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim = 1;




    int SACp_pinl_47659__emal_43544__pinl_20247__icc_6985;
   
   




    int SACp_pinl_47658__emal_43543__pinl_20250__icc_6991;
   
   




    int SACp_pinl_47657__emal_43542__uprf_20418;
   
   




    
# 13928 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13928 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47654__emal_43539__uprf_20441;
   
   




    
# 13935 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13935 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47653__emal_43538__uprf_20435;
   
   




    
# 13942 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13942 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47652__emal_43537__uprf_20426;
   
   




    
# 13949 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13949 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47651__emal_43536__uprf_20420;
   
   




    int * SACp_pinl_47650__emal_43535__pinl_10411__idc_8109;
    SAC_array_descriptor_t SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__desc = 
# 13957 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 13957 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__shp0 = 1;
    const int SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz = 1;
    const int SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim = 1;




    int SACp_pinl_47649__emal_43534__ivesli_42484;
   
   




    int SACp_pinl_47648__emal_43533__pinl_10364__icc_8082;
   
   




    int SACp_pinl_47647__emal_43532__ivesli_42483;
   
   




    int SACp_pinl_47646__emal_43531__pinl_10367__icc_8088;
   
   




    
# 13993 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 13993 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47644__emal_43529__pinl_10377__flat_3875;
   
   




    
# 14000 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 14000 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_47643__emal_43528__pinl_10371__icc_8094;
    SAC_array_descriptor_t SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc = 
# 14001 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 14001 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__shp0;
    int SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__sz;
    const int SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim = 1;




    
# 14009 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 14009 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47642__emal_43527__uprf_20396;
   
   




    
# 14016 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 14016 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47641__emal_43526__uprf_20390;
   
   




    int * SACp_pinl_47640__emal_43525__pinl_10612__idc_8060;
    SAC_array_descriptor_t SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__desc = 
# 14024 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 14024 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__shp0 = 1;
    const int SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz = 1;
    const int SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim = 1;




    int SACp_pinl_47639__emal_43524__ivesli_42482;
   
   




    
# 14039 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 14039 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47638__emal_43523__pinl_10569__icc_8039;
   
   




    
# 14046 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 14046 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47636__ufiv_43053__pinl_10764__flat_1128;
   
   




    
# 14053 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 14053 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47635__ufiv_43052__pinl_10563__flat_1128;
   
   




    int SACp_pinl_47628__wlidx_42332__pinl_10673__icc_8094;
   
   




    int SACp_pinl_47627__wlidx_42331__pinl_10371__icc_8094;
   
   




    int SACp_pinl_47593__eat_454;
   
   




    int * SACp_pinl_47592_iv;
    SAC_array_descriptor_t SACp_pinl_47592_iv__desc = 
# 14082 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 14082 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47592_iv__shp0 = 1;
    const int SACp_pinl_47592_iv__sz = 1;
    const int SACp_pinl_47592_iv__dim = 1;




    int SACp_pinl_47583__eat_453;
   
   




    int * SACp_pinl_47582_iv;
    SAC_array_descriptor_t SACp_pinl_47582_iv__desc = 
# 14098 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 14098 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47582_iv__shp0 = 1;
    const int SACp_pinl_47582_iv__sz = 1;
    const int SACp_pinl_47582_iv__dim = 1;




    int SACp_pinl_47578__eat_454;
   
   




    int * SACp_pinl_47577_iv;
    SAC_array_descriptor_t SACp_pinl_47577_iv__desc = 
# 14114 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 14114 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47577_iv__shp0 = 1;
    const int SACp_pinl_47577_iv__sz = 1;
    const int SACp_pinl_47577_iv__dim = 1;




    int SACp_pinl_47568__eat_453;
   
   




    int * SACp_pinl_47567_iv;
    SAC_array_descriptor_t SACp_pinl_47567_iv__desc = 
# 14130 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 14130 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47567_iv__shp0 = 1;
    const int SACp_pinl_47567_iv__sz = 1;
    const int SACp_pinl_47567_iv__dim = 1;




    int * SACp_emal_43521__isaa_31360_b;
    SAC_array_descriptor_t SACp_emal_43521__isaa_31360_b__desc = 
# 14139 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 14139 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43521__isaa_31360_b__shp0 = 1;
    const int SACp_emal_43521__isaa_31360_b__sz = 1;
    const int SACp_emal_43521__isaa_31360_b__dim = 1;




    int * SACp_emal_43520__isaa_31363_a;
    SAC_array_descriptor_t SACp_emal_43520__isaa_31363_a__desc = 
# 14148 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 14148 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43520__isaa_31363_a__shp0 = 1;
    const int SACp_emal_43520__isaa_31363_a__sz = 1;
    const int SACp_emal_43520__isaa_31363_a__dim = 1;

    const int SACp_emal_43519__flat_311 = 0;



    int SACp_emal_43518__icc_5038;
   
   




    int SACp_emal_43517__icc_5044;
   
   




    
# 14171 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 14171 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43515__pinl_10361__flat_1060;
   
   




    
# 14178 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 14178 "/home/rubenhensen/sac/a.out.c"
   SACl_res;
   
   





    int SACl_b__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    const int SACl_b__dim = 1;




    int SACl_a__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    const int SACl_a__dim = 1;

   
    { { if (!((1 == SACp_emal_43521__isaa_31360_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43521__isaa_31360_b"); }; { { if ((((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b)) + ((6 + (SACp_emal_43521__isaa_31360_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b)) + ((6 + (SACp_emal_43521__isaa_31360_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b)) + ((6 + (SACp_emal_43521__isaa_31360_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43521__isaa_31360_b = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43521__isaa_31360_b = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b)) + ((6 + (SACp_emal_43521__isaa_31360_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43521__isaa_31360_b = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43521__isaa_31360_b = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b)) + ((6 + (SACp_emal_43521__isaa_31360_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b)) + ((6 + (SACp_emal_43521__isaa_31360_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b)) + ((6 + (SACp_emal_43521__isaa_31360_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b)) + ((6 + (SACp_emal_43521__isaa_31360_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b)) + ((6 + (SACp_emal_43521__isaa_31360_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43521__isaa_31360_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43521__isaa_31360_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43521__isaa_31360_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43521__isaa_31360_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43521__isaa_31360_b__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b), ((6 + (SACp_emal_43521__isaa_31360_b__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43521__isaa_31360_b__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43521__isaa_31360_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43521__isaa_31360_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43521__isaa_31360_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 34, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43521__isaa_31360_b__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 34, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_43521__isaa_31360_b[0] = SACl_b__shp0; };

    { { if (!((1 == SACp_emal_43520__isaa_31363_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43520__isaa_31363_a"); }; { { if ((((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a)) + ((6 + (SACp_emal_43520__isaa_31363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a)) + ((6 + (SACp_emal_43520__isaa_31363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a)) + ((6 + (SACp_emal_43520__isaa_31363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43520__isaa_31363_a = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43520__isaa_31363_a = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a)) + ((6 + (SACp_emal_43520__isaa_31363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43520__isaa_31363_a = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43520__isaa_31363_a = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a)) + ((6 + (SACp_emal_43520__isaa_31363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a)) + ((6 + (SACp_emal_43520__isaa_31363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a)) + ((6 + (SACp_emal_43520__isaa_31363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a)) + ((6 + (SACp_emal_43520__isaa_31363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a)) + ((6 + (SACp_emal_43520__isaa_31363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43520__isaa_31363_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43520__isaa_31363_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43520__isaa_31363_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43520__isaa_31363_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43520__isaa_31363_a__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a), ((6 + (SACp_emal_43520__isaa_31363_a__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43520__isaa_31363_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43520__isaa_31363_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43520__isaa_31363_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43520__isaa_31363_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 34, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43520__isaa_31363_a__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 34, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_43520__isaa_31363_a[0] = SACl_a__shp0; };

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 34, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 34, 26, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_43518__icc_5038 = ( SACp_emal_43520__isaa_31363_a[SACp_emal_43519__flat_311]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 34, 36, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_43517__icc_5044 = ( SACp_emal_43521__isaa_31360_b[SACp_emal_43519__flat_311]); }

    { ; ; }
    ; ; { SACp_emal_43518__icc_5038 = (SACp_emal_43518__icc_5038) - (SACp_emal_43517__icc_5044); };
    { ; ; }
    ; ; { SACp_emal_43515__pinl_10361__flat_1060 = (SACp_emal_43518__icc_5038) > (0); };
    { ; ; }
    if (SACp_emal_43515__pinl_10361__flat_1060)
    {
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      ;

      }
      { { SACp_pinl_47666__emal_43551__uprf_20457 = 
# 14266 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 14266 "/home/rubenhensen/sac/a.out.c"
     ; }; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47664__emal_43549__uprf_20459 = ( SACp_emal_43521__isaa_31360_b[SACp_pinl_47665__emal_43550__ivesplit_31412]); }

      { { if (!((1 == SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47663__emal_43548__pinl_10392__idc_8099"); }; { { if ((((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099)) + ((6 + (SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099)) + ((6 + (SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099)) + ((6 + (SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47663__emal_43548__pinl_10392__idc_8099 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47663__emal_43548__pinl_10392__idc_8099 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099)) + ((6 + (SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47663__emal_43548__pinl_10392__idc_8099 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47663__emal_43548__pinl_10392__idc_8099 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099)) + ((6 + (SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099)) + ((6 + (SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099)) + ((6 + (SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099)) + ((6 + (SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099)) + ((6 + (SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47663__emal_43548__pinl_10392__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47663__emal_43548__pinl_10392__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47663__emal_43548__pinl_10392__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47663__emal_43548__pinl_10392__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099, SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099), ((6 + (SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7182, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7182, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_47663__emal_43548__pinl_10392__idc_8099[0] = SACp_pinl_47664__emal_43549__uprf_20459; }

      if (SACp_pinl_47665__emal_43550__ivesplit_31412 <= SACp_pinl_47664__emal_43549__uprf_20459) { SACp_pinl_47662__emal_43547__uprf_20449 = 1; } else { SACp_pinl_47662__emal_43547__uprf_20449 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7287, "Scalar constraint `" "SACp_pinl_47665__emal_43550__ivesplit_31412" " (" "%d" ") <= " "SACp_pinl_47664__emal_43549__uprf_20459" " (" "%d" ")" "' violated", SACp_pinl_47665__emal_43550__ivesplit_31412, SACp_pinl_47664__emal_43549__uprf_20459); }
      { { SACp_pinl_47661__emal_43546__uprf_20448 = SACp_pinl_47665__emal_43550__ivesplit_31412; } }
      { { if (!((1 == SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47660__emal_43545__pinl_10399__idc_8103"); }; { { if ((((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103)) + ((6 + (SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103)) + ((6 + (SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103)) + ((6 + (SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47660__emal_43545__pinl_10399__idc_8103 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47660__emal_43545__pinl_10399__idc_8103 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103)) + ((6 + (SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47660__emal_43545__pinl_10399__idc_8103 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47660__emal_43545__pinl_10399__idc_8103 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103)) + ((6 + (SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103)) + ((6 + (SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103)) + ((6 + (SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103)) + ((6 + (SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103)) + ((6 + (SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47660__emal_43545__pinl_10399__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47660__emal_43545__pinl_10399__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47660__emal_43545__pinl_10399__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47660__emal_43545__pinl_10399__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103, SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103), ((6 + (SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_47660__emal_43545__pinl_10399__idc_8103[0] = SACp_pinl_47661__emal_43546__uprf_20448; }

      { ; ; }
      if (!SACp_pinl_47662__emal_43547__uprf_20449) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7209, "With-loop guard failed"); }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47659__emal_43544__pinl_20247__icc_6985 = ( SACp_pinl_47660__emal_43545__pinl_10399__idc_8103[SACp_pinl_47665__emal_43550__ivesplit_31412]); }

      { { { if (((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103) - 1)->data1.arena)); } else { if (SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103) - 1)->data1.arena)); } else { if (((((SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__sz * sizeof (*SACp_pinl_47660__emal_43545__pinl_10399__idc_8103))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47660__emal_43545__pinl_10399__idc_8103__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47658__emal_43543__pinl_20250__icc_6991 = ( SACp_pinl_47663__emal_43548__pinl_10392__idc_8099[SACp_pinl_47665__emal_43550__ivesplit_31412]); }

      { { { if (((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099) - 1)->data1.arena)); } else { if (SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099) - 1)->data1.arena)); } else { if (((((SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__sz * sizeof (*SACp_pinl_47663__emal_43548__pinl_10392__idc_8099))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47663__emal_43548__pinl_10392__idc_8099__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47657__emal_43542__uprf_20418 = ( SACp_emal_43520__isaa_31363_a[SACp_pinl_47665__emal_43550__ivesplit_31412]); }

      { ; ; }
      { { if (!((1 == SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47643__emal_43528__pinl_10371__icc_8094"); }; { if ((((6 + (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47658__emal_43543__pinl_20250__icc_6991;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__sz = SAC_size;
        if (!((SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 14345 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 14345 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 14345 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 14345 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 14345 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 14345 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 14345 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 14345, __extension__ __PRETTY_FUNCTION__); }))
# 14345 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_47643__emal_43528__pinl_10371__icc_8094 = (
# 14345 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 14345 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__sz * sizeof (*SACp_pinl_47643__emal_43528__pinl_10371__icc_8094)); break; case SAC_HM_multi_threaded: SACp_pinl_47643__emal_43528__pinl_10371__icc_8094 = (
# 14345 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 14345 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__sz * sizeof (*SACp_pinl_47643__emal_43528__pinl_10371__icc_8094), 0); break; case SAC_HM_any_threaded: SACp_pinl_47643__emal_43528__pinl_10371__icc_8094 = (
# 14345 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 14345 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__sz * sizeof (*SACp_pinl_47643__emal_43528__pinl_10371__icc_8094), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_pinl_47643__emal_43528__pinl_10371__icc_8094_shpfac0;




        {
          int SAC_i;
          SAC_SACp_pinl_47643__emal_43528__pinl_10371__icc_8094_shpfac0 = 1;
        }




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_47659__emal_43544__pinl_20247__icc_6985;




        SACp_pinl_47627__wlidx_42331__pinl_10371__icc_8094
          = SAC_schedule_start0 * SAC_SACp_pinl_47643__emal_43528__pinl_10371__icc_8094_shpfac0;

        { int SAC_stop_SACp_pinl_47578__eat_454 = SACp_pinl_47659__emal_43544__pinl_20247__icc_6985; for (SACp_pinl_47578__eat_454 = 0; SACp_pinl_47578__eat_454 < SACp_pinl_47659__emal_43544__pinl_20247__icc_6985;) {
       



        if (!((0 == (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim - SACp_pinl_47577_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_47643__emal_43528__pinl_10371__icc_8094_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "WL expression with illegal size found!"); };
        { SACp_pinl_47643__emal_43528__pinl_10371__icc_8094[SACp_pinl_47627__wlidx_42331__pinl_10371__icc_8094] = SACp_pinl_47666__emal_43551__uprf_20457; };

        SACp_pinl_47627__wlidx_42331__pinl_10371__icc_8094 = SACp_pinl_47627__wlidx_42331__pinl_10371__icc_8094 + 1;
        SACp_pinl_47578__eat_454 = SACp_pinl_47578__eat_454 + 1;
        } }
# 14415 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_pinl_47659__emal_43544__pinl_20247__icc_6985;
        SAC_schedule_stop0 = SACp_pinl_47658__emal_43543__pinl_20250__icc_6991;




        SACp_pinl_47627__wlidx_42331__pinl_10371__icc_8094
          = SAC_schedule_start0 * SAC_SACp_pinl_47643__emal_43528__pinl_10371__icc_8094_shpfac0;

        { int SAC_stop_SACp_pinl_47578__eat_454 = SACp_pinl_47658__emal_43543__pinl_20250__icc_6991; for (SACp_pinl_47578__eat_454 = SACp_pinl_47659__emal_43544__pinl_20247__icc_6985; SACp_pinl_47578__eat_454 < SACp_pinl_47658__emal_43543__pinl_20250__icc_6991;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47578__eat_454 >= 0) { { SACp_pinl_47654__emal_43539__uprf_20441 = SACp_pinl_47578__eat_454; }; SACp_pinl_47654__emal_43539__uprf_20441 = 1; } else { SACp_pinl_47654__emal_43539__uprf_20441 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47578__eat_454"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47578__eat_454 < SACp_pinl_47664__emal_43549__uprf_20459) { SACp_pinl_47653__emal_43538__uprf_20435 = 1; } else { SACp_pinl_47653__emal_43538__uprf_20435 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Scalar constraint `" "SACp_pinl_47578__eat_454" " (" "%d" ") < " "SACp_pinl_47664__emal_43549__uprf_20459" " (" "%d" ")" "' violated", SACp_pinl_47578__eat_454, SACp_pinl_47664__emal_43549__uprf_20459); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47578__eat_454 >= 0) { { SACp_pinl_47652__emal_43537__uprf_20426 = SACp_pinl_47578__eat_454; }; SACp_pinl_47652__emal_43537__uprf_20426 = 1; } else { SACp_pinl_47652__emal_43537__uprf_20426 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47578__eat_454"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47578__eat_454 < SACp_pinl_47657__emal_43542__uprf_20418) { SACp_pinl_47651__emal_43536__uprf_20420 = 1; } else { SACp_pinl_47651__emal_43536__uprf_20420 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Scalar constraint `" "SACp_pinl_47578__eat_454" " (" "%d" ") < " "SACp_pinl_47657__emal_43542__uprf_20418" " (" "%d" ")" "' violated", SACp_pinl_47578__eat_454, SACp_pinl_47657__emal_43542__uprf_20418); }
        { { if (!((1 == SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47650__emal_43535__pinl_10411__idc_8109"); }; { { if ((((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109)) + ((6 + (SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109)) + ((6 + (SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109)) + ((6 + (SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47650__emal_43535__pinl_10411__idc_8109 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47650__emal_43535__pinl_10411__idc_8109 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109)) + ((6 + (SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47650__emal_43535__pinl_10411__idc_8109 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47650__emal_43535__pinl_10411__idc_8109 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109)) + ((6 + (SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109)) + ((6 + (SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109)) + ((6 + (SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109)) + ((6 + (SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109)) + ((6 + (SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47650__emal_43535__pinl_10411__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47650__emal_43535__pinl_10411__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47650__emal_43535__pinl_10411__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47650__emal_43535__pinl_10411__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109, SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109), ((6 + (SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_47650__emal_43535__pinl_10411__idc_8109[0] = SACp_pinl_47578__eat_454; }

        if (!SACp_pinl_47653__emal_43538__uprf_20435) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47654__emal_43539__uprf_20441) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47649__emal_43534__ivesli_42484 = ( SACp_pinl_47650__emal_43535__pinl_10411__idc_8109[0]);

        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47648__emal_43533__pinl_10364__icc_8082 = ( SACl_b[SACp_pinl_47649__emal_43534__ivesli_42484]); }

        { ; ; }
        if (!SACp_pinl_47653__emal_43538__uprf_20435) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47654__emal_43539__uprf_20441) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        if (!SACp_pinl_47651__emal_43536__uprf_20420) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47652__emal_43537__uprf_20426) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47647__emal_43532__ivesli_42483 = ( SACp_pinl_47650__emal_43535__pinl_10411__idc_8109[0]);

        { { { if (((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109) - 1)->data1.arena)); } else { if (SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109) - 1)->data1.arena)); } else { if (((((SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__sz * sizeof (*SACp_pinl_47650__emal_43535__pinl_10411__idc_8109))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47650__emal_43535__pinl_10411__idc_8109__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47646__emal_43531__pinl_10367__icc_8088 = ( SACl_a[SACp_pinl_47647__emal_43532__ivesli_42483]); }

        { ; ; }
        if (!SACp_pinl_47651__emal_43536__uprf_20420) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47652__emal_43537__uprf_20426) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        ; ; { SACp_pinl_47646__emal_43531__pinl_10367__icc_8088 = (SACp_pinl_47646__emal_43531__pinl_10367__icc_8088) - (SACp_pinl_47648__emal_43533__pinl_10364__icc_8082); };
        { ; ; }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_47644__emal_43529__pinl_10377__flat_3875 = (SACp_pinl_47646__emal_43531__pinl_10367__icc_8088) == (0); };
        { ; ; }



        if (!((0 == (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__dim - SACp_pinl_47577_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_47643__emal_43528__pinl_10371__icc_8094_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
        { SACp_pinl_47643__emal_43528__pinl_10371__icc_8094[SACp_pinl_47627__wlidx_42331__pinl_10371__icc_8094] = SACp_pinl_47644__emal_43529__pinl_10377__flat_3875; };

        { ; ; }
        SACp_pinl_47627__wlidx_42331__pinl_10371__icc_8094 = SACp_pinl_47627__wlidx_42331__pinl_10371__icc_8094 + 1;
        SACp_pinl_47578__eat_454 = SACp_pinl_47578__eat_454 + 1;
        } }
# 14578 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48546_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
      { { { if (((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, ((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)); } else { if (SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, ((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, ((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)); } } else { if (((((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, ((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)); } else { if (((((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, ((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43520__isaa_31363_a__desc) & (-1 ^ (3))))); } } }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))); } } } } else { } }
      { { { if (((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, ((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)); } else { if (SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, ((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, ((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)); } } else { if (((((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, ((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)); } else { if (((((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, ((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43521__isaa_31360_b__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_47662__emal_43547__uprf_20449) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7209, "With-loop guard failed"); }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Assignment with incompatible types found"); };
      ;

      }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 241, 13, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACl_res = SACp_pinl_47666__emal_43551__uprf_20457; }

     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_47658__emal_43543__pinl_20250__icc_6991;

        { int SAC_stop_SACp_pinl_47568__eat_453 = SACp_pinl_47658__emal_43543__pinl_20250__icc_6991; for (SACp_pinl_47568__eat_453 = 0; SACp_pinl_47568__eat_453 < SACp_pinl_47658__emal_43543__pinl_20250__icc_6991;) {
       
        ;
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47568__eat_453 >= 0) { { SACp_pinl_47642__emal_43527__uprf_20396 = SACp_pinl_47568__eat_453; }; SACp_pinl_47642__emal_43527__uprf_20396 = 1; } else { SACp_pinl_47642__emal_43527__uprf_20396 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47568__eat_453"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47568__eat_453 < SACp_pinl_47658__emal_43543__pinl_20250__icc_6991) { SACp_pinl_47641__emal_43526__uprf_20390 = 1; } else { SACp_pinl_47641__emal_43526__uprf_20390 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Scalar constraint `" "SACp_pinl_47568__eat_453" " (" "%d" ") < " "SACp_pinl_47658__emal_43543__pinl_20250__icc_6991" " (" "%d" ")" "' violated", SACp_pinl_47568__eat_453, SACp_pinl_47658__emal_43543__pinl_20250__icc_6991); }
        { { if (!((1 == SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47640__emal_43525__pinl_10612__idc_8060"); }; { { if ((((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060)) + ((6 + (SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060)) + ((6 + (SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060)) + ((6 + (SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47640__emal_43525__pinl_10612__idc_8060 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47640__emal_43525__pinl_10612__idc_8060 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060)) + ((6 + (SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47640__emal_43525__pinl_10612__idc_8060 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47640__emal_43525__pinl_10612__idc_8060 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060)) + ((6 + (SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060)) + ((6 + (SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060)) + ((6 + (SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060)) + ((6 + (SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060)) + ((6 + (SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47640__emal_43525__pinl_10612__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47640__emal_43525__pinl_10612__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47640__emal_43525__pinl_10612__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47640__emal_43525__pinl_10612__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060, SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060), ((6 + (SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_47640__emal_43525__pinl_10612__idc_8060[0] = SACp_pinl_47568__eat_453; }

        if (!SACp_pinl_47641__emal_43526__uprf_20390) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47642__emal_43527__uprf_20396) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47639__emal_43524__ivesli_42482 = ( SACp_pinl_47640__emal_43525__pinl_10612__idc_8060[0]);

        { { { if (((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060) - 1)->data1.arena)); } else { if (SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060) - 1)->data1.arena)); } else { if (((((SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__sz * sizeof (*SACp_pinl_47640__emal_43525__pinl_10612__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47640__emal_43525__pinl_10612__idc_8060__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47638__emal_43523__pinl_10569__icc_8039 = ( SACp_pinl_47643__emal_43528__pinl_10371__icc_8094[SACp_pinl_47639__emal_43524__ivesli_42482]); }

        { ; ; }
        if (!SACp_pinl_47641__emal_43526__uprf_20390) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47642__emal_43527__uprf_20396) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        ; ; { SACp_pinl_47638__emal_43523__pinl_10569__icc_8039 = (SACl_res) & (SACp_pinl_47638__emal_43523__pinl_10569__icc_8039); };
        ;



        ;




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47635__ufiv_43052__pinl_10563__flat_1128 = SACp_pinl_47638__emal_43523__pinl_10569__icc_8039; }




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACl_res = SACp_pinl_47635__ufiv_43052__pinl_10563__flat_1128; }




        ;


        SACp_pinl_47568__eat_453 = SACp_pinl_47568__eat_453 + 1;
        } }
# 14736 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48547_SAC_label:;
      { ; ; }
      { { free (SACp_pinl_47643__emal_43528__pinl_10371__icc_8094); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47643__emal_43528__pinl_10371__icc_8094__desc) & (-1 ^ (3))))); } } }
      { ; ; }
    }
    else
    {
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      ;

      }
      { { SACp_pinl_47696__emal_43581__uprf_20537 = 
# 14755 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 14755 "/home/rubenhensen/sac/a.out.c"
     ; }; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47694__emal_43579__uprf_20539 = ( SACp_emal_43520__isaa_31363_a[SACp_pinl_47695__emal_43580__ivesplit_31429]); }

      { { if (!((1 == SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47693__emal_43578__pinl_10694__idc_8099"); }; { { if ((((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099)) + ((6 + (SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099)) + ((6 + (SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099)) + ((6 + (SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47693__emal_43578__pinl_10694__idc_8099 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47693__emal_43578__pinl_10694__idc_8099 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099)) + ((6 + (SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47693__emal_43578__pinl_10694__idc_8099 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47693__emal_43578__pinl_10694__idc_8099 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099)) + ((6 + (SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099)) + ((6 + (SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099)) + ((6 + (SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099)) + ((6 + (SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099)) + ((6 + (SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47693__emal_43578__pinl_10694__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47693__emal_43578__pinl_10694__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47693__emal_43578__pinl_10694__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47693__emal_43578__pinl_10694__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099, SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099), ((6 + (SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7182, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7182, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_47693__emal_43578__pinl_10694__idc_8099[0] = SACp_pinl_47694__emal_43579__uprf_20539; }

      if (SACp_pinl_47695__emal_43580__ivesplit_31429 <= SACp_pinl_47694__emal_43579__uprf_20539) { SACp_pinl_47692__emal_43577__uprf_20529 = 1; } else { SACp_pinl_47692__emal_43577__uprf_20529 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7287, "Scalar constraint `" "SACp_pinl_47695__emal_43580__ivesplit_31429" " (" "%d" ") <= " "SACp_pinl_47694__emal_43579__uprf_20539" " (" "%d" ")" "' violated", SACp_pinl_47695__emal_43580__ivesplit_31429, SACp_pinl_47694__emal_43579__uprf_20539); }
      { { SACp_pinl_47691__emal_43576__uprf_20528 = SACp_pinl_47695__emal_43580__ivesplit_31429; } }
      { { if (!((1 == SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47690__emal_43575__pinl_10701__idc_8103"); }; { { if ((((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103)) + ((6 + (SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103)) + ((6 + (SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103)) + ((6 + (SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47690__emal_43575__pinl_10701__idc_8103 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47690__emal_43575__pinl_10701__idc_8103 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103)) + ((6 + (SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47690__emal_43575__pinl_10701__idc_8103 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47690__emal_43575__pinl_10701__idc_8103 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103)) + ((6 + (SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103)) + ((6 + (SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103)) + ((6 + (SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103)) + ((6 + (SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103)) + ((6 + (SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47690__emal_43575__pinl_10701__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47690__emal_43575__pinl_10701__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47690__emal_43575__pinl_10701__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47690__emal_43575__pinl_10701__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103, SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103), ((6 + (SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_47690__emal_43575__pinl_10701__idc_8103[0] = SACp_pinl_47691__emal_43576__uprf_20528; }

      { ; ; }
      if (!SACp_pinl_47692__emal_43577__uprf_20529) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7209, "With-loop guard failed"); }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47689__emal_43574__pinl_20308__icc_6985 = ( SACp_pinl_47690__emal_43575__pinl_10701__idc_8103[SACp_pinl_47695__emal_43580__ivesplit_31429]); }

      { { { if (((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103) - 1)->data1.arena)); } else { if (SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103) - 1)->data1.arena)); } else { if (((((SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__sz * sizeof (*SACp_pinl_47690__emal_43575__pinl_10701__idc_8103))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47690__emal_43575__pinl_10701__idc_8103__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47688__emal_43573__pinl_20311__icc_6991 = ( SACp_pinl_47693__emal_43578__pinl_10694__idc_8099[SACp_pinl_47695__emal_43580__ivesplit_31429]); }

      { { { if (((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099) - 1)->data1.arena)); } else { if (SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099) - 1)->data1.arena)); } else { if (((((SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__sz * sizeof (*SACp_pinl_47693__emal_43578__pinl_10694__idc_8099))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47693__emal_43578__pinl_10694__idc_8099__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47687__emal_43572__uprf_20498 = ( SACp_emal_43521__isaa_31360_b[SACp_pinl_47695__emal_43580__ivesplit_31429]); }

      { ; ; }
      { { if (!((1 == SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47673__emal_43558__pinl_10673__icc_8094"); }; { if ((((6 + (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47688__emal_43573__pinl_20311__icc_6991;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__sz = SAC_size;
        if (!((SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 14834 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 14834 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 14834 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 14834 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 14834 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 14834 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 14834 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 14834, __extension__ __PRETTY_FUNCTION__); }))
# 14834 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_47673__emal_43558__pinl_10673__icc_8094 = (
# 14834 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 14834 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__sz * sizeof (*SACp_pinl_47673__emal_43558__pinl_10673__icc_8094)); break; case SAC_HM_multi_threaded: SACp_pinl_47673__emal_43558__pinl_10673__icc_8094 = (
# 14834 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 14834 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__sz * sizeof (*SACp_pinl_47673__emal_43558__pinl_10673__icc_8094), 0); break; case SAC_HM_any_threaded: SACp_pinl_47673__emal_43558__pinl_10673__icc_8094 = (
# 14834 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 14834 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__sz * sizeof (*SACp_pinl_47673__emal_43558__pinl_10673__icc_8094), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_pinl_47673__emal_43558__pinl_10673__icc_8094_shpfac0;




        {
          int SAC_i;
          SAC_SACp_pinl_47673__emal_43558__pinl_10673__icc_8094_shpfac0 = 1;
        }




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_47689__emal_43574__pinl_20308__icc_6985;




        SACp_pinl_47628__wlidx_42332__pinl_10673__icc_8094
          = SAC_schedule_start0 * SAC_SACp_pinl_47673__emal_43558__pinl_10673__icc_8094_shpfac0;

        { int SAC_stop_SACp_pinl_47593__eat_454 = SACp_pinl_47689__emal_43574__pinl_20308__icc_6985; for (SACp_pinl_47593__eat_454 = 0; SACp_pinl_47593__eat_454 < SACp_pinl_47689__emal_43574__pinl_20308__icc_6985;) {
       



        if (!((0 == (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim - SACp_pinl_47592_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_47673__emal_43558__pinl_10673__icc_8094_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "WL expression with illegal size found!"); };
        { SACp_pinl_47673__emal_43558__pinl_10673__icc_8094[SACp_pinl_47628__wlidx_42332__pinl_10673__icc_8094] = SACp_pinl_47696__emal_43581__uprf_20537; };

        SACp_pinl_47628__wlidx_42332__pinl_10673__icc_8094 = SACp_pinl_47628__wlidx_42332__pinl_10673__icc_8094 + 1;
        SACp_pinl_47593__eat_454 = SACp_pinl_47593__eat_454 + 1;
        } }
# 14904 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_pinl_47689__emal_43574__pinl_20308__icc_6985;
        SAC_schedule_stop0 = SACp_pinl_47688__emal_43573__pinl_20311__icc_6991;




        SACp_pinl_47628__wlidx_42332__pinl_10673__icc_8094
          = SAC_schedule_start0 * SAC_SACp_pinl_47673__emal_43558__pinl_10673__icc_8094_shpfac0;

        { int SAC_stop_SACp_pinl_47593__eat_454 = SACp_pinl_47688__emal_43573__pinl_20311__icc_6991; for (SACp_pinl_47593__eat_454 = SACp_pinl_47689__emal_43574__pinl_20308__icc_6985; SACp_pinl_47593__eat_454 < SACp_pinl_47688__emal_43573__pinl_20311__icc_6991;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47593__eat_454 >= 0) { { SACp_pinl_47684__emal_43569__uprf_20521 = SACp_pinl_47593__eat_454; }; SACp_pinl_47684__emal_43569__uprf_20521 = 1; } else { SACp_pinl_47684__emal_43569__uprf_20521 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47593__eat_454"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47593__eat_454 < SACp_pinl_47694__emal_43579__uprf_20539) { SACp_pinl_47683__emal_43568__uprf_20515 = 1; } else { SACp_pinl_47683__emal_43568__uprf_20515 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Scalar constraint `" "SACp_pinl_47593__eat_454" " (" "%d" ") < " "SACp_pinl_47694__emal_43579__uprf_20539" " (" "%d" ")" "' violated", SACp_pinl_47593__eat_454, SACp_pinl_47694__emal_43579__uprf_20539); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47593__eat_454 >= 0) { { SACp_pinl_47682__emal_43567__uprf_20506 = SACp_pinl_47593__eat_454; }; SACp_pinl_47682__emal_43567__uprf_20506 = 1; } else { SACp_pinl_47682__emal_43567__uprf_20506 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47593__eat_454"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47593__eat_454 < SACp_pinl_47687__emal_43572__uprf_20498) { SACp_pinl_47681__emal_43566__uprf_20500 = 1; } else { SACp_pinl_47681__emal_43566__uprf_20500 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Scalar constraint `" "SACp_pinl_47593__eat_454" " (" "%d" ") < " "SACp_pinl_47687__emal_43572__uprf_20498" " (" "%d" ")" "' violated", SACp_pinl_47593__eat_454, SACp_pinl_47687__emal_43572__uprf_20498); }
        { { if (!((1 == SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47680__emal_43565__pinl_10713__idc_8109"); }; { { if ((((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109)) + ((6 + (SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109)) + ((6 + (SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109)) + ((6 + (SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47680__emal_43565__pinl_10713__idc_8109 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47680__emal_43565__pinl_10713__idc_8109 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109)) + ((6 + (SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47680__emal_43565__pinl_10713__idc_8109 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47680__emal_43565__pinl_10713__idc_8109 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109)) + ((6 + (SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109)) + ((6 + (SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109)) + ((6 + (SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109)) + ((6 + (SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109)) + ((6 + (SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47680__emal_43565__pinl_10713__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47680__emal_43565__pinl_10713__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47680__emal_43565__pinl_10713__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47680__emal_43565__pinl_10713__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109, SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109), ((6 + (SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_47680__emal_43565__pinl_10713__idc_8109[0] = SACp_pinl_47593__eat_454; }

        if (!SACp_pinl_47683__emal_43568__uprf_20515) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47684__emal_43569__uprf_20521) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47679__emal_43564__ivesli_42487 = ( SACp_pinl_47680__emal_43565__pinl_10713__idc_8109[0]);

        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47678__emal_43563__pinl_10666__icc_8082 = ( SACl_a[SACp_pinl_47679__emal_43564__ivesli_42487]); }

        { ; ; }
        if (!SACp_pinl_47683__emal_43568__uprf_20515) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47684__emal_43569__uprf_20521) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        if (!SACp_pinl_47681__emal_43566__uprf_20500) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47682__emal_43567__uprf_20506) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47677__emal_43562__ivesli_42486 = ( SACp_pinl_47680__emal_43565__pinl_10713__idc_8109[0]);

        { { { if (((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109) - 1)->data1.arena)); } else { if (SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109) - 1)->data1.arena)); } else { if (((((SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__sz * sizeof (*SACp_pinl_47680__emal_43565__pinl_10713__idc_8109))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47680__emal_43565__pinl_10713__idc_8109__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47676__emal_43561__pinl_10669__icc_8088 = ( SACl_b[SACp_pinl_47677__emal_43562__ivesli_42486]); }

        { ; ; }
        if (!SACp_pinl_47681__emal_43566__uprf_20500) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47682__emal_43567__uprf_20506) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        ; ; { SACp_pinl_47676__emal_43561__pinl_10669__icc_8088 = (SACp_pinl_47676__emal_43561__pinl_10669__icc_8088) - (SACp_pinl_47678__emal_43563__pinl_10666__icc_8082); };
        { ; ; }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_47674__emal_43559__pinl_10679__flat_3875 = (SACp_pinl_47676__emal_43561__pinl_10669__icc_8088) == (0); };
        { ; ; }



        if (!((0 == (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__dim - SACp_pinl_47592_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_47673__emal_43558__pinl_10673__icc_8094_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
        { SACp_pinl_47673__emal_43558__pinl_10673__icc_8094[SACp_pinl_47628__wlidx_42332__pinl_10673__icc_8094] = SACp_pinl_47674__emal_43559__pinl_10679__flat_3875; };

        { ; ; }
        SACp_pinl_47628__wlidx_42332__pinl_10673__icc_8094 = SACp_pinl_47628__wlidx_42332__pinl_10673__icc_8094 + 1;
        SACp_pinl_47593__eat_454 = SACp_pinl_47593__eat_454 + 1;
        } }
# 15067 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48548_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
      { { { if (((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, ((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)); } else { if (SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, ((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, ((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)); } } else { if (((((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, ((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)); } else { if (((((SACp_emal_43520__isaa_31363_a__sz * sizeof (*SACp_emal_43520__isaa_31363_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, ((((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43520__isaa_31363_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43520__isaa_31363_a__desc) & (-1 ^ (3))))); } } }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))); } } } } else { } }
      { { { if (((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, ((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)); } else { if (SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, ((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, ((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)); } } else { if (((((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, ((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)); } else { if (((((SACp_emal_43521__isaa_31360_b__sz * sizeof (*SACp_emal_43521__isaa_31360_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, ((((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43521__isaa_31360_b); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43521__isaa_31360_b__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_47692__emal_43577__uprf_20529) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7209, "With-loop guard failed"); }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Assignment with incompatible types found"); };
      ;

      }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 241, 13, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACl_res = SACp_pinl_47696__emal_43581__uprf_20537; }

     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_47688__emal_43573__pinl_20311__icc_6991;

        { int SAC_stop_SACp_pinl_47583__eat_453 = SACp_pinl_47688__emal_43573__pinl_20311__icc_6991; for (SACp_pinl_47583__eat_453 = 0; SACp_pinl_47583__eat_453 < SACp_pinl_47688__emal_43573__pinl_20311__icc_6991;) {
       
        ;
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47583__eat_453 >= 0) { { SACp_pinl_47672__emal_43557__uprf_20476 = SACp_pinl_47583__eat_453; }; SACp_pinl_47672__emal_43557__uprf_20476 = 1; } else { SACp_pinl_47672__emal_43557__uprf_20476 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47583__eat_453"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47583__eat_453 < SACp_pinl_47688__emal_43573__pinl_20311__icc_6991) { SACp_pinl_47671__emal_43556__uprf_20470 = 1; } else { SACp_pinl_47671__emal_43556__uprf_20470 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Scalar constraint `" "SACp_pinl_47583__eat_453" " (" "%d" ") < " "SACp_pinl_47688__emal_43573__pinl_20311__icc_6991" " (" "%d" ")" "' violated", SACp_pinl_47583__eat_453, SACp_pinl_47688__emal_43573__pinl_20311__icc_6991); }
        { { if (!((1 == SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47670__emal_43555__pinl_10813__idc_8060"); }; { { if ((((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060)) + ((6 + (SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060)) + ((6 + (SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060)) + ((6 + (SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47670__emal_43555__pinl_10813__idc_8060 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47670__emal_43555__pinl_10813__idc_8060 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060)) + ((6 + (SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47670__emal_43555__pinl_10813__idc_8060 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47670__emal_43555__pinl_10813__idc_8060 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060)) + ((6 + (SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060)) + ((6 + (SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060)) + ((6 + (SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060)) + ((6 + (SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060)) + ((6 + (SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47670__emal_43555__pinl_10813__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47670__emal_43555__pinl_10813__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47670__emal_43555__pinl_10813__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47670__emal_43555__pinl_10813__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060, SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060), ((6 + (SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_47670__emal_43555__pinl_10813__idc_8060[0] = SACp_pinl_47583__eat_453; }

        if (!SACp_pinl_47671__emal_43556__uprf_20470) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47672__emal_43557__uprf_20476) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47669__emal_43554__ivesli_42485 = ( SACp_pinl_47670__emal_43555__pinl_10813__idc_8060[0]);

        { { { if (((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060) - 1)->data1.arena)); } else { if (SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060) - 1)->data1.arena)); } else { if (((((SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__sz * sizeof (*SACp_pinl_47670__emal_43555__pinl_10813__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47670__emal_43555__pinl_10813__idc_8060__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47668__emal_43553__pinl_10770__icc_8039 = ( SACp_pinl_47673__emal_43558__pinl_10673__icc_8094[SACp_pinl_47669__emal_43554__ivesli_42485]); }

        { ; ; }
        if (!SACp_pinl_47671__emal_43556__uprf_20470) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47672__emal_43557__uprf_20476) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        ; ; { SACp_pinl_47668__emal_43553__pinl_10770__icc_8039 = (SACl_res) & (SACp_pinl_47668__emal_43553__pinl_10770__icc_8039); };
        ;



        ;




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47636__ufiv_43053__pinl_10764__flat_1128 = SACp_pinl_47668__emal_43553__pinl_10770__icc_8039; }




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACl_res = SACp_pinl_47636__ufiv_43053__pinl_10764__flat_1128; }




        ;


        SACp_pinl_47583__eat_453 = SACp_pinl_47583__eat_453 + 1;
        } }
# 15225 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48549_SAC_label:;
      { ; ; }
      { { free (SACp_pinl_47673__emal_43558__pinl_10673__icc_8094); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47673__emal_43558__pinl_10673__icc_8094__desc) & (-1 ^ (3))))); } } }
      { ; ; }
    }



    { *SAC_arg_1__p = SACl_res; }
    return;
   
  }



}
}
# 15254 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN__commonPostfix__i_X__i_X (
# 15254 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 15254 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    
# 15263 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15263 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47826__emal_43666__uprf_21145;
   
   

    const int SACp_pinl_47825__emal_43665__ivesplit_31624 = 0;



    int SACp_pinl_47824__emal_43664__uprf_21147;
   
   




    int * SACp_pinl_47823__emal_43663__pinl_11372__idc_8099;
    SAC_array_descriptor_t SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__desc = 
# 15279 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15279 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__shp0 = 1;
    const int SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz = 1;
    const int SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim = 1;




    
# 15287 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15287 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47822__emal_43662__uprf_21137;
   
   




    int SACp_pinl_47821__emal_43661__uprf_21136;
   
   




    int * SACp_pinl_47820__emal_43660__pinl_11379__idc_8103;
    SAC_array_descriptor_t SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__desc = 
# 15302 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15302 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__shp0 = 1;
    const int SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz = 1;
    const int SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim = 1;




    int SACp_pinl_47819__emal_43659__pinl_20854__icc_6985;
   
   




    int SACp_pinl_47818__emal_43658__pinl_20857__icc_6991;
   
   




    int SACp_pinl_47817__emal_43657__uprf_21106;
   
   




    
# 15331 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15331 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47814__emal_43654__uprf_21129;
   
   




    
# 15338 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15338 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47813__emal_43653__uprf_21123;
   
   




    
# 15345 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15345 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47812__emal_43652__uprf_21114;
   
   




    
# 15352 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15352 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47811__emal_43651__uprf_21108;
   
   




    int * SACp_pinl_47810__emal_43650__pinl_11391__idc_8109;
    SAC_array_descriptor_t SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__desc = 
# 15360 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15360 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__shp0 = 1;
    const int SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz = 1;
    const int SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim = 1;




    int SACp_pinl_47809__emal_43649__ivesli_42495;
   
   




    int SACp_pinl_47808__emal_43648__pinl_11344__icc_8082;
   
   




    int SACp_pinl_47807__emal_43647__ivesli_42494;
   
   




    int SACp_pinl_47806__emal_43646__pinl_11347__icc_8088;
   
   




    
# 15396 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15396 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47804__emal_43644__pinl_11357__flat_3875;
   
   




    
# 15403 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15403 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_47803__emal_43643__pinl_11351__icc_8094;
    SAC_array_descriptor_t SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc = 
# 15404 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15404 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__shp0;
    int SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__sz;
    const int SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim = 1;




    
# 15412 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15412 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47802__emal_43642__uprf_21084;
   
   




    
# 15419 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15419 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47801__emal_43641__uprf_21078;
   
   




    int * SACp_pinl_47800__emal_43640__pinl_11491__idc_8060;
    SAC_array_descriptor_t SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__desc = 
# 15427 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15427 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__shp0 = 1;
    const int SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz = 1;
    const int SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim = 1;




    int SACp_pinl_47799__emal_43639__ivesli_42493;
   
   




    
# 15442 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15442 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47798__emal_43638__pinl_11448__icc_8039;
   
   




    
# 15449 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15449 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47796__emal_43636__uprf_21065;
   
   

    const int SACp_pinl_47795__emal_43635__ivesplit_31607 = 0;



    int SACp_pinl_47794__emal_43634__uprf_21067;
   
   




    int * SACp_pinl_47793__emal_43633__pinl_11171__idc_8099;
    SAC_array_descriptor_t SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__desc = 
# 15465 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15465 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__shp0 = 1;
    const int SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz = 1;
    const int SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim = 1;




    
# 15473 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15473 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47792__emal_43632__uprf_21057;
   
   




    int SACp_pinl_47791__emal_43631__uprf_21056;
   
   




    int * SACp_pinl_47790__emal_43630__pinl_11178__idc_8103;
    SAC_array_descriptor_t SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__desc = 
# 15488 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15488 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__shp0 = 1;
    const int SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz = 1;
    const int SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim = 1;




    int SACp_pinl_47789__emal_43629__pinl_20793__icc_6985;
   
   




    int SACp_pinl_47788__emal_43628__pinl_20796__icc_6991;
   
   




    int SACp_pinl_47787__emal_43627__uprf_21026;
   
   




    
# 15517 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15517 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47784__emal_43624__uprf_21049;
   
   




    
# 15524 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15524 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47783__emal_43623__uprf_21043;
   
   




    
# 15531 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15531 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47782__emal_43622__uprf_21034;
   
   




    
# 15538 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15538 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47781__emal_43621__uprf_21028;
   
   




    int * SACp_pinl_47780__emal_43620__pinl_11190__idc_8109;
    SAC_array_descriptor_t SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__desc = 
# 15546 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15546 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__shp0 = 1;
    const int SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz = 1;
    const int SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim = 1;




    int SACp_pinl_47779__emal_43619__ivesli_42492;
   
   




    int SACp_pinl_47778__emal_43618__pinl_11143__icc_8082;
   
   




    int SACp_pinl_47777__emal_43617__ivesli_42491;
   
   




    int SACp_pinl_47776__emal_43616__pinl_11146__icc_8088;
   
   




    
# 15582 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15582 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47774__emal_43614__pinl_11156__flat_3875;
   
   




    
# 15589 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15589 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_47773__emal_43613__pinl_11150__icc_8094;
    SAC_array_descriptor_t SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc = 
# 15590 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15590 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__shp0;
    int SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__sz;
    const int SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim = 1;




    
# 15598 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15598 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47772__emal_43612__uprf_21004;
   
   




    
# 15605 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15605 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47771__emal_43611__uprf_20998;
   
   




    int * SACp_pinl_47770__emal_43610__pinl_11290__idc_8060;
    SAC_array_descriptor_t SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__desc = 
# 15613 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15613 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__shp0 = 1;
    const int SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz = 1;
    const int SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim = 1;




    int SACp_pinl_47769__emal_43609__ivesli_42490;
   
   




    
# 15628 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15628 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47768__emal_43608__pinl_11247__icc_8039;
   
   




    
# 15635 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15635 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47766__ufiv_43055__pinl_11442__flat_1128;
   
   




    
# 15642 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15642 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47765__ufiv_43054__pinl_11241__flat_1128;
   
   




    int SACp_pinl_47758__wlidx_42336__pinl_11351__icc_8094;
   
   




    int SACp_pinl_47757__wlidx_42335__pinl_11150__icc_8094;
   
   




    int SACp_pinl_47723__eat_454;
   
   




    int * SACp_pinl_47722_iv;
    SAC_array_descriptor_t SACp_pinl_47722_iv__desc = 
# 15671 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15671 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47722_iv__shp0 = 1;
    const int SACp_pinl_47722_iv__sz = 1;
    const int SACp_pinl_47722_iv__dim = 1;




    int SACp_pinl_47713__eat_453;
   
   




    int * SACp_pinl_47712_iv;
    SAC_array_descriptor_t SACp_pinl_47712_iv__desc = 
# 15687 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15687 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47712_iv__shp0 = 1;
    const int SACp_pinl_47712_iv__sz = 1;
    const int SACp_pinl_47712_iv__dim = 1;




    int SACp_pinl_47708__eat_454;
   
   




    int * SACp_pinl_47707_iv;
    SAC_array_descriptor_t SACp_pinl_47707_iv__desc = 
# 15703 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15703 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47707_iv__shp0 = 1;
    const int SACp_pinl_47707_iv__sz = 1;
    const int SACp_pinl_47707_iv__dim = 1;




    int SACp_pinl_47698__eat_453;
   
   




    int * SACp_pinl_47697_iv;
    SAC_array_descriptor_t SACp_pinl_47697_iv__desc = 
# 15719 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15719 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47697_iv__shp0 = 1;
    const int SACp_pinl_47697_iv__sz = 1;
    const int SACp_pinl_47697_iv__dim = 1;




    int * SACp_emal_43606__isaa_31525_b;
    SAC_array_descriptor_t SACp_emal_43606__isaa_31525_b__desc = 
# 15728 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15728 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43606__isaa_31525_b__shp0 = 1;
    const int SACp_emal_43606__isaa_31525_b__sz = 1;
    const int SACp_emal_43606__isaa_31525_b__dim = 1;




    int * SACp_emal_43605__isaa_31528_a;
    SAC_array_descriptor_t SACp_emal_43605__isaa_31528_a__desc = 
# 15737 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15737 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43605__isaa_31528_a__shp0 = 1;
    const int SACp_emal_43605__isaa_31528_a__sz = 1;
    const int SACp_emal_43605__isaa_31528_a__dim = 1;

    const int SACp_emal_43604__flat_320 = 0;



    int SACp_emal_43603__icc_5056;
   
   




    int SACp_emal_43602__icc_5062;
   
   




    int SACp_emal_43601__pinl_10936_maxidx0;
   
   




    int SACp_emal_43599__pinl_10935__flat_3936;
   
   




    
# 15774 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15774 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43598__uprf_20977;
   
   




    
# 15781 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15781 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43597__uprf_20971;
   
   




    int * SACp_emal_43596__pinl_11022__idc_9445;
    SAC_array_descriptor_t SACp_emal_43596__pinl_11022__idc_9445__desc = 
# 15789 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15789 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43596__pinl_11022__idc_9445__shp0 = 1;
    const int SACp_emal_43596__pinl_11022__idc_9445__sz = 1;
    const int SACp_emal_43596__pinl_11022__idc_9445__dim = 1;




    int SACp_emal_43595__ivesli_42489;
   
   




    int SACp_emal_43594__pinl_10980__icc_9424;
   
   




    int * SACp_emal_43593__pinl_10925__icc_7424;
    SAC_array_descriptor_t SACp_emal_43593__pinl_10925__icc_7424__desc = 
# 15812 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15812 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43593__pinl_10925__icc_7424__shp0;
    int SACp_emal_43593__pinl_10925__icc_7424__sz;
    const int SACp_emal_43593__pinl_10925__icc_7424__dim = 1;




    int SACp_emal_43592__pinl_11046_maxidx0;
   
   




    int SACp_emal_43590__pinl_11045__flat_3936;
   
   




    
# 15834 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15834 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43589__uprf_20950;
   
   




    
# 15841 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15841 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43588__uprf_20944;
   
   




    int * SACp_emal_43587__pinl_11132__idc_9445;
    SAC_array_descriptor_t SACp_emal_43587__pinl_11132__idc_9445__desc = 
# 15849 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15849 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43587__pinl_11132__idc_9445__shp0 = 1;
    const int SACp_emal_43587__pinl_11132__idc_9445__sz = 1;
    const int SACp_emal_43587__pinl_11132__idc_9445__dim = 1;




    int SACp_emal_43586__ivesli_42488;
   
   




    int SACp_emal_43585__pinl_11090__icc_9424;
   
   




    int * SACp_emal_43584__pinl_11035__icc_7424;
    SAC_array_descriptor_t SACp_emal_43584__pinl_11035__icc_7424__desc = 
# 15872 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15872 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43584__pinl_11035__icc_7424__shp0;
    int SACp_emal_43584__pinl_11035__icc_7424__sz;
    const int SACp_emal_43584__pinl_11035__icc_7424__dim = 1;




    
# 15880 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15880 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43582__pinl_11140__flat_1060;
   
   




    int SACp_wlidx_42334__pinl_11035__icc_7424;
   
   




    int SACp_wlidx_42333__pinl_10925__icc_7424;
   
   




    int SACp_pinl_10938_i;
   
   




    int * SACp_pinl_10937_iv;
    SAC_array_descriptor_t SACp_pinl_10937_iv__desc = 
# 15909 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15909 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_10937_iv__shp0 = 1;
    const int SACp_pinl_10937_iv__sz = 1;
    const int SACp_pinl_10937_iv__dim = 1;




    int SACp_pinl_11048_i;
   
   




    int * SACp_pinl_11047_iv;
    SAC_array_descriptor_t SACp_pinl_11047_iv__desc = 
# 15925 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 15925 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_11047_iv__shp0 = 1;
    const int SACp_pinl_11047_iv__sz = 1;
    const int SACp_pinl_11047_iv__dim = 1;




    
# 15933 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 15933 "/home/rubenhensen/sac/a.out.c"
   SACl_res;
   
   





    int SACl_b__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    const int SACl_b__dim = 1;




    int SACl_a__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    const int SACl_a__dim = 1;

   
    { { if (!((1 == SACp_emal_43606__isaa_31525_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43606__isaa_31525_b"); }; { { if ((((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b)) + ((6 + (SACp_emal_43606__isaa_31525_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b)) + ((6 + (SACp_emal_43606__isaa_31525_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b)) + ((6 + (SACp_emal_43606__isaa_31525_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43606__isaa_31525_b = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43606__isaa_31525_b = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b)) + ((6 + (SACp_emal_43606__isaa_31525_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43606__isaa_31525_b = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43606__isaa_31525_b = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b)) + ((6 + (SACp_emal_43606__isaa_31525_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b)) + ((6 + (SACp_emal_43606__isaa_31525_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b)) + ((6 + (SACp_emal_43606__isaa_31525_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b)) + ((6 + (SACp_emal_43606__isaa_31525_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b)) + ((6 + (SACp_emal_43606__isaa_31525_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43606__isaa_31525_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43606__isaa_31525_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43606__isaa_31525_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43606__isaa_31525_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43606__isaa_31525_b__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b), ((6 + (SACp_emal_43606__isaa_31525_b__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43606__isaa_31525_b__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43606__isaa_31525_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43606__isaa_31525_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43606__isaa_31525_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 44, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43606__isaa_31525_b__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 44, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_43606__isaa_31525_b[0] = SACl_b__shp0; };

    { { if (!((1 == SACp_emal_43605__isaa_31528_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43605__isaa_31528_a"); }; { { if ((((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a)) + ((6 + (SACp_emal_43605__isaa_31528_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a)) + ((6 + (SACp_emal_43605__isaa_31528_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a)) + ((6 + (SACp_emal_43605__isaa_31528_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43605__isaa_31528_a = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43605__isaa_31528_a = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a)) + ((6 + (SACp_emal_43605__isaa_31528_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43605__isaa_31528_a = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43605__isaa_31528_a = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a)) + ((6 + (SACp_emal_43605__isaa_31528_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a)) + ((6 + (SACp_emal_43605__isaa_31528_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a)) + ((6 + (SACp_emal_43605__isaa_31528_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a)) + ((6 + (SACp_emal_43605__isaa_31528_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a)) + ((6 + (SACp_emal_43605__isaa_31528_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43605__isaa_31528_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43605__isaa_31528_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43605__isaa_31528_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43605__isaa_31528_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43605__isaa_31528_a__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a), ((6 + (SACp_emal_43605__isaa_31528_a__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43605__isaa_31528_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43605__isaa_31528_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43605__isaa_31528_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43605__isaa_31528_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 44, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43605__isaa_31528_a__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 44, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_43605__isaa_31528_a[0] = SACl_a__shp0; };

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 44, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 44, 27, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_43603__icc_5056 = ( SACp_emal_43605__isaa_31528_a[SACp_emal_43604__flat_320]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 44, 37, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_43602__icc_5062 = ( SACp_emal_43606__isaa_31525_b[SACp_emal_43604__flat_320]); }

    { ; ; }
    ; ; { SACp_emal_43601__pinl_10936_maxidx0 = (-1) + (SACp_emal_43603__icc_5056); };
    { { if (!((1 == SACp_emal_43593__pinl_10925__icc_7424__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43593__pinl_10925__icc_7424"); }; { if ((((6 + (SACp_emal_43593__pinl_10925__icc_7424__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43593__pinl_10925__icc_7424__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43593__pinl_10925__icc_7424__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43593__pinl_10925__icc_7424__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43593__pinl_10925__icc_7424__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43593__pinl_10925__icc_7424__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43593__pinl_10925__icc_7424__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43593__pinl_10925__icc_7424__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43593__pinl_10925__icc_7424__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43593__pinl_10925__icc_7424__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43593__pinl_10925__icc_7424__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43593__pinl_10925__icc_7424__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43593__pinl_10925__icc_7424__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43593__pinl_10925__icc_7424__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43593__pinl_10925__icc_7424__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43593__pinl_10925__icc_7424__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43593__pinl_10925__icc_7424__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43593__pinl_10925__icc_7424__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43593__pinl_10925__icc_7424__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43593__pinl_10925__icc_7424__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43593__pinl_10925__icc_7424__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 327, 545, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43593__pinl_10925__icc_7424__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43593__pinl_10925__icc_7424__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43593__pinl_10925__icc_7424__desc) & (-1 ^ (3))))[4]) = SACp_emal_43593__pinl_10925__icc_7424__sz = SAC_size * SACl_a__sz;
      if (!((SACp_emal_43593__pinl_10925__icc_7424__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 327, 545, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 16021 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 16021 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 16021 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 16021 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 16021 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 16021 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 16021 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 16021, __extension__ __PRETTY_FUNCTION__); }))
# 16021 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43593__pinl_10925__icc_7424 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43593__pinl_10925__icc_7424__sz * sizeof (*SACp_emal_43593__pinl_10925__icc_7424)); break; case SAC_HM_multi_threaded: SACp_emal_43593__pinl_10925__icc_7424 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43593__pinl_10925__icc_7424__sz * sizeof (*SACp_emal_43593__pinl_10925__icc_7424), 0); break; case SAC_HM_any_threaded: SACp_emal_43593__pinl_10925__icc_7424 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43593__pinl_10925__icc_7424__sz * sizeof (*SACp_emal_43593__pinl_10925__icc_7424), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43593__pinl_10925__icc_7424__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43593__pinl_10925__icc_7424__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43593__pinl_10925__icc_7424__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 327, 545, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 327, 545, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_43593__pinl_10925__icc_7424_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_43593__pinl_10925__icc_7424_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_43603__icc_5056;




      SACp_wlidx_42333__pinl_10925__icc_7424
        = SAC_schedule_start0 * SAC_SACp_emal_43593__pinl_10925__icc_7424_shpfac0;

      { int SAC_stop_SACp_pinl_10938_i = SACp_emal_43603__icc_5056; for (SACp_pinl_10938_i = 0; SACp_pinl_10938_i < SACp_emal_43603__icc_5056;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 327, 600, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_43599__pinl_10935__flat_3936 = (SACp_emal_43601__pinl_10936_maxidx0) - (SACp_pinl_10938_i); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_emal_43599__pinl_10935__flat_3936 >= 0) { { SACp_emal_43598__uprf_20977 = SACp_emal_43599__pinl_10935__flat_3936; }; SACp_emal_43598__uprf_20977 = 1; } else { SACp_emal_43598__uprf_20977 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_emal_43599__pinl_10935__flat_3936"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_emal_43599__pinl_10935__flat_3936 < SACp_emal_43603__icc_5056) { SACp_emal_43597__uprf_20971 = 1; } else { SACp_emal_43597__uprf_20971 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_emal_43599__pinl_10935__flat_3936" " (" "%d" ") < " "SACp_emal_43603__icc_5056" " (" "%d" ")" "' violated", SACp_emal_43599__pinl_10935__flat_3936, SACp_emal_43603__icc_5056); }
      { { if (!((1 == SACp_emal_43596__pinl_11022__idc_9445__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43596__pinl_11022__idc_9445"); }; { { if ((((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445)) + ((6 + (SACp_emal_43596__pinl_11022__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445)) + ((6 + (SACp_emal_43596__pinl_11022__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445)) + ((6 + (SACp_emal_43596__pinl_11022__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43596__pinl_11022__idc_9445 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43596__pinl_11022__idc_9445 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445)) + ((6 + (SACp_emal_43596__pinl_11022__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43596__pinl_11022__idc_9445 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43596__pinl_11022__idc_9445 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445)) + ((6 + (SACp_emal_43596__pinl_11022__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445)) + ((6 + (SACp_emal_43596__pinl_11022__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445)) + ((6 + (SACp_emal_43596__pinl_11022__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445)) + ((6 + (SACp_emal_43596__pinl_11022__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445)) + ((6 + (SACp_emal_43596__pinl_11022__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43596__pinl_11022__idc_9445 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43596__pinl_11022__idc_9445 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43596__pinl_11022__idc_9445 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43596__pinl_11022__idc_9445 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43596__pinl_11022__idc_9445__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445, SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445), ((6 + (SACp_emal_43596__pinl_11022__idc_9445__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43596__pinl_11022__idc_9445__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43596__pinl_11022__idc_9445__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43596__pinl_11022__idc_9445__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_43596__pinl_11022__idc_9445__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
      if (!((SACp_emal_43596__pinl_11022__idc_9445__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_43596__pinl_11022__idc_9445[0] = SACp_emal_43599__pinl_10935__flat_3936; }

      { ; ; }
      if (!SACp_emal_43597__uprf_20971) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_43598__uprf_20977) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_43595__ivesli_42489 = ( SACp_emal_43596__pinl_11022__idc_9445[0]);

      { { { if (((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445, ((((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445) - 1)->data1.arena)); } else { if (SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445, ((((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445, ((((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445) - 1)->data1.arena)); } } else { if (((((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445, ((((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445) - 1)->data1.arena)); } else { if (((((SACp_emal_43596__pinl_11022__idc_9445__sz * sizeof (*SACp_emal_43596__pinl_11022__idc_9445))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445, ((((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43596__pinl_11022__idc_9445); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43596__pinl_11022__idc_9445__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_43594__pinl_10980__icc_9424 = ( SACl_a[SACp_emal_43595__ivesli_42489]); }

      { ; ; }
      if (!SACp_emal_43597__uprf_20971) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_43598__uprf_20977) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }



      if (!((0 == (SACp_emal_43593__pinl_10925__icc_7424__dim - SACp_pinl_10937_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_43593__pinl_10925__icc_7424_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_43593__pinl_10925__icc_7424[SACp_wlidx_42333__pinl_10925__icc_7424] = SACp_emal_43594__pinl_10980__icc_9424; };

      { ; ; }
      SACp_wlidx_42333__pinl_10925__icc_7424 = SACp_wlidx_42333__pinl_10925__icc_7424 + 1;
      SACp_pinl_10938_i = SACp_pinl_10938_i + 1;
      } }
# 16170 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_48550_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
    ; ; { SACp_emal_43592__pinl_11046_maxidx0 = (-1) + (SACp_emal_43602__icc_5062); };
    { { if (!((1 == SACp_emal_43584__pinl_11035__icc_7424__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43584__pinl_11035__icc_7424"); }; { if ((((6 + (SACp_emal_43584__pinl_11035__icc_7424__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43584__pinl_11035__icc_7424__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43584__pinl_11035__icc_7424__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43584__pinl_11035__icc_7424__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43584__pinl_11035__icc_7424__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43584__pinl_11035__icc_7424__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43584__pinl_11035__icc_7424__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43584__pinl_11035__icc_7424__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43584__pinl_11035__icc_7424__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43584__pinl_11035__icc_7424__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43584__pinl_11035__icc_7424__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43584__pinl_11035__icc_7424__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43584__pinl_11035__icc_7424__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43584__pinl_11035__icc_7424__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43584__pinl_11035__icc_7424__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43584__pinl_11035__icc_7424__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43584__pinl_11035__icc_7424__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43584__pinl_11035__icc_7424__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43584__pinl_11035__icc_7424__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43584__pinl_11035__icc_7424__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43584__pinl_11035__icc_7424__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 327, 545, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43584__pinl_11035__icc_7424__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43584__pinl_11035__icc_7424__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43584__pinl_11035__icc_7424__desc) & (-1 ^ (3))))[4]) = SACp_emal_43584__pinl_11035__icc_7424__sz = SAC_size * SACl_b__sz;
      if (!((SACp_emal_43584__pinl_11035__icc_7424__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 327, 545, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 16193 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 16193 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 16193 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 16193 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 16193 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 16193 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 16193 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 16193, __extension__ __PRETTY_FUNCTION__); }))
# 16193 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43584__pinl_11035__icc_7424 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43584__pinl_11035__icc_7424__sz * sizeof (*SACp_emal_43584__pinl_11035__icc_7424)); break; case SAC_HM_multi_threaded: SACp_emal_43584__pinl_11035__icc_7424 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43584__pinl_11035__icc_7424__sz * sizeof (*SACp_emal_43584__pinl_11035__icc_7424), 0); break; case SAC_HM_any_threaded: SACp_emal_43584__pinl_11035__icc_7424 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43584__pinl_11035__icc_7424__sz * sizeof (*SACp_emal_43584__pinl_11035__icc_7424), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43584__pinl_11035__icc_7424__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43584__pinl_11035__icc_7424__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43584__pinl_11035__icc_7424__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 327, 545, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 327, 545, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_43584__pinl_11035__icc_7424_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_43584__pinl_11035__icc_7424_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_43602__icc_5062;




      SACp_wlidx_42334__pinl_11035__icc_7424
        = SAC_schedule_start0 * SAC_SACp_emal_43584__pinl_11035__icc_7424_shpfac0;

      { int SAC_stop_SACp_pinl_11048_i = SACp_emal_43602__icc_5062; for (SACp_pinl_11048_i = 0; SACp_pinl_11048_i < SACp_emal_43602__icc_5062;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 327, 600, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_43590__pinl_11045__flat_3936 = (SACp_emal_43592__pinl_11046_maxidx0) - (SACp_pinl_11048_i); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_emal_43590__pinl_11045__flat_3936 >= 0) { { SACp_emal_43589__uprf_20950 = SACp_emal_43590__pinl_11045__flat_3936; }; SACp_emal_43589__uprf_20950 = 1; } else { SACp_emal_43589__uprf_20950 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_emal_43590__pinl_11045__flat_3936"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_emal_43590__pinl_11045__flat_3936 < SACp_emal_43602__icc_5062) { SACp_emal_43588__uprf_20944 = 1; } else { SACp_emal_43588__uprf_20944 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_emal_43590__pinl_11045__flat_3936" " (" "%d" ") < " "SACp_emal_43602__icc_5062" " (" "%d" ")" "' violated", SACp_emal_43590__pinl_11045__flat_3936, SACp_emal_43602__icc_5062); }
      { { if (!((1 == SACp_emal_43587__pinl_11132__idc_9445__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43587__pinl_11132__idc_9445"); }; { { if ((((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445)) + ((6 + (SACp_emal_43587__pinl_11132__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445)) + ((6 + (SACp_emal_43587__pinl_11132__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445)) + ((6 + (SACp_emal_43587__pinl_11132__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43587__pinl_11132__idc_9445 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43587__pinl_11132__idc_9445 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445)) + ((6 + (SACp_emal_43587__pinl_11132__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43587__pinl_11132__idc_9445 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43587__pinl_11132__idc_9445 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445)) + ((6 + (SACp_emal_43587__pinl_11132__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445)) + ((6 + (SACp_emal_43587__pinl_11132__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445)) + ((6 + (SACp_emal_43587__pinl_11132__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445)) + ((6 + (SACp_emal_43587__pinl_11132__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445)) + ((6 + (SACp_emal_43587__pinl_11132__idc_9445__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43587__pinl_11132__idc_9445 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43587__pinl_11132__idc_9445 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43587__pinl_11132__idc_9445 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43587__pinl_11132__idc_9445 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43587__pinl_11132__idc_9445__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445, SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445), ((6 + (SACp_emal_43587__pinl_11132__idc_9445__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43587__pinl_11132__idc_9445__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43587__pinl_11132__idc_9445__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43587__pinl_11132__idc_9445__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_43587__pinl_11132__idc_9445__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
      if (!((SACp_emal_43587__pinl_11132__idc_9445__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_43587__pinl_11132__idc_9445[0] = SACp_emal_43590__pinl_11045__flat_3936; }

      { ; ; }
      if (!SACp_emal_43588__uprf_20944) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_43589__uprf_20950) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_43586__ivesli_42488 = ( SACp_emal_43587__pinl_11132__idc_9445[0]);

      { { { if (((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445, ((((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445) - 1)->data1.arena)); } else { if (SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445, ((((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445, ((((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445) - 1)->data1.arena)); } } else { if (((((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445, ((((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445) - 1)->data1.arena)); } else { if (((((SACp_emal_43587__pinl_11132__idc_9445__sz * sizeof (*SACp_emal_43587__pinl_11132__idc_9445))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445, ((((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43587__pinl_11132__idc_9445); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43587__pinl_11132__idc_9445__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_43585__pinl_11090__icc_9424 = ( SACl_b[SACp_emal_43586__ivesli_42488]); }

      { ; ; }
      if (!SACp_emal_43588__uprf_20944) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_43589__uprf_20950) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }



      if (!((0 == (SACp_emal_43584__pinl_11035__icc_7424__dim - SACp_pinl_11047_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_43584__pinl_11035__icc_7424_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_43584__pinl_11035__icc_7424[SACp_wlidx_42334__pinl_11035__icc_7424] = SACp_emal_43585__pinl_11090__icc_9424; };

      { ; ; }
      SACp_wlidx_42334__pinl_11035__icc_7424 = SACp_wlidx_42334__pinl_11035__icc_7424 + 1;
      SACp_pinl_11048_i = SACp_pinl_11048_i + 1;
      } }
# 16342 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_48551_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))); } } } } else { } }
    ; ; { SACp_emal_43603__icc_5056 = (SACp_emal_43603__icc_5056) - (SACp_emal_43602__icc_5062); };
    { ; ; }
    ; ; { SACp_emal_43582__pinl_11140__flat_1060 = (SACp_emal_43603__icc_5056) > (0); };
    { ; ; }
    if (SACp_emal_43582__pinl_11140__flat_1060)
    {
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      ;

      }
      { { SACp_pinl_47796__emal_43636__uprf_21065 = 
# 16365 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 16365 "/home/rubenhensen/sac/a.out.c"
     ; }; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47794__emal_43634__uprf_21067 = ( SACp_emal_43606__isaa_31525_b[SACp_pinl_47795__emal_43635__ivesplit_31607]); }

      { { if (!((1 == SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47793__emal_43633__pinl_11171__idc_8099"); }; { { if ((((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099)) + ((6 + (SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099)) + ((6 + (SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099)) + ((6 + (SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47793__emal_43633__pinl_11171__idc_8099 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47793__emal_43633__pinl_11171__idc_8099 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099)) + ((6 + (SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47793__emal_43633__pinl_11171__idc_8099 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47793__emal_43633__pinl_11171__idc_8099 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099)) + ((6 + (SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099)) + ((6 + (SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099)) + ((6 + (SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099)) + ((6 + (SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099)) + ((6 + (SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47793__emal_43633__pinl_11171__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47793__emal_43633__pinl_11171__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47793__emal_43633__pinl_11171__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47793__emal_43633__pinl_11171__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099, SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099), ((6 + (SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7182, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7182, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_47793__emal_43633__pinl_11171__idc_8099[0] = SACp_pinl_47794__emal_43634__uprf_21067; }

      if (SACp_pinl_47795__emal_43635__ivesplit_31607 <= SACp_pinl_47794__emal_43634__uprf_21067) { SACp_pinl_47792__emal_43632__uprf_21057 = 1; } else { SACp_pinl_47792__emal_43632__uprf_21057 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7287, "Scalar constraint `" "SACp_pinl_47795__emal_43635__ivesplit_31607" " (" "%d" ") <= " "SACp_pinl_47794__emal_43634__uprf_21067" " (" "%d" ")" "' violated", SACp_pinl_47795__emal_43635__ivesplit_31607, SACp_pinl_47794__emal_43634__uprf_21067); }
      { { SACp_pinl_47791__emal_43631__uprf_21056 = SACp_pinl_47795__emal_43635__ivesplit_31607; } }
      { { if (!((1 == SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47790__emal_43630__pinl_11178__idc_8103"); }; { { if ((((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103)) + ((6 + (SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103)) + ((6 + (SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103)) + ((6 + (SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47790__emal_43630__pinl_11178__idc_8103 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47790__emal_43630__pinl_11178__idc_8103 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103)) + ((6 + (SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47790__emal_43630__pinl_11178__idc_8103 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47790__emal_43630__pinl_11178__idc_8103 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103)) + ((6 + (SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103)) + ((6 + (SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103)) + ((6 + (SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103)) + ((6 + (SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103)) + ((6 + (SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47790__emal_43630__pinl_11178__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47790__emal_43630__pinl_11178__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47790__emal_43630__pinl_11178__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47790__emal_43630__pinl_11178__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103, SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103), ((6 + (SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_47790__emal_43630__pinl_11178__idc_8103[0] = SACp_pinl_47791__emal_43631__uprf_21056; }

      { ; ; }
      if (!SACp_pinl_47792__emal_43632__uprf_21057) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7209, "With-loop guard failed"); }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47789__emal_43629__pinl_20793__icc_6985 = ( SACp_pinl_47790__emal_43630__pinl_11178__idc_8103[SACp_pinl_47795__emal_43635__ivesplit_31607]); }

      { { { if (((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103) - 1)->data1.arena)); } else { if (SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103) - 1)->data1.arena)); } else { if (((((SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__sz * sizeof (*SACp_pinl_47790__emal_43630__pinl_11178__idc_8103))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47790__emal_43630__pinl_11178__idc_8103__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47788__emal_43628__pinl_20796__icc_6991 = ( SACp_pinl_47793__emal_43633__pinl_11171__idc_8099[SACp_pinl_47795__emal_43635__ivesplit_31607]); }

      { { { if (((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099) - 1)->data1.arena)); } else { if (SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099) - 1)->data1.arena)); } else { if (((((SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__sz * sizeof (*SACp_pinl_47793__emal_43633__pinl_11171__idc_8099))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47793__emal_43633__pinl_11171__idc_8099__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47787__emal_43627__uprf_21026 = ( SACp_emal_43605__isaa_31528_a[SACp_pinl_47795__emal_43635__ivesplit_31607]); }

      { ; ; }
      { { if (!((1 == SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47773__emal_43613__pinl_11150__icc_8094"); }; { if ((((6 + (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47788__emal_43628__pinl_20796__icc_6991;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__sz = SAC_size;
        if (!((SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 16444 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 16444 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 16444 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 16444 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 16444 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 16444 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 16444 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 16444, __extension__ __PRETTY_FUNCTION__); }))
# 16444 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_47773__emal_43613__pinl_11150__icc_8094 = (
# 16444 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 16444 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__sz * sizeof (*SACp_pinl_47773__emal_43613__pinl_11150__icc_8094)); break; case SAC_HM_multi_threaded: SACp_pinl_47773__emal_43613__pinl_11150__icc_8094 = (
# 16444 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 16444 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__sz * sizeof (*SACp_pinl_47773__emal_43613__pinl_11150__icc_8094), 0); break; case SAC_HM_any_threaded: SACp_pinl_47773__emal_43613__pinl_11150__icc_8094 = (
# 16444 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 16444 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__sz * sizeof (*SACp_pinl_47773__emal_43613__pinl_11150__icc_8094), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_pinl_47773__emal_43613__pinl_11150__icc_8094_shpfac0;




        {
          int SAC_i;
          SAC_SACp_pinl_47773__emal_43613__pinl_11150__icc_8094_shpfac0 = 1;
        }




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_47789__emal_43629__pinl_20793__icc_6985;




        SACp_pinl_47757__wlidx_42335__pinl_11150__icc_8094
          = SAC_schedule_start0 * SAC_SACp_pinl_47773__emal_43613__pinl_11150__icc_8094_shpfac0;

        { int SAC_stop_SACp_pinl_47708__eat_454 = SACp_pinl_47789__emal_43629__pinl_20793__icc_6985; for (SACp_pinl_47708__eat_454 = 0; SACp_pinl_47708__eat_454 < SACp_pinl_47789__emal_43629__pinl_20793__icc_6985;) {
       



        if (!((0 == (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim - SACp_pinl_47707_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_47773__emal_43613__pinl_11150__icc_8094_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "WL expression with illegal size found!"); };
        { SACp_pinl_47773__emal_43613__pinl_11150__icc_8094[SACp_pinl_47757__wlidx_42335__pinl_11150__icc_8094] = SACp_pinl_47796__emal_43636__uprf_21065; };

        SACp_pinl_47757__wlidx_42335__pinl_11150__icc_8094 = SACp_pinl_47757__wlidx_42335__pinl_11150__icc_8094 + 1;
        SACp_pinl_47708__eat_454 = SACp_pinl_47708__eat_454 + 1;
        } }
# 16514 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_pinl_47789__emal_43629__pinl_20793__icc_6985;
        SAC_schedule_stop0 = SACp_pinl_47788__emal_43628__pinl_20796__icc_6991;




        SACp_pinl_47757__wlidx_42335__pinl_11150__icc_8094
          = SAC_schedule_start0 * SAC_SACp_pinl_47773__emal_43613__pinl_11150__icc_8094_shpfac0;

        { int SAC_stop_SACp_pinl_47708__eat_454 = SACp_pinl_47788__emal_43628__pinl_20796__icc_6991; for (SACp_pinl_47708__eat_454 = SACp_pinl_47789__emal_43629__pinl_20793__icc_6985; SACp_pinl_47708__eat_454 < SACp_pinl_47788__emal_43628__pinl_20796__icc_6991;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47708__eat_454 >= 0) { { SACp_pinl_47784__emal_43624__uprf_21049 = SACp_pinl_47708__eat_454; }; SACp_pinl_47784__emal_43624__uprf_21049 = 1; } else { SACp_pinl_47784__emal_43624__uprf_21049 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47708__eat_454"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47708__eat_454 < SACp_pinl_47794__emal_43634__uprf_21067) { SACp_pinl_47783__emal_43623__uprf_21043 = 1; } else { SACp_pinl_47783__emal_43623__uprf_21043 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Scalar constraint `" "SACp_pinl_47708__eat_454" " (" "%d" ") < " "SACp_pinl_47794__emal_43634__uprf_21067" " (" "%d" ")" "' violated", SACp_pinl_47708__eat_454, SACp_pinl_47794__emal_43634__uprf_21067); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47708__eat_454 >= 0) { { SACp_pinl_47782__emal_43622__uprf_21034 = SACp_pinl_47708__eat_454; }; SACp_pinl_47782__emal_43622__uprf_21034 = 1; } else { SACp_pinl_47782__emal_43622__uprf_21034 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47708__eat_454"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47708__eat_454 < SACp_pinl_47787__emal_43627__uprf_21026) { SACp_pinl_47781__emal_43621__uprf_21028 = 1; } else { SACp_pinl_47781__emal_43621__uprf_21028 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Scalar constraint `" "SACp_pinl_47708__eat_454" " (" "%d" ") < " "SACp_pinl_47787__emal_43627__uprf_21026" " (" "%d" ")" "' violated", SACp_pinl_47708__eat_454, SACp_pinl_47787__emal_43627__uprf_21026); }
        { { if (!((1 == SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47780__emal_43620__pinl_11190__idc_8109"); }; { { if ((((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109)) + ((6 + (SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109)) + ((6 + (SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109)) + ((6 + (SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47780__emal_43620__pinl_11190__idc_8109 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47780__emal_43620__pinl_11190__idc_8109 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109)) + ((6 + (SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47780__emal_43620__pinl_11190__idc_8109 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47780__emal_43620__pinl_11190__idc_8109 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109)) + ((6 + (SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109)) + ((6 + (SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109)) + ((6 + (SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109)) + ((6 + (SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109)) + ((6 + (SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47780__emal_43620__pinl_11190__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47780__emal_43620__pinl_11190__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47780__emal_43620__pinl_11190__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47780__emal_43620__pinl_11190__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109, SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109), ((6 + (SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_47780__emal_43620__pinl_11190__idc_8109[0] = SACp_pinl_47708__eat_454; }

        if (!SACp_pinl_47783__emal_43623__uprf_21043) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47784__emal_43624__uprf_21049) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47779__emal_43619__ivesli_42492 = ( SACp_pinl_47780__emal_43620__pinl_11190__idc_8109[0]);

        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47778__emal_43618__pinl_11143__icc_8082 = ( SACp_emal_43584__pinl_11035__icc_7424[SACp_pinl_47779__emal_43619__ivesli_42492]); }

        { ; ; }
        if (!SACp_pinl_47783__emal_43623__uprf_21043) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47784__emal_43624__uprf_21049) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        if (!SACp_pinl_47781__emal_43621__uprf_21028) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47782__emal_43622__uprf_21034) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47777__emal_43617__ivesli_42491 = ( SACp_pinl_47780__emal_43620__pinl_11190__idc_8109[0]);

        { { { if (((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109) - 1)->data1.arena)); } else { if (SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109) - 1)->data1.arena)); } else { if (((((SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__sz * sizeof (*SACp_pinl_47780__emal_43620__pinl_11190__idc_8109))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47780__emal_43620__pinl_11190__idc_8109__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47776__emal_43616__pinl_11146__icc_8088 = ( SACp_emal_43593__pinl_10925__icc_7424[SACp_pinl_47777__emal_43617__ivesli_42491]); }

        { ; ; }
        if (!SACp_pinl_47781__emal_43621__uprf_21028) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47782__emal_43622__uprf_21034) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        ; ; { SACp_pinl_47776__emal_43616__pinl_11146__icc_8088 = (SACp_pinl_47776__emal_43616__pinl_11146__icc_8088) - (SACp_pinl_47778__emal_43618__pinl_11143__icc_8082); };
        { ; ; }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_47774__emal_43614__pinl_11156__flat_3875 = (SACp_pinl_47776__emal_43616__pinl_11146__icc_8088) == (0); };
        { ; ; }



        if (!((0 == (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__dim - SACp_pinl_47707_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_47773__emal_43613__pinl_11150__icc_8094_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
        { SACp_pinl_47773__emal_43613__pinl_11150__icc_8094[SACp_pinl_47757__wlidx_42335__pinl_11150__icc_8094] = SACp_pinl_47774__emal_43614__pinl_11156__flat_3875; };

        { ; ; }
        SACp_pinl_47757__wlidx_42335__pinl_11150__icc_8094 = SACp_pinl_47757__wlidx_42335__pinl_11150__icc_8094 + 1;
        SACp_pinl_47708__eat_454 = SACp_pinl_47708__eat_454 + 1;
        } }
# 16677 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48552_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { { free (SACp_emal_43584__pinl_11035__icc_7424); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43584__pinl_11035__icc_7424__desc) & (-1 ^ (3))))); } } }
      { { { if (((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, ((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)); } else { if (SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, ((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, ((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)); } } else { if (((((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, ((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)); } else { if (((((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, ((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43606__isaa_31525_b__desc) & (-1 ^ (3))))); } } }
      { { free (SACp_emal_43593__pinl_10925__icc_7424); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43593__pinl_10925__icc_7424__desc) & (-1 ^ (3))))); } } }
      { { { if (((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, ((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)); } else { if (SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, ((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, ((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)); } } else { if (((((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, ((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)); } else { if (((((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, ((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43605__isaa_31528_a__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_47792__emal_43632__uprf_21057) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7209, "With-loop guard failed"); }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Assignment with incompatible types found"); };
      ;

      }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 241, 13, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACl_res = SACp_pinl_47796__emal_43636__uprf_21065; }

     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_47788__emal_43628__pinl_20796__icc_6991;

        { int SAC_stop_SACp_pinl_47698__eat_453 = SACp_pinl_47788__emal_43628__pinl_20796__icc_6991; for (SACp_pinl_47698__eat_453 = 0; SACp_pinl_47698__eat_453 < SACp_pinl_47788__emal_43628__pinl_20796__icc_6991;) {
       
        ;
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47698__eat_453 >= 0) { { SACp_pinl_47772__emal_43612__uprf_21004 = SACp_pinl_47698__eat_453; }; SACp_pinl_47772__emal_43612__uprf_21004 = 1; } else { SACp_pinl_47772__emal_43612__uprf_21004 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47698__eat_453"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47698__eat_453 < SACp_pinl_47788__emal_43628__pinl_20796__icc_6991) { SACp_pinl_47771__emal_43611__uprf_20998 = 1; } else { SACp_pinl_47771__emal_43611__uprf_20998 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Scalar constraint `" "SACp_pinl_47698__eat_453" " (" "%d" ") < " "SACp_pinl_47788__emal_43628__pinl_20796__icc_6991" " (" "%d" ")" "' violated", SACp_pinl_47698__eat_453, SACp_pinl_47788__emal_43628__pinl_20796__icc_6991); }
        { { if (!((1 == SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47770__emal_43610__pinl_11290__idc_8060"); }; { { if ((((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060)) + ((6 + (SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060)) + ((6 + (SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060)) + ((6 + (SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47770__emal_43610__pinl_11290__idc_8060 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47770__emal_43610__pinl_11290__idc_8060 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060)) + ((6 + (SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47770__emal_43610__pinl_11290__idc_8060 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47770__emal_43610__pinl_11290__idc_8060 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060)) + ((6 + (SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060)) + ((6 + (SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060)) + ((6 + (SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060)) + ((6 + (SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060)) + ((6 + (SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47770__emal_43610__pinl_11290__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47770__emal_43610__pinl_11290__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47770__emal_43610__pinl_11290__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47770__emal_43610__pinl_11290__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060, SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060), ((6 + (SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_47770__emal_43610__pinl_11290__idc_8060[0] = SACp_pinl_47698__eat_453; }

        if (!SACp_pinl_47771__emal_43611__uprf_20998) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47772__emal_43612__uprf_21004) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47769__emal_43609__ivesli_42490 = ( SACp_pinl_47770__emal_43610__pinl_11290__idc_8060[0]);

        { { { if (((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060) - 1)->data1.arena)); } else { if (SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060) - 1)->data1.arena)); } else { if (((((SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__sz * sizeof (*SACp_pinl_47770__emal_43610__pinl_11290__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47770__emal_43610__pinl_11290__idc_8060__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47768__emal_43608__pinl_11247__icc_8039 = ( SACp_pinl_47773__emal_43613__pinl_11150__icc_8094[SACp_pinl_47769__emal_43609__ivesli_42490]); }

        { ; ; }
        if (!SACp_pinl_47771__emal_43611__uprf_20998) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47772__emal_43612__uprf_21004) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        ; ; { SACp_pinl_47768__emal_43608__pinl_11247__icc_8039 = (SACl_res) & (SACp_pinl_47768__emal_43608__pinl_11247__icc_8039); };
        ;



        ;




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47765__ufiv_43054__pinl_11241__flat_1128 = SACp_pinl_47768__emal_43608__pinl_11247__icc_8039; }




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACl_res = SACp_pinl_47765__ufiv_43054__pinl_11241__flat_1128; }




        ;


        SACp_pinl_47698__eat_453 = SACp_pinl_47698__eat_453 + 1;
        } }
# 16835 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48553_SAC_label:;
      { ; ; }
      { { free (SACp_pinl_47773__emal_43613__pinl_11150__icc_8094); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47773__emal_43613__pinl_11150__icc_8094__desc) & (-1 ^ (3))))); } } }
      { ; ; }
    }
    else
    {
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      ;

      }
      { { SACp_pinl_47826__emal_43666__uprf_21145 = 
# 16854 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 16854 "/home/rubenhensen/sac/a.out.c"
     ; }; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47824__emal_43664__uprf_21147 = ( SACp_emal_43605__isaa_31528_a[SACp_pinl_47825__emal_43665__ivesplit_31624]); }

      { { if (!((1 == SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47823__emal_43663__pinl_11372__idc_8099"); }; { { if ((((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099)) + ((6 + (SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099)) + ((6 + (SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099)) + ((6 + (SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47823__emal_43663__pinl_11372__idc_8099 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47823__emal_43663__pinl_11372__idc_8099 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099)) + ((6 + (SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47823__emal_43663__pinl_11372__idc_8099 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47823__emal_43663__pinl_11372__idc_8099 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099)) + ((6 + (SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099)) + ((6 + (SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099)) + ((6 + (SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099)) + ((6 + (SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099)) + ((6 + (SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47823__emal_43663__pinl_11372__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47823__emal_43663__pinl_11372__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47823__emal_43663__pinl_11372__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47823__emal_43663__pinl_11372__idc_8099 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099, SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099), ((6 + (SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7182, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7182, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_47823__emal_43663__pinl_11372__idc_8099[0] = SACp_pinl_47824__emal_43664__uprf_21147; }

      if (SACp_pinl_47825__emal_43665__ivesplit_31624 <= SACp_pinl_47824__emal_43664__uprf_21147) { SACp_pinl_47822__emal_43662__uprf_21137 = 1; } else { SACp_pinl_47822__emal_43662__uprf_21137 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7287, "Scalar constraint `" "SACp_pinl_47825__emal_43665__ivesplit_31624" " (" "%d" ") <= " "SACp_pinl_47824__emal_43664__uprf_21147" " (" "%d" ")" "' violated", SACp_pinl_47825__emal_43665__ivesplit_31624, SACp_pinl_47824__emal_43664__uprf_21147); }
      { { SACp_pinl_47821__emal_43661__uprf_21136 = SACp_pinl_47825__emal_43665__ivesplit_31624; } }
      { { if (!((1 == SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47820__emal_43660__pinl_11379__idc_8103"); }; { { if ((((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103)) + ((6 + (SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103)) + ((6 + (SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103)) + ((6 + (SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47820__emal_43660__pinl_11379__idc_8103 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47820__emal_43660__pinl_11379__idc_8103 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103)) + ((6 + (SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47820__emal_43660__pinl_11379__idc_8103 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47820__emal_43660__pinl_11379__idc_8103 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103)) + ((6 + (SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103)) + ((6 + (SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103)) + ((6 + (SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103)) + ((6 + (SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103)) + ((6 + (SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47820__emal_43660__pinl_11379__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47820__emal_43660__pinl_11379__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47820__emal_43660__pinl_11379__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47820__emal_43660__pinl_11379__idc_8103 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103, SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103), ((6 + (SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_47820__emal_43660__pinl_11379__idc_8103[0] = SACp_pinl_47821__emal_43661__uprf_21136; }

      { ; ; }
      if (!SACp_pinl_47822__emal_43662__uprf_21137) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7209, "With-loop guard failed"); }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47819__emal_43659__pinl_20854__icc_6985 = ( SACp_pinl_47820__emal_43660__pinl_11379__idc_8103[SACp_pinl_47825__emal_43665__ivesplit_31624]); }

      { { { if (((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103) - 1)->data1.arena)); } else { if (SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103) - 1)->data1.arena)); } else { if (((((SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__sz * sizeof (*SACp_pinl_47820__emal_43660__pinl_11379__idc_8103))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103, ((((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47820__emal_43660__pinl_11379__idc_8103__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47818__emal_43658__pinl_20857__icc_6991 = ( SACp_pinl_47823__emal_43663__pinl_11372__idc_8099[SACp_pinl_47825__emal_43665__ivesplit_31624]); }

      { { { if (((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099) - 1)->data1.arena)); } else { if (SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099) - 1)->data1.arena)); } else { if (((((SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__sz * sizeof (*SACp_pinl_47823__emal_43663__pinl_11372__idc_8099))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099, ((((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47823__emal_43663__pinl_11372__idc_8099__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_47817__emal_43657__uprf_21106 = ( SACp_emal_43606__isaa_31525_b[SACp_pinl_47825__emal_43665__ivesplit_31624]); }

      { ; ; }
      { { if (!((1 == SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47803__emal_43643__pinl_11351__icc_8094"); }; { if ((((6 + (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_47818__emal_43658__pinl_20857__icc_6991;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__sz = SAC_size;
        if (!((SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 16933 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 16933 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 16933 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 16933 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 16933 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 16933 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 16933 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 16933, __extension__ __PRETTY_FUNCTION__); }))
# 16933 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_47803__emal_43643__pinl_11351__icc_8094 = (
# 16933 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 16933 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__sz * sizeof (*SACp_pinl_47803__emal_43643__pinl_11351__icc_8094)); break; case SAC_HM_multi_threaded: SACp_pinl_47803__emal_43643__pinl_11351__icc_8094 = (
# 16933 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 16933 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__sz * sizeof (*SACp_pinl_47803__emal_43643__pinl_11351__icc_8094), 0); break; case SAC_HM_any_threaded: SACp_pinl_47803__emal_43643__pinl_11351__icc_8094 = (
# 16933 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 16933 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__sz * sizeof (*SACp_pinl_47803__emal_43643__pinl_11351__icc_8094), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_pinl_47803__emal_43643__pinl_11351__icc_8094_shpfac0;




        {
          int SAC_i;
          SAC_SACp_pinl_47803__emal_43643__pinl_11351__icc_8094_shpfac0 = 1;
        }




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_47819__emal_43659__pinl_20854__icc_6985;




        SACp_pinl_47758__wlidx_42336__pinl_11351__icc_8094
          = SAC_schedule_start0 * SAC_SACp_pinl_47803__emal_43643__pinl_11351__icc_8094_shpfac0;

        { int SAC_stop_SACp_pinl_47723__eat_454 = SACp_pinl_47819__emal_43659__pinl_20854__icc_6985; for (SACp_pinl_47723__eat_454 = 0; SACp_pinl_47723__eat_454 < SACp_pinl_47819__emal_43659__pinl_20854__icc_6985;) {
       



        if (!((0 == (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim - SACp_pinl_47722_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_47803__emal_43643__pinl_11351__icc_8094_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "WL expression with illegal size found!"); };
        { SACp_pinl_47803__emal_43643__pinl_11351__icc_8094[SACp_pinl_47758__wlidx_42336__pinl_11351__icc_8094] = SACp_pinl_47826__emal_43666__uprf_21145; };

        SACp_pinl_47758__wlidx_42336__pinl_11351__icc_8094 = SACp_pinl_47758__wlidx_42336__pinl_11351__icc_8094 + 1;
        SACp_pinl_47723__eat_454 = SACp_pinl_47723__eat_454 + 1;
        } }
# 17003 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_pinl_47819__emal_43659__pinl_20854__icc_6985;
        SAC_schedule_stop0 = SACp_pinl_47818__emal_43658__pinl_20857__icc_6991;




        SACp_pinl_47758__wlidx_42336__pinl_11351__icc_8094
          = SAC_schedule_start0 * SAC_SACp_pinl_47803__emal_43643__pinl_11351__icc_8094_shpfac0;

        { int SAC_stop_SACp_pinl_47723__eat_454 = SACp_pinl_47818__emal_43658__pinl_20857__icc_6991; for (SACp_pinl_47723__eat_454 = SACp_pinl_47819__emal_43659__pinl_20854__icc_6985; SACp_pinl_47723__eat_454 < SACp_pinl_47818__emal_43658__pinl_20857__icc_6991;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47723__eat_454 >= 0) { { SACp_pinl_47814__emal_43654__uprf_21129 = SACp_pinl_47723__eat_454; }; SACp_pinl_47814__emal_43654__uprf_21129 = 1; } else { SACp_pinl_47814__emal_43654__uprf_21129 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47723__eat_454"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47723__eat_454 < SACp_pinl_47824__emal_43664__uprf_21147) { SACp_pinl_47813__emal_43653__uprf_21123 = 1; } else { SACp_pinl_47813__emal_43653__uprf_21123 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Scalar constraint `" "SACp_pinl_47723__eat_454" " (" "%d" ") < " "SACp_pinl_47824__emal_43664__uprf_21147" " (" "%d" ")" "' violated", SACp_pinl_47723__eat_454, SACp_pinl_47824__emal_43664__uprf_21147); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47723__eat_454 >= 0) { { SACp_pinl_47812__emal_43652__uprf_21114 = SACp_pinl_47723__eat_454; }; SACp_pinl_47812__emal_43652__uprf_21114 = 1; } else { SACp_pinl_47812__emal_43652__uprf_21114 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47723__eat_454"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47723__eat_454 < SACp_pinl_47817__emal_43657__uprf_21106) { SACp_pinl_47811__emal_43651__uprf_21108 = 1; } else { SACp_pinl_47811__emal_43651__uprf_21108 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Scalar constraint `" "SACp_pinl_47723__eat_454" " (" "%d" ") < " "SACp_pinl_47817__emal_43657__uprf_21106" " (" "%d" ")" "' violated", SACp_pinl_47723__eat_454, SACp_pinl_47817__emal_43657__uprf_21106); }
        { { if (!((1 == SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47810__emal_43650__pinl_11391__idc_8109"); }; { { if ((((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109)) + ((6 + (SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109)) + ((6 + (SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109)) + ((6 + (SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47810__emal_43650__pinl_11391__idc_8109 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47810__emal_43650__pinl_11391__idc_8109 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109)) + ((6 + (SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47810__emal_43650__pinl_11391__idc_8109 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47810__emal_43650__pinl_11391__idc_8109 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109)) + ((6 + (SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109)) + ((6 + (SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109)) + ((6 + (SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109)) + ((6 + (SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109)) + ((6 + (SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47810__emal_43650__pinl_11391__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47810__emal_43650__pinl_11391__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47810__emal_43650__pinl_11391__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47810__emal_43650__pinl_11391__idc_8109 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109, SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109), ((6 + (SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_47810__emal_43650__pinl_11391__idc_8109[0] = SACp_pinl_47723__eat_454; }

        if (!SACp_pinl_47813__emal_43653__uprf_21123) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47814__emal_43654__uprf_21129) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47809__emal_43649__ivesli_42495 = ( SACp_pinl_47810__emal_43650__pinl_11391__idc_8109[0]);

        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47808__emal_43648__pinl_11344__icc_8082 = ( SACp_emal_43593__pinl_10925__icc_7424[SACp_pinl_47809__emal_43649__ivesli_42495]); }

        { ; ; }
        if (!SACp_pinl_47813__emal_43653__uprf_21123) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47814__emal_43654__uprf_21129) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        if (!SACp_pinl_47811__emal_43651__uprf_21108) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47812__emal_43652__uprf_21114) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47807__emal_43647__ivesli_42494 = ( SACp_pinl_47810__emal_43650__pinl_11391__idc_8109[0]);

        { { { if (((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109) - 1)->data1.arena)); } else { if (SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109) - 1)->data1.arena)); } else { if (((((SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__sz * sizeof (*SACp_pinl_47810__emal_43650__pinl_11391__idc_8109))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109, ((((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47810__emal_43650__pinl_11391__idc_8109__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47806__emal_43646__pinl_11347__icc_8088 = ( SACp_emal_43584__pinl_11035__icc_7424[SACp_pinl_47807__emal_43647__ivesli_42494]); }

        { ; ; }
        if (!SACp_pinl_47811__emal_43651__uprf_21108) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47812__emal_43652__uprf_21114) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        ; ; { SACp_pinl_47806__emal_43646__pinl_11347__icc_8088 = (SACp_pinl_47806__emal_43646__pinl_11347__icc_8088) - (SACp_pinl_47808__emal_43648__pinl_11344__icc_8082); };
        { ; ; }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_47804__emal_43644__pinl_11357__flat_3875 = (SACp_pinl_47806__emal_43646__pinl_11347__icc_8088) == (0); };
        { ; ; }



        if (!((0 == (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__dim - SACp_pinl_47722_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_47803__emal_43643__pinl_11351__icc_8094_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
        { SACp_pinl_47803__emal_43643__pinl_11351__icc_8094[SACp_pinl_47758__wlidx_42336__pinl_11351__icc_8094] = SACp_pinl_47804__emal_43644__pinl_11357__flat_3875; };

        { ; ; }
        SACp_pinl_47758__wlidx_42336__pinl_11351__icc_8094 = SACp_pinl_47758__wlidx_42336__pinl_11351__icc_8094 + 1;
        SACp_pinl_47723__eat_454 = SACp_pinl_47723__eat_454 + 1;
        } }
# 17166 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48554_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { { free (SACp_emal_43584__pinl_11035__icc_7424); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43584__pinl_11035__icc_7424__desc) & (-1 ^ (3))))); } } }
      { { { if (((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, ((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)); } else { if (SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, ((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, ((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)); } } else { if (((((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, ((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)); } else { if (((((SACp_emal_43606__isaa_31525_b__sz * sizeof (*SACp_emal_43606__isaa_31525_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, ((((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43606__isaa_31525_b); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43606__isaa_31525_b__desc) & (-1 ^ (3))))); } } }
      { { free (SACp_emal_43593__pinl_10925__icc_7424); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43593__pinl_10925__icc_7424__desc) & (-1 ^ (3))))); } } }
      { { { if (((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, ((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)); } else { if (SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, ((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, ((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)); } } else { if (((((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, ((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)); } else { if (((((SACp_emal_43605__isaa_31528_a__sz * sizeof (*SACp_emal_43605__isaa_31528_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, ((((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43605__isaa_31528_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43605__isaa_31528_a__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_47822__emal_43662__uprf_21137) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7209, "With-loop guard failed"); }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Assignment with incompatible types found"); };
      ;

      }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 241, 13, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACl_res = SACp_pinl_47826__emal_43666__uprf_21145; }

     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_47818__emal_43658__pinl_20857__icc_6991;

        { int SAC_stop_SACp_pinl_47713__eat_453 = SACp_pinl_47818__emal_43658__pinl_20857__icc_6991; for (SACp_pinl_47713__eat_453 = 0; SACp_pinl_47713__eat_453 < SACp_pinl_47818__emal_43658__pinl_20857__icc_6991;) {
       
        ;
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47713__eat_453 >= 0) { { SACp_pinl_47802__emal_43642__uprf_21084 = SACp_pinl_47713__eat_453; }; SACp_pinl_47802__emal_43642__uprf_21084 = 1; } else { SACp_pinl_47802__emal_43642__uprf_21084 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47713__eat_453"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47713__eat_453 < SACp_pinl_47818__emal_43658__pinl_20857__icc_6991) { SACp_pinl_47801__emal_43641__uprf_21078 = 1; } else { SACp_pinl_47801__emal_43641__uprf_21078 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Scalar constraint `" "SACp_pinl_47713__eat_453" " (" "%d" ") < " "SACp_pinl_47818__emal_43658__pinl_20857__icc_6991" " (" "%d" ")" "' violated", SACp_pinl_47713__eat_453, SACp_pinl_47818__emal_43658__pinl_20857__icc_6991); }
        { { if (!((1 == SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_47800__emal_43640__pinl_11491__idc_8060"); }; { { if ((((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060)) + ((6 + (SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060)) + ((6 + (SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060)) + ((6 + (SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47800__emal_43640__pinl_11491__idc_8060 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_47800__emal_43640__pinl_11491__idc_8060 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060)) + ((6 + (SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_47800__emal_43640__pinl_11491__idc_8060 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_47800__emal_43640__pinl_11491__idc_8060 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060)) + ((6 + (SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060)) + ((6 + (SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060)) + ((6 + (SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060)) + ((6 + (SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060)) + ((6 + (SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_47800__emal_43640__pinl_11491__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_47800__emal_43640__pinl_11491__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_47800__emal_43640__pinl_11491__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_47800__emal_43640__pinl_11491__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060, SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060), ((6 + (SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_47800__emal_43640__pinl_11491__idc_8060[0] = SACp_pinl_47713__eat_453; }

        if (!SACp_pinl_47801__emal_43641__uprf_21078) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47802__emal_43642__uprf_21084) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_47799__emal_43639__ivesli_42493 = ( SACp_pinl_47800__emal_43640__pinl_11491__idc_8060[0]);

        { { { if (((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060) - 1)->data1.arena)); } else { if (SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060) - 1)->data1.arena)); } } else { if (((((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060) - 1)->data1.arena)); } else { if (((((SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__sz * sizeof (*SACp_pinl_47800__emal_43640__pinl_11491__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47800__emal_43640__pinl_11491__idc_8060__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_47798__emal_43638__pinl_11448__icc_8039 = ( SACp_pinl_47803__emal_43643__pinl_11351__icc_8094[SACp_pinl_47799__emal_43639__ivesli_42493]); }

        { ; ; }
        if (!SACp_pinl_47801__emal_43641__uprf_21078) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_47802__emal_43642__uprf_21084) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        ; ; { SACp_pinl_47798__emal_43638__pinl_11448__icc_8039 = (SACl_res) & (SACp_pinl_47798__emal_43638__pinl_11448__icc_8039); };
        ;



        ;




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47766__ufiv_43055__pinl_11442__flat_1128 = SACp_pinl_47798__emal_43638__pinl_11448__icc_8039; }




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACl_res = SACp_pinl_47766__ufiv_43055__pinl_11442__flat_1128; }




        ;


        SACp_pinl_47713__eat_453 = SACp_pinl_47713__eat_453 + 1;
        } }
# 17324 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48555_SAC_label:;
      { ; ; }
      { { free (SACp_pinl_47803__emal_43643__pinl_11351__icc_8094); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47803__emal_43643__pinl_11351__icc_8094__desc) & (-1 ^ (3))))); } } }
      { ; ; }
    }



    { *SAC_arg_1__p = SACl_res; }
    return;
   
  }



}
}
# 17353 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_18_impl_carretplus__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48517_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626;
    SAC_array_descriptor_t _tcp_48517_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc = 
# 17363 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17363 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48517_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__sz = 0;
    int _tcp_48517_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim = 0;




    int * _tcp_48516_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626;
    SAC_array_descriptor_t _tcp_48516_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc = 
# 17371 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17371 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48516_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__sz = 0;
    int _tcp_48516_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim = 0;




    
# 17378 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17378 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48210__emal_43830__hce_46__SSA0_1;
   
   




    
# 17385 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17385 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48208__emal_43831__hce_47__SSA0_1;
   
   




    
# 17392 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17392 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48206__emal_43832__hce_48__SSA0_1;
   
   




    
# 17399 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17399 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48204__emal_43834__hce_49__SSA0_1;
   
   




    
# 17406 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17406 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48203__emal_43833__hce_49;
   
   




    
# 17413 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17413 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48200__emal_43836__hce_44__SSA0_1;
   
   




    
# 17420 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17420 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48199__emal_43835__hce_44;
   
   




    
# 17427 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17427 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48196__emal_43837__hce_46__SSA0_1;
   
   




    
# 17434 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17434 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48194__emal_43838__hce_47__SSA0_1;
   
   




    
# 17441 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17441 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48192__emal_43839__hce_48__SSA0_1;
   
   




    
# 17448 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17448 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48190__emal_43841__hce_49__SSA0_1;
   
   




    
# 17455 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17455 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48189__emal_43840__hce_49;
   
   




    
# 17462 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17462 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48186__emal_43843__hce_44__SSA0_1;
   
   




    
# 17469 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17469 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48185__emal_43842__hce_44;
   
   




    int SACp_pinl_48182__emal_43829__pinl_12374__flat_971;
   
   




    int SACp_pinl_48181__emal_43828__pinl_12398__flat_1140;
   
   




    
# 17490 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17490 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48180__emal_43827__pinl_12419__icc_7586_pred;
   
   




    int SACp_pinl_48179__emal_43826__pinl_21959__icc_8952;
   
   




    int SACp_pinl_48178__emal_43825__pinl_21970_val__SSA0_1;
   
   




    
# 17511 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17511 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48176__emal_43823__pinl_21966__flat_1150;
   
   




    int SACp_pinl_48175__emal_43822__pinl_21972_val__SSA0_3;
   
   




    int SACp_pinl_48172__emal_43819__pinl_21975_val__SSA0_5;
   
   




    
# 17532 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17532 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48171__emal_43818__uprf_21803;
   
   




    
# 17539 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17539 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48169__emal_43816__uprf_21794;
   
   




    int * SACp_pinl_48168__emal_43815__pinl_12437__idc_7637;
    SAC_array_descriptor_t SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__desc = 
# 17547 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17547 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__shp0 = 1;
    const int SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz = 1;
    const int SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim = 1;




    
# 17555 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17555 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48167__emal_43814__uprf_21786;
   
   




    int * SACp_pinl_48166__emal_43813__pinl_12439__idc_7638;
    SAC_array_descriptor_t SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__desc = 
# 17563 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17563 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__shp0 = 1;
    const int SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz = 1;
    const int SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim = 1;




    int SACp_pinl_48165__emal_43812__uprf_21781;
   
   




    
# 17578 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17578 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48163__emal_43810__uprf_21770;
   
   




    
# 17585 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17585 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48162__emal_43809__uprf_21764;
   
   




    int * SACp_pinl_48161__emal_43808__pinl_12449__idc_7644;
    SAC_array_descriptor_t SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__desc = 
# 17593 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17593 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__shp0 = 1;
    const int SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz = 1;
    const int SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim = 1;




    int SACp_pinl_48160__emal_43807__pinl_21327__icc_6985;
   
   




    int SACp_pinl_48159__emal_43806__pinl_21330__icc_6991;
   
   




    int SACp_pinl_48158__emal_43805__pinl_21385_res;
   
   




    int SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e;
   
   




    int * SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound;
    SAC_array_descriptor_t SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__desc = 
# 17630 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17630 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__shp0 = 1;
    const int SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz = 1;
    const int SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim = 1;




    int SACp_pinl_48152__emal_43799__uprf_21752;
   
   




    
# 17645 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17645 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48151__emal_43798__uprf_21746;
   
   




    
# 17652 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17652 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48150__emal_43797__uprf_21740;
   
   




    int * SACp_pinl_48149__emal_43796__pinl_12458__idc_7649;
    SAC_array_descriptor_t SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__desc = 
# 17660 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17660 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__shp0 = 1;
    const int SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz = 1;
    const int SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim = 1;




    int SACp_pinl_48148__emal_43795__ivesli_42501;
   
   




    int SACp_pinl_48147__emal_43794__pinl_12392__icc_7620;
   
   




    int * SACp_pinl_48146__emal_43793__pinl_12397__icc_7626;
    SAC_array_descriptor_t SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc = 
# 17683 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17683 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__shp0;
    int SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__sz;
    const int SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim = 1;




    
# 17691 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17691 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48145__emal_43792__uprf_21719;
   
   




    int SACp_pinl_48144__emal_43791__uprf_21718;
   
   




    int * SACp_pinl_48143__emal_43790__pinl_12714__idc_7901;
    SAC_array_descriptor_t SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__desc = 
# 17706 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17706 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__shp0 = 1;
    const int SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz = 1;
    const int SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim = 1;




    int SACp_pinl_48142__emal_43789__pinl_21388__icc_6985;
   
   




    int SACp_pinl_48141__emal_43788__pinl_21391__icc_6991;
   
   




    
# 17728 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17728 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48138__emal_43785__uprf_21711;
   
   




    
# 17735 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17735 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48137__emal_43784__uprf_21705;
   
   




    int * SACp_pinl_48136__emal_43783__pinl_12720__idc_7904;
    SAC_array_descriptor_t SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__desc = 
# 17743 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17743 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__shp0 = 1;
    const int SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz = 1;
    const int SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim = 1;




    int SACp_pinl_48135__emal_43782__ivesli_42500;
   
   




    int SACp_pinl_48134__emal_43781__pinl_12683__icc_7886;
   
   




    
# 17765 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17765 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48133__emal_43780__pinl_12693__flat_4000;
   
   




    
# 17772 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17772 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_48132__emal_43779__pinl_12687__icc_7892;
    SAC_array_descriptor_t SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc = 
# 17773 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17773 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__shp0;
    int SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__sz;
    const int SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim = 1;




    
# 17781 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17781 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48131__emal_43778__uprf_21681;
   
   




    
# 17788 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17788 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48130__emal_43777__uprf_21675;
   
   




    int * SACp_pinl_48129__emal_43776__pinl_12629__idc_8060;
    SAC_array_descriptor_t SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__desc = 
# 17796 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17796 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__shp0 = 1;
    const int SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz = 1;
    const int SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim = 1;




    int SACp_pinl_48128__emal_43775__ivesli_42499;
   
   




    
# 17811 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17811 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48127__emal_43774__pinl_12586__icc_8039;
   
   




    int SACp_pinl_48125__emal_43772__isaa_31839__pinl_12489__rtpf_27_res;
   
   




    int * SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res;
    SAC_array_descriptor_t SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc = 
# 17826 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17826 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__shp0;
    int SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__sz;
    const int SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim = 1;




    int SACp_pinl_48123__emal_43770__esd_21858;
   
   




    
# 17841 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17841 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48121__emal_43768__pinl_12508__flat_356;
   
   




    int * SACp_pinl_48120__emal_43767__pinl_12513__flat_361;
    SAC_array_descriptor_t SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc = 
# 17849 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17849 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48120__emal_43767__pinl_12513__flat_361__shp0;
    int SACp_pinl_48120__emal_43767__pinl_12513__flat_361__sz;
    const int SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim = 1;




    
# 17857 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17857 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48119__emal_43766__pinl_12540__icc_5075_pred;
   
   




    int * SACp_pinl_48118__emal_43765__ctz_21827;
    SAC_array_descriptor_t SACp_pinl_48118__emal_43765__ctz_21827__desc = 
# 17865 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17865 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48118__emal_43765__ctz_21827__shp0;
    int SACp_pinl_48118__emal_43765__ctz_21827__sz;
    const int SACp_pinl_48118__emal_43765__ctz_21827__dim = 1;




    
# 17873 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17873 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_48117__emal_43764__pinl_12500__icc_5078;
    SAC_array_descriptor_t SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc = 
# 17874 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17874 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__shp0;
    int SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__sz;
    const int SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim = 1;




    
# 17882 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17882 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48116__emal_43763__pinl_12511__flat_359;
   
   




    int * SACp_pinl_48115__emal_43762__pinl_12518__flat_366;
    SAC_array_descriptor_t SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc = 
# 17890 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17890 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48115__emal_43762__pinl_12518__flat_366__shp0;
    int SACp_pinl_48115__emal_43762__pinl_12518__flat_366__sz;
    const int SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim = 1;




    int * SACp_pinl_48114__emal_43761__pinl_12517__flat_365;
    SAC_array_descriptor_t SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc = 
# 17899 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17899 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48114__emal_43761__pinl_12517__flat_365__shp0;
    int SACp_pinl_48114__emal_43761__pinl_12517__flat_365__sz;
    const int SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim = 1;




    
# 17907 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17907 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48113__emal_43760__pinl_12543__icc_5079_pred;
   
   




    int * SACp_pinl_48112__emal_43759__ctz_21825;
    SAC_array_descriptor_t SACp_pinl_48112__emal_43759__ctz_21825__desc = 
# 17915 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17915 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48112__emal_43759__ctz_21825__shp0;
    int SACp_pinl_48112__emal_43759__ctz_21825__sz;
    const int SACp_pinl_48112__emal_43759__ctz_21825__dim = 1;




    
# 17923 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17923 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_48111__emal_43758__pinl_12503__icc_5082;
    SAC_array_descriptor_t SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc = 
# 17924 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 17924 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__shp0;
    int SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__sz;
    const int SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim = 1;




    
# 17932 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17932 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48110__emal_43757__pinl_12515__flat_363;
   
   




    
# 17939 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17939 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48107__emal_43754__pinl_12520__flat_370;
   
   




    int SACp_pinl_48106__emal_43753__pinl_11546__flat_971;
   
   




    int SACp_pinl_48105__emal_43752__pinl_11570__flat_1140;
   
   




    
# 17960 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17960 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48104__emal_43751__pinl_11591__icc_7586_pred;
   
   




    int SACp_pinl_48103__emal_43750__pinl_21885__icc_8952;
   
   




    int SACp_pinl_48102__emal_43749__pinl_21896_val__SSA0_1;
   
   




    
# 17981 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 17981 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48100__emal_43747__pinl_21892__flat_1150;
   
   




    int SACp_pinl_48099__emal_43746__pinl_21898_val__SSA0_3;
   
   




    int SACp_pinl_48096__emal_43743__pinl_21901_val__SSA0_5;
   
   




    
# 18002 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18002 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48095__emal_43742__uprf_21666;
   
   




    
# 18009 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18009 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48093__emal_43740__uprf_21657;
   
   




    int * SACp_pinl_48092__emal_43739__pinl_11609__idc_7637;
    SAC_array_descriptor_t SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__desc = 
# 18017 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18017 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__shp0 = 1;
    const int SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz = 1;
    const int SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim = 1;




    
# 18025 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18025 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48091__emal_43738__uprf_21649;
   
   




    int * SACp_pinl_48090__emal_43737__pinl_11611__idc_7638;
    SAC_array_descriptor_t SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__desc = 
# 18033 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18033 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__shp0 = 1;
    const int SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz = 1;
    const int SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim = 1;




    int SACp_pinl_48089__emal_43736__uprf_21644;
   
   




    
# 18048 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18048 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48087__emal_43734__uprf_21633;
   
   




    
# 18055 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18055 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48086__emal_43733__uprf_21627;
   
   




    int * SACp_pinl_48085__emal_43732__pinl_11621__idc_7644;
    SAC_array_descriptor_t SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__desc = 
# 18063 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18063 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__shp0 = 1;
    const int SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz = 1;
    const int SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim = 1;




    int SACp_pinl_48084__emal_43731__pinl_21205__icc_6985;
   
   




    int SACp_pinl_48083__emal_43730__pinl_21208__icc_6991;
   
   




    int SACp_pinl_48082__emal_43729__pinl_21263_res;
   
   




    int SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e;
   
   




    int * SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound;
    SAC_array_descriptor_t SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__desc = 
# 18100 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18100 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__shp0 = 1;
    const int SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz = 1;
    const int SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim = 1;




    int SACp_pinl_48076__emal_43723__uprf_21615;
   
   




    
# 18115 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18115 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48075__emal_43722__uprf_21609;
   
   




    
# 18122 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18122 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48074__emal_43721__uprf_21603;
   
   




    int * SACp_pinl_48073__emal_43720__pinl_11630__idc_7649;
    SAC_array_descriptor_t SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__desc = 
# 18130 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18130 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__shp0 = 1;
    const int SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz = 1;
    const int SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim = 1;




    int SACp_pinl_48072__emal_43719__ivesli_42498;
   
   




    int SACp_pinl_48071__emal_43718__pinl_11564__icc_7620;
   
   




    int * SACp_pinl_48070__emal_43717__pinl_11569__icc_7626;
    SAC_array_descriptor_t SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc = 
# 18153 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18153 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__shp0;
    int SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__sz;
    const int SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim = 1;




    
# 18161 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18161 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48069__emal_43716__uprf_21582;
   
   




    int SACp_pinl_48068__emal_43715__uprf_21581;
   
   




    int * SACp_pinl_48067__emal_43714__pinl_12335__idc_7901;
    SAC_array_descriptor_t SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__desc = 
# 18176 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18176 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__shp0 = 1;
    const int SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz = 1;
    const int SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim = 1;




    int SACp_pinl_48066__emal_43713__pinl_21266__icc_6985;
   
   




    int SACp_pinl_48065__emal_43712__pinl_21269__icc_6991;
   
   




    
# 18198 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18198 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48062__emal_43709__uprf_21574;
   
   




    
# 18205 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18205 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48061__emal_43708__uprf_21568;
   
   




    int * SACp_pinl_48060__emal_43707__pinl_12341__idc_7904;
    SAC_array_descriptor_t SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__desc = 
# 18213 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18213 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__shp0 = 1;
    const int SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz = 1;
    const int SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim = 1;




    int SACp_pinl_48059__emal_43706__ivesli_42497;
   
   




    int SACp_pinl_48058__emal_43705__pinl_12304__icc_7886;
   
   




    
# 18235 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18235 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48057__emal_43704__pinl_12314__flat_4000;
   
   




    
# 18242 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18242 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_48056__emal_43703__pinl_12308__icc_7892;
    SAC_array_descriptor_t SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc = 
# 18243 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18243 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__shp0;
    int SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__sz;
    const int SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim = 1;




    
# 18251 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18251 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48055__emal_43702__uprf_21544;
   
   




    
# 18258 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18258 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48054__emal_43701__uprf_21538;
   
   




    int * SACp_pinl_48053__emal_43700__pinl_12250__idc_8060;
    SAC_array_descriptor_t SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__desc = 
# 18266 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18266 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__shp0 = 1;
    const int SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz = 1;
    const int SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim = 1;




    int SACp_pinl_48052__emal_43699__ivesli_42496;
   
   




    
# 18281 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18281 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48051__emal_43698__pinl_12207__icc_8039;
   
   




    int SACp_pinl_48049__emal_43696__isaa_31778__pinl_12110__rtpf_27_res;
   
   




    int * SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res;
    SAC_array_descriptor_t SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc = 
# 18296 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18296 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__shp0;
    int SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__sz;
    const int SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim = 1;




    int SACp_pinl_48047__emal_43694__esd_21843;
   
   




    
# 18311 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18311 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48045__emal_43692__pinl_12129__flat_356;
   
   




    int * SACp_pinl_48044__emal_43691__pinl_12134__flat_361;
    SAC_array_descriptor_t SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc = 
# 18319 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18319 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48044__emal_43691__pinl_12134__flat_361__shp0;
    int SACp_pinl_48044__emal_43691__pinl_12134__flat_361__sz;
    const int SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim = 1;




    
# 18327 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18327 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48043__emal_43690__pinl_12161__icc_5075_pred;
   
   




    int * SACp_pinl_48042__emal_43689__ctz_21819;
    SAC_array_descriptor_t SACp_pinl_48042__emal_43689__ctz_21819__desc = 
# 18335 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18335 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48042__emal_43689__ctz_21819__shp0;
    int SACp_pinl_48042__emal_43689__ctz_21819__sz;
    const int SACp_pinl_48042__emal_43689__ctz_21819__dim = 1;




    
# 18343 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18343 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_48041__emal_43688__pinl_12121__icc_5078;
    SAC_array_descriptor_t SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc = 
# 18344 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18344 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__shp0;
    int SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__sz;
    const int SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim = 1;




    
# 18352 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18352 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48040__emal_43687__pinl_12132__flat_359;
   
   




    int * SACp_pinl_48039__emal_43686__pinl_12139__flat_366;
    SAC_array_descriptor_t SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc = 
# 18360 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18360 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48039__emal_43686__pinl_12139__flat_366__shp0;
    int SACp_pinl_48039__emal_43686__pinl_12139__flat_366__sz;
    const int SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim = 1;




    int * SACp_pinl_48038__emal_43685__pinl_12138__flat_365;
    SAC_array_descriptor_t SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc = 
# 18369 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18369 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48038__emal_43685__pinl_12138__flat_365__shp0;
    int SACp_pinl_48038__emal_43685__pinl_12138__flat_365__sz;
    const int SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim = 1;




    
# 18377 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18377 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48037__emal_43684__pinl_12164__icc_5079_pred;
   
   




    int * SACp_pinl_48036__emal_43683__ctz_21817;
    SAC_array_descriptor_t SACp_pinl_48036__emal_43683__ctz_21817__desc = 
# 18385 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18385 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48036__emal_43683__ctz_21817__shp0;
    int SACp_pinl_48036__emal_43683__ctz_21817__sz;
    const int SACp_pinl_48036__emal_43683__ctz_21817__dim = 1;




    
# 18393 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18393 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_48035__emal_43682__pinl_12124__icc_5082;
    SAC_array_descriptor_t SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc = 
# 18394 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18394 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__shp0;
    int SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__sz;
    const int SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim = 1;




    
# 18402 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18402 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48034__emal_43681__pinl_12136__flat_363;
   
   




    
# 18409 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18409 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48031__emal_43678__pinl_12141__flat_370;
   
   




    
# 18416 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18416 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48030__ufiv_43057__pinl_12580__flat_1128;
   
   




    
# 18423 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18423 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48029__ufiv_43056__pinl_12201__flat_1128;
   
   




    int SACp_pinl_48022__wlidx_42340__pinl_12687__icc_7892;
   
   




    int SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626;
   
   




    int SACp_pinl_48020__wlidx_42338__pinl_12308__icc_7892;
   
   




    int SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626;
   
   




    int SACp_pinl_47932__eat_446;
   
   




    int * SACp_pinl_47931_iv;
    SAC_array_descriptor_t SACp_pinl_47931_iv__desc = 
# 18466 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18466 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47931_iv__shp0 = 1;
    const int SACp_pinl_47931_iv__sz = 1;
    const int SACp_pinl_47931_iv__dim = 1;




    int SACp_pinl_47925__eat_450;
   
   




    int * SACp_pinl_47924_iv;
    SAC_array_descriptor_t SACp_pinl_47924_iv__desc = 
# 18482 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18482 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47924_iv__shp0 = 1;
    const int SACp_pinl_47924_iv__sz = 1;
    const int SACp_pinl_47924_iv__dim = 1;




    int SACp_pinl_47916__eat_453;
   
   




    int * SACp_pinl_47915_iv;
    SAC_array_descriptor_t SACp_pinl_47915_iv__desc = 
# 18498 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18498 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47915_iv__shp0 = 1;
    const int SACp_pinl_47915_iv__sz = 1;
    const int SACp_pinl_47915_iv__dim = 1;




    
# 18506 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18506 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47914__icc_8067;
   
   




    
# 18513 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18513 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47913__hce_44;
   
   




    
# 18520 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18520 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47910__hce_46;
   
   




    
# 18527 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18527 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47909__hce_47;
   
   




    
# 18534 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18534 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47908__hce_48;
   
   




    
# 18541 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18541 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47907__hce_49;
   
   




    int SACp_pinl_47889__eat_446;
   
   




    int * SACp_pinl_47888_iv;
    SAC_array_descriptor_t SACp_pinl_47888_iv__desc = 
# 18556 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18556 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47888_iv__shp0 = 1;
    const int SACp_pinl_47888_iv__sz = 1;
    const int SACp_pinl_47888_iv__dim = 1;




    int SACp_pinl_47882__eat_450;
   
   




    int * SACp_pinl_47881_iv;
    SAC_array_descriptor_t SACp_pinl_47881_iv__desc = 
# 18572 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18572 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47881_iv__shp0 = 1;
    const int SACp_pinl_47881_iv__sz = 1;
    const int SACp_pinl_47881_iv__dim = 1;




    int SACp_pinl_47873__eat_453;
   
   




    int * SACp_pinl_47872_iv;
    SAC_array_descriptor_t SACp_pinl_47872_iv__desc = 
# 18588 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18588 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_47872_iv__shp0 = 1;
    const int SACp_pinl_47872_iv__sz = 1;
    const int SACp_pinl_47872_iv__dim = 1;




    
# 18596 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18596 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47871__icc_8067;
   
   




    
# 18603 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18603 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47870__hce_44;
   
   




    
# 18610 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18610 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47867__hce_46;
   
   




    
# 18617 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18617 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47866__hce_47;
   
   




    
# 18624 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18624 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47865__hce_48;
   
   




    
# 18631 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18631 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_47864__hce_49;
   
   




    int SACp_emal_43677__isaa_31739_b;
   
   




    int * SACp_emal_43676__isaa_31740_b;
    SAC_array_descriptor_t SACp_emal_43676__isaa_31740_b__desc = 
# 18646 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18646 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43676__isaa_31740_b__shp0;
    int SACp_emal_43676__isaa_31740_b__sz;
    const int SACp_emal_43676__isaa_31740_b__dim = 1;




    int SACp_emal_43675__isaa_31742_a;
   
   




    int * SACp_emal_43674__isaa_31743_a;
    SAC_array_descriptor_t SACp_emal_43674__isaa_31743_a__desc = 
# 18662 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18662 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43674__isaa_31743_a__shp0;
    int SACp_emal_43674__isaa_31743_a__sz;
    const int SACp_emal_43674__isaa_31743_a__dim = 1;




    int SACp_emal_43673__mse_31747_l;
   
   




    int * SACp_emal_43672__isaa_31746_lshp;
    SAC_array_descriptor_t SACp_emal_43672__isaa_31746_lshp__desc = 
# 18678 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18678 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43672__isaa_31746_lshp__shp0 = 1;
    const int SACp_emal_43672__isaa_31746_lshp__sz = 1;
    const int SACp_emal_43672__isaa_31746_lshp__dim = 1;




    int SACp_emal_43671__mse_31750_r;
   
   




    int * SACp_emal_43670__isaa_31749_rshp;
    SAC_array_descriptor_t SACp_emal_43670__isaa_31749_rshp__desc = 
# 18694 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18694 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43670__isaa_31749_rshp__shp0 = 1;
    const int SACp_emal_43670__isaa_31749_rshp__sz = 1;
    const int SACp_emal_43670__isaa_31749_rshp__dim = 1;




    int SACp_emal_43669__pinl_11543__flat_903;
   
   




    int SACp_emal_43668__pinl_11544__flat_964;
   
   




    
# 18716 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 18716 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43667__pinl_11545__flat_1058;
   
   




    int * SACl_a__SSA0_1;
    SAC_array_descriptor_t SACl_a__SSA0_1__desc = 
# 18724 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18724 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACl_a__SSA0_1__sz = 0;
    int SACl_a__SSA0_1__dim = 0;




    int * SACl_b__SSA0_1;
    SAC_array_descriptor_t SACl_b__SSA0_1__desc = 
# 18732 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18732 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACl_b__SSA0_1__sz = 0;
    int SACl_b__SSA0_1__dim = 0;




    int * SACp_flat_341;
    SAC_array_descriptor_t SACp_flat_341__desc = 
# 18740 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 18740 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_flat_341__sz = 0;
    int SACp_flat_341__dim = 0;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_43677__isaa_31739_b = SACl_b__dim; }; }
    { { if (!((1 == SACp_emal_43676__isaa_31740_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43676__isaa_31740_b"); }; { if ((((6 + (SACp_emal_43676__isaa_31740_b__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43676__isaa_31740_b__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43676__isaa_31740_b__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43676__isaa_31740_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43676__isaa_31740_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43676__isaa_31740_b__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43676__isaa_31740_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43676__isaa_31740_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43676__isaa_31740_b__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43676__isaa_31740_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43676__isaa_31740_b__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43676__isaa_31740_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43676__isaa_31740_b__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43676__isaa_31740_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43676__isaa_31740_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43676__isaa_31740_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43676__isaa_31740_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43676__isaa_31740_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43676__isaa_31740_b__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[4]) = SACp_emal_43676__isaa_31740_b__sz = SAC_size;
      if (!((SACp_emal_43676__isaa_31740_b__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 18782 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 18782 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 18782 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 18782 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 18782 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 18782 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 18782 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 18782, __extension__ __PRETTY_FUNCTION__); }))
# 18782 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43676__isaa_31740_b = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43676__isaa_31740_b__sz * sizeof (*SACp_emal_43676__isaa_31740_b)); break; case SAC_HM_multi_threaded: SACp_emal_43676__isaa_31740_b = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43676__isaa_31740_b__sz * sizeof (*SACp_emal_43676__isaa_31740_b), 0); break; case SAC_HM_any_threaded: SACp_emal_43676__isaa_31740_b = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43676__isaa_31740_b__sz * sizeof (*SACp_emal_43676__isaa_31740_b), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
      { SACp_emal_43676__isaa_31740_b[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_43675__isaa_31742_a = SACl_a__dim; }; }
    { { if (!((1 == SACp_emal_43674__isaa_31743_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43674__isaa_31743_a"); }; { if ((((6 + (SACp_emal_43674__isaa_31743_a__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43674__isaa_31743_a__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43674__isaa_31743_a__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43674__isaa_31743_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43674__isaa_31743_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43674__isaa_31743_a__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43674__isaa_31743_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43674__isaa_31743_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43674__isaa_31743_a__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43674__isaa_31743_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43674__isaa_31743_a__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43674__isaa_31743_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43674__isaa_31743_a__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43674__isaa_31743_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43674__isaa_31743_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43674__isaa_31743_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43674__isaa_31743_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43674__isaa_31743_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43674__isaa_31743_a__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[4]) = SACp_emal_43674__isaa_31743_a__sz = SAC_size;
      if (!((SACp_emal_43674__isaa_31743_a__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 18815 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 18815 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 18815 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 18815 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 18815 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 18815 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 18815 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 18815, __extension__ __PRETTY_FUNCTION__); }))
# 18815 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43674__isaa_31743_a = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43674__isaa_31743_a__sz * sizeof (*SACp_emal_43674__isaa_31743_a)); break; case SAC_HM_multi_threaded: SACp_emal_43674__isaa_31743_a = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43674__isaa_31743_a__sz * sizeof (*SACp_emal_43674__isaa_31743_a), 0); break; case SAC_HM_any_threaded: SACp_emal_43674__isaa_31743_a = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43674__isaa_31743_a__sz * sizeof (*SACp_emal_43674__isaa_31743_a), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
      { SACp_emal_43674__isaa_31743_a[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; { SACp_emal_43673__mse_31747_l = ((SACp_emal_43675__isaa_31742_a) < 0) ? -(SACp_emal_43675__isaa_31742_a) : (SACp_emal_43675__isaa_31742_a); };
    { { if (!((1 == SACp_emal_43672__isaa_31746_lshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43672__isaa_31746_lshp"); }; { { if ((((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp)) + ((6 + (SACp_emal_43672__isaa_31746_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp)) + ((6 + (SACp_emal_43672__isaa_31746_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp)) + ((6 + (SACp_emal_43672__isaa_31746_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43672__isaa_31746_lshp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43672__isaa_31746_lshp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp)) + ((6 + (SACp_emal_43672__isaa_31746_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43672__isaa_31746_lshp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43672__isaa_31746_lshp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp)) + ((6 + (SACp_emal_43672__isaa_31746_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp)) + ((6 + (SACp_emal_43672__isaa_31746_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp)) + ((6 + (SACp_emal_43672__isaa_31746_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp)) + ((6 + (SACp_emal_43672__isaa_31746_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp)) + ((6 + (SACp_emal_43672__isaa_31746_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43672__isaa_31746_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43672__isaa_31746_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43672__isaa_31746_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43672__isaa_31746_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43672__isaa_31746_lshp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp), ((6 + (SACp_emal_43672__isaa_31746_lshp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43672__isaa_31746_lshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43672__isaa_31746_lshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43672__isaa_31746_lshp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43672__isaa_31746_lshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 35, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43672__isaa_31746_lshp__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 35, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43672__isaa_31746_lshp[0] = SACp_emal_43673__mse_31747_l; }

    { ; ; }
    ; { SACp_emal_43671__mse_31750_r = ((SACp_emal_43677__isaa_31739_b) < 0) ? -(SACp_emal_43677__isaa_31739_b) : (SACp_emal_43677__isaa_31739_b); };
    { { if (!((1 == SACp_emal_43670__isaa_31749_rshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43670__isaa_31749_rshp"); }; { { if ((((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp)) + ((6 + (SACp_emal_43670__isaa_31749_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp)) + ((6 + (SACp_emal_43670__isaa_31749_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp)) + ((6 + (SACp_emal_43670__isaa_31749_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43670__isaa_31749_rshp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43670__isaa_31749_rshp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp)) + ((6 + (SACp_emal_43670__isaa_31749_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43670__isaa_31749_rshp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43670__isaa_31749_rshp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp)) + ((6 + (SACp_emal_43670__isaa_31749_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp)) + ((6 + (SACp_emal_43670__isaa_31749_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp)) + ((6 + (SACp_emal_43670__isaa_31749_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp)) + ((6 + (SACp_emal_43670__isaa_31749_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp)) + ((6 + (SACp_emal_43670__isaa_31749_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43670__isaa_31749_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43670__isaa_31749_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43670__isaa_31749_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43670__isaa_31749_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43670__isaa_31749_rshp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp), ((6 + (SACp_emal_43670__isaa_31749_rshp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43670__isaa_31749_rshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43670__isaa_31749_rshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43670__isaa_31749_rshp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43670__isaa_31749_rshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 50, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43670__isaa_31749_rshp__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 50, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43670__isaa_31749_rshp[0] = SACp_emal_43671__mse_31750_r; }

    { ; ; }
    ; ; { SACp_emal_43669__pinl_11543__flat_903 = (SACp_emal_43675__isaa_31742_a) - (SACp_emal_43677__isaa_31739_b); };
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ScalarArith.sac", 92, 133, "Assignment with incompatible types found"); };
    ;

    }
    ; { SACp_emal_43668__pinl_11544__flat_964 = ((SACp_emal_43669__pinl_11543__flat_903) < 0) ? -(SACp_emal_43669__pinl_11543__flat_903) : (SACp_emal_43669__pinl_11543__flat_903); };
    ; ; { SACp_emal_43667__pinl_11545__flat_1058 = (SACp_emal_43669__pinl_11543__flat_903) < (0); };
    { ; ; }
    if (SACp_emal_43667__pinl_11545__flat_1058)
    {
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_emal_43676__isaa_31740_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))); } } } } else { } }
      { ; ; }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_emal_43674__isaa_31743_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))); } } } } else { } }
      { { { if (((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, ((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)); } else { if (SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, ((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, ((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, ((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)); } else { if (((((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, ((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43672__isaa_31746_lshp__desc) & (-1 ^ (3))))); } } }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ScalarArith.sac", 101, 127, "Assignment with incompatible types found"); };
      ;

      }
      ; { SACp_pinl_48106__emal_43753__pinl_11546__flat_971 = -(SACp_emal_43668__pinl_11544__flat_964); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1747, "Assignment with incompatible types found"); };
      ;

      }
      { { SACp_pinl_48105__emal_43752__pinl_11570__flat_1140 = 0; }; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1817, "Assignment with incompatible types found"); };
      ;

      }
      { { SACp_pinl_48104__emal_43751__pinl_11591__icc_7586_pred = 
# 18901 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 18901 "/home/rubenhensen/sac/a.out.c"
     ; }; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1896, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48103__emal_43750__pinl_21885__icc_8952 = ( SACp_emal_43670__isaa_31749_rshp[SACp_pinl_48105__emal_43752__pinl_11570__flat_1140]); }

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1988, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_pinl_48102__emal_43749__pinl_21896_val__SSA0_1 = (SACp_emal_43668__pinl_11544__flat_964) - (SACp_pinl_48103__emal_43750__pinl_21885__icc_8952); };
      ; ; { SACp_pinl_48102__emal_43749__pinl_21896_val__SSA0_1 = (0) > (SACp_pinl_48102__emal_43749__pinl_21896_val__SSA0_1) ? (0) : (SACp_pinl_48102__emal_43749__pinl_21896_val__SSA0_1); };
      ; ; { SACp_pinl_48100__emal_43747__pinl_21892__flat_1150 = (SACp_pinl_48106__emal_43753__pinl_11546__flat_971) >= (0); };
      { if (SACp_pinl_48100__emal_43747__pinl_21892__flat_1150) { SACp_pinl_48099__emal_43746__pinl_21898_val__SSA0_3 = SACp_pinl_48105__emal_43752__pinl_11570__flat_1140; } else { SACp_pinl_48099__emal_43746__pinl_21898_val__SSA0_3 = SACp_pinl_48102__emal_43749__pinl_21896_val__SSA0_1; } }
      { ; ; }
      ; ; { SACp_emal_43668__pinl_11544__flat_964 = (SACp_pinl_48103__emal_43750__pinl_21885__icc_8952) - (SACp_emal_43668__pinl_11544__flat_964); };
      ; ; { SACp_emal_43668__pinl_11544__flat_964 = (0) > (SACp_emal_43668__pinl_11544__flat_964) ? (0) : (SACp_emal_43668__pinl_11544__flat_964); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2177, "Assignment with incompatible types found"); };
      ;

      }
      { if (SACp_pinl_48100__emal_43747__pinl_21892__flat_1150) { SACp_pinl_48096__emal_43743__pinl_21901_val__SSA0_5 = SACp_pinl_48105__emal_43752__pinl_11570__flat_1140; } else { SACp_pinl_48096__emal_43743__pinl_21901_val__SSA0_5 = SACp_emal_43668__pinl_11544__flat_964; } }
      { ; ; }
      { ; ; }
      if (SACp_pinl_48099__emal_43746__pinl_21898_val__SSA0_3 >= 0) { { SACp_pinl_48095__emal_43742__uprf_21666 = SACp_pinl_48099__emal_43746__pinl_21898_val__SSA0_3; }; SACp_pinl_48095__emal_43742__uprf_21666 = 1; } else { SACp_pinl_48095__emal_43742__uprf_21666 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48099__emal_43746__pinl_21898_val__SSA0_3"); }
      ; { SACp_pinl_48106__emal_43753__pinl_11546__flat_971 = ((SACp_pinl_48106__emal_43753__pinl_11546__flat_971) < 0) ? -(SACp_pinl_48106__emal_43753__pinl_11546__flat_971) : (SACp_pinl_48106__emal_43753__pinl_11546__flat_971); };
      if (SACp_pinl_48099__emal_43746__pinl_21898_val__SSA0_3 <= SACp_pinl_48106__emal_43753__pinl_11546__flat_971) { SACp_pinl_48093__emal_43740__uprf_21657 = 1; } else { SACp_pinl_48093__emal_43740__uprf_21657 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Scalar constraint `" "SACp_pinl_48099__emal_43746__pinl_21898_val__SSA0_3" " (" "%d" ") <= " "SACp_pinl_48106__emal_43753__pinl_11546__flat_971" " (" "%d" ")" "' violated", SACp_pinl_48099__emal_43746__pinl_21898_val__SSA0_3, SACp_pinl_48106__emal_43753__pinl_11546__flat_971); }
      { { if (!((1 == SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48092__emal_43739__pinl_11609__idc_7637"); }; { { if ((((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637)) + ((6 + (SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637)) + ((6 + (SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637)) + ((6 + (SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48092__emal_43739__pinl_11609__idc_7637 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48092__emal_43739__pinl_11609__idc_7637 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637)) + ((6 + (SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48092__emal_43739__pinl_11609__idc_7637 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48092__emal_43739__pinl_11609__idc_7637 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637)) + ((6 + (SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637)) + ((6 + (SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637)) + ((6 + (SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637)) + ((6 + (SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637)) + ((6 + (SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48092__emal_43739__pinl_11609__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48092__emal_43739__pinl_11609__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48092__emal_43739__pinl_11609__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48092__emal_43739__pinl_11609__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637, SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637), ((6 + (SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48092__emal_43739__pinl_11609__idc_7637[0] = SACp_pinl_48099__emal_43746__pinl_21898_val__SSA0_3; }

      if (SACp_pinl_48106__emal_43753__pinl_11546__flat_971 >= 0) { { SACp_pinl_48091__emal_43738__uprf_21649 = SACp_pinl_48106__emal_43753__pinl_11546__flat_971; }; SACp_pinl_48091__emal_43738__uprf_21649 = 1; } else { SACp_pinl_48091__emal_43738__uprf_21649 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48106__emal_43753__pinl_11546__flat_971"); }
      { { if (!((1 == SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48090__emal_43737__pinl_11611__idc_7638"); }; { { if ((((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638)) + ((6 + (SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638)) + ((6 + (SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638)) + ((6 + (SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48090__emal_43737__pinl_11611__idc_7638 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48090__emal_43737__pinl_11611__idc_7638 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638)) + ((6 + (SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48090__emal_43737__pinl_11611__idc_7638 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48090__emal_43737__pinl_11611__idc_7638 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638)) + ((6 + (SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638)) + ((6 + (SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638)) + ((6 + (SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638)) + ((6 + (SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638)) + ((6 + (SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48090__emal_43737__pinl_11611__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48090__emal_43737__pinl_11611__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48090__emal_43737__pinl_11611__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48090__emal_43737__pinl_11611__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638, SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638), ((6 + (SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48090__emal_43737__pinl_11611__idc_7638[0] = SACp_pinl_48106__emal_43753__pinl_11546__flat_971; }

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2297, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_pinl_48089__emal_43736__uprf_21644 = (SACp_pinl_48103__emal_43750__pinl_21885__icc_8952) < (SACp_pinl_48106__emal_43753__pinl_11546__flat_971) ? (SACp_pinl_48103__emal_43750__pinl_21885__icc_8952) : (SACp_pinl_48106__emal_43753__pinl_11546__flat_971); };
      ; ; { SACp_pinl_48089__emal_43736__uprf_21644 = (SACp_pinl_48089__emal_43736__uprf_21644) + (SACp_pinl_48099__emal_43746__pinl_21898_val__SSA0_3); };
      { ; ; }
      if (SACp_pinl_48089__emal_43736__uprf_21644 >= 0) { { SACp_pinl_48087__emal_43734__uprf_21633 = SACp_pinl_48089__emal_43736__uprf_21644; }; SACp_pinl_48087__emal_43734__uprf_21633 = 1; } else { SACp_pinl_48087__emal_43734__uprf_21633 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48089__emal_43736__uprf_21644"); }
      if (SACp_pinl_48089__emal_43736__uprf_21644 <= SACp_pinl_48106__emal_43753__pinl_11546__flat_971) { SACp_pinl_48086__emal_43733__uprf_21627 = 1; } else { SACp_pinl_48086__emal_43733__uprf_21627 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Scalar constraint `" "SACp_pinl_48089__emal_43736__uprf_21644" " (" "%d" ") <= " "SACp_pinl_48106__emal_43753__pinl_11546__flat_971" " (" "%d" ")" "' violated", SACp_pinl_48089__emal_43736__uprf_21644, SACp_pinl_48106__emal_43753__pinl_11546__flat_971); }
      { ; ; }
      { { if (!((1 == SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48085__emal_43732__pinl_11621__idc_7644"); }; { { if ((((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644)) + ((6 + (SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644)) + ((6 + (SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644)) + ((6 + (SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48085__emal_43732__pinl_11621__idc_7644 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48085__emal_43732__pinl_11621__idc_7644 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644)) + ((6 + (SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48085__emal_43732__pinl_11621__idc_7644 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48085__emal_43732__pinl_11621__idc_7644 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644)) + ((6 + (SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644)) + ((6 + (SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644)) + ((6 + (SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644)) + ((6 + (SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644)) + ((6 + (SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48085__emal_43732__pinl_11621__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48085__emal_43732__pinl_11621__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48085__emal_43732__pinl_11621__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48085__emal_43732__pinl_11621__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644, SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644), ((6 + (SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2321, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2321, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48085__emal_43732__pinl_11621__idc_7644[0] = SACp_pinl_48089__emal_43736__uprf_21644; }

      { ; ; }
      if (!SACp_pinl_48091__emal_43738__uprf_21649) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48086__emal_43733__uprf_21627) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48093__emal_43740__uprf_21657) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48087__emal_43734__uprf_21633) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48095__emal_43742__uprf_21666) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48084__emal_43731__pinl_21205__icc_6985 = ( SACp_pinl_48092__emal_43739__pinl_11609__idc_7637[SACp_pinl_48105__emal_43752__pinl_11570__flat_1140]); }

      { { { if (((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637) - 1)->data1.arena)); } else { if (SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637) - 1)->data1.arena)); } else { if (((((SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__sz * sizeof (*SACp_pinl_48092__emal_43739__pinl_11609__idc_7637))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48092__emal_43739__pinl_11609__idc_7637__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48083__emal_43730__pinl_21208__icc_6991 = ( SACp_pinl_48085__emal_43732__pinl_11621__idc_7644[SACp_pinl_48105__emal_43752__pinl_11570__flat_1140]); }

      { { { if (((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644) - 1)->data1.arena)); } else { if (SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644) - 1)->data1.arena)); } else { if (((((SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__sz * sizeof (*SACp_pinl_48085__emal_43732__pinl_11621__idc_7644))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48085__emal_43732__pinl_11621__idc_7644__desc) & (-1 ^ (3))))); } } }
      ; ; { SACp_pinl_48082__emal_43729__pinl_21263_res = (SACp_pinl_48084__emal_43731__pinl_21205__icc_6985) > (SACp_pinl_48083__emal_43730__pinl_21208__icc_6991) ? (SACp_pinl_48084__emal_43731__pinl_21205__icc_6985) : (SACp_pinl_48083__emal_43730__pinl_21208__icc_6991); };



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e = ( SACp_pinl_48090__emal_43737__pinl_11611__idc_7638[SACp_pinl_48105__emal_43752__pinl_11570__flat_1140]); }

      { { { if (((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638) - 1)->data1.arena)); } else { if (SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638) - 1)->data1.arena)); } else { if (((((SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__sz * sizeof (*SACp_pinl_48090__emal_43737__pinl_11611__idc_7638))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48090__emal_43737__pinl_11611__idc_7638__desc) & (-1 ^ (3))))); } } }
      { { if (!((1 == SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound"); }; { { if ((((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound, SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound), ((6 + (SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound[0] = SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e; }

      ; ; { SACp_pinl_48096__emal_43743__pinl_21901_val__SSA0_5 = (SACp_pinl_48096__emal_43743__pinl_21901_val__SSA0_5) - (SACp_pinl_48084__emal_43731__pinl_21205__icc_6985); };
      { { if (!((1 == SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48070__emal_43717__pinl_11569__icc_7626"); }; { if ((((6 + (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__sz = SAC_size;
        if (!((SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 19056 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 19056 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19056 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 19056 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19056 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 19056 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 19056 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 19056, __extension__ __PRETTY_FUNCTION__); }))
# 19056 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48070__emal_43717__pinl_11569__icc_7626 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__sz * sizeof (*SACp_pinl_48070__emal_43717__pinl_11569__icc_7626)); break; case SAC_HM_multi_threaded: SACp_pinl_48070__emal_43717__pinl_11569__icc_7626 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__sz * sizeof (*SACp_pinl_48070__emal_43717__pinl_11569__icc_7626), 0); break; case SAC_HM_any_threaded: SACp_pinl_48070__emal_43717__pinl_11569__icc_7626 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__sz * sizeof (*SACp_pinl_48070__emal_43717__pinl_11569__icc_7626), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626_shpfac0;




        {
          int SAC_i;
          SAC_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626_shpfac0 = 1;
        }




        SAC_schedule_start0 = SACp_pinl_48082__emal_43729__pinl_21263_res;
        SAC_schedule_stop0 = SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e;




        SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_47889__eat_446 = SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e; for (SACp_pinl_47889__eat_446 = SACp_pinl_48082__emal_43729__pinl_21263_res; SACp_pinl_47889__eat_446 < SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e;) {
       



        if (!((0 == (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim - SACp_pinl_47888_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal size found!"); };
        { SACp_pinl_48070__emal_43717__pinl_11569__icc_7626[SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626] = SACp_pinl_48105__emal_43752__pinl_11570__flat_1140; };

        SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626 = SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626 + 1;
        SACp_pinl_47889__eat_446 = SACp_pinl_47889__eat_446 + 1;
        } }
# 19126 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_48084__emal_43731__pinl_21205__icc_6985;




        SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_47889__eat_446 = SACp_pinl_48084__emal_43731__pinl_21205__icc_6985; for (SACp_pinl_47889__eat_446 = 0; SACp_pinl_47889__eat_446 < SACp_pinl_48084__emal_43731__pinl_21205__icc_6985;) {
       



        if (!((0 == (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim - SACp_pinl_47888_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal size found!"); };
        { SACp_pinl_48070__emal_43717__pinl_11569__icc_7626[SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626] = SACp_pinl_48105__emal_43752__pinl_11570__flat_1140; };

        SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626 = SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626 + 1;
        SACp_pinl_47889__eat_446 = SACp_pinl_47889__eat_446 + 1;
        } }
# 19155 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_pinl_48084__emal_43731__pinl_21205__icc_6985;
        SAC_schedule_stop0 = SACp_pinl_48083__emal_43730__pinl_21208__icc_6991;




        SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_47889__eat_446 = SACp_pinl_48083__emal_43730__pinl_21208__icc_6991; for (SACp_pinl_47889__eat_446 = SACp_pinl_48084__emal_43731__pinl_21205__icc_6985; SACp_pinl_47889__eat_446 < SACp_pinl_48083__emal_43730__pinl_21208__icc_6991;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_48076__emal_43723__uprf_21615 = (SACp_pinl_47889__eat_446) + (SACp_pinl_48096__emal_43743__pinl_21901_val__SSA0_5); };
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_48076__emal_43723__uprf_21615 >= 0) { { SACp_pinl_48075__emal_43722__uprf_21609 = SACp_pinl_48076__emal_43723__uprf_21615; }; SACp_pinl_48075__emal_43722__uprf_21609 = 1; } else { SACp_pinl_48075__emal_43722__uprf_21609 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48076__emal_43723__uprf_21615"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_48076__emal_43723__uprf_21615 < SACp_pinl_48103__emal_43750__pinl_21885__icc_8952) { SACp_pinl_48074__emal_43721__uprf_21603 = 1; } else { SACp_pinl_48074__emal_43721__uprf_21603 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Scalar constraint `" "SACp_pinl_48076__emal_43723__uprf_21615" " (" "%d" ") < " "SACp_pinl_48103__emal_43750__pinl_21885__icc_8952" " (" "%d" ")" "' violated", SACp_pinl_48076__emal_43723__uprf_21615, SACp_pinl_48103__emal_43750__pinl_21885__icc_8952); }
        { { if (!((1 == SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48073__emal_43720__pinl_11630__idc_7649"); }; { { if ((((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649)) + ((6 + (SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649)) + ((6 + (SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649)) + ((6 + (SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48073__emal_43720__pinl_11630__idc_7649 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48073__emal_43720__pinl_11630__idc_7649 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649)) + ((6 + (SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48073__emal_43720__pinl_11630__idc_7649 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48073__emal_43720__pinl_11630__idc_7649 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649)) + ((6 + (SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649)) + ((6 + (SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649)) + ((6 + (SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649)) + ((6 + (SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649)) + ((6 + (SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48073__emal_43720__pinl_11630__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48073__emal_43720__pinl_11630__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48073__emal_43720__pinl_11630__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48073__emal_43720__pinl_11630__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649, SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649), ((6 + (SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_48073__emal_43720__pinl_11630__idc_7649[0] = SACp_pinl_48076__emal_43723__uprf_21615; }

        { ; ; }
        if (!SACp_pinl_48074__emal_43721__uprf_21603) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48075__emal_43722__uprf_21609) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_48072__emal_43719__ivesli_42498 = ( SACp_pinl_48073__emal_43720__pinl_11630__idc_7649[0]);

        { { { if (((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649) - 1)->data1.arena)); } else { if (SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649) - 1)->data1.arena)); } else { if (((((SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__sz * sizeof (*SACp_pinl_48073__emal_43720__pinl_11630__idc_7649))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48073__emal_43720__pinl_11630__idc_7649__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_48071__emal_43718__pinl_11564__icc_7620 = ( SACp_emal_43676__isaa_31740_b[SACp_pinl_48072__emal_43719__ivesli_42498]); }

        { ; ; }
        if (!SACp_pinl_48074__emal_43721__uprf_21603) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48075__emal_43722__uprf_21609) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }



        if (!((0 == (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim - SACp_pinl_47888_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal size found!"); };
        { SACp_pinl_48070__emal_43717__pinl_11569__icc_7626[SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626] = SACp_pinl_48071__emal_43718__pinl_11564__icc_7620; };

        { ; ; }
        SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626 = SACp_pinl_48019__wlidx_42337__pinl_11569__icc_7626 + 1;
        SACp_pinl_47889__eat_446 = SACp_pinl_47889__eat_446 + 1;
        } }
# 19263 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48556_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_emal_43676__isaa_31740_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))); } } } } else { } }
      { { { if (((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, ((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)); } else { if (SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, ((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, ((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, ((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)); } else { if (((((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, ((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43670__isaa_31749_rshp__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_48091__emal_43738__uprf_21649) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48086__emal_43733__uprf_21627) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48093__emal_43740__uprf_21657) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48087__emal_43734__uprf_21633) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48095__emal_43742__uprf_21666) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      if (SACp_pinl_48105__emal_43752__pinl_11570__flat_1140 <= SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e) { SACp_pinl_48069__emal_43716__uprf_21582 = 1; } else { SACp_pinl_48069__emal_43716__uprf_21582 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10596, "Scalar constraint `" "SACp_pinl_48105__emal_43752__pinl_11570__flat_1140" " (" "%d" ") <= " "SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e" " (" "%d" ")" "' violated", SACp_pinl_48105__emal_43752__pinl_11570__flat_1140, SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e); }
      { { SACp_pinl_48068__emal_43715__uprf_21581 = SACp_pinl_48105__emal_43752__pinl_11570__flat_1140; } }
      { { if (!((1 == SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48067__emal_43714__pinl_12335__idc_7901"); }; { { if ((((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901)) + ((6 + (SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901)) + ((6 + (SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901)) + ((6 + (SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48067__emal_43714__pinl_12335__idc_7901 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48067__emal_43714__pinl_12335__idc_7901 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901)) + ((6 + (SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48067__emal_43714__pinl_12335__idc_7901 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48067__emal_43714__pinl_12335__idc_7901 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901)) + ((6 + (SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901)) + ((6 + (SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901)) + ((6 + (SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901)) + ((6 + (SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901)) + ((6 + (SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48067__emal_43714__pinl_12335__idc_7901 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48067__emal_43714__pinl_12335__idc_7901 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48067__emal_43714__pinl_12335__idc_7901 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48067__emal_43714__pinl_12335__idc_7901 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901, SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901), ((6 + (SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10542, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10542, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48067__emal_43714__pinl_12335__idc_7901[0] = SACp_pinl_48068__emal_43715__uprf_21581; }

      { ; ; }
      if (!SACp_pinl_48069__emal_43716__uprf_21582) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10533, "With-loop guard failed"); }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48066__emal_43713__pinl_21266__icc_6985 = ( SACp_pinl_48067__emal_43714__pinl_12335__idc_7901[SACp_pinl_48105__emal_43752__pinl_11570__flat_1140]); }

      { { { if (((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901, ((((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901) - 1)->data1.arena)); } else { if (SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901, ((((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901, ((((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901, ((((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901) - 1)->data1.arena)); } else { if (((((SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__sz * sizeof (*SACp_pinl_48067__emal_43714__pinl_12335__idc_7901))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901, ((((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48067__emal_43714__pinl_12335__idc_7901__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48065__emal_43712__pinl_21269__icc_6991 = ( SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound[SACp_pinl_48105__emal_43752__pinl_11570__flat_1140]); }

      { { { if (((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound, ((((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound) - 1)->data1.arena)); } else { if (SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound, ((((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound, ((((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound, ((((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound) - 1)->data1.arena)); } else { if (((((SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound, ((((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48080__emal_43727__pinl_11657__wlbsc_9832_sc_bound__desc) & (-1 ^ (3))))); } } }
      { ; ; }
      { { if (!((1 == SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48056__emal_43703__pinl_12308__icc_7892"); }; { if ((((6 + (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10527, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48065__emal_43712__pinl_21269__icc_6991;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__sz = SAC_size;
        if (!((SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10527, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 19336 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 19336 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19336 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 19336 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19336 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 19336 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 19336 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 19336, __extension__ __PRETTY_FUNCTION__); }))
# 19336 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48056__emal_43703__pinl_12308__icc_7892 = (
# 19336 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 19336 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__sz * sizeof (*SACp_pinl_48056__emal_43703__pinl_12308__icc_7892)); break; case SAC_HM_multi_threaded: SACp_pinl_48056__emal_43703__pinl_12308__icc_7892 = (
# 19336 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 19336 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__sz * sizeof (*SACp_pinl_48056__emal_43703__pinl_12308__icc_7892), 0); break; case SAC_HM_any_threaded: SACp_pinl_48056__emal_43703__pinl_12308__icc_7892 = (
# 19336 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 19336 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__sz * sizeof (*SACp_pinl_48056__emal_43703__pinl_12308__icc_7892), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10527, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10527, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_pinl_48056__emal_43703__pinl_12308__icc_7892_shpfac0;




        {
          int SAC_i;
          SAC_SACp_pinl_48056__emal_43703__pinl_12308__icc_7892_shpfac0 = 1;
        }




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_48066__emal_43713__pinl_21266__icc_6985;




        SACp_pinl_48020__wlidx_42338__pinl_12308__icc_7892
          = SAC_schedule_start0 * SAC_SACp_pinl_48056__emal_43703__pinl_12308__icc_7892_shpfac0;

        { int SAC_stop_SACp_pinl_47882__eat_450 = SACp_pinl_48066__emal_43713__pinl_21266__icc_6985; for (SACp_pinl_47882__eat_450 = 0; SACp_pinl_47882__eat_450 < SACp_pinl_48066__emal_43713__pinl_21266__icc_6985;) {
       



        if (!((0 == (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim - SACp_pinl_47881_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10542, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48056__emal_43703__pinl_12308__icc_7892_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10542, "WL expression with illegal size found!"); };
        { SACp_pinl_48056__emal_43703__pinl_12308__icc_7892[SACp_pinl_48020__wlidx_42338__pinl_12308__icc_7892] = SACp_pinl_48104__emal_43751__pinl_11591__icc_7586_pred; };

        SACp_pinl_48020__wlidx_42338__pinl_12308__icc_7892 = SACp_pinl_48020__wlidx_42338__pinl_12308__icc_7892 + 1;
        SACp_pinl_47882__eat_450 = SACp_pinl_47882__eat_450 + 1;
        } }
# 19406 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_pinl_48066__emal_43713__pinl_21266__icc_6985;
        SAC_schedule_stop0 = SACp_pinl_48065__emal_43712__pinl_21269__icc_6991;




        SACp_pinl_48020__wlidx_42338__pinl_12308__icc_7892
          = SAC_schedule_start0 * SAC_SACp_pinl_48056__emal_43703__pinl_12308__icc_7892_shpfac0;

        { int SAC_stop_SACp_pinl_47882__eat_450 = SACp_pinl_48065__emal_43712__pinl_21269__icc_6991; for (SACp_pinl_47882__eat_450 = SACp_pinl_48066__emal_43713__pinl_21266__icc_6985; SACp_pinl_47882__eat_450 < SACp_pinl_48065__emal_43712__pinl_21269__icc_6991;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47882__eat_450 >= 0) { { SACp_pinl_48062__emal_43709__uprf_21574 = SACp_pinl_47882__eat_450; }; SACp_pinl_48062__emal_43709__uprf_21574 = 1; } else { SACp_pinl_48062__emal_43709__uprf_21574 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47882__eat_450"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47882__eat_450 < SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e) { SACp_pinl_48061__emal_43708__uprf_21568 = 1; } else { SACp_pinl_48061__emal_43708__uprf_21568 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Scalar constraint `" "SACp_pinl_47882__eat_450" " (" "%d" ") < " "SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e" " (" "%d" ")" "' violated", SACp_pinl_47882__eat_450, SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e); }
        { { if (!((1 == SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48060__emal_43707__pinl_12341__idc_7904"); }; { { if ((((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904)) + ((6 + (SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904)) + ((6 + (SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904)) + ((6 + (SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48060__emal_43707__pinl_12341__idc_7904 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48060__emal_43707__pinl_12341__idc_7904 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904)) + ((6 + (SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48060__emal_43707__pinl_12341__idc_7904 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48060__emal_43707__pinl_12341__idc_7904 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904)) + ((6 + (SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904)) + ((6 + (SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904)) + ((6 + (SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904)) + ((6 + (SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904)) + ((6 + (SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48060__emal_43707__pinl_12341__idc_7904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48060__emal_43707__pinl_12341__idc_7904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48060__emal_43707__pinl_12341__idc_7904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48060__emal_43707__pinl_12341__idc_7904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904, SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904), ((6 + (SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10547, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10547, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_48060__emal_43707__pinl_12341__idc_7904[0] = SACp_pinl_47882__eat_450; }

        if (!SACp_pinl_48061__emal_43708__uprf_21568) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48062__emal_43709__uprf_21574) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_48059__emal_43706__ivesli_42497 = ( SACp_pinl_48060__emal_43707__pinl_12341__idc_7904[0]);

        { { { if (((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904, ((((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904) - 1)->data1.arena)); } else { if (SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904, ((((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904, ((((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904, ((((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904) - 1)->data1.arena)); } else { if (((((SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__sz * sizeof (*SACp_pinl_48060__emal_43707__pinl_12341__idc_7904))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904, ((((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48060__emal_43707__pinl_12341__idc_7904__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_48058__emal_43705__pinl_12304__icc_7886 = ( SACp_pinl_48070__emal_43717__pinl_11569__icc_7626[SACp_pinl_48059__emal_43706__ivesli_42497]); }

        { ; ; }
        if (!SACp_pinl_48061__emal_43708__uprf_21568) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48062__emal_43709__uprf_21574) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10559, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_48057__emal_43704__pinl_12314__flat_4000 = (SACp_pinl_48058__emal_43705__pinl_12304__icc_7886) >= (0); };
        { ; ; }



        if (!((0 == (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__dim - SACp_pinl_47881_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48056__emal_43703__pinl_12308__icc_7892_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
        { SACp_pinl_48056__emal_43703__pinl_12308__icc_7892[SACp_pinl_48020__wlidx_42338__pinl_12308__icc_7892] = SACp_pinl_48057__emal_43704__pinl_12314__flat_4000; };

        { ; ; }
        SACp_pinl_48020__wlidx_42338__pinl_12308__icc_7892 = SACp_pinl_48020__wlidx_42338__pinl_12308__icc_7892 + 1;
        SACp_pinl_47882__eat_450 = SACp_pinl_47882__eat_450 + 1;
        } }
# 19514 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48557_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      if (!SACp_pinl_48069__emal_43716__uprf_21582) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10533, "With-loop guard failed"); }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Assignment with incompatible types found"); };
      ;

      }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 241, 13, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_47871__icc_8067 = SACp_pinl_48104__emal_43751__pinl_11591__icc_7586_pred; }

     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_48065__emal_43712__pinl_21269__icc_6991;

        { int SAC_stop_SACp_pinl_47873__eat_453 = SACp_pinl_48065__emal_43712__pinl_21269__icc_6991; for (SACp_pinl_47873__eat_453 = 0; SACp_pinl_47873__eat_453 < SACp_pinl_48065__emal_43712__pinl_21269__icc_6991;) {
       
        ;
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47873__eat_453 >= 0) { { SACp_pinl_48055__emal_43702__uprf_21544 = SACp_pinl_47873__eat_453; }; SACp_pinl_48055__emal_43702__uprf_21544 = 1; } else { SACp_pinl_48055__emal_43702__uprf_21544 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47873__eat_453"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47873__eat_453 < SACp_pinl_48065__emal_43712__pinl_21269__icc_6991) { SACp_pinl_48054__emal_43701__uprf_21538 = 1; } else { SACp_pinl_48054__emal_43701__uprf_21538 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Scalar constraint `" "SACp_pinl_47873__eat_453" " (" "%d" ") < " "SACp_pinl_48065__emal_43712__pinl_21269__icc_6991" " (" "%d" ")" "' violated", SACp_pinl_47873__eat_453, SACp_pinl_48065__emal_43712__pinl_21269__icc_6991); }
        { { if (!((1 == SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48053__emal_43700__pinl_12250__idc_8060"); }; { { if ((((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060)) + ((6 + (SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060)) + ((6 + (SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060)) + ((6 + (SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48053__emal_43700__pinl_12250__idc_8060 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48053__emal_43700__pinl_12250__idc_8060 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060)) + ((6 + (SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48053__emal_43700__pinl_12250__idc_8060 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48053__emal_43700__pinl_12250__idc_8060 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060)) + ((6 + (SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060)) + ((6 + (SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060)) + ((6 + (SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060)) + ((6 + (SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060)) + ((6 + (SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48053__emal_43700__pinl_12250__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48053__emal_43700__pinl_12250__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48053__emal_43700__pinl_12250__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48053__emal_43700__pinl_12250__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060, SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060), ((6 + (SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_48053__emal_43700__pinl_12250__idc_8060[0] = SACp_pinl_47873__eat_453; }

        if (!SACp_pinl_48054__emal_43701__uprf_21538) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48055__emal_43702__uprf_21544) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_48052__emal_43699__ivesli_42496 = ( SACp_pinl_48053__emal_43700__pinl_12250__idc_8060[0]);

        { { { if (((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060) - 1)->data1.arena)); } else { if (SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060) - 1)->data1.arena)); } else { if (((((SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__sz * sizeof (*SACp_pinl_48053__emal_43700__pinl_12250__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48053__emal_43700__pinl_12250__idc_8060__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_48051__emal_43698__pinl_12207__icc_8039 = ( SACp_pinl_48056__emal_43703__pinl_12308__icc_7892[SACp_pinl_48052__emal_43699__ivesli_42496]); }

        { ; ; }
        if (!SACp_pinl_48054__emal_43701__uprf_21538) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48055__emal_43702__uprf_21544) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        ; ; { SACp_pinl_48051__emal_43698__pinl_12207__icc_8039 = (SACp_pinl_47871__icc_8067) & (SACp_pinl_48051__emal_43698__pinl_12207__icc_8039); };
        ;



        ;




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_48029__ufiv_43056__pinl_12201__flat_1128 = SACp_pinl_48051__emal_43698__pinl_12207__icc_8039; }




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47871__icc_8067 = SACp_pinl_48029__ufiv_43056__pinl_12201__flat_1128; }




        ;


        SACp_pinl_47873__eat_453 = SACp_pinl_47873__eat_453 + 1;
        } }
# 19666 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48558_SAC_label:;
      { ; ; }
      { { free (SACp_pinl_48056__emal_43703__pinl_12308__icc_7892); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48056__emal_43703__pinl_12308__icc_7892__desc) & (-1 ^ (3))))); } } }
      { ; ; }
      if (SACp_pinl_47871__icc_8067)
      {
        ;
        { { SACp_pinl_48185__emal_43842__hce_44 = 
# 19676 "/home/rubenhensen/sac/a.out.c" 3 4
       1
# 19676 "/home/rubenhensen/sac/a.out.c"
       ; }; }



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47870__hce_44 = SACp_pinl_48185__emal_43842__hce_44; }

      }
      else
      {
        ;
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern pre-condition of genarrayI failed"); SACp_pinl_48186__emal_43843__hce_44__SSA0_1 = 0;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47870__hce_44 = SACp_pinl_48186__emal_43843__hce_44__SSA0_1; }

      }
      if (!SACp_pinl_47870__hce_44) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Type pattern post-condition of genarrayI failedType pattern pre-condition of genarrayI failedType pattern pre-condition of genarrayI failed"); }



      _tcp_48516_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc = SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc;
      _tcp_48516_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__sz = SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__sz;
      _tcp_48516_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim = SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim;
      (((SAC_array_descriptor_t) (((intptr_t)_tcp_48516_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc) & (-1 ^ (3))))[3]) = SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim;
      { _tcp_48516_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626 = SACp_pinl_48070__emal_43717__pinl_11569__icc_7626; }




      SACwf__MAIN___rtpf_25_impl_genarrayI__i_S__i_S (&SACl_a__SSA0_1, &SACl_a__SSA0_1__desc, _tcp_48516_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626, _tcp_48516_SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc, SACl_a, SACl_a__desc);




      SACl_a__SSA0_1__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__SSA0_1__desc) & (-1 ^ (3))))[4]);
      SACl_a__SSA0_1__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__SSA0_1__desc) & (-1 ^ (3))))[3]);

      { { SACp_pinl_48049__emal_43696__isaa_31778__pinl_12110__rtpf_27_res = SACl_a__SSA0_1__dim; }; }
      { { if (!((1 == SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res"); }; { if ((((6 + (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__SSA0_1__dim;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__sz = SAC_size;
        if (!((SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 19738 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 19738 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19738 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 19738 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19738 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 19738 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 19738 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 19738, __extension__ __PRETTY_FUNCTION__); }))
# 19738 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__sz * sizeof (*SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res)); break; case SAC_HM_multi_threaded: SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__sz * sizeof (*SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res), 0); break; case SAC_HM_any_threaded: SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__sz * sizeof (*SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc) & (-1 ^ (3))))[1]) = 0; } }



     
      for (int SAC_i = 0; SAC_i < SACl_a__SSA0_1__dim; SAC_i++) {
        { SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__SSA0_1__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
      }

      if (!SACp_pinl_47870__hce_44) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Type pattern post-condition of genarrayI failedType pattern pre-condition of genarrayI failed"); }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_pinl_48047__emal_43694__esd_21843 = (SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e) - (SACp_pinl_48049__emal_43696__isaa_31778__pinl_12110__rtpf_27_res); };
      ; ; { SACp_pinl_48047__emal_43694__esd_21843 = (SACp_pinl_48047__emal_43694__esd_21843) + (SACp_emal_43675__isaa_31742_a); };
      ; ; { SACp_pinl_48045__emal_43692__pinl_12129__flat_356 = (SACp_pinl_48047__emal_43694__esd_21843) == (0); };
      { ; ; }
      if (SACp_pinl_48045__emal_43692__pinl_12129__flat_356)
      {
        { ; ; }
        { { SACp_pinl_48189__emal_43840__hce_49 = 
# 19764 "/home/rubenhensen/sac/a.out.c" 3 4
       1
# 19764 "/home/rubenhensen/sac/a.out.c"
       ; }; }



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47864__hce_49 = SACp_pinl_48189__emal_43840__hce_49; }

      }
      else
      {
        { ; ; }
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `v:vshp' in return value does not match feature `v' in data"); SACp_pinl_48190__emal_43841__hce_49__SSA0_1 = 0;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47864__hce_49 = SACp_pinl_48190__emal_43841__hce_49__SSA0_1; }

      }
      { { if (!((1 == SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48044__emal_43691__pinl_12134__flat_361"); }; { if ((((6 + (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc) & (-1 ^ (3))))[1]) = 0; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _take_SxV_ is not a scalar!"); };
      if (!((SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "2nd argument of _take_SxV_ is not a vector!"); };
      if (!((SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48044__emal_43691__pinl_12134__flat_361__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_43675__isaa_31742_a) < 0) ? (-(SACp_emal_43675__isaa_31742_a)) : (SACp_emal_43675__isaa_31742_a));
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48044__emal_43691__pinl_12134__flat_361__sz = SAC_size;
        if (!((SACp_pinl_48044__emal_43691__pinl_12134__flat_361__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 19807 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 19807 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19807 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 19807 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19807 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 19807 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 19807 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 19807, __extension__ __PRETTY_FUNCTION__); }))
# 19807 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48044__emal_43691__pinl_12134__flat_361 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__sz * sizeof (*SACp_pinl_48044__emal_43691__pinl_12134__flat_361)); break; case SAC_HM_multi_threaded: SACp_pinl_48044__emal_43691__pinl_12134__flat_361 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__sz * sizeof (*SACp_pinl_48044__emal_43691__pinl_12134__flat_361), 0); break; case SAC_HM_any_threaded: SACp_pinl_48044__emal_43691__pinl_12134__flat_361 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__sz * sizeof (*SACp_pinl_48044__emal_43691__pinl_12134__flat_361), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc) & (-1 ^ (3))))[1]) = 0; } }



     
      {
        int SAC_cnt, SAC_off;
        
# 19814 "/home/rubenhensen/sac/a.out.c" 3 4
       _Bool 
# 19814 "/home/rubenhensen/sac/a.out.c"
            SAC_cond;
        SAC_cnt = SACp_emal_43675__isaa_31742_a;
        SAC_cond = (SACp_emal_43675__isaa_31742_a < 0);
        if (SAC_cond) {
          SAC_cnt = - SAC_cnt;
          SAC_off = SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__sz - SAC_cnt;
        }
        else {
          SAC_off = 0;
        }
        if (!((SAC_cnt <= SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
        for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
          { SACp_pinl_48044__emal_43691__pinl_12134__flat_361[SAC_i] = ( SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res[SAC_off + SAC_i]); };
        }
      }

            if (SACp_emal_43674__isaa_31743_a__dim != SACp_pinl_48044__emal_43691__pinl_12134__flat_361__dim) {
        SACp_pinl_48043__emal_43690__pinl_12161__icc_5075_pred = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_emal_43674__isaa_31743_a""' with shape %s ""And `" "SACp_pinl_48044__emal_43691__pinl_12134__flat_361""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_43674__isaa_31743_a__desc), SAC_PrintShape (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc));
      }
      else {
        int SAC_all = 1; if (0 || (SACp_emal_43674__isaa_31743_a__shp0 != SACp_pinl_48044__emal_43691__pinl_12134__flat_361__shp0))
        {

          SAC_all = 0;
          SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_emal_43674__isaa_31743_a""' with shape %s ""And `" "SACp_pinl_48044__emal_43691__pinl_12134__flat_361""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_43674__isaa_31743_a__desc), SAC_PrintShape (SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc));
        }
        SACp_pinl_48043__emal_43690__pinl_12161__icc_5075_pred = SAC_all;
      }

      if (!SACp_pinl_48043__emal_43690__pinl_12161__icc_5075_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _eq_VxV_ guard failed"); }
      { { if (!((1 == SACp_pinl_48042__emal_43689__ctz_21819__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48042__emal_43689__ctz_21819"); }; { if ((((6 + (SACp_pinl_48042__emal_43689__ctz_21819__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48042__emal_43689__ctz_21819__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48042__emal_43689__ctz_21819__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48042__emal_43689__ctz_21819__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48042__emal_43689__ctz_21819__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48042__emal_43689__ctz_21819__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48042__emal_43689__ctz_21819__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48042__emal_43689__ctz_21819__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48042__emal_43689__ctz_21819__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48042__emal_43689__ctz_21819__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48042__emal_43689__ctz_21819__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48042__emal_43689__ctz_21819__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48042__emal_43689__ctz_21819__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48042__emal_43689__ctz_21819__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48042__emal_43689__ctz_21819__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48042__emal_43689__ctz_21819__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48042__emal_43689__ctz_21819__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48042__emal_43689__ctz_21819__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48042__emal_43689__ctz_21819__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48042__emal_43689__ctz_21819__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48042__emal_43689__ctz_21819__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48042__emal_43689__ctz_21819__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48042__emal_43689__ctz_21819__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48044__emal_43691__pinl_12134__flat_361__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48042__emal_43689__ctz_21819__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48042__emal_43689__ctz_21819__sz = SAC_size * SACp_pinl_48044__emal_43691__pinl_12134__flat_361__sz;
        if (!((SACp_pinl_48042__emal_43689__ctz_21819__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 19859 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 19859 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19859 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 19859 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19859 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 19859 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 19859 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 19859, __extension__ __PRETTY_FUNCTION__); }))
# 19859 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48042__emal_43689__ctz_21819 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48042__emal_43689__ctz_21819__sz * sizeof (*SACp_pinl_48042__emal_43689__ctz_21819)); break; case SAC_HM_multi_threaded: SACp_pinl_48042__emal_43689__ctz_21819 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48042__emal_43689__ctz_21819__sz * sizeof (*SACp_pinl_48042__emal_43689__ctz_21819), 0); break; case SAC_HM_any_threaded: SACp_pinl_48042__emal_43689__ctz_21819 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48042__emal_43689__ctz_21819__sz * sizeof (*SACp_pinl_48042__emal_43689__ctz_21819), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48042__emal_43689__ctz_21819__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48042__emal_43689__ctz_21819__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48042__emal_43689__ctz_21819__desc) & (-1 ^ (3))))[1]) = 0; } }
      ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_pinl_48042__emal_43689__ctz_21819__sz; SAC_i++) { { SACp_pinl_48042__emal_43689__ctz_21819[SAC_i] = (( SACp_emal_43674__isaa_31743_a[SAC_i])) - (( SACp_pinl_48044__emal_43691__pinl_12134__flat_361[SAC_i])); }; } }
      { { free (SACp_pinl_48044__emal_43691__pinl_12134__flat_361); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48044__emal_43691__pinl_12134__flat_361__desc) & (-1 ^ (3))))); } } }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_emal_43674__isaa_31743_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))); } } } } else { } }
      { { if (!((1 == SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48041__emal_43688__pinl_12121__icc_5078"); }; { if ((((6 + (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48042__emal_43689__ctz_21819__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__sz = SAC_size * SACp_pinl_48042__emal_43689__ctz_21819__sz;
        if (!((SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 19877 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 19877 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19877 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 19877 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19877 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 19877 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 19877 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 19877, __extension__ __PRETTY_FUNCTION__); }))
# 19877 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48041__emal_43688__pinl_12121__icc_5078 = (
# 19877 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 19877 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__sz * sizeof (*SACp_pinl_48041__emal_43688__pinl_12121__icc_5078)); break; case SAC_HM_multi_threaded: SACp_pinl_48041__emal_43688__pinl_12121__icc_5078 = (
# 19877 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 19877 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__sz * sizeof (*SACp_pinl_48041__emal_43688__pinl_12121__icc_5078), 0); break; case SAC_HM_any_threaded: SACp_pinl_48041__emal_43688__pinl_12121__icc_5078 = (
# 19877 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 19877 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__sz * sizeof (*SACp_pinl_48041__emal_43688__pinl_12121__icc_5078), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc) & (-1 ^ (3))))[1]) = 0; } }
      ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__sz; SAC_i++) { { SACp_pinl_48041__emal_43688__pinl_12121__icc_5078[SAC_i] = (( SACp_pinl_48042__emal_43689__ctz_21819[SAC_i])) == (0); }; } }
      { { free (SACp_pinl_48042__emal_43689__ctz_21819); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48042__emal_43689__ctz_21819__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_48043__emal_43690__pinl_12161__icc_5075_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _eq_VxV_ guard failed"); }
      { ; ; }
      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__sz; SAC_i++) { if (( SACp_pinl_48041__emal_43688__pinl_12121__icc_5078[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_pinl_48040__emal_43687__pinl_12132__flat_359 = SAC_all; }
      { { free (SACp_pinl_48041__emal_43688__pinl_12121__icc_5078); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48041__emal_43688__pinl_12121__icc_5078__desc) & (-1 ^ (3))))); } } }
      if (SACp_pinl_48040__emal_43687__pinl_12132__flat_359)
      {
        { ; ; }



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47865__hce_48 = SACp_pinl_47864__hce_49; }

      }
      else
      {
        { ; ; }
        { ; ; }
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `v:vshp' in return value does not match feature `vshp' in data"); SACp_pinl_48192__emal_43839__hce_48__SSA0_1 = 0;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47865__hce_48 = SACp_pinl_48192__emal_43839__hce_48__SSA0_1; }

      }
      { { if (!((1 == SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48039__emal_43686__pinl_12139__flat_366"); }; { if ((((6 + (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc) & (-1 ^ (3))))[1]) = 0; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _drop_SxV_ is not a scalar!"); };
      if (!((SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "2nd argument of _drop_SxV_ is not a vector!"); };
      if (!((SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48039__emal_43686__pinl_12139__flat_366__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__sz - (((SACp_emal_43675__isaa_31742_a) < 0) ? (-(SACp_emal_43675__isaa_31742_a)) : (SACp_emal_43675__isaa_31742_a));
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48039__emal_43686__pinl_12139__flat_366__sz = SAC_size;
        if (!((SACp_pinl_48039__emal_43686__pinl_12139__flat_366__sz >= 0))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 19930 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 19930 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19930 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 19930 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19930 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 19930 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 19930 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 19930, __extension__ __PRETTY_FUNCTION__); }))
# 19930 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48039__emal_43686__pinl_12139__flat_366 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__sz * sizeof (*SACp_pinl_48039__emal_43686__pinl_12139__flat_366)); break; case SAC_HM_multi_threaded: SACp_pinl_48039__emal_43686__pinl_12139__flat_366 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__sz * sizeof (*SACp_pinl_48039__emal_43686__pinl_12139__flat_366), 0); break; case SAC_HM_any_threaded: SACp_pinl_48039__emal_43686__pinl_12139__flat_366 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48039__emal_43686__pinl_12139__flat_366__sz * sizeof (*SACp_pinl_48039__emal_43686__pinl_12139__flat_366), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc) & (-1 ^ (3))))[1]) = 0; } }



     
      {
        int SAC_cnt, SAC_off;
        
# 19937 "/home/rubenhensen/sac/a.out.c" 3 4
       _Bool 
# 19937 "/home/rubenhensen/sac/a.out.c"
            SAC_cond;
        SAC_off = SACp_emal_43675__isaa_31742_a;
        SAC_cond = (SACp_emal_43675__isaa_31742_a < 0);
        if (SAC_cond) {
          SAC_cnt = SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__sz + SAC_off;
          if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
          SAC_off = 0;
        }
        else {
          SAC_cnt = SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__sz - SAC_off;
          if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        }
        for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
          { SACp_pinl_48039__emal_43686__pinl_12139__flat_366[SAC_i] = ( SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res[SAC_off + SAC_i]); };
        }
      }

      { { free (SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48048__emal_43695__isaa_31779__pinl_12110__rtpf_27_res__desc) & (-1 ^ (3))))); } } }
      { { if (!((1 == SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48038__emal_43685__pinl_12138__flat_365"); }; { if ((((6 + (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc) & (-1 ^ (3))))[1]) = 0; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _take_SxV_ is not a scalar!"); };
      if (!((SACp_pinl_48039__emal_43686__pinl_12139__flat_366__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "2nd argument of _take_SxV_ is not a vector!"); };
      if (!((SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48038__emal_43685__pinl_12138__flat_365__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e) < 0) ? (-(SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e)) : (SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e));
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48038__emal_43685__pinl_12138__flat_365__sz = SAC_size;
        if (!((SACp_pinl_48038__emal_43685__pinl_12138__flat_365__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 19973 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 19973 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19973 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 19973 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 19973 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 19973 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 19973 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 19973, __extension__ __PRETTY_FUNCTION__); }))
# 19973 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48038__emal_43685__pinl_12138__flat_365 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__sz * sizeof (*SACp_pinl_48038__emal_43685__pinl_12138__flat_365)); break; case SAC_HM_multi_threaded: SACp_pinl_48038__emal_43685__pinl_12138__flat_365 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__sz * sizeof (*SACp_pinl_48038__emal_43685__pinl_12138__flat_365), 0); break; case SAC_HM_any_threaded: SACp_pinl_48038__emal_43685__pinl_12138__flat_365 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__sz * sizeof (*SACp_pinl_48038__emal_43685__pinl_12138__flat_365), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc) & (-1 ^ (3))))[1]) = 0; } }



     
      {
        int SAC_cnt, SAC_off;
        
# 19980 "/home/rubenhensen/sac/a.out.c" 3 4
       _Bool 
# 19980 "/home/rubenhensen/sac/a.out.c"
            SAC_cond;
        SAC_cnt = SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e;
        SAC_cond = (SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e < 0);
        if (SAC_cond) {
          SAC_cnt = - SAC_cnt;
          SAC_off = SACp_pinl_48039__emal_43686__pinl_12139__flat_366__sz - SAC_cnt;
        }
        else {
          SAC_off = 0;
        }
        if (!((SAC_cnt <= SACp_pinl_48039__emal_43686__pinl_12139__flat_366__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
        for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
          { SACp_pinl_48038__emal_43685__pinl_12138__flat_365[SAC_i] = ( SACp_pinl_48039__emal_43686__pinl_12139__flat_366[SAC_off + SAC_i]); };
        }
      }

      { { free (SACp_pinl_48039__emal_43686__pinl_12139__flat_366); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48039__emal_43686__pinl_12139__flat_366__desc) & (-1 ^ (3))))); } } }
            if (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__dim != SACp_pinl_48038__emal_43685__pinl_12138__flat_365__dim) {
        SACp_pinl_48037__emal_43684__pinl_12164__icc_5079_pred = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_pinl_48070__emal_43717__pinl_11569__icc_7626""' with shape %s ""And `" "SACp_pinl_48038__emal_43685__pinl_12138__flat_365""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc), SAC_PrintShape (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc));
      }
      else {
        int SAC_all = 1; if (0 || (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__shp0 != SACp_pinl_48038__emal_43685__pinl_12138__flat_365__shp0))
        {

          SAC_all = 0;
          SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_pinl_48070__emal_43717__pinl_11569__icc_7626""' with shape %s ""And `" "SACp_pinl_48038__emal_43685__pinl_12138__flat_365""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc), SAC_PrintShape (SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc));
        }
        SACp_pinl_48037__emal_43684__pinl_12164__icc_5079_pred = SAC_all;
      }

      if (!SACp_pinl_48037__emal_43684__pinl_12164__icc_5079_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _eq_VxV_ guard failed"); }
      { { if (!((1 == SACp_pinl_48036__emal_43683__ctz_21817__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48036__emal_43683__ctz_21817"); }; { if ((((6 + (SACp_pinl_48036__emal_43683__ctz_21817__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48036__emal_43683__ctz_21817__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48036__emal_43683__ctz_21817__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48036__emal_43683__ctz_21817__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48036__emal_43683__ctz_21817__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48036__emal_43683__ctz_21817__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48036__emal_43683__ctz_21817__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48036__emal_43683__ctz_21817__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48036__emal_43683__ctz_21817__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48036__emal_43683__ctz_21817__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48036__emal_43683__ctz_21817__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48036__emal_43683__ctz_21817__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48036__emal_43683__ctz_21817__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48036__emal_43683__ctz_21817__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48036__emal_43683__ctz_21817__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48036__emal_43683__ctz_21817__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48036__emal_43683__ctz_21817__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48036__emal_43683__ctz_21817__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48036__emal_43683__ctz_21817__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48036__emal_43683__ctz_21817__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48036__emal_43683__ctz_21817__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48036__emal_43683__ctz_21817__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48036__emal_43683__ctz_21817__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48038__emal_43685__pinl_12138__flat_365__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48036__emal_43683__ctz_21817__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48036__emal_43683__ctz_21817__sz = SAC_size * SACp_pinl_48038__emal_43685__pinl_12138__flat_365__sz;
        if (!((SACp_pinl_48036__emal_43683__ctz_21817__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 20026 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 20026 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 20026 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 20026 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 20026 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 20026 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 20026 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 20026, __extension__ __PRETTY_FUNCTION__); }))
# 20026 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48036__emal_43683__ctz_21817 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48036__emal_43683__ctz_21817__sz * sizeof (*SACp_pinl_48036__emal_43683__ctz_21817)); break; case SAC_HM_multi_threaded: SACp_pinl_48036__emal_43683__ctz_21817 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48036__emal_43683__ctz_21817__sz * sizeof (*SACp_pinl_48036__emal_43683__ctz_21817), 0); break; case SAC_HM_any_threaded: SACp_pinl_48036__emal_43683__ctz_21817 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48036__emal_43683__ctz_21817__sz * sizeof (*SACp_pinl_48036__emal_43683__ctz_21817), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48036__emal_43683__ctz_21817__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48036__emal_43683__ctz_21817__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48036__emal_43683__ctz_21817__desc) & (-1 ^ (3))))[1]) = 0; } }
      ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_pinl_48036__emal_43683__ctz_21817__sz; SAC_i++) { { SACp_pinl_48036__emal_43683__ctz_21817[SAC_i] = (( SACp_pinl_48070__emal_43717__pinl_11569__icc_7626[SAC_i])) - (( SACp_pinl_48038__emal_43685__pinl_12138__flat_365[SAC_i])); }; } }
      { { free (SACp_pinl_48038__emal_43685__pinl_12138__flat_365); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48038__emal_43685__pinl_12138__flat_365__desc) & (-1 ^ (3))))); } } }
      { { free (SACp_pinl_48070__emal_43717__pinl_11569__icc_7626); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48070__emal_43717__pinl_11569__icc_7626__desc) & (-1 ^ (3))))); } } }
      { { if (!((1 == SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48035__emal_43682__pinl_12124__icc_5082"); }; { if ((((6 + (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48036__emal_43683__ctz_21817__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__sz = SAC_size * SACp_pinl_48036__emal_43683__ctz_21817__sz;
        if (!((SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 20044 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 20044 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 20044 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 20044 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 20044 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 20044 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 20044 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 20044, __extension__ __PRETTY_FUNCTION__); }))
# 20044 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48035__emal_43682__pinl_12124__icc_5082 = (
# 20044 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 20044 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__sz * sizeof (*SACp_pinl_48035__emal_43682__pinl_12124__icc_5082)); break; case SAC_HM_multi_threaded: SACp_pinl_48035__emal_43682__pinl_12124__icc_5082 = (
# 20044 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 20044 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__sz * sizeof (*SACp_pinl_48035__emal_43682__pinl_12124__icc_5082), 0); break; case SAC_HM_any_threaded: SACp_pinl_48035__emal_43682__pinl_12124__icc_5082 = (
# 20044 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 20044 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__sz * sizeof (*SACp_pinl_48035__emal_43682__pinl_12124__icc_5082), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc) & (-1 ^ (3))))[1]) = 0; } }
      ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__sz; SAC_i++) { { SACp_pinl_48035__emal_43682__pinl_12124__icc_5082[SAC_i] = (( SACp_pinl_48036__emal_43683__ctz_21817[SAC_i])) == (0); }; } }
      { { free (SACp_pinl_48036__emal_43683__ctz_21817); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48036__emal_43683__ctz_21817__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_48037__emal_43684__pinl_12164__icc_5079_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _eq_VxV_ guard failed"); }
      { ; ; }
      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__sz; SAC_i++) { if (( SACp_pinl_48035__emal_43682__pinl_12124__icc_5082[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_pinl_48034__emal_43681__pinl_12136__flat_363 = SAC_all; }
      { { free (SACp_pinl_48035__emal_43682__pinl_12124__icc_5082); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48035__emal_43682__pinl_12124__icc_5082__desc) & (-1 ^ (3))))); } } }
      if (SACp_pinl_48034__emal_43681__pinl_12136__flat_363)
      {
        { ; ; }



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47866__hce_47 = SACp_pinl_47865__hce_48; }

      }
      else
      {
        ;
        { ; ; }
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `d:shp' in return value does not match argument shp"); SACp_pinl_48194__emal_43838__hce_47__SSA0_1 = 0;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47866__hce_47 = SACp_pinl_48194__emal_43838__hce_47__SSA0_1; }

      }
      ; ; { SACp_emal_43675__isaa_31742_a = (SACp_emal_43675__isaa_31742_a) - (SACp_pinl_48049__emal_43696__isaa_31778__pinl_12110__rtpf_27_res); };
      { ; ; }
      ; ; { SACp_emal_43675__isaa_31742_a = (SACp_emal_43675__isaa_31742_a) + (SACp_pinl_48081__emal_43728__pinl_11656__wlbsc_9831_sc_e); };
      { ; ; }
      ; ; { SACp_pinl_48031__emal_43678__pinl_12141__flat_370 = (SACp_emal_43675__isaa_31742_a) == (0); };
      { ; ; }
      if (SACp_pinl_48031__emal_43678__pinl_12141__flat_370)
      {
        { ; ; }



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47867__hce_46 = SACp_pinl_47866__hce_47; }

      }
      else
      {
        ;
        { ; ; }
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `d:shp' in return value does not match feature `d' in shp"); SACp_pinl_48196__emal_43837__hce_46__SSA0_1 = 0;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47867__hce_46 = SACp_pinl_48196__emal_43837__hce_46__SSA0_1; }

      }
      if (!SACp_pinl_47867__hce_46) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Type pattern post-condition of genarrayI failed"); }
      ;



      SACl_b__SSA0_1__desc = SACl_b__desc;
      SACl_b__SSA0_1__sz = SACl_b__sz;
      SACl_b__SSA0_1__dim = SACl_b__dim;
      ;
      { SACl_b__SSA0_1 = SACl_b; }

    }
    else
    {
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_emal_43674__isaa_31743_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))); } } } } else { } }
      ;
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_emal_43676__isaa_31740_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))); } } } } else { } }
      { { { if (((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, ((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)); } else { if (SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, ((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, ((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, ((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)); } else { if (((((SACp_emal_43670__isaa_31749_rshp__sz * sizeof (*SACp_emal_43670__isaa_31749_rshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, ((((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43670__isaa_31749_rshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43670__isaa_31749_rshp__desc) & (-1 ^ (3))))); } } }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ScalarArith.sac", 101, 127, "Assignment with incompatible types found"); };
      ;

      }
      ; { SACp_pinl_48182__emal_43829__pinl_12374__flat_971 = -(SACp_emal_43668__pinl_11544__flat_964); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1747, "Assignment with incompatible types found"); };
      ;

      }
      { { SACp_pinl_48181__emal_43828__pinl_12398__flat_1140 = 0; }; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1817, "Assignment with incompatible types found"); };
      ;

      }
      { { SACp_pinl_48180__emal_43827__pinl_12419__icc_7586_pred = 
# 20158 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 20158 "/home/rubenhensen/sac/a.out.c"
     ; }; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1896, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48179__emal_43826__pinl_21959__icc_8952 = ( SACp_emal_43672__isaa_31746_lshp[SACp_pinl_48181__emal_43828__pinl_12398__flat_1140]); }

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1988, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_pinl_48178__emal_43825__pinl_21970_val__SSA0_1 = (SACp_emal_43668__pinl_11544__flat_964) - (SACp_pinl_48179__emal_43826__pinl_21959__icc_8952); };
      ; ; { SACp_pinl_48178__emal_43825__pinl_21970_val__SSA0_1 = (0) > (SACp_pinl_48178__emal_43825__pinl_21970_val__SSA0_1) ? (0) : (SACp_pinl_48178__emal_43825__pinl_21970_val__SSA0_1); };
      ; ; { SACp_pinl_48176__emal_43823__pinl_21966__flat_1150 = (SACp_pinl_48182__emal_43829__pinl_12374__flat_971) >= (0); };
      { if (SACp_pinl_48176__emal_43823__pinl_21966__flat_1150) { SACp_pinl_48175__emal_43822__pinl_21972_val__SSA0_3 = SACp_pinl_48181__emal_43828__pinl_12398__flat_1140; } else { SACp_pinl_48175__emal_43822__pinl_21972_val__SSA0_3 = SACp_pinl_48178__emal_43825__pinl_21970_val__SSA0_1; } }
      { ; ; }
      ; ; { SACp_emal_43668__pinl_11544__flat_964 = (SACp_pinl_48179__emal_43826__pinl_21959__icc_8952) - (SACp_emal_43668__pinl_11544__flat_964); };
      ; ; { SACp_emal_43668__pinl_11544__flat_964 = (0) > (SACp_emal_43668__pinl_11544__flat_964) ? (0) : (SACp_emal_43668__pinl_11544__flat_964); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2177, "Assignment with incompatible types found"); };
      ;

      }
      { if (SACp_pinl_48176__emal_43823__pinl_21966__flat_1150) { SACp_pinl_48172__emal_43819__pinl_21975_val__SSA0_5 = SACp_pinl_48181__emal_43828__pinl_12398__flat_1140; } else { SACp_pinl_48172__emal_43819__pinl_21975_val__SSA0_5 = SACp_emal_43668__pinl_11544__flat_964; } }
      { ; ; }
      { ; ; }
      if (SACp_pinl_48175__emal_43822__pinl_21972_val__SSA0_3 >= 0) { { SACp_pinl_48171__emal_43818__uprf_21803 = SACp_pinl_48175__emal_43822__pinl_21972_val__SSA0_3; }; SACp_pinl_48171__emal_43818__uprf_21803 = 1; } else { SACp_pinl_48171__emal_43818__uprf_21803 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48175__emal_43822__pinl_21972_val__SSA0_3"); }
      ; { SACp_pinl_48182__emal_43829__pinl_12374__flat_971 = ((SACp_pinl_48182__emal_43829__pinl_12374__flat_971) < 0) ? -(SACp_pinl_48182__emal_43829__pinl_12374__flat_971) : (SACp_pinl_48182__emal_43829__pinl_12374__flat_971); };
      if (SACp_pinl_48175__emal_43822__pinl_21972_val__SSA0_3 <= SACp_pinl_48182__emal_43829__pinl_12374__flat_971) { SACp_pinl_48169__emal_43816__uprf_21794 = 1; } else { SACp_pinl_48169__emal_43816__uprf_21794 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Scalar constraint `" "SACp_pinl_48175__emal_43822__pinl_21972_val__SSA0_3" " (" "%d" ") <= " "SACp_pinl_48182__emal_43829__pinl_12374__flat_971" " (" "%d" ")" "' violated", SACp_pinl_48175__emal_43822__pinl_21972_val__SSA0_3, SACp_pinl_48182__emal_43829__pinl_12374__flat_971); }
      { { if (!((1 == SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48168__emal_43815__pinl_12437__idc_7637"); }; { { if ((((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637)) + ((6 + (SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637)) + ((6 + (SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637)) + ((6 + (SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48168__emal_43815__pinl_12437__idc_7637 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48168__emal_43815__pinl_12437__idc_7637 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637)) + ((6 + (SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48168__emal_43815__pinl_12437__idc_7637 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48168__emal_43815__pinl_12437__idc_7637 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637)) + ((6 + (SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637)) + ((6 + (SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637)) + ((6 + (SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637)) + ((6 + (SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637)) + ((6 + (SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48168__emal_43815__pinl_12437__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48168__emal_43815__pinl_12437__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48168__emal_43815__pinl_12437__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48168__emal_43815__pinl_12437__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637, SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637), ((6 + (SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48168__emal_43815__pinl_12437__idc_7637[0] = SACp_pinl_48175__emal_43822__pinl_21972_val__SSA0_3; }

      if (SACp_pinl_48182__emal_43829__pinl_12374__flat_971 >= 0) { { SACp_pinl_48167__emal_43814__uprf_21786 = SACp_pinl_48182__emal_43829__pinl_12374__flat_971; }; SACp_pinl_48167__emal_43814__uprf_21786 = 1; } else { SACp_pinl_48167__emal_43814__uprf_21786 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48182__emal_43829__pinl_12374__flat_971"); }
      { { if (!((1 == SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48166__emal_43813__pinl_12439__idc_7638"); }; { { if ((((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638)) + ((6 + (SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638)) + ((6 + (SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638)) + ((6 + (SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48166__emal_43813__pinl_12439__idc_7638 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48166__emal_43813__pinl_12439__idc_7638 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638)) + ((6 + (SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48166__emal_43813__pinl_12439__idc_7638 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48166__emal_43813__pinl_12439__idc_7638 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638)) + ((6 + (SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638)) + ((6 + (SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638)) + ((6 + (SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638)) + ((6 + (SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638)) + ((6 + (SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48166__emal_43813__pinl_12439__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48166__emal_43813__pinl_12439__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48166__emal_43813__pinl_12439__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48166__emal_43813__pinl_12439__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638, SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638), ((6 + (SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48166__emal_43813__pinl_12439__idc_7638[0] = SACp_pinl_48182__emal_43829__pinl_12374__flat_971; }

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2297, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_pinl_48165__emal_43812__uprf_21781 = (SACp_pinl_48179__emal_43826__pinl_21959__icc_8952) < (SACp_pinl_48182__emal_43829__pinl_12374__flat_971) ? (SACp_pinl_48179__emal_43826__pinl_21959__icc_8952) : (SACp_pinl_48182__emal_43829__pinl_12374__flat_971); };
      ; ; { SACp_pinl_48165__emal_43812__uprf_21781 = (SACp_pinl_48165__emal_43812__uprf_21781) + (SACp_pinl_48175__emal_43822__pinl_21972_val__SSA0_3); };
      { ; ; }
      if (SACp_pinl_48165__emal_43812__uprf_21781 >= 0) { { SACp_pinl_48163__emal_43810__uprf_21770 = SACp_pinl_48165__emal_43812__uprf_21781; }; SACp_pinl_48163__emal_43810__uprf_21770 = 1; } else { SACp_pinl_48163__emal_43810__uprf_21770 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48165__emal_43812__uprf_21781"); }
      if (SACp_pinl_48165__emal_43812__uprf_21781 <= SACp_pinl_48182__emal_43829__pinl_12374__flat_971) { SACp_pinl_48162__emal_43809__uprf_21764 = 1; } else { SACp_pinl_48162__emal_43809__uprf_21764 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Scalar constraint `" "SACp_pinl_48165__emal_43812__uprf_21781" " (" "%d" ") <= " "SACp_pinl_48182__emal_43829__pinl_12374__flat_971" " (" "%d" ")" "' violated", SACp_pinl_48165__emal_43812__uprf_21781, SACp_pinl_48182__emal_43829__pinl_12374__flat_971); }
      { ; ; }
      { { if (!((1 == SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48161__emal_43808__pinl_12449__idc_7644"); }; { { if ((((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644)) + ((6 + (SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644)) + ((6 + (SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644)) + ((6 + (SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48161__emal_43808__pinl_12449__idc_7644 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48161__emal_43808__pinl_12449__idc_7644 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644)) + ((6 + (SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48161__emal_43808__pinl_12449__idc_7644 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48161__emal_43808__pinl_12449__idc_7644 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644)) + ((6 + (SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644)) + ((6 + (SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644)) + ((6 + (SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644)) + ((6 + (SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644)) + ((6 + (SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48161__emal_43808__pinl_12449__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48161__emal_43808__pinl_12449__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48161__emal_43808__pinl_12449__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48161__emal_43808__pinl_12449__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644, SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644), ((6 + (SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2321, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2321, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48161__emal_43808__pinl_12449__idc_7644[0] = SACp_pinl_48165__emal_43812__uprf_21781; }

      { ; ; }
      if (!SACp_pinl_48167__emal_43814__uprf_21786) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48162__emal_43809__uprf_21764) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48169__emal_43816__uprf_21794) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48163__emal_43810__uprf_21770) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48171__emal_43818__uprf_21803) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48160__emal_43807__pinl_21327__icc_6985 = ( SACp_pinl_48168__emal_43815__pinl_12437__idc_7637[SACp_pinl_48181__emal_43828__pinl_12398__flat_1140]); }

      { { { if (((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637) - 1)->data1.arena)); } else { if (SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637) - 1)->data1.arena)); } else { if (((((SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__sz * sizeof (*SACp_pinl_48168__emal_43815__pinl_12437__idc_7637))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48168__emal_43815__pinl_12437__idc_7637__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48159__emal_43806__pinl_21330__icc_6991 = ( SACp_pinl_48161__emal_43808__pinl_12449__idc_7644[SACp_pinl_48181__emal_43828__pinl_12398__flat_1140]); }

      { { { if (((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644) - 1)->data1.arena)); } else { if (SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644) - 1)->data1.arena)); } else { if (((((SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__sz * sizeof (*SACp_pinl_48161__emal_43808__pinl_12449__idc_7644))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48161__emal_43808__pinl_12449__idc_7644__desc) & (-1 ^ (3))))); } } }
      ; ; { SACp_pinl_48158__emal_43805__pinl_21385_res = (SACp_pinl_48160__emal_43807__pinl_21327__icc_6985) > (SACp_pinl_48159__emal_43806__pinl_21330__icc_6991) ? (SACp_pinl_48160__emal_43807__pinl_21327__icc_6985) : (SACp_pinl_48159__emal_43806__pinl_21330__icc_6991); };



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e = ( SACp_pinl_48166__emal_43813__pinl_12439__idc_7638[SACp_pinl_48181__emal_43828__pinl_12398__flat_1140]); }

      { { { if (((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638) - 1)->data1.arena)); } else { if (SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638) - 1)->data1.arena)); } else { if (((((SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__sz * sizeof (*SACp_pinl_48166__emal_43813__pinl_12439__idc_7638))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48166__emal_43813__pinl_12439__idc_7638__desc) & (-1 ^ (3))))); } } }
      { { if (!((1 == SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound"); }; { { if ((((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound)) + ((6 + (SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound, SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound), ((6 + (SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound[0] = SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e; }

      ; ; { SACp_pinl_48172__emal_43819__pinl_21975_val__SSA0_5 = (SACp_pinl_48172__emal_43819__pinl_21975_val__SSA0_5) - (SACp_pinl_48160__emal_43807__pinl_21327__icc_6985); };
      { { if (!((1 == SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48146__emal_43793__pinl_12397__icc_7626"); }; { if ((((6 + (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__sz = SAC_size;
        if (!((SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 20313 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 20313 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 20313 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 20313 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 20313 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 20313 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 20313 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 20313, __extension__ __PRETTY_FUNCTION__); }))
# 20313 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48146__emal_43793__pinl_12397__icc_7626 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__sz * sizeof (*SACp_pinl_48146__emal_43793__pinl_12397__icc_7626)); break; case SAC_HM_multi_threaded: SACp_pinl_48146__emal_43793__pinl_12397__icc_7626 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__sz * sizeof (*SACp_pinl_48146__emal_43793__pinl_12397__icc_7626), 0); break; case SAC_HM_any_threaded: SACp_pinl_48146__emal_43793__pinl_12397__icc_7626 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__sz * sizeof (*SACp_pinl_48146__emal_43793__pinl_12397__icc_7626), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626_shpfac0;




        {
          int SAC_i;
          SAC_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626_shpfac0 = 1;
        }




        SAC_schedule_start0 = SACp_pinl_48158__emal_43805__pinl_21385_res;
        SAC_schedule_stop0 = SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e;




        SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_47932__eat_446 = SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e; for (SACp_pinl_47932__eat_446 = SACp_pinl_48158__emal_43805__pinl_21385_res; SACp_pinl_47932__eat_446 < SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e;) {
       



        if (!((0 == (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim - SACp_pinl_47931_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal size found!"); };
        { SACp_pinl_48146__emal_43793__pinl_12397__icc_7626[SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626] = SACp_pinl_48181__emal_43828__pinl_12398__flat_1140; };

        SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626 = SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626 + 1;
        SACp_pinl_47932__eat_446 = SACp_pinl_47932__eat_446 + 1;
        } }
# 20383 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_48160__emal_43807__pinl_21327__icc_6985;




        SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_47932__eat_446 = SACp_pinl_48160__emal_43807__pinl_21327__icc_6985; for (SACp_pinl_47932__eat_446 = 0; SACp_pinl_47932__eat_446 < SACp_pinl_48160__emal_43807__pinl_21327__icc_6985;) {
       



        if (!((0 == (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim - SACp_pinl_47931_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal size found!"); };
        { SACp_pinl_48146__emal_43793__pinl_12397__icc_7626[SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626] = SACp_pinl_48181__emal_43828__pinl_12398__flat_1140; };

        SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626 = SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626 + 1;
        SACp_pinl_47932__eat_446 = SACp_pinl_47932__eat_446 + 1;
        } }
# 20412 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_pinl_48160__emal_43807__pinl_21327__icc_6985;
        SAC_schedule_stop0 = SACp_pinl_48159__emal_43806__pinl_21330__icc_6991;




        SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_47932__eat_446 = SACp_pinl_48159__emal_43806__pinl_21330__icc_6991; for (SACp_pinl_47932__eat_446 = SACp_pinl_48160__emal_43807__pinl_21327__icc_6985; SACp_pinl_47932__eat_446 < SACp_pinl_48159__emal_43806__pinl_21330__icc_6991;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_48152__emal_43799__uprf_21752 = (SACp_pinl_47932__eat_446) + (SACp_pinl_48172__emal_43819__pinl_21975_val__SSA0_5); };
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_48152__emal_43799__uprf_21752 >= 0) { { SACp_pinl_48151__emal_43798__uprf_21746 = SACp_pinl_48152__emal_43799__uprf_21752; }; SACp_pinl_48151__emal_43798__uprf_21746 = 1; } else { SACp_pinl_48151__emal_43798__uprf_21746 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48152__emal_43799__uprf_21752"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_48152__emal_43799__uprf_21752 < SACp_pinl_48179__emal_43826__pinl_21959__icc_8952) { SACp_pinl_48150__emal_43797__uprf_21740 = 1; } else { SACp_pinl_48150__emal_43797__uprf_21740 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Scalar constraint `" "SACp_pinl_48152__emal_43799__uprf_21752" " (" "%d" ") < " "SACp_pinl_48179__emal_43826__pinl_21959__icc_8952" " (" "%d" ")" "' violated", SACp_pinl_48152__emal_43799__uprf_21752, SACp_pinl_48179__emal_43826__pinl_21959__icc_8952); }
        { { if (!((1 == SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48149__emal_43796__pinl_12458__idc_7649"); }; { { if ((((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649)) + ((6 + (SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649)) + ((6 + (SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649)) + ((6 + (SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48149__emal_43796__pinl_12458__idc_7649 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48149__emal_43796__pinl_12458__idc_7649 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649)) + ((6 + (SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48149__emal_43796__pinl_12458__idc_7649 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48149__emal_43796__pinl_12458__idc_7649 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649)) + ((6 + (SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649)) + ((6 + (SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649)) + ((6 + (SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649)) + ((6 + (SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649)) + ((6 + (SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48149__emal_43796__pinl_12458__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48149__emal_43796__pinl_12458__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48149__emal_43796__pinl_12458__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48149__emal_43796__pinl_12458__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649, SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649), ((6 + (SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_48149__emal_43796__pinl_12458__idc_7649[0] = SACp_pinl_48152__emal_43799__uprf_21752; }

        { ; ; }
        if (!SACp_pinl_48150__emal_43797__uprf_21740) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48151__emal_43798__uprf_21746) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_48148__emal_43795__ivesli_42501 = ( SACp_pinl_48149__emal_43796__pinl_12458__idc_7649[0]);

        { { { if (((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649) - 1)->data1.arena)); } else { if (SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649) - 1)->data1.arena)); } else { if (((((SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__sz * sizeof (*SACp_pinl_48149__emal_43796__pinl_12458__idc_7649))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48149__emal_43796__pinl_12458__idc_7649__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_48147__emal_43794__pinl_12392__icc_7620 = ( SACp_emal_43674__isaa_31743_a[SACp_pinl_48148__emal_43795__ivesli_42501]); }

        { ; ; }
        if (!SACp_pinl_48150__emal_43797__uprf_21740) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48151__emal_43798__uprf_21746) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }



        if (!((0 == (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim - SACp_pinl_47931_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal size found!"); };
        { SACp_pinl_48146__emal_43793__pinl_12397__icc_7626[SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626] = SACp_pinl_48147__emal_43794__pinl_12392__icc_7620; };

        { ; ; }
        SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626 = SACp_pinl_48021__wlidx_42339__pinl_12397__icc_7626 + 1;
        SACp_pinl_47932__eat_446 = SACp_pinl_47932__eat_446 + 1;
        } }
# 20520 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48559_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_emal_43674__isaa_31743_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43674__isaa_31743_a__desc) & (-1 ^ (3))))); } } } } else { } }
      { { { if (((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, ((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)); } else { if (SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, ((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, ((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, ((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)); } else { if (((((SACp_emal_43672__isaa_31746_lshp__sz * sizeof (*SACp_emal_43672__isaa_31746_lshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, ((((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43672__isaa_31746_lshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43672__isaa_31746_lshp__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_48167__emal_43814__uprf_21786) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48162__emal_43809__uprf_21764) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48169__emal_43816__uprf_21794) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48163__emal_43810__uprf_21770) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48171__emal_43818__uprf_21803) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      if (SACp_pinl_48181__emal_43828__pinl_12398__flat_1140 <= SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e) { SACp_pinl_48145__emal_43792__uprf_21719 = 1; } else { SACp_pinl_48145__emal_43792__uprf_21719 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10596, "Scalar constraint `" "SACp_pinl_48181__emal_43828__pinl_12398__flat_1140" " (" "%d" ") <= " "SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e" " (" "%d" ")" "' violated", SACp_pinl_48181__emal_43828__pinl_12398__flat_1140, SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e); }
      { { SACp_pinl_48144__emal_43791__uprf_21718 = SACp_pinl_48181__emal_43828__pinl_12398__flat_1140; } }
      { { if (!((1 == SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48143__emal_43790__pinl_12714__idc_7901"); }; { { if ((((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901)) + ((6 + (SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901)) + ((6 + (SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901)) + ((6 + (SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48143__emal_43790__pinl_12714__idc_7901 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48143__emal_43790__pinl_12714__idc_7901 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901)) + ((6 + (SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48143__emal_43790__pinl_12714__idc_7901 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48143__emal_43790__pinl_12714__idc_7901 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901)) + ((6 + (SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901)) + ((6 + (SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901)) + ((6 + (SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901)) + ((6 + (SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901)) + ((6 + (SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48143__emal_43790__pinl_12714__idc_7901 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48143__emal_43790__pinl_12714__idc_7901 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48143__emal_43790__pinl_12714__idc_7901 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48143__emal_43790__pinl_12714__idc_7901 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901, SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901), ((6 + (SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10542, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10542, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48143__emal_43790__pinl_12714__idc_7901[0] = SACp_pinl_48144__emal_43791__uprf_21718; }

      { ; ; }
      if (!SACp_pinl_48145__emal_43792__uprf_21719) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10533, "With-loop guard failed"); }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48142__emal_43789__pinl_21388__icc_6985 = ( SACp_pinl_48143__emal_43790__pinl_12714__idc_7901[SACp_pinl_48181__emal_43828__pinl_12398__flat_1140]); }

      { { { if (((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901, ((((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901) - 1)->data1.arena)); } else { if (SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901, ((((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901, ((((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901, ((((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901) - 1)->data1.arena)); } else { if (((((SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__sz * sizeof (*SACp_pinl_48143__emal_43790__pinl_12714__idc_7901))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901, ((((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48143__emal_43790__pinl_12714__idc_7901__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48141__emal_43788__pinl_21391__icc_6991 = ( SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound[SACp_pinl_48181__emal_43828__pinl_12398__flat_1140]); }

      { { { if (((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound, ((((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound) - 1)->data1.arena)); } else { if (SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound, ((((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound, ((((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound, ((((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound) - 1)->data1.arena)); } else { if (((((SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__sz * sizeof (*SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound, ((((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48156__emal_43803__pinl_12485__wlbsc_9832_sc_bound__desc) & (-1 ^ (3))))); } } }
      { ; ; }
      { { if (!((1 == SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48132__emal_43779__pinl_12687__icc_7892"); }; { if ((((6 + (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10527, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48141__emal_43788__pinl_21391__icc_6991;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__sz = SAC_size;
        if (!((SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10527, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 20593 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 20593 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 20593 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 20593 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 20593 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 20593 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 20593 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 20593, __extension__ __PRETTY_FUNCTION__); }))
# 20593 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48132__emal_43779__pinl_12687__icc_7892 = (
# 20593 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 20593 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__sz * sizeof (*SACp_pinl_48132__emal_43779__pinl_12687__icc_7892)); break; case SAC_HM_multi_threaded: SACp_pinl_48132__emal_43779__pinl_12687__icc_7892 = (
# 20593 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 20593 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__sz * sizeof (*SACp_pinl_48132__emal_43779__pinl_12687__icc_7892), 0); break; case SAC_HM_any_threaded: SACp_pinl_48132__emal_43779__pinl_12687__icc_7892 = (
# 20593 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 20593 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__sz * sizeof (*SACp_pinl_48132__emal_43779__pinl_12687__icc_7892), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10527, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10527, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_pinl_48132__emal_43779__pinl_12687__icc_7892_shpfac0;




        {
          int SAC_i;
          SAC_SACp_pinl_48132__emal_43779__pinl_12687__icc_7892_shpfac0 = 1;
        }




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_48142__emal_43789__pinl_21388__icc_6985;




        SACp_pinl_48022__wlidx_42340__pinl_12687__icc_7892
          = SAC_schedule_start0 * SAC_SACp_pinl_48132__emal_43779__pinl_12687__icc_7892_shpfac0;

        { int SAC_stop_SACp_pinl_47925__eat_450 = SACp_pinl_48142__emal_43789__pinl_21388__icc_6985; for (SACp_pinl_47925__eat_450 = 0; SACp_pinl_47925__eat_450 < SACp_pinl_48142__emal_43789__pinl_21388__icc_6985;) {
       



        if (!((0 == (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim - SACp_pinl_47924_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10542, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48132__emal_43779__pinl_12687__icc_7892_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10542, "WL expression with illegal size found!"); };
        { SACp_pinl_48132__emal_43779__pinl_12687__icc_7892[SACp_pinl_48022__wlidx_42340__pinl_12687__icc_7892] = SACp_pinl_48180__emal_43827__pinl_12419__icc_7586_pred; };

        SACp_pinl_48022__wlidx_42340__pinl_12687__icc_7892 = SACp_pinl_48022__wlidx_42340__pinl_12687__icc_7892 + 1;
        SACp_pinl_47925__eat_450 = SACp_pinl_47925__eat_450 + 1;
        } }
# 20663 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_pinl_48142__emal_43789__pinl_21388__icc_6985;
        SAC_schedule_stop0 = SACp_pinl_48141__emal_43788__pinl_21391__icc_6991;




        SACp_pinl_48022__wlidx_42340__pinl_12687__icc_7892
          = SAC_schedule_start0 * SAC_SACp_pinl_48132__emal_43779__pinl_12687__icc_7892_shpfac0;

        { int SAC_stop_SACp_pinl_47925__eat_450 = SACp_pinl_48141__emal_43788__pinl_21391__icc_6991; for (SACp_pinl_47925__eat_450 = SACp_pinl_48142__emal_43789__pinl_21388__icc_6985; SACp_pinl_47925__eat_450 < SACp_pinl_48141__emal_43788__pinl_21391__icc_6991;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47925__eat_450 >= 0) { { SACp_pinl_48138__emal_43785__uprf_21711 = SACp_pinl_47925__eat_450; }; SACp_pinl_48138__emal_43785__uprf_21711 = 1; } else { SACp_pinl_48138__emal_43785__uprf_21711 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47925__eat_450"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47925__eat_450 < SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e) { SACp_pinl_48137__emal_43784__uprf_21705 = 1; } else { SACp_pinl_48137__emal_43784__uprf_21705 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Scalar constraint `" "SACp_pinl_47925__eat_450" " (" "%d" ") < " "SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e" " (" "%d" ")" "' violated", SACp_pinl_47925__eat_450, SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e); }
        { { if (!((1 == SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48136__emal_43783__pinl_12720__idc_7904"); }; { { if ((((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904)) + ((6 + (SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904)) + ((6 + (SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904)) + ((6 + (SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48136__emal_43783__pinl_12720__idc_7904 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48136__emal_43783__pinl_12720__idc_7904 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904)) + ((6 + (SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48136__emal_43783__pinl_12720__idc_7904 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48136__emal_43783__pinl_12720__idc_7904 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904)) + ((6 + (SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904)) + ((6 + (SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904)) + ((6 + (SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904)) + ((6 + (SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904)) + ((6 + (SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48136__emal_43783__pinl_12720__idc_7904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48136__emal_43783__pinl_12720__idc_7904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48136__emal_43783__pinl_12720__idc_7904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48136__emal_43783__pinl_12720__idc_7904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904, SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904), ((6 + (SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10547, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10547, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_48136__emal_43783__pinl_12720__idc_7904[0] = SACp_pinl_47925__eat_450; }

        if (!SACp_pinl_48137__emal_43784__uprf_21705) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48138__emal_43785__uprf_21711) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_48135__emal_43782__ivesli_42500 = ( SACp_pinl_48136__emal_43783__pinl_12720__idc_7904[0]);

        { { { if (((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904, ((((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904) - 1)->data1.arena)); } else { if (SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904, ((((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904, ((((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904, ((((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904) - 1)->data1.arena)); } else { if (((((SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__sz * sizeof (*SACp_pinl_48136__emal_43783__pinl_12720__idc_7904))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904, ((((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48136__emal_43783__pinl_12720__idc_7904__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_48134__emal_43781__pinl_12683__icc_7886 = ( SACp_pinl_48146__emal_43793__pinl_12397__icc_7626[SACp_pinl_48135__emal_43782__ivesli_42500]); }

        { ; ; }
        if (!SACp_pinl_48137__emal_43784__uprf_21705) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48138__emal_43785__uprf_21711) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10570, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10559, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_48133__emal_43780__pinl_12693__flat_4000 = (SACp_pinl_48134__emal_43781__pinl_12683__icc_7886) >= (0); };
        { ; ; }



        if (!((0 == (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__dim - SACp_pinl_47924_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48132__emal_43779__pinl_12687__icc_7892_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
        { SACp_pinl_48132__emal_43779__pinl_12687__icc_7892[SACp_pinl_48022__wlidx_42340__pinl_12687__icc_7892] = SACp_pinl_48133__emal_43780__pinl_12693__flat_4000; };

        { ; ; }
        SACp_pinl_48022__wlidx_42340__pinl_12687__icc_7892 = SACp_pinl_48022__wlidx_42340__pinl_12687__icc_7892 + 1;
        SACp_pinl_47925__eat_450 = SACp_pinl_47925__eat_450 + 1;
        } }
# 20771 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48560_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      if (!SACp_pinl_48145__emal_43792__uprf_21719) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 10533, "With-loop guard failed"); }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Assignment with incompatible types found"); };
      ;

      }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 241, 13, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_47914__icc_8067 = SACp_pinl_48180__emal_43827__pinl_12419__icc_7586_pred; }

     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_48141__emal_43788__pinl_21391__icc_6991;

        { int SAC_stop_SACp_pinl_47916__eat_453 = SACp_pinl_48141__emal_43788__pinl_21391__icc_6991; for (SACp_pinl_47916__eat_453 = 0; SACp_pinl_47916__eat_453 < SACp_pinl_48141__emal_43788__pinl_21391__icc_6991;) {
       
        ;
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47916__eat_453 >= 0) { { SACp_pinl_48131__emal_43778__uprf_21681 = SACp_pinl_47916__eat_453; }; SACp_pinl_48131__emal_43778__uprf_21681 = 1; } else { SACp_pinl_48131__emal_43778__uprf_21681 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Non-negativity constraint violated " "for scalar " "SACp_pinl_47916__eat_453"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_47916__eat_453 < SACp_pinl_48141__emal_43788__pinl_21391__icc_6991) { SACp_pinl_48130__emal_43777__uprf_21675 = 1; } else { SACp_pinl_48130__emal_43777__uprf_21675 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Scalar constraint `" "SACp_pinl_47916__eat_453" " (" "%d" ") < " "SACp_pinl_48141__emal_43788__pinl_21391__icc_6991" " (" "%d" ")" "' violated", SACp_pinl_47916__eat_453, SACp_pinl_48141__emal_43788__pinl_21391__icc_6991); }
        { { if (!((1 == SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48129__emal_43776__pinl_12629__idc_8060"); }; { { if ((((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060)) + ((6 + (SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060)) + ((6 + (SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060)) + ((6 + (SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48129__emal_43776__pinl_12629__idc_8060 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48129__emal_43776__pinl_12629__idc_8060 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060)) + ((6 + (SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48129__emal_43776__pinl_12629__idc_8060 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48129__emal_43776__pinl_12629__idc_8060 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060)) + ((6 + (SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060)) + ((6 + (SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060)) + ((6 + (SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060)) + ((6 + (SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060)) + ((6 + (SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48129__emal_43776__pinl_12629__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48129__emal_43776__pinl_12629__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48129__emal_43776__pinl_12629__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48129__emal_43776__pinl_12629__idc_8060 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060, SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060), ((6 + (SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_48129__emal_43776__pinl_12629__idc_8060[0] = SACp_pinl_47916__eat_453; }

        if (!SACp_pinl_48130__emal_43777__uprf_21675) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48131__emal_43778__uprf_21681) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_48128__emal_43775__ivesli_42499 = ( SACp_pinl_48129__emal_43776__pinl_12629__idc_8060[0]);

        { { { if (((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060) - 1)->data1.arena)); } else { if (SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060) - 1)->data1.arena)); } else { if (((((SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__sz * sizeof (*SACp_pinl_48129__emal_43776__pinl_12629__idc_8060))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060, ((((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48129__emal_43776__pinl_12629__idc_8060__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_48127__emal_43774__pinl_12586__icc_8039 = ( SACp_pinl_48132__emal_43779__pinl_12687__icc_7892[SACp_pinl_48128__emal_43775__ivesli_42499]); }

        { ; ; }
        if (!SACp_pinl_48130__emal_43777__uprf_21675) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48131__emal_43778__uprf_21681) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }
        ; ; { SACp_pinl_48127__emal_43774__pinl_12586__icc_8039 = (SACp_pinl_47914__icc_8067) & (SACp_pinl_48127__emal_43774__pinl_12586__icc_8039); };
        ;



        ;




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_48030__ufiv_43057__pinl_12580__flat_1128 = SACp_pinl_48127__emal_43774__pinl_12586__icc_8039; }




        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 43, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47914__icc_8067 = SACp_pinl_48030__ufiv_43057__pinl_12580__flat_1128; }




        ;


        SACp_pinl_47916__eat_453 = SACp_pinl_47916__eat_453 + 1;
        } }
# 20923 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48561_SAC_label:;
      { ; ; }
      { { free (SACp_pinl_48132__emal_43779__pinl_12687__icc_7892); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48132__emal_43779__pinl_12687__icc_7892__desc) & (-1 ^ (3))))); } } }
      { ; ; }
      if (SACp_pinl_47914__icc_8067)
      {
        ;
        { { SACp_pinl_48199__emal_43835__hce_44 = 
# 20933 "/home/rubenhensen/sac/a.out.c" 3 4
       1
# 20933 "/home/rubenhensen/sac/a.out.c"
       ; }; }



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47913__hce_44 = SACp_pinl_48199__emal_43835__hce_44; }

      }
      else
      {
        ;
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern pre-condition of genarrayI failed"); SACp_pinl_48200__emal_43836__hce_44__SSA0_1 = 0;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47913__hce_44 = SACp_pinl_48200__emal_43836__hce_44__SSA0_1; }

      }
      if (!SACp_pinl_47913__hce_44) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Type pattern post-condition of genarrayI failedType pattern pre-condition of genarrayI failedType pattern pre-condition of genarrayI failed"); }



      _tcp_48517_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc = SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc;
      _tcp_48517_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__sz = SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__sz;
      _tcp_48517_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim = SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim;
      (((SAC_array_descriptor_t) (((intptr_t)_tcp_48517_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc) & (-1 ^ (3))))[3]) = SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim;
      { _tcp_48517_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626 = SACp_pinl_48146__emal_43793__pinl_12397__icc_7626; }




      SACwf__MAIN___rtpf_25_impl_genarrayI__i_S__i_S (&SACl_b__SSA0_1, &SACl_b__SSA0_1__desc, _tcp_48517_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626, _tcp_48517_SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc, SACl_b, SACl_b__desc);




      SACl_b__SSA0_1__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__SSA0_1__desc) & (-1 ^ (3))))[4]);
      SACl_b__SSA0_1__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__SSA0_1__desc) & (-1 ^ (3))))[3]);

      { { SACp_pinl_48125__emal_43772__isaa_31839__pinl_12489__rtpf_27_res = SACl_b__SSA0_1__dim; }; }
      { { if (!((1 == SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res"); }; { if ((((6 + (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__SSA0_1__dim;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__sz = SAC_size;
        if (!((SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 20995 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 20995 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 20995 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 20995 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 20995 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 20995 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 20995 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 20995, __extension__ __PRETTY_FUNCTION__); }))
# 20995 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__sz * sizeof (*SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res)); break; case SAC_HM_multi_threaded: SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__sz * sizeof (*SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res), 0); break; case SAC_HM_any_threaded: SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__sz * sizeof (*SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc) & (-1 ^ (3))))[1]) = 0; } }



     
      for (int SAC_i = 0; SAC_i < SACl_b__SSA0_1__dim; SAC_i++) {
        { SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
      }

      if (!SACp_pinl_47913__hce_44) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Type pattern post-condition of genarrayI failedType pattern pre-condition of genarrayI failed"); }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_pinl_48123__emal_43770__esd_21858 = (SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e) - (SACp_pinl_48125__emal_43772__isaa_31839__pinl_12489__rtpf_27_res); };
      ; ; { SACp_pinl_48123__emal_43770__esd_21858 = (SACp_pinl_48123__emal_43770__esd_21858) + (SACp_emal_43677__isaa_31739_b); };
      ; ; { SACp_pinl_48121__emal_43768__pinl_12508__flat_356 = (SACp_pinl_48123__emal_43770__esd_21858) == (0); };
      { ; ; }
      if (SACp_pinl_48121__emal_43768__pinl_12508__flat_356)
      {
        { ; ; }
        { { SACp_pinl_48203__emal_43833__hce_49 = 
# 21021 "/home/rubenhensen/sac/a.out.c" 3 4
       1
# 21021 "/home/rubenhensen/sac/a.out.c"
       ; }; }



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47907__hce_49 = SACp_pinl_48203__emal_43833__hce_49; }

      }
      else
      {
        { ; ; }
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `v:vshp' in return value does not match feature `v' in data"); SACp_pinl_48204__emal_43834__hce_49__SSA0_1 = 0;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47907__hce_49 = SACp_pinl_48204__emal_43834__hce_49__SSA0_1; }

      }
      { { if (!((1 == SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48120__emal_43767__pinl_12513__flat_361"); }; { if ((((6 + (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc) & (-1 ^ (3))))[1]) = 0; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _take_SxV_ is not a scalar!"); };
      if (!((SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "2nd argument of _take_SxV_ is not a vector!"); };
      if (!((SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48120__emal_43767__pinl_12513__flat_361__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_43677__isaa_31739_b) < 0) ? (-(SACp_emal_43677__isaa_31739_b)) : (SACp_emal_43677__isaa_31739_b));
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48120__emal_43767__pinl_12513__flat_361__sz = SAC_size;
        if (!((SACp_pinl_48120__emal_43767__pinl_12513__flat_361__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21064 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 21064 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21064 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 21064 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21064 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 21064 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21064 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 21064, __extension__ __PRETTY_FUNCTION__); }))
# 21064 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48120__emal_43767__pinl_12513__flat_361 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__sz * sizeof (*SACp_pinl_48120__emal_43767__pinl_12513__flat_361)); break; case SAC_HM_multi_threaded: SACp_pinl_48120__emal_43767__pinl_12513__flat_361 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__sz * sizeof (*SACp_pinl_48120__emal_43767__pinl_12513__flat_361), 0); break; case SAC_HM_any_threaded: SACp_pinl_48120__emal_43767__pinl_12513__flat_361 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__sz * sizeof (*SACp_pinl_48120__emal_43767__pinl_12513__flat_361), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc) & (-1 ^ (3))))[1]) = 0; } }



     
      {
        int SAC_cnt, SAC_off;
        
# 21071 "/home/rubenhensen/sac/a.out.c" 3 4
       _Bool 
# 21071 "/home/rubenhensen/sac/a.out.c"
            SAC_cond;
        SAC_cnt = SACp_emal_43677__isaa_31739_b;
        SAC_cond = (SACp_emal_43677__isaa_31739_b < 0);
        if (SAC_cond) {
          SAC_cnt = - SAC_cnt;
          SAC_off = SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__sz - SAC_cnt;
        }
        else {
          SAC_off = 0;
        }
        if (!((SAC_cnt <= SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
        for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
          { SACp_pinl_48120__emal_43767__pinl_12513__flat_361[SAC_i] = ( SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res[SAC_off + SAC_i]); };
        }
      }

            if (SACp_emal_43676__isaa_31740_b__dim != SACp_pinl_48120__emal_43767__pinl_12513__flat_361__dim) {
        SACp_pinl_48119__emal_43766__pinl_12540__icc_5075_pred = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_emal_43676__isaa_31740_b""' with shape %s ""And `" "SACp_pinl_48120__emal_43767__pinl_12513__flat_361""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_43676__isaa_31740_b__desc), SAC_PrintShape (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc));
      }
      else {
        int SAC_all = 1; if (0 || (SACp_emal_43676__isaa_31740_b__shp0 != SACp_pinl_48120__emal_43767__pinl_12513__flat_361__shp0))
        {

          SAC_all = 0;
          SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_emal_43676__isaa_31740_b""' with shape %s ""And `" "SACp_pinl_48120__emal_43767__pinl_12513__flat_361""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_43676__isaa_31740_b__desc), SAC_PrintShape (SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc));
        }
        SACp_pinl_48119__emal_43766__pinl_12540__icc_5075_pred = SAC_all;
      }

      if (!SACp_pinl_48119__emal_43766__pinl_12540__icc_5075_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _eq_VxV_ guard failed"); }
      { { if (!((1 == SACp_pinl_48118__emal_43765__ctz_21827__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48118__emal_43765__ctz_21827"); }; { if ((((6 + (SACp_pinl_48118__emal_43765__ctz_21827__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48118__emal_43765__ctz_21827__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48118__emal_43765__ctz_21827__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48118__emal_43765__ctz_21827__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48118__emal_43765__ctz_21827__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48118__emal_43765__ctz_21827__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48118__emal_43765__ctz_21827__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48118__emal_43765__ctz_21827__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48118__emal_43765__ctz_21827__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48118__emal_43765__ctz_21827__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48118__emal_43765__ctz_21827__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48118__emal_43765__ctz_21827__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48118__emal_43765__ctz_21827__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48118__emal_43765__ctz_21827__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48118__emal_43765__ctz_21827__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48118__emal_43765__ctz_21827__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48118__emal_43765__ctz_21827__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48118__emal_43765__ctz_21827__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48118__emal_43765__ctz_21827__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48118__emal_43765__ctz_21827__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48118__emal_43765__ctz_21827__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48118__emal_43765__ctz_21827__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48118__emal_43765__ctz_21827__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48120__emal_43767__pinl_12513__flat_361__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48118__emal_43765__ctz_21827__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48118__emal_43765__ctz_21827__sz = SAC_size * SACp_pinl_48120__emal_43767__pinl_12513__flat_361__sz;
        if (!((SACp_pinl_48118__emal_43765__ctz_21827__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21116 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 21116 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21116 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 21116 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21116 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 21116 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21116 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 21116, __extension__ __PRETTY_FUNCTION__); }))
# 21116 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48118__emal_43765__ctz_21827 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48118__emal_43765__ctz_21827__sz * sizeof (*SACp_pinl_48118__emal_43765__ctz_21827)); break; case SAC_HM_multi_threaded: SACp_pinl_48118__emal_43765__ctz_21827 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48118__emal_43765__ctz_21827__sz * sizeof (*SACp_pinl_48118__emal_43765__ctz_21827), 0); break; case SAC_HM_any_threaded: SACp_pinl_48118__emal_43765__ctz_21827 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48118__emal_43765__ctz_21827__sz * sizeof (*SACp_pinl_48118__emal_43765__ctz_21827), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48118__emal_43765__ctz_21827__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48118__emal_43765__ctz_21827__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48118__emal_43765__ctz_21827__desc) & (-1 ^ (3))))[1]) = 0; } }
      ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_pinl_48118__emal_43765__ctz_21827__sz; SAC_i++) { { SACp_pinl_48118__emal_43765__ctz_21827[SAC_i] = (( SACp_emal_43676__isaa_31740_b[SAC_i])) - (( SACp_pinl_48120__emal_43767__pinl_12513__flat_361[SAC_i])); }; } }
      { { free (SACp_pinl_48120__emal_43767__pinl_12513__flat_361); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48120__emal_43767__pinl_12513__flat_361__desc) & (-1 ^ (3))))); } } }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_emal_43676__isaa_31740_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43676__isaa_31740_b__desc) & (-1 ^ (3))))); } } } } else { } }
      { { if (!((1 == SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48117__emal_43764__pinl_12500__icc_5078"); }; { if ((((6 + (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48118__emal_43765__ctz_21827__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__sz = SAC_size * SACp_pinl_48118__emal_43765__ctz_21827__sz;
        if (!((SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21134 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 21134 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21134 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 21134 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21134 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 21134 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21134 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 21134, __extension__ __PRETTY_FUNCTION__); }))
# 21134 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48117__emal_43764__pinl_12500__icc_5078 = (
# 21134 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 21134 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__sz * sizeof (*SACp_pinl_48117__emal_43764__pinl_12500__icc_5078)); break; case SAC_HM_multi_threaded: SACp_pinl_48117__emal_43764__pinl_12500__icc_5078 = (
# 21134 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 21134 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__sz * sizeof (*SACp_pinl_48117__emal_43764__pinl_12500__icc_5078), 0); break; case SAC_HM_any_threaded: SACp_pinl_48117__emal_43764__pinl_12500__icc_5078 = (
# 21134 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 21134 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__sz * sizeof (*SACp_pinl_48117__emal_43764__pinl_12500__icc_5078), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc) & (-1 ^ (3))))[1]) = 0; } }
      ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__sz; SAC_i++) { { SACp_pinl_48117__emal_43764__pinl_12500__icc_5078[SAC_i] = (( SACp_pinl_48118__emal_43765__ctz_21827[SAC_i])) == (0); }; } }
      { { free (SACp_pinl_48118__emal_43765__ctz_21827); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48118__emal_43765__ctz_21827__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_48119__emal_43766__pinl_12540__icc_5075_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _eq_VxV_ guard failed"); }
      { ; ; }
      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__sz; SAC_i++) { if (( SACp_pinl_48117__emal_43764__pinl_12500__icc_5078[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_pinl_48116__emal_43763__pinl_12511__flat_359 = SAC_all; }
      { { free (SACp_pinl_48117__emal_43764__pinl_12500__icc_5078); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48117__emal_43764__pinl_12500__icc_5078__desc) & (-1 ^ (3))))); } } }
      if (SACp_pinl_48116__emal_43763__pinl_12511__flat_359)
      {
        { ; ; }



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47908__hce_48 = SACp_pinl_47907__hce_49; }

      }
      else
      {
        { ; ; }
        { ; ; }
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `v:vshp' in return value does not match feature `vshp' in data"); SACp_pinl_48206__emal_43832__hce_48__SSA0_1 = 0;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47908__hce_48 = SACp_pinl_48206__emal_43832__hce_48__SSA0_1; }

      }
      { { if (!((1 == SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48115__emal_43762__pinl_12518__flat_366"); }; { if ((((6 + (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc) & (-1 ^ (3))))[1]) = 0; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _drop_SxV_ is not a scalar!"); };
      if (!((SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "2nd argument of _drop_SxV_ is not a vector!"); };
      if (!((SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48115__emal_43762__pinl_12518__flat_366__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__sz - (((SACp_emal_43677__isaa_31739_b) < 0) ? (-(SACp_emal_43677__isaa_31739_b)) : (SACp_emal_43677__isaa_31739_b));
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48115__emal_43762__pinl_12518__flat_366__sz = SAC_size;
        if (!((SACp_pinl_48115__emal_43762__pinl_12518__flat_366__sz >= 0))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21187 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 21187 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21187 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 21187 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21187 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 21187 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21187 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 21187, __extension__ __PRETTY_FUNCTION__); }))
# 21187 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48115__emal_43762__pinl_12518__flat_366 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__sz * sizeof (*SACp_pinl_48115__emal_43762__pinl_12518__flat_366)); break; case SAC_HM_multi_threaded: SACp_pinl_48115__emal_43762__pinl_12518__flat_366 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__sz * sizeof (*SACp_pinl_48115__emal_43762__pinl_12518__flat_366), 0); break; case SAC_HM_any_threaded: SACp_pinl_48115__emal_43762__pinl_12518__flat_366 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48115__emal_43762__pinl_12518__flat_366__sz * sizeof (*SACp_pinl_48115__emal_43762__pinl_12518__flat_366), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc) & (-1 ^ (3))))[1]) = 0; } }



     
      {
        int SAC_cnt, SAC_off;
        
# 21194 "/home/rubenhensen/sac/a.out.c" 3 4
       _Bool 
# 21194 "/home/rubenhensen/sac/a.out.c"
            SAC_cond;
        SAC_off = SACp_emal_43677__isaa_31739_b;
        SAC_cond = (SACp_emal_43677__isaa_31739_b < 0);
        if (SAC_cond) {
          SAC_cnt = SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__sz + SAC_off;
          if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
          SAC_off = 0;
        }
        else {
          SAC_cnt = SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__sz - SAC_off;
          if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        }
        for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
          { SACp_pinl_48115__emal_43762__pinl_12518__flat_366[SAC_i] = ( SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res[SAC_off + SAC_i]); };
        }
      }

      { { free (SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48124__emal_43771__isaa_31840__pinl_12489__rtpf_27_res__desc) & (-1 ^ (3))))); } } }
      { { if (!((1 == SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48114__emal_43761__pinl_12517__flat_365"); }; { if ((((6 + (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc) & (-1 ^ (3))))[1]) = 0; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _take_SxV_ is not a scalar!"); };
      if (!((SACp_pinl_48115__emal_43762__pinl_12518__flat_366__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "2nd argument of _take_SxV_ is not a vector!"); };
      if (!((SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48114__emal_43761__pinl_12517__flat_365__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e) < 0) ? (-(SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e)) : (SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e));
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48114__emal_43761__pinl_12517__flat_365__sz = SAC_size;
        if (!((SACp_pinl_48114__emal_43761__pinl_12517__flat_365__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21230 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 21230 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21230 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 21230 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21230 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 21230 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21230 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 21230, __extension__ __PRETTY_FUNCTION__); }))
# 21230 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48114__emal_43761__pinl_12517__flat_365 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__sz * sizeof (*SACp_pinl_48114__emal_43761__pinl_12517__flat_365)); break; case SAC_HM_multi_threaded: SACp_pinl_48114__emal_43761__pinl_12517__flat_365 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__sz * sizeof (*SACp_pinl_48114__emal_43761__pinl_12517__flat_365), 0); break; case SAC_HM_any_threaded: SACp_pinl_48114__emal_43761__pinl_12517__flat_365 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__sz * sizeof (*SACp_pinl_48114__emal_43761__pinl_12517__flat_365), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc) & (-1 ^ (3))))[1]) = 0; } }



     
      {
        int SAC_cnt, SAC_off;
        
# 21237 "/home/rubenhensen/sac/a.out.c" 3 4
       _Bool 
# 21237 "/home/rubenhensen/sac/a.out.c"
            SAC_cond;
        SAC_cnt = SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e;
        SAC_cond = (SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e < 0);
        if (SAC_cond) {
          SAC_cnt = - SAC_cnt;
          SAC_off = SACp_pinl_48115__emal_43762__pinl_12518__flat_366__sz - SAC_cnt;
        }
        else {
          SAC_off = 0;
        }
        if (!((SAC_cnt <= SACp_pinl_48115__emal_43762__pinl_12518__flat_366__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
        for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
          { SACp_pinl_48114__emal_43761__pinl_12517__flat_365[SAC_i] = ( SACp_pinl_48115__emal_43762__pinl_12518__flat_366[SAC_off + SAC_i]); };
        }
      }

      { { free (SACp_pinl_48115__emal_43762__pinl_12518__flat_366); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48115__emal_43762__pinl_12518__flat_366__desc) & (-1 ^ (3))))); } } }
            if (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__dim != SACp_pinl_48114__emal_43761__pinl_12517__flat_365__dim) {
        SACp_pinl_48113__emal_43760__pinl_12543__icc_5079_pred = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_pinl_48146__emal_43793__pinl_12397__icc_7626""' with shape %s ""And `" "SACp_pinl_48114__emal_43761__pinl_12517__flat_365""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc), SAC_PrintShape (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc));
      }
      else {
        int SAC_all = 1; if (0 || (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__shp0 != SACp_pinl_48114__emal_43761__pinl_12517__flat_365__shp0))
        {

          SAC_all = 0;
          SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Arrays `" "SACp_pinl_48146__emal_43793__pinl_12397__icc_7626""' with shape %s ""And `" "SACp_pinl_48114__emal_43761__pinl_12517__flat_365""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc), SAC_PrintShape (SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc));
        }
        SACp_pinl_48113__emal_43760__pinl_12543__icc_5079_pred = SAC_all;
      }

      if (!SACp_pinl_48113__emal_43760__pinl_12543__icc_5079_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _eq_VxV_ guard failed"); }
      { { if (!((1 == SACp_pinl_48112__emal_43759__ctz_21825__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48112__emal_43759__ctz_21825"); }; { if ((((6 + (SACp_pinl_48112__emal_43759__ctz_21825__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48112__emal_43759__ctz_21825__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48112__emal_43759__ctz_21825__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48112__emal_43759__ctz_21825__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48112__emal_43759__ctz_21825__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48112__emal_43759__ctz_21825__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48112__emal_43759__ctz_21825__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48112__emal_43759__ctz_21825__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48112__emal_43759__ctz_21825__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48112__emal_43759__ctz_21825__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48112__emal_43759__ctz_21825__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48112__emal_43759__ctz_21825__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48112__emal_43759__ctz_21825__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48112__emal_43759__ctz_21825__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48112__emal_43759__ctz_21825__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48112__emal_43759__ctz_21825__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48112__emal_43759__ctz_21825__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48112__emal_43759__ctz_21825__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48112__emal_43759__ctz_21825__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48112__emal_43759__ctz_21825__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48112__emal_43759__ctz_21825__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48112__emal_43759__ctz_21825__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48112__emal_43759__ctz_21825__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48114__emal_43761__pinl_12517__flat_365__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48112__emal_43759__ctz_21825__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48112__emal_43759__ctz_21825__sz = SAC_size * SACp_pinl_48114__emal_43761__pinl_12517__flat_365__sz;
        if (!((SACp_pinl_48112__emal_43759__ctz_21825__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21283 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 21283 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21283 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 21283 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21283 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 21283 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21283 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 21283, __extension__ __PRETTY_FUNCTION__); }))
# 21283 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48112__emal_43759__ctz_21825 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48112__emal_43759__ctz_21825__sz * sizeof (*SACp_pinl_48112__emal_43759__ctz_21825)); break; case SAC_HM_multi_threaded: SACp_pinl_48112__emal_43759__ctz_21825 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48112__emal_43759__ctz_21825__sz * sizeof (*SACp_pinl_48112__emal_43759__ctz_21825), 0); break; case SAC_HM_any_threaded: SACp_pinl_48112__emal_43759__ctz_21825 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48112__emal_43759__ctz_21825__sz * sizeof (*SACp_pinl_48112__emal_43759__ctz_21825), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48112__emal_43759__ctz_21825__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48112__emal_43759__ctz_21825__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48112__emal_43759__ctz_21825__desc) & (-1 ^ (3))))[1]) = 0; } }
      ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_pinl_48112__emal_43759__ctz_21825__sz; SAC_i++) { { SACp_pinl_48112__emal_43759__ctz_21825[SAC_i] = (( SACp_pinl_48146__emal_43793__pinl_12397__icc_7626[SAC_i])) - (( SACp_pinl_48114__emal_43761__pinl_12517__flat_365[SAC_i])); }; } }
      { { free (SACp_pinl_48114__emal_43761__pinl_12517__flat_365); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48114__emal_43761__pinl_12517__flat_365__desc) & (-1 ^ (3))))); } } }
      { { free (SACp_pinl_48146__emal_43793__pinl_12397__icc_7626); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48146__emal_43793__pinl_12397__icc_7626__desc) & (-1 ^ (3))))); } } }
      { { if (!((1 == SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48111__emal_43758__pinl_12503__icc_5082"); }; { if ((((6 + (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48112__emal_43759__ctz_21825__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__sz = SAC_size * SACp_pinl_48112__emal_43759__ctz_21825__sz;
        if (!((SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21301 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 21301 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21301 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 21301 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21301 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 21301 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21301 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 21301, __extension__ __PRETTY_FUNCTION__); }))
# 21301 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48111__emal_43758__pinl_12503__icc_5082 = (
# 21301 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 21301 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__sz * sizeof (*SACp_pinl_48111__emal_43758__pinl_12503__icc_5082)); break; case SAC_HM_multi_threaded: SACp_pinl_48111__emal_43758__pinl_12503__icc_5082 = (
# 21301 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 21301 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__sz * sizeof (*SACp_pinl_48111__emal_43758__pinl_12503__icc_5082), 0); break; case SAC_HM_any_threaded: SACp_pinl_48111__emal_43758__pinl_12503__icc_5082 = (
# 21301 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 21301 "/home/rubenhensen/sac/a.out.c"
     *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__sz * sizeof (*SACp_pinl_48111__emal_43758__pinl_12503__icc_5082), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc) & (-1 ^ (3))))[1]) = 0; } }
      ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__sz; SAC_i++) { { SACp_pinl_48111__emal_43758__pinl_12503__icc_5082[SAC_i] = (( SACp_pinl_48112__emal_43759__ctz_21825[SAC_i])) == (0); }; } }
      { { free (SACp_pinl_48112__emal_43759__ctz_21825); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48112__emal_43759__ctz_21825__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_48113__emal_43760__pinl_12543__icc_5079_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Primitive function _eq_VxV_ guard failed"); }
      { ; ; }
      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__sz; SAC_i++) { if (( SACp_pinl_48111__emal_43758__pinl_12503__icc_5082[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_pinl_48110__emal_43757__pinl_12515__flat_363 = SAC_all; }
      { { free (SACp_pinl_48111__emal_43758__pinl_12503__icc_5082); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48111__emal_43758__pinl_12503__icc_5082__desc) & (-1 ^ (3))))); } } }
      if (SACp_pinl_48110__emal_43757__pinl_12515__flat_363)
      {
        { ; ; }



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47909__hce_47 = SACp_pinl_47908__hce_48; }

      }
      else
      {
        ;
        { ; ; }
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `d:shp' in return value does not match argument shp"); SACp_pinl_48208__emal_43831__hce_47__SSA0_1 = 0;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47909__hce_47 = SACp_pinl_48208__emal_43831__hce_47__SSA0_1; }

      }
      ; ; { SACp_emal_43677__isaa_31739_b = (SACp_emal_43677__isaa_31739_b) - (SACp_pinl_48125__emal_43772__isaa_31839__pinl_12489__rtpf_27_res); };
      { ; ; }
      ; ; { SACp_emal_43677__isaa_31739_b = (SACp_emal_43677__isaa_31739_b) + (SACp_pinl_48157__emal_43804__pinl_12484__wlbsc_9831_sc_e); };
      { ; ; }
      ; ; { SACp_pinl_48107__emal_43754__pinl_12520__flat_370 = (SACp_emal_43677__isaa_31739_b) == (0); };
      { ; ; }
      if (SACp_pinl_48107__emal_43754__pinl_12520__flat_370)
      {
        { ; ; }



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47910__hce_46 = SACp_pinl_47909__hce_47; }

      }
      else
      {
        ;
        { ; ; }
        SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `d:shp' in return value does not match feature `d' in shp"); SACp_pinl_48210__emal_43830__hce_46__SSA0_1 = 0;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
        ;
        ;
        ;
        { SACp_pinl_47910__hce_46 = SACp_pinl_48210__emal_43830__hce_46__SSA0_1; }

      }
      if (!SACp_pinl_47910__hce_46) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Type pattern post-condition of genarrayI failed"); }
      ;



      SACl_a__SSA0_1__desc = SACl_a__desc;
      SACl_a__SSA0_1__sz = SACl_a__sz;
      SACl_a__SSA0_1__dim = SACl_a__dim;
      ;
      { SACl_a__SSA0_1 = SACl_a; }

    }



    SACwf__MAIN___PL__i_S__i_S (&SACp_flat_341, &SACp_flat_341__desc, SACl_a__SSA0_1, SACl_a__SSA0_1__desc, SACl_b__SSA0_1, SACl_b__SSA0_1__desc);




    SACp_flat_341__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_341__desc) & (-1 ^ (3))))[4]);
    SACp_flat_341__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_341__desc) & (-1 ^ (3))))[3]);




    { *SAC_arg_1__p = SACp_flat_341; *SAC_arg_1__desc__p = SACp_flat_341__desc; }
    return;
   
  }



}
}
# 21414 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc, int * SACl_data, SAC_array_descriptor_t SACl_data__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int SACp_emal_43905__isaa_32158_data;
   
   




    int * SACp_emal_43904__isaa_32159_data;
    SAC_array_descriptor_t SACp_emal_43904__isaa_32159_data__desc = 
# 21431 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21431 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43904__isaa_32159_data__shp0;
    int SACp_emal_43904__isaa_32159_data__sz;
    const int SACp_emal_43904__isaa_32159_data__dim = 1;




    int SACp_emal_43903__flat_374;
   
   




    
# 21446 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21446 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43901__icc_5104_pred;
   
   




    
# 21453 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21453 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43900__icc_5109_pred;
   
   




    int * SACp_emal_43899__flat_378;
    SAC_array_descriptor_t SACp_emal_43899__flat_378__desc = 
# 21461 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21461 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43899__flat_378__shp0;
    int SACp_emal_43899__flat_378__sz;
    const int SACp_emal_43899__flat_378__dim = 1;




    
# 21469 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21469 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43898__icc_5103_pred;
   
   




    
# 21476 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21476 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43897__icc_5105_pred;
   
   




    
# 21483 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21483 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43896__icc_5106_pred;
   
   




    int * SACp_emal_43895__pinl_12770_new_shape;
    SAC_array_descriptor_t SACp_emal_43895__pinl_12770_new_shape__desc = 
# 21491 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21491 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43895__pinl_12770_new_shape__shp0;
    int SACp_emal_43895__pinl_12770_new_shape__sz;
    const int SACp_emal_43895__pinl_12770_new_shape__dim = 1;




    
# 21499 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21499 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43894__pinl_12779__icc_5145_pred;
   
   




    
# 21506 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21506 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43893__pinl_12786__icc_5150_pred;
   
   




    int * SACp_emal_43892__pinl_12768__flat_322;
    SAC_array_descriptor_t SACp_emal_43892__pinl_12768__flat_322__desc = 
# 21514 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21514 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43892__pinl_12768__flat_322__shp0;
    int SACp_emal_43892__pinl_12768__flat_322__sz;
    const int SACp_emal_43892__pinl_12768__flat_322__dim = 1;




    
# 21522 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21522 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43891__pinl_12788__icc_5144_pred;
   
   




    
# 21529 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21529 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43890__pinl_12790__icc_5146_pred;
   
   




    
# 21536 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21536 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43889__pinl_12793__icc_5147_pred;
   
   




    
# 21543 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21543 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43879__pinl_12811__icc_5934_pred;
   
   




    
# 21550 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21550 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43878__pinl_12818__icc_5939_pred;
   
   




    int * SACp_emal_43877__pinl_12808__flat_456;
    SAC_array_descriptor_t SACp_emal_43877__pinl_12808__flat_456__desc = 
# 21558 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21558 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43877__pinl_12808__flat_456__shp0;
    int SACp_emal_43877__pinl_12808__flat_456__sz;
    const int SACp_emal_43877__pinl_12808__flat_456__dim = 1;




    
# 21566 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21566 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43876__pinl_12823__icc_5933_pred;
   
   




    
# 21573 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21573 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43875__pinl_12825__icc_5935_pred;
   
   




    
# 21580 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21580 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43874__pinl_12828__icc_5936_pred;
   
   




    int * SACp_emal_43873__isaa_32217__pinl_12807__icc_5945;
    SAC_array_descriptor_t SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc = 
# 21588 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21588 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__shp0;
    int SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz;
    const int SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim = 1;




    
# 21596 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21596 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43872__icc_5091_pred;
   
   




    
# 21603 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21603 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43871__icc_5096_pred;
   
   




    int * SACp_emal_43870__flat_384;
    SAC_array_descriptor_t SACp_emal_43870__flat_384__desc = 
# 21611 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21611 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43870__flat_384__shp0;
    int SACp_emal_43870__flat_384__sz;
    const int SACp_emal_43870__flat_384__dim = 1;




    
# 21619 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21619 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43869__icc_5090_pred;
   
   




    
# 21626 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21626 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43868__icc_5092_pred;
   
   




    
# 21633 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21633 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43867__icc_5093_pred;
   
   




    int * SACp_emal_43864__icc_5102;
    SAC_array_descriptor_t SACp_emal_43864__icc_5102__desc = 
# 21641 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21641 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43864__icc_5102__sz = 0;
    int SACp_emal_43864__icc_5102__dim = 0;




    int * SACp_emal_43857__pinl_12849_new_idx;
    SAC_array_descriptor_t SACp_emal_43857__pinl_12849_new_idx__desc = 
# 21649 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21649 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43857__pinl_12849_new_idx__shp0;
    int SACp_emal_43857__pinl_12849_new_idx__sz;
    const int SACp_emal_43857__pinl_12849_new_idx__dim = 1;




    
# 21657 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21657 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43856__pinl_12872__icc_5151_pred;
   
   




    
# 21664 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21664 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43855__pinl_12874__icc_5152_pred;
   
   




    
# 21671 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 21671 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43854__pinl_12876__icc_5153_pred;
   
   




    int SACp_emal_43853__ivesli_42502;
   
   




    int SACp_emal_43852__pinl_12835__icc_5156;
   
   




    int * SACp_emal_43851__pinl_12839__icc_5162;
    SAC_array_descriptor_t SACp_emal_43851__pinl_12839__icc_5162__desc = 
# 21693 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21693 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43851__pinl_12839__icc_5162__sz = 0;
    int SACp_emal_43851__pinl_12839__icc_5162__dim = 0;




    int * SACp_emal_43847_mem;
    SAC_array_descriptor_t SACp_emal_43847_mem__desc = 
# 21701 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21701 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43847_mem__sz = 0;
    int SACp_emal_43847_mem__dim = 0;




    int * SACp_emal_43846__pinl_12884__icc_5945;
    SAC_array_descriptor_t SACp_emal_43846__pinl_12884__icc_5945__desc = 
# 21709 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21709 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43846__pinl_12884__icc_5945__sz = 0;
    int SACp_emal_43846__pinl_12884__icc_5945__dim = 0;




    int * SACp_emal_43844__icc_5115;
    SAC_array_descriptor_t SACp_emal_43844__icc_5115__desc = 
# 21717 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21717 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43844__icc_5115__sz = 0;
    int SACp_emal_43844__icc_5115__dim = 0;




    int SACp_wlidx_42345__pinl_12884__icc_5945;
   
   




    int SACp_wlidx_42344__pinl_12839__icc_5162;
   
   




    int SACp_wlidx_42343__icc_5115;
   
   




    int SACp_wlidx_42342__icc_5102;
   
   




    int * SACp_pinl_12848_iv;
    SAC_array_descriptor_t SACp_pinl_12848_iv__desc = 
# 21753 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21753 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_12848_iv__shp0;
    int SACp_pinl_12848_iv__sz;
    const int SACp_pinl_12848_iv__dim = 1;




    int * SACp_pinl_12887_iv;
    SAC_array_descriptor_t SACp_pinl_12887_iv__desc = 
# 21762 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21762 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_12887_iv__shp0;
    int SACp_pinl_12887_iv__sz;
    const int SACp_pinl_12887_iv__dim = 1;




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 21771 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21771 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACl_iv__shp0;
    int SACl_iv__sz;
    const int SACl_iv__dim = 1;




    int * SACp_hse_38;
    SAC_array_descriptor_t SACp_hse_38__desc = 
# 21780 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 21780 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_hse_38__shp0;
    int SACp_hse_38__sz;
    const int SACp_hse_38__dim = 1;





    int SACl_data__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[4]);
    int SACl_data__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[3]);




    int SACl_shp__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_shp__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[4]);
    const int SACl_shp__dim = 1;

   
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_43905__isaa_32158_data = SACl_data__dim; }; }
    { { if (!((1 == SACp_emal_43904__isaa_32159_data__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43904__isaa_32159_data"); }; { if ((((6 + (SACp_emal_43904__isaa_32159_data__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43904__isaa_32159_data__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43904__isaa_32159_data__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43904__isaa_32159_data__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43904__isaa_32159_data__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43904__isaa_32159_data__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43904__isaa_32159_data__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43904__isaa_32159_data__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43904__isaa_32159_data__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43904__isaa_32159_data__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43904__isaa_32159_data__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43904__isaa_32159_data__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43904__isaa_32159_data__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43904__isaa_32159_data__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43904__isaa_32159_data__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43904__isaa_32159_data__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43904__isaa_32159_data__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43904__isaa_32159_data__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43904__isaa_32159_data__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43904__isaa_32159_data__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43904__isaa_32159_data__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43904__isaa_32159_data__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43904__isaa_32159_data__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_data__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43904__isaa_32159_data__desc) & (-1 ^ (3))))[4]) = SACp_emal_43904__isaa_32159_data__sz = SAC_size;
      if (!((SACp_emal_43904__isaa_32159_data__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21824 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 21824 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21824 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 21824 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21824 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 21824 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21824 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 21824, __extension__ __PRETTY_FUNCTION__); }))
# 21824 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43904__isaa_32159_data = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43904__isaa_32159_data__sz * sizeof (*SACp_emal_43904__isaa_32159_data)); break; case SAC_HM_multi_threaded: SACp_emal_43904__isaa_32159_data = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43904__isaa_32159_data__sz * sizeof (*SACp_emal_43904__isaa_32159_data), 0); break; case SAC_HM_any_threaded: SACp_emal_43904__isaa_32159_data = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43904__isaa_32159_data__sz * sizeof (*SACp_emal_43904__isaa_32159_data), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43904__isaa_32159_data__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43904__isaa_32159_data__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43904__isaa_32159_data__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_data__dim; SAC_i++) {
      { SACp_emal_43904__isaa_32159_data[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 37, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_43903__flat_374 = 0; }; }
    ; { SACp_emal_43905__isaa_32158_data = ((SACp_emal_43905__isaa_32158_data) < 0) ? -(SACp_emal_43905__isaa_32158_data) : (SACp_emal_43905__isaa_32158_data); };
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43904__isaa_32159_data__sz; SAC_i++) { if (( SACp_emal_43904__isaa_32159_data[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 45, "Non-negativity constraint violated " "for vector " "SACp_emal_43904__isaa_32159_data"); } { SACp_emal_43901__icc_5104_pred = ( SACp_emal_43904__isaa_32159_data[SAC_i]); }; } SACp_emal_43901__icc_5104_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43904__isaa_32159_data__sz; SAC_i++) { if (( SACp_emal_43904__isaa_32159_data[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_43904__isaa_32159_data"); } { SACp_emal_43900__icc_5109_pred = ( SACp_emal_43904__isaa_32159_data[SAC_i]); }; } SACp_emal_43900__icc_5109_pred = SAC_all; }
    { { if (!((1 == SACp_emal_43899__flat_378__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43899__flat_378"); }; { if ((((6 + (SACp_emal_43899__flat_378__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43899__flat_378__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43899__flat_378__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43899__flat_378__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43899__flat_378__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43899__flat_378__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43899__flat_378__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43899__flat_378__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43899__flat_378__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43899__flat_378__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43899__flat_378__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43899__flat_378__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43899__flat_378__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43899__flat_378__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43899__flat_378__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43899__flat_378__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43899__flat_378__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43899__flat_378__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43899__flat_378__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43899__flat_378__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43899__flat_378__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43899__flat_378__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43899__flat_378__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43904__isaa_32159_data__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43899__flat_378__desc) & (-1 ^ (3))))[4]) = SACp_emal_43899__flat_378__sz = SAC_size * SACp_emal_43904__isaa_32159_data__sz;
      if (!((SACp_emal_43899__flat_378__sz >= 0))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21859 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 21859 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21859 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 21859 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21859 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 21859 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21859 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 21859, __extension__ __PRETTY_FUNCTION__); }))
# 21859 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43899__flat_378 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43899__flat_378__sz * sizeof (*SACp_emal_43899__flat_378)); break; case SAC_HM_multi_threaded: SACp_emal_43899__flat_378 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43899__flat_378__sz * sizeof (*SACp_emal_43899__flat_378), 0); break; case SAC_HM_any_threaded: SACp_emal_43899__flat_378 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43899__flat_378__sz * sizeof (*SACp_emal_43899__flat_378), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43899__flat_378__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43899__flat_378__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43899__flat_378__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_43899__flat_378__sz; SAC_i++) { { SACp_emal_43899__flat_378[SAC_i] = (0) * (( SACp_emal_43904__isaa_32159_data[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43899__flat_378__sz; SAC_i++) { if (( SACp_emal_43899__flat_378[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 45, "Non-negativity constraint violated " "for vector " "SACp_emal_43899__flat_378"); } { SACp_emal_43898__icc_5103_pred = ( SACp_emal_43899__flat_378[SAC_i]); }; } SACp_emal_43898__icc_5103_pred = SAC_all; }
        if (SACp_emal_43899__flat_378__dim != SACp_emal_43904__isaa_32159_data__dim) {
      SACp_emal_43897__icc_5105_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Arrays `" "SACp_emal_43899__flat_378""' with shape %s ""And `" "SACp_emal_43904__isaa_32159_data""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_43899__flat_378__desc), SAC_PrintShape (SACp_emal_43904__isaa_32159_data__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_43899__flat_378__shp0 != SACp_emal_43904__isaa_32159_data__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Arrays `" "SACp_emal_43899__flat_378""' with shape %s ""And `" "SACp_emal_43904__isaa_32159_data""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_43899__flat_378__desc), SAC_PrintShape (SACp_emal_43904__isaa_32159_data__desc));
      }
      SACp_emal_43897__icc_5105_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43899__flat_378__sz && SAC_i < SACp_emal_43904__isaa_32159_data__sz; SAC_i++) { if (( SACp_emal_43899__flat_378[SAC_i]) > ( SACp_emal_43904__isaa_32159_data[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Vector constraint `" "SACp_emal_43899__flat_378" " < " "SACp_emal_43904__isaa_32159_data" "' violated"); } } SACp_emal_43896__icc_5106_pred = SAC_all; }
    { { if (!((1 == SACp_emal_43895__pinl_12770_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43895__pinl_12770_new_shape"); }; { if ((((6 + (SACp_emal_43895__pinl_12770_new_shape__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43895__pinl_12770_new_shape__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43895__pinl_12770_new_shape__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43895__pinl_12770_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43895__pinl_12770_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43895__pinl_12770_new_shape__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43895__pinl_12770_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43895__pinl_12770_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43895__pinl_12770_new_shape__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43895__pinl_12770_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43895__pinl_12770_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43895__pinl_12770_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43895__pinl_12770_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43895__pinl_12770_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43895__pinl_12770_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43895__pinl_12770_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43895__pinl_12770_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43895__pinl_12770_new_shape__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43895__pinl_12770_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43895__pinl_12770_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_43904__isaa_32159_data__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_43895__pinl_12770_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43895__pinl_12770_new_shape__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43895__pinl_12770_new_shape__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43904__isaa_32159_data__sz - (((SACp_emal_43905__isaa_32158_data) < 0) ? (-(SACp_emal_43905__isaa_32158_data)) : (SACp_emal_43905__isaa_32158_data));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43895__pinl_12770_new_shape__desc) & (-1 ^ (3))))[4]) = SACp_emal_43895__pinl_12770_new_shape__sz = SAC_size;
      if (!((SACp_emal_43895__pinl_12770_new_shape__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21895 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 21895 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21895 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 21895 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21895 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 21895 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21895 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 21895, __extension__ __PRETTY_FUNCTION__); }))
# 21895 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43895__pinl_12770_new_shape = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43895__pinl_12770_new_shape__sz * sizeof (*SACp_emal_43895__pinl_12770_new_shape)); break; case SAC_HM_multi_threaded: SACp_emal_43895__pinl_12770_new_shape = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43895__pinl_12770_new_shape__sz * sizeof (*SACp_emal_43895__pinl_12770_new_shape), 0); break; case SAC_HM_any_threaded: SACp_emal_43895__pinl_12770_new_shape = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43895__pinl_12770_new_shape__sz * sizeof (*SACp_emal_43895__pinl_12770_new_shape), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43895__pinl_12770_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43895__pinl_12770_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43895__pinl_12770_new_shape__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 21902 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 21902 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_43905__isaa_32158_data;
      SAC_cond = (SACp_emal_43905__isaa_32158_data < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_43904__isaa_32159_data__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_43904__isaa_32159_data__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_43895__pinl_12770_new_shape[SAC_i] = ( SACp_emal_43904__isaa_32159_data[SAC_off + SAC_i]); };
      }
    }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43895__pinl_12770_new_shape__sz; SAC_i++) { if (( SACp_emal_43895__pinl_12770_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_43895__pinl_12770_new_shape"); } { SACp_emal_43894__pinl_12779__icc_5145_pred = ( SACp_emal_43895__pinl_12770_new_shape[SAC_i]); }; } SACp_emal_43894__pinl_12779__icc_5145_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43895__pinl_12770_new_shape__sz; SAC_i++) { if (( SACp_emal_43895__pinl_12770_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Non-negativity constraint violated " "for vector " "SACp_emal_43895__pinl_12770_new_shape"); } { SACp_emal_43893__pinl_12786__icc_5150_pred = ( SACp_emal_43895__pinl_12770_new_shape[SAC_i]); }; } SACp_emal_43893__pinl_12786__icc_5150_pred = SAC_all; }
    { { if (!((1 == SACp_emal_43892__pinl_12768__flat_322__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43892__pinl_12768__flat_322"); }; { if ((((6 + (SACp_emal_43892__pinl_12768__flat_322__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43892__pinl_12768__flat_322__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43892__pinl_12768__flat_322__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43892__pinl_12768__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43892__pinl_12768__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43892__pinl_12768__flat_322__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43892__pinl_12768__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43892__pinl_12768__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43892__pinl_12768__flat_322__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43892__pinl_12768__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43892__pinl_12768__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43892__pinl_12768__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43892__pinl_12768__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43892__pinl_12768__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43892__pinl_12768__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43892__pinl_12768__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43892__pinl_12768__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43892__pinl_12768__flat_322__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43892__pinl_12768__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43892__pinl_12768__flat_322__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43892__pinl_12768__flat_322__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43892__pinl_12768__flat_322__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43892__pinl_12768__flat_322__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43895__pinl_12770_new_shape__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43892__pinl_12768__flat_322__desc) & (-1 ^ (3))))[4]) = SACp_emal_43892__pinl_12768__flat_322__sz = SAC_size * SACp_emal_43895__pinl_12770_new_shape__sz;
      if (!((SACp_emal_43892__pinl_12768__flat_322__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21936 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 21936 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21936 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 21936 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21936 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 21936 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21936 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 21936, __extension__ __PRETTY_FUNCTION__); }))
# 21936 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43892__pinl_12768__flat_322 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43892__pinl_12768__flat_322__sz * sizeof (*SACp_emal_43892__pinl_12768__flat_322)); break; case SAC_HM_multi_threaded: SACp_emal_43892__pinl_12768__flat_322 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43892__pinl_12768__flat_322__sz * sizeof (*SACp_emal_43892__pinl_12768__flat_322), 0); break; case SAC_HM_any_threaded: SACp_emal_43892__pinl_12768__flat_322 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43892__pinl_12768__flat_322__sz * sizeof (*SACp_emal_43892__pinl_12768__flat_322), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43892__pinl_12768__flat_322__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43892__pinl_12768__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43892__pinl_12768__flat_322__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_43892__pinl_12768__flat_322__sz; SAC_i++) { { SACp_emal_43892__pinl_12768__flat_322[SAC_i] = (0) * (( SACp_emal_43895__pinl_12770_new_shape[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43892__pinl_12768__flat_322__sz; SAC_i++) { if (( SACp_emal_43892__pinl_12768__flat_322[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_43892__pinl_12768__flat_322"); } { SACp_emal_43891__pinl_12788__icc_5144_pred = ( SACp_emal_43892__pinl_12768__flat_322[SAC_i]); }; } SACp_emal_43891__pinl_12788__icc_5144_pred = SAC_all; }
        if (SACp_emal_43892__pinl_12768__flat_322__dim != SACp_emal_43895__pinl_12770_new_shape__dim) {
      SACp_emal_43890__pinl_12790__icc_5146_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_43892__pinl_12768__flat_322""' with shape %s ""And `" "SACp_emal_43895__pinl_12770_new_shape""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_43892__pinl_12768__flat_322__desc), SAC_PrintShape (SACp_emal_43895__pinl_12770_new_shape__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_43892__pinl_12768__flat_322__shp0 != SACp_emal_43895__pinl_12770_new_shape__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_43892__pinl_12768__flat_322""' with shape %s ""And `" "SACp_emal_43895__pinl_12770_new_shape""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_43892__pinl_12768__flat_322__desc), SAC_PrintShape (SACp_emal_43895__pinl_12770_new_shape__desc));
      }
      SACp_emal_43890__pinl_12790__icc_5146_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43892__pinl_12768__flat_322__sz && SAC_i < SACp_emal_43895__pinl_12770_new_shape__sz; SAC_i++) { if (( SACp_emal_43892__pinl_12768__flat_322[SAC_i]) > ( SACp_emal_43895__pinl_12770_new_shape[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Vector constraint `" "SACp_emal_43892__pinl_12768__flat_322" " < " "SACp_emal_43895__pinl_12770_new_shape" "' violated"); } } SACp_emal_43889__pinl_12793__icc_5147_pred = SAC_all; }
    if (!SACp_emal_43893__pinl_12786__icc_5150_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43889__pinl_12793__icc_5147_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43890__pinl_12790__icc_5146_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43894__pinl_12779__icc_5145_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43891__pinl_12788__icc_5144_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43893__pinl_12786__icc_5150_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43889__pinl_12793__icc_5147_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43890__pinl_12790__icc_5146_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43894__pinl_12779__icc_5145_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43891__pinl_12788__icc_5144_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_43879__pinl_12811__icc_5934_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_43879__pinl_12811__icc_5934_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_43878__pinl_12818__icc_5939_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_43878__pinl_12818__icc_5939_pred = SAC_all; }
    { { if (!((1 == SACp_emal_43877__pinl_12808__flat_456__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43877__pinl_12808__flat_456"); }; { if ((((6 + (SACp_emal_43877__pinl_12808__flat_456__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43877__pinl_12808__flat_456__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43877__pinl_12808__flat_456__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43877__pinl_12808__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43877__pinl_12808__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43877__pinl_12808__flat_456__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43877__pinl_12808__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43877__pinl_12808__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43877__pinl_12808__flat_456__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43877__pinl_12808__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43877__pinl_12808__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43877__pinl_12808__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43877__pinl_12808__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43877__pinl_12808__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43877__pinl_12808__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43877__pinl_12808__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43877__pinl_12808__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43877__pinl_12808__flat_456__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43877__pinl_12808__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43877__pinl_12808__flat_456__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43877__pinl_12808__flat_456__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43877__pinl_12808__flat_456__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43877__pinl_12808__flat_456__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_shp__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43877__pinl_12808__flat_456__desc) & (-1 ^ (3))))[4]) = SACp_emal_43877__pinl_12808__flat_456__sz = SAC_size * SACl_shp__sz;
      if (!((SACp_emal_43877__pinl_12808__flat_456__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 21980 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 21980 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21980 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 21980 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 21980 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 21980 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 21980 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 21980, __extension__ __PRETTY_FUNCTION__); }))
# 21980 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43877__pinl_12808__flat_456 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43877__pinl_12808__flat_456__sz * sizeof (*SACp_emal_43877__pinl_12808__flat_456)); break; case SAC_HM_multi_threaded: SACp_emal_43877__pinl_12808__flat_456 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43877__pinl_12808__flat_456__sz * sizeof (*SACp_emal_43877__pinl_12808__flat_456), 0); break; case SAC_HM_any_threaded: SACp_emal_43877__pinl_12808__flat_456 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43877__pinl_12808__flat_456__sz * sizeof (*SACp_emal_43877__pinl_12808__flat_456), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43877__pinl_12808__flat_456__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43877__pinl_12808__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43877__pinl_12808__flat_456__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_43877__pinl_12808__flat_456__sz; SAC_i++) { { SACp_emal_43877__pinl_12808__flat_456[SAC_i] = (0) * (( SACl_shp[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43877__pinl_12808__flat_456__sz; SAC_i++) { if (( SACp_emal_43877__pinl_12808__flat_456[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACp_emal_43877__pinl_12808__flat_456"); } { SACp_emal_43876__pinl_12823__icc_5933_pred = ( SACp_emal_43877__pinl_12808__flat_456[SAC_i]); }; } SACp_emal_43876__pinl_12823__icc_5933_pred = SAC_all; }
        if (SACp_emal_43877__pinl_12808__flat_456__dim != SACl_shp__dim) {
      SACp_emal_43875__pinl_12825__icc_5935_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_emal_43877__pinl_12808__flat_456""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_43877__pinl_12808__flat_456__desc), SAC_PrintShape (SACl_shp__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_43877__pinl_12808__flat_456__shp0 != SACl_shp__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_emal_43877__pinl_12808__flat_456""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_43877__pinl_12808__flat_456__desc), SAC_PrintShape (SACl_shp__desc));
      }
      SACp_emal_43875__pinl_12825__icc_5935_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43877__pinl_12808__flat_456__sz && SAC_i < SACl_shp__sz; SAC_i++) { if (( SACp_emal_43877__pinl_12808__flat_456[SAC_i]) > ( SACl_shp[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Vector constraint `" "SACp_emal_43877__pinl_12808__flat_456" " < " "SACl_shp" "' violated"); } } SACp_emal_43874__pinl_12828__icc_5936_pred = SAC_all; }
    if (!SACp_emal_43878__pinl_12818__icc_5939_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43874__pinl_12828__icc_5936_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43875__pinl_12825__icc_5935_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43879__pinl_12811__icc_5934_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43876__pinl_12823__icc_5933_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { { if (!((1 == SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43873__isaa_32217__pinl_12807__icc_5945"); }; { if ((((6 + (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_43895__pinl_12770_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_shp__sz + SACp_emal_43895__pinl_12770_new_shape__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc) & (-1 ^ (3))))[4]) = SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz = SAC_size;
      if (!((SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22021 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22021 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22021 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22021 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22021 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22021 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22021 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22021, __extension__ __PRETTY_FUNCTION__); }))
# 22021 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43873__isaa_32217__pinl_12807__icc_5945 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz * sizeof (*SACp_emal_43873__isaa_32217__pinl_12807__icc_5945)); break; case SAC_HM_multi_threaded: SACp_emal_43873__isaa_32217__pinl_12807__icc_5945 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz * sizeof (*SACp_emal_43873__isaa_32217__pinl_12807__icc_5945), 0); break; case SAC_HM_any_threaded: SACp_emal_43873__isaa_32217__pinl_12807__icc_5945 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz * sizeof (*SACp_emal_43873__isaa_32217__pinl_12807__icc_5945), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACl_shp__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_43873__isaa_32217__pinl_12807__icc_5945[SAC_i] = ( SACl_shp[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_emal_43895__pinl_12770_new_shape__sz; SAC_i++) { { SACp_emal_43873__isaa_32217__pinl_12807__icc_5945[SAC_off + SAC_i] = ( SACp_emal_43895__pinl_12770_new_shape[SAC_i]); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz; SAC_i++) { if (( SACp_emal_43873__isaa_32217__pinl_12807__icc_5945[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_43873__isaa_32217__pinl_12807__icc_5945"); } { SACp_emal_43872__icc_5091_pred = ( SACp_emal_43873__isaa_32217__pinl_12807__icc_5945[SAC_i]); }; } SACp_emal_43872__icc_5091_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz; SAC_i++) { if (( SACp_emal_43873__isaa_32217__pinl_12807__icc_5945[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_43873__isaa_32217__pinl_12807__icc_5945"); } { SACp_emal_43871__icc_5096_pred = ( SACp_emal_43873__isaa_32217__pinl_12807__icc_5945[SAC_i]); }; } SACp_emal_43871__icc_5096_pred = SAC_all; }
    { { if (!((1 == SACp_emal_43870__flat_384__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43870__flat_384"); }; { if ((((6 + (SACp_emal_43870__flat_384__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43870__flat_384__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43870__flat_384__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43870__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43870__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43870__flat_384__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43870__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43870__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43870__flat_384__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43870__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43870__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43870__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43870__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43870__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43870__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43870__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43870__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43870__flat_384__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43870__flat_384__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43870__flat_384__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43870__flat_384__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_43870__flat_384__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43870__flat_384__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43870__flat_384__desc) & (-1 ^ (3))))[4]) = SACp_emal_43870__flat_384__sz = SAC_size * SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz;
      if (!((SACp_emal_43870__flat_384__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22039 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22039 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22039 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22039 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22039 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22039 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22039 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22039, __extension__ __PRETTY_FUNCTION__); }))
# 22039 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43870__flat_384 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43870__flat_384__sz * sizeof (*SACp_emal_43870__flat_384)); break; case SAC_HM_multi_threaded: SACp_emal_43870__flat_384 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43870__flat_384__sz * sizeof (*SACp_emal_43870__flat_384), 0); break; case SAC_HM_any_threaded: SACp_emal_43870__flat_384 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43870__flat_384__sz * sizeof (*SACp_emal_43870__flat_384), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43870__flat_384__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43870__flat_384__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43870__flat_384__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_43870__flat_384__sz; SAC_i++) { { SACp_emal_43870__flat_384[SAC_i] = (0) * (( SACp_emal_43873__isaa_32217__pinl_12807__icc_5945[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43870__flat_384__sz; SAC_i++) { if (( SACp_emal_43870__flat_384[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_43870__flat_384"); } { SACp_emal_43869__icc_5090_pred = ( SACp_emal_43870__flat_384[SAC_i]); }; } SACp_emal_43869__icc_5090_pred = SAC_all; }
        if (SACp_emal_43870__flat_384__dim != SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim) {
      SACp_emal_43868__icc_5092_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Arrays `" "SACp_emal_43870__flat_384""' with shape %s ""And `" "SACp_emal_43873__isaa_32217__pinl_12807__icc_5945""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_43870__flat_384__desc), SAC_PrintShape (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_43870__flat_384__shp0 != SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Arrays `" "SACp_emal_43870__flat_384""' with shape %s ""And `" "SACp_emal_43873__isaa_32217__pinl_12807__icc_5945""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_43870__flat_384__desc), SAC_PrintShape (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc));
      }
      SACp_emal_43868__icc_5092_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43870__flat_384__sz && SAC_i < SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz; SAC_i++) { if (( SACp_emal_43870__flat_384[SAC_i]) > ( SACp_emal_43873__isaa_32217__pinl_12807__icc_5945[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Vector constraint `" "SACp_emal_43870__flat_384" " < " "SACp_emal_43873__isaa_32217__pinl_12807__icc_5945" "' violated"); } } SACp_emal_43867__icc_5093_pred = SAC_all; }
    if (!SACp_emal_43871__icc_5096_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43867__icc_5093_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43868__icc_5092_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43872__icc_5091_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43869__icc_5090_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    { { if (!(((SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43864__icc_5102"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22062 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22062 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22062 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22062 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22062 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22062 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22062 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22062, __extension__ __PRETTY_FUNCTION__); }))
# 22062 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43864__icc_5102__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43864__icc_5102__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43864__icc_5102__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[3]) = SACp_emal_43864__icc_5102__dim = (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz) + (0); }



   
    if (!((SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_43864__icc_5102__dim == SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz + (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_43873__isaa_32217__pinl_12807__icc_5945[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[4]) = SACp_emal_43864__icc_5102__sz = SAC_size;
      if (!((SACp_emal_43864__icc_5102__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22082 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22082 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22082 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22082 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22082 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22082 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22082 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22082, __extension__ __PRETTY_FUNCTION__); }))
# 22082 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43864__icc_5102 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43864__icc_5102__sz * sizeof (*SACp_emal_43864__icc_5102)); break; case SAC_HM_multi_threaded: SACp_emal_43864__icc_5102 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43864__icc_5102__sz * sizeof (*SACp_emal_43864__icc_5102), 0); break; case SAC_HM_any_threaded: SACp_emal_43864__icc_5102 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43864__icc_5102__sz * sizeof (*SACp_emal_43864__icc_5102), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_hse_38__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_hse_38"); }; { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_hse_38__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_hse_38__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43870__flat_384__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[4]) = SACp_hse_38__sz = SAC_size * SACp_emal_43870__flat_384__sz;
      if (!((SACp_hse_38__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22097 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22097 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22097 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22097 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22097 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22097 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22097 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22097, __extension__ __PRETTY_FUNCTION__); }))
# 22097 "/home/rubenhensen/sac/a.out.c"
   ; SACp_hse_38 = (int *)SAC_HM_MallocAnyChunk_st (SACp_hse_38__sz * sizeof (*SACp_hse_38)); break; case SAC_HM_multi_threaded: SACp_hse_38 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_hse_38__sz * sizeof (*SACp_hse_38), 0); break; case SAC_HM_any_threaded: SACp_hse_38 = (int *)SAC_HM_MallocAnyChunk_at (SACp_hse_38__sz * sizeof (*SACp_hse_38), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_hse_38__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_hse_38[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_43864__icc_5102__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_43864__icc_5102_shpfac0; SAC_d = SACp_emal_43864__icc_5102__dim - 1; SACp_wlidx_42342__icc_5102 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_43864__icc_5102_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_43870__flat_384[SAC_d]) <= ( SACp_hse_38[SAC_d])) && (( SACp_hse_38[SAC_d]) < ( SACp_emal_43873__isaa_32217__pinl_12807__icc_5945[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_43864__icc_5102__dim - SACp_hse_38__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_43864__icc_5102_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal size found!"); };
    { SACp_emal_43864__icc_5102[SACp_wlidx_42342__icc_5102] = SACp_emal_43903__flat_374; };

    } else {



    if (!((0 == (SACp_emal_43864__icc_5102__dim - SACp_hse_38__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_43864__icc_5102_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal size found!"); };
    { SACp_emal_43864__icc_5102[SACp_wlidx_42342__icc_5102] = SACp_emal_43903__flat_374; };

    }
    SACp_wlidx_42342__icc_5102 = SACp_wlidx_42342__icc_5102 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_hse_38[SAC_d] = ( SACp_hse_38[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_hse_38[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_hse_38[SAC_d] = 0; SAC_d--; SACp_hse_38[SAC_d] = ( SACp_hse_38[SAC_d]) + 1; } SAC_within_bounds = ( SACp_hse_38[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_emal_43873__isaa_32217__pinl_12807__icc_5945); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43873__isaa_32217__pinl_12807__icc_5945__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_43870__flat_384); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43870__flat_384__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_hse_38); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_43871__icc_5096_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43867__icc_5093_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43868__icc_5092_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43872__icc_5091_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43869__icc_5090_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_43900__icc_5109_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43896__icc_5106_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43897__icc_5105_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43901__icc_5104_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43898__icc_5103_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    { { if (!(((SACp_emal_43904__isaa_32159_data__sz) + (SACp_emal_43864__icc_5102__dim) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43844__icc_5115"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22151 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22151 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22151 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22151 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22151 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22151 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22151 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22151, __extension__ __PRETTY_FUNCTION__); }))
# 22151 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43844__icc_5115__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_43904__isaa_32159_data__sz) + (SACp_emal_43864__icc_5102__dim))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43844__icc_5115__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_43904__isaa_32159_data__sz) + (SACp_emal_43864__icc_5102__dim))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43844__icc_5115__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_43904__isaa_32159_data__sz) + (SACp_emal_43864__icc_5102__dim))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[3]) = SACp_emal_43844__icc_5115__dim = (SACp_emal_43904__isaa_32159_data__sz) + (SACp_emal_43864__icc_5102__dim); }



   
    if (!((SACp_emal_43904__isaa_32159_data__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_43844__icc_5115__dim == SACp_emal_43904__isaa_32159_data__sz + SACp_emal_43864__icc_5102__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_j;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_43904__isaa_32159_data__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_43904__isaa_32159_data[SAC_i]);
      }
      for (SAC_j = 0; SAC_i < SACp_emal_43844__icc_5115__dim; SAC_i++, SAC_j++) {
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[(6 + (SAC_j))]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[4]) = SACp_emal_43844__icc_5115__sz = SAC_size * SACp_emal_43864__icc_5102__sz;
      if (!((SACp_emal_43844__icc_5115__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22175 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22175 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22175 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22175 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22175 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22175 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22175 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22175, __extension__ __PRETTY_FUNCTION__); }))
# 22175 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43844__icc_5115 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43844__icc_5115__sz * sizeof (*SACp_emal_43844__icc_5115)); break; case SAC_HM_multi_threaded: SACp_emal_43844__icc_5115 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43844__icc_5115__sz * sizeof (*SACp_emal_43844__icc_5115), 0); break; case SAC_HM_any_threaded: SACp_emal_43844__icc_5115 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43844__icc_5115__sz * sizeof (*SACp_emal_43844__icc_5115), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACl_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACl_iv"); }; { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACl_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACl_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACl_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43899__flat_378__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[4]) = SACl_iv__sz = SAC_size * SACp_emal_43899__flat_378__sz;
      if (!((SACl_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22190 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22190 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22190 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22190 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22190 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22190 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22190 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22190, __extension__ __PRETTY_FUNCTION__); }))
# 22190 "/home/rubenhensen/sac/a.out.c"
   ; SACl_iv = (int *)SAC_HM_MallocAnyChunk_st (SACl_iv__sz * sizeof (*SACl_iv)); break; case SAC_HM_multi_threaded: SACl_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACl_iv__sz * sizeof (*SACl_iv), 0); break; case SAC_HM_any_threaded: SACl_iv = (int *)SAC_HM_MallocAnyChunk_at (SACl_iv__sz * sizeof (*SACl_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { if (!(((SACp_emal_43844__icc_5115__dim) - (SACl_iv__sz) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43846__pinl_12884__icc_5945"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22199 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22199 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22199 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22199 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22199 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22199 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22199 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22199, __extension__ __PRETTY_FUNCTION__); }))
# 22199 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43846__pinl_12884__icc_5945__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_43844__icc_5115__dim) - (SACl_iv__sz))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43846__pinl_12884__icc_5945__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_43844__icc_5115__dim) - (SACl_iv__sz))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43846__pinl_12884__icc_5945__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_43844__icc_5115__dim) - (SACl_iv__sz))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43846__pinl_12884__icc_5945__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43846__pinl_12884__icc_5945__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43846__pinl_12884__icc_5945__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43846__pinl_12884__icc_5945__desc) & (-1 ^ (3))))[3]) = SACp_emal_43846__pinl_12884__icc_5945__dim = (SACp_emal_43844__icc_5115__dim) - (SACl_iv__sz); }



    if (!((SACp_emal_43846__pinl_12884__icc_5945__dim == SACp_emal_43864__icc_5102__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_43864__icc_5102__dim; SAC_i++)
      {

        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43846__pinl_12884__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))[(6 + (SAC_i))]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43846__pinl_12884__icc_5945__desc) & (-1 ^ (3))))[4]) = SACp_emal_43846__pinl_12884__icc_5945__sz = SAC_size * SACp_emal_43864__icc_5102__sz;
      if (!((SACp_emal_43846__pinl_12884__icc_5945__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { int SAC_d = 0; int SAC_max_d = SACl_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACl_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_43844__icc_5115__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_43844__icc_5115_shpfac0; SAC_d = SACp_emal_43844__icc_5115__dim - 1; SACp_wlidx_42343__icc_5115 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_43844__icc_5115_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_43899__flat_378[SAC_d]) <= ( SACl_iv[SAC_d])) && (( SACl_iv[SAC_d]) < ( SACp_emal_43904__isaa_32159_data[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!(((SACp_emal_43895__pinl_12770_new_shape__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43851__pinl_12839__icc_5162"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22222 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22222 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22222 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22222 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22222 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22222 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22222 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22222, __extension__ __PRETTY_FUNCTION__); }))
# 22222 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43851__pinl_12839__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_43895__pinl_12770_new_shape__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43851__pinl_12839__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_43895__pinl_12770_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43851__pinl_12839__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_43895__pinl_12770_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[3]) = SACp_emal_43851__pinl_12839__icc_5162__dim = (SACp_emal_43895__pinl_12770_new_shape__sz) + (0); }



   
    if (!((SACp_emal_43895__pinl_12770_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_43851__pinl_12839__icc_5162__dim == SACp_emal_43895__pinl_12770_new_shape__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_43895__pinl_12770_new_shape__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_43895__pinl_12770_new_shape[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[4]) = SACp_emal_43851__pinl_12839__icc_5162__sz = SAC_size;
      if (!((SACp_emal_43851__pinl_12839__icc_5162__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22242 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22242 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22242 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22242 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22242 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22242 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22242 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22242, __extension__ __PRETTY_FUNCTION__); }))
# 22242 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43851__pinl_12839__icc_5162 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43851__pinl_12839__icc_5162__sz * sizeof (*SACp_emal_43851__pinl_12839__icc_5162)); break; case SAC_HM_multi_threaded: SACp_emal_43851__pinl_12839__icc_5162 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43851__pinl_12839__icc_5162__sz * sizeof (*SACp_emal_43851__pinl_12839__icc_5162), 0); break; case SAC_HM_any_threaded: SACp_emal_43851__pinl_12839__icc_5162 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43851__pinl_12839__icc_5162__sz * sizeof (*SACp_emal_43851__pinl_12839__icc_5162), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_12848_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_12848_iv"); }; { if ((((6 + (SACp_pinl_12848_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_12848_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_12848_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_12848_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_12848_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_12848_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_12848_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_12848_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_12848_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_12848_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_12848_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_12848_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_12848_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_12848_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_12848_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_12848_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_12848_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12848_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12848_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12848_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_12848_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_12848_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12848_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43892__pinl_12768__flat_322__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12848_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_12848_iv__sz = SAC_size * SACp_emal_43892__pinl_12768__flat_322__sz;
      if (!((SACp_pinl_12848_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22257 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22257 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22257 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22257 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22257 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22257 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22257 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22257, __extension__ __PRETTY_FUNCTION__); }))
# 22257 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_12848_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_12848_iv__sz * sizeof (*SACp_pinl_12848_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_12848_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_12848_iv__sz * sizeof (*SACp_pinl_12848_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_12848_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_12848_iv__sz * sizeof (*SACp_pinl_12848_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12848_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12848_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12848_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_12848_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_12848_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_43851__pinl_12839__icc_5162__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_43851__pinl_12839__icc_5162_shpfac0; SAC_d = SACp_emal_43851__pinl_12839__icc_5162__dim - 1; SACp_wlidx_42344__pinl_12839__icc_5162 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_43851__pinl_12839__icc_5162_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_43892__pinl_12768__flat_322[SAC_d]) <= ( SACp_pinl_12848_iv[SAC_d])) && (( SACp_pinl_12848_iv[SAC_d]) < ( SACp_emal_43895__pinl_12770_new_shape[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!((1 == SACp_emal_43857__pinl_12849_new_idx__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43857__pinl_12849_new_idx"); }; { if ((((6 + (SACp_emal_43857__pinl_12849_new_idx__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43857__pinl_12849_new_idx__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43857__pinl_12849_new_idx__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43857__pinl_12849_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43857__pinl_12849_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43857__pinl_12849_new_idx__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43857__pinl_12849_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43857__pinl_12849_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43857__pinl_12849_new_idx__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43857__pinl_12849_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43857__pinl_12849_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43857__pinl_12849_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43857__pinl_12849_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43857__pinl_12849_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43857__pinl_12849_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43857__pinl_12849_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43857__pinl_12849_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43857__pinl_12849_new_idx__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43857__pinl_12849_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43857__pinl_12849_new_idx__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACl_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_pinl_12848_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_43857__pinl_12849_new_idx__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43857__pinl_12849_new_idx__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43857__pinl_12849_new_idx__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_iv__sz + SACp_pinl_12848_iv__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43857__pinl_12849_new_idx__desc) & (-1 ^ (3))))[4]) = SACp_emal_43857__pinl_12849_new_idx__sz = SAC_size;
      if (!((SACp_emal_43857__pinl_12849_new_idx__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22290 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22290 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22290 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22290 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22290 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22290 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22290 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22290, __extension__ __PRETTY_FUNCTION__); }))
# 22290 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43857__pinl_12849_new_idx = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43857__pinl_12849_new_idx__sz * sizeof (*SACp_emal_43857__pinl_12849_new_idx)); break; case SAC_HM_multi_threaded: SACp_emal_43857__pinl_12849_new_idx = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43857__pinl_12849_new_idx__sz * sizeof (*SACp_emal_43857__pinl_12849_new_idx), 0); break; case SAC_HM_any_threaded: SACp_emal_43857__pinl_12849_new_idx = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43857__pinl_12849_new_idx__sz * sizeof (*SACp_emal_43857__pinl_12849_new_idx), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43857__pinl_12849_new_idx__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43857__pinl_12849_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43857__pinl_12849_new_idx__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACl_iv__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_43857__pinl_12849_new_idx[SAC_i] = ( SACl_iv[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_pinl_12848_iv__sz; SAC_i++) { { SACp_emal_43857__pinl_12849_new_idx[SAC_off + SAC_i] = ( SACp_pinl_12848_iv[SAC_i]); }; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    if ((SACp_emal_43857__pinl_12849_new_idx__dim == 1) && (SACp_emal_43857__pinl_12849_new_idx__shp0 == SACl_data__dim)) { SACp_emal_43856__pinl_12872__icc_5151_pred = 1; } else { SACp_emal_43856__pinl_12872__icc_5151_pred = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays " "SACp_emal_43857__pinl_12849_new_idx" " and " "SACl_data" " do not adhere to shape matches dim constraint"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_43857__pinl_12849_new_idx__sz; SAC_i++) { if (( SACp_emal_43857__pinl_12849_new_idx[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for vector " "SACp_emal_43857__pinl_12849_new_idx"); } { SACp_emal_43855__pinl_12874__icc_5152_pred = ( SACp_emal_43857__pinl_12849_new_idx[SAC_i]); }; } SACp_emal_43855__pinl_12874__icc_5152_pred = SAC_all; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }



    if ((SACp_emal_43857__pinl_12849_new_idx__dim != 1) && (SACp_emal_43857__pinl_12849_new_idx__shp0 != SACl_data__dim)) {
      SACp_emal_43854__pinl_12876__icc_5153_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_43857__pinl_12849_new_idx""' with shape %s ""And `" "SACl_data""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_43857__pinl_12849_new_idx__desc), SAC_PrintShape (SACl_data__desc));
    }
    else {
      int SAC_all = 1; for (int SAC_i = 0; SAC_i < SACl_data__dim; SAC_i++) {
        if (( SACp_emal_43857__pinl_12849_new_idx[SAC_i]) >= (((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[(6 + (SAC_i))])) {
          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_43857__pinl_12849_new_idx""' with shape %s ""And `" "SACl_data""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_43857__pinl_12849_new_idx__desc), SAC_PrintShape (SACl_data__desc));
        }
      }
      SACp_emal_43854__pinl_12876__icc_5153_pred = SAC_all;
    }

    if (!SACp_emal_43854__pinl_12876__icc_5153_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43855__pinl_12874__icc_5152_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43856__pinl_12872__icc_5151_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      for (SAC_i = 0; SAC_i < SACp_emal_43857__pinl_12849_new_idx__sz; SAC_i++)
      {

        SAC_l = ( SACp_emal_43904__isaa_32159_data[SAC_i]) * SAC_l + ( SACp_emal_43857__pinl_12849_new_idx[SAC_i]);
      }
      for (SAC_i = SACp_emal_43857__pinl_12849_new_idx__sz; SAC_i < SACp_emal_43904__isaa_32159_data__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_43904__isaa_32159_data[SAC_i]);
      }
      SACp_emal_43853__ivesli_42502 = SAC_l;
    }

    { { free (SACp_emal_43857__pinl_12849_new_idx); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43857__pinl_12849_new_idx__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_43852__pinl_12835__icc_5156 = ( SACl_data[SACp_emal_43853__ivesli_42502]); }

    { ; ; }
    if (!SACp_emal_43854__pinl_12876__icc_5153_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43855__pinl_12874__icc_5152_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_43856__pinl_12872__icc_5151_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_43851__pinl_12839__icc_5162__dim - SACp_pinl_12848_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_43851__pinl_12839__icc_5162_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal size found!"); };
    { SACp_emal_43851__pinl_12839__icc_5162[SACp_wlidx_42344__pinl_12839__icc_5162] = SACp_emal_43852__pinl_12835__icc_5156; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_43851__pinl_12839__icc_5162__dim - SACp_pinl_12848_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_43851__pinl_12839__icc_5162_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal size found!"); };
    { SACp_emal_43851__pinl_12839__icc_5162[SACp_wlidx_42344__pinl_12839__icc_5162] = SACp_emal_43903__flat_374; };

    }
    SACp_wlidx_42344__pinl_12839__icc_5162 = SACp_wlidx_42344__pinl_12839__icc_5162 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_12848_iv[SAC_d] = ( SACp_pinl_12848_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_12848_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_12848_iv[SAC_d] = 0; SAC_d--; SACp_pinl_12848_iv[SAC_d] = ( SACp_pinl_12848_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_12848_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_12848_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12848_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_43893__pinl_12786__icc_5150_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43889__pinl_12793__icc_5147_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43890__pinl_12790__icc_5146_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43894__pinl_12779__icc_5145_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43891__pinl_12788__icc_5144_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_43878__pinl_12818__icc_5939_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43874__pinl_12828__icc_5936_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43875__pinl_12825__icc_5935_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43879__pinl_12811__icc_5934_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43876__pinl_12823__icc_5933_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }



    SACp_emal_43846__pinl_12884__icc_5945 = SACp_emal_43844__icc_5115+SACp_wlidx_42343__icc_5115;

    { { if (!((1 == SACp_pinl_12887_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_12887_iv"); }; { if ((((6 + (SACp_pinl_12887_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_12887_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_12887_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_12887_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_12887_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_12887_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_12887_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_12887_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_12887_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_12887_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_12887_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_12887_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_12887_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_12887_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_12887_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_12887_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_12887_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12887_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12887_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12887_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_12887_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_12887_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12887_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_43877__pinl_12808__flat_456__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12887_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_12887_iv__sz = SAC_size * SACp_emal_43877__pinl_12808__flat_456__sz;
      if (!((SACp_pinl_12887_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22440 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22440 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22440 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22440 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22440 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22440 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22440 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22440, __extension__ __PRETTY_FUNCTION__); }))
# 22440 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_12887_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_12887_iv__sz * sizeof (*SACp_pinl_12887_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_12887_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_12887_iv__sz * sizeof (*SACp_pinl_12887_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_12887_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_12887_iv__sz * sizeof (*SACp_pinl_12887_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12887_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12887_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12887_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { if (!(((SACp_emal_43846__pinl_12884__icc_5945__dim) - (SACp_pinl_12887_iv__sz) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_43847_mem"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 22449 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 22449 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22449 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 22449 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 22449 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 22449 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 22449 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 22449, __extension__ __PRETTY_FUNCTION__); }))
# 22449 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43847_mem__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_43846__pinl_12884__icc_5945__dim) - (SACp_pinl_12887_iv__sz))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_43847_mem__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_43846__pinl_12884__icc_5945__dim) - (SACp_pinl_12887_iv__sz))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_43847_mem__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_43846__pinl_12884__icc_5945__dim) - (SACp_pinl_12887_iv__sz))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43847_mem__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43847_mem__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43847_mem__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43847_mem__desc) & (-1 ^ (3))))[3]) = SACp_emal_43847_mem__dim = (SACp_emal_43846__pinl_12884__icc_5945__dim) - (SACp_pinl_12887_iv__sz); }



    if (!((SACp_emal_43847_mem__dim == SACp_emal_43851__pinl_12839__icc_5162__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_43851__pinl_12839__icc_5162__dim; SAC_i++)
      {

        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43847_mem__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_i))]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43847_mem__desc) & (-1 ^ (3))))[4]) = SACp_emal_43847_mem__sz = SAC_size * SACp_emal_43851__pinl_12839__icc_5162__sz;
      if (!((SACp_emal_43847_mem__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "Array with size <0 found!"); };
    }

    { int SAC_d = 0; int SAC_max_d = SACp_pinl_12887_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_12887_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_43846__pinl_12884__icc_5945__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_43846__pinl_12884__icc_5945_shpfac0; SAC_d = SACp_emal_43846__pinl_12884__icc_5945__dim - 1; SACp_wlidx_42345__pinl_12884__icc_5945 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43846__pinl_12884__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_43846__pinl_12884__icc_5945_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_43877__pinl_12808__flat_456[SAC_d]) <= ( SACp_pinl_12887_iv[SAC_d])) && (( SACp_pinl_12887_iv[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    SACp_emal_43847_mem = SACp_emal_43846__pinl_12884__icc_5945+SACp_wlidx_42345__pinl_12884__icc_5945;

    { int SAC_i; if (!((SACp_emal_43847_mem__sz == SACp_emal_43851__pinl_12839__icc_5162__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_43851__pinl_12839__icc_5162__sz; SAC_i++) { { SACp_emal_43847_mem[SAC_i] = ( SACp_emal_43851__pinl_12839__icc_5162[SAC_i]); } } }
    } else {



    SACp_emal_43847_mem = SACp_emal_43846__pinl_12884__icc_5945+SACp_wlidx_42345__pinl_12884__icc_5945;

    { int SAC_i; if (!((SACp_emal_43847_mem__sz == SACp_emal_43851__pinl_12839__icc_5162__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_43851__pinl_12839__icc_5162__sz; SAC_i++) { { SACp_emal_43847_mem[SAC_i] = ( SACp_emal_43851__pinl_12839__icc_5162[SAC_i]); } } }
    }
    SACp_wlidx_42345__pinl_12884__icc_5945 = SACp_wlidx_42345__pinl_12884__icc_5945 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_12887_iv[SAC_d] = ( SACp_pinl_12887_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_12887_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43846__pinl_12884__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_12887_iv[SAC_d] = 0; SAC_d--; SACp_pinl_12887_iv[SAC_d] = ( SACp_pinl_12887_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_12887_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43846__pinl_12884__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43847_mem__desc) & (-1 ^ (3))))); } }
    { { free (SACp_pinl_12887_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12887_iv__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_43851__pinl_12839__icc_5162); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43851__pinl_12839__icc_5162__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_43878__pinl_12818__icc_5939_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43874__pinl_12828__icc_5936_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43875__pinl_12825__icc_5935_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43879__pinl_12811__icc_5934_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_43876__pinl_12823__icc_5933_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    } else {



    SACp_emal_43846__pinl_12884__icc_5945 = SACp_emal_43844__icc_5115+SACp_wlidx_42343__icc_5115;

    { int SAC_i; if (!((SACp_emal_43846__pinl_12884__icc_5945__sz == SACp_emal_43864__icc_5102__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_43864__icc_5102__sz; SAC_i++) { { SACp_emal_43846__pinl_12884__icc_5945[SAC_i] = ( SACp_emal_43864__icc_5102[SAC_i]); } } }
    }
    SACp_wlidx_42343__icc_5115 = SACp_wlidx_42343__icc_5115 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACl_iv[SAC_d] = ( SACl_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACl_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACl_iv[SAC_d] = 0; SAC_d--; SACl_iv[SAC_d] = ( SACl_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACl_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43844__icc_5115__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43846__pinl_12884__icc_5945__desc) & (-1 ^ (3))))); } }
    { { free (SACp_emal_43899__flat_378); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43899__flat_378__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_43864__icc_5102); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43864__icc_5102__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { { free (SACl_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_43877__pinl_12808__flat_456); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43877__pinl_12808__flat_456__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_43892__pinl_12768__flat_322); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43892__pinl_12768__flat_322__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_43895__pinl_12770_new_shape); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43895__pinl_12770_new_shape__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_43904__isaa_32159_data); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43904__isaa_32159_data__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_data); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))); } } } } else { } }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_shp); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))); } } } } else { } }
    if (!SACp_emal_43900__icc_5109_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43896__icc_5106_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43897__icc_5105_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43901__icc_5104_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_43898__icc_5103_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_43844__icc_5115; *SAC_arg_1__desc__p = SACp_emal_43844__icc_5115__desc; }
    return;
   
  }



}
}
# 22564 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_31_impl_pluscarret__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int SACp_pinl_48392__emal_44008__pinl_13072__flat_1140;
   
   




    int SACp_pinl_48391__emal_44007__pinl_22497__icc_8952;
   
   




    int SACp_pinl_48390__emal_44006__pinl_22559__esd_22403;
   
   




    
# 22594 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22594 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48387__emal_44003__pinl_22504__flat_1150;
   
   




    int SACp_pinl_48386__emal_44002__pinl_22510_val__SSA0_3;
   
   




    int SACp_pinl_48385__emal_44001__pinl_22503__flat_1154;
   
   




    int SACp_pinl_48383__emal_43999__pinl_22513_val__SSA0_5;
   
   




    
# 22622 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22622 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48382__emal_43998__uprf_22389;
   
   




    
# 22629 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22629 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48380__emal_43996__uprf_22380;
   
   




    int * SACp_pinl_48379__emal_43995__pinl_13111__idc_7637;
    SAC_array_descriptor_t SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__desc = 
# 22637 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 22637 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__shp0 = 1;
    const int SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz = 1;
    const int SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim = 1;




    
# 22645 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22645 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48378__emal_43994__uprf_22372;
   
   




    int * SACp_pinl_48377__emal_43993__pinl_13113__idc_7638;
    SAC_array_descriptor_t SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__desc = 
# 22653 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 22653 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__shp0 = 1;
    const int SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz = 1;
    const int SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim = 1;




    int SACp_pinl_48376__emal_43992__uprf_22367;
   
   




    
# 22668 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22668 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48374__emal_43990__uprf_22356;
   
   




    
# 22675 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22675 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48373__emal_43989__uprf_22350;
   
   




    int * SACp_pinl_48372__emal_43988__pinl_13123__idc_7644;
    SAC_array_descriptor_t SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__desc = 
# 22683 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 22683 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__shp0 = 1;
    const int SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz = 1;
    const int SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim = 1;




    int SACp_pinl_48371__emal_43987__pinl_22120__icc_6985;
   
   




    int SACp_pinl_48370__emal_43986__pinl_22123__icc_6991;
   
   




    int SACp_pinl_48369__emal_43985__pinl_22178_res;
   
   




    int SACp_pinl_48368__emal_43984__pinl_13158__wlbsc_9831_sc_e;
   
   




    int SACp_pinl_48364__emal_43980__uprf_22338;
   
   




    
# 22726 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22726 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48363__emal_43979__uprf_22332;
   
   




    
# 22733 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22733 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48362__emal_43978__uprf_22326;
   
   




    int * SACp_pinl_48361__emal_43977__pinl_13132__idc_7649;
    SAC_array_descriptor_t SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__desc = 
# 22741 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 22741 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__shp0 = 1;
    const int SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz = 1;
    const int SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim = 1;




    int SACp_pinl_48360__emal_43976__ivesli_42505;
   
   




    int SACp_pinl_48359__emal_43975__pinl_13066__icc_7620;
   
   




    int * SACp_pinl_48358__emal_43974__pinl_13071__icc_7626;
    SAC_array_descriptor_t SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc = 
# 22764 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 22764 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__shp0;
    int SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz;
    const int SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim = 1;




    
# 22772 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22772 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48357__emal_43973__pinl_13169__icc_5934_pred;
   
   




    
# 22779 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22779 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48356__emal_43972__pinl_13176__icc_5939_pred;
   
   




    int * SACp_pinl_48355__emal_43971__pinl_13166__flat_456;
    SAC_array_descriptor_t SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc = 
# 22787 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 22787 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48355__emal_43971__pinl_13166__flat_456__shp0;
    int SACp_pinl_48355__emal_43971__pinl_13166__flat_456__sz;
    const int SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim = 1;




    
# 22795 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22795 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48354__emal_43970__pinl_13181__icc_5933_pred;
   
   




    
# 22802 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22802 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48353__emal_43969__pinl_13183__icc_5935_pred;
   
   




    
# 22809 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22809 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48352__emal_43968__pinl_13186__icc_5936_pred;
   
   




    int * SACp_pinl_48348__emal_43964_mem;
    SAC_array_descriptor_t SACp_pinl_48348__emal_43964_mem__desc = 
# 22817 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 22817 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48348__emal_43964_mem__sz = 0;
    int SACp_pinl_48348__emal_43964_mem__dim = 0;




    int * SACp_pinl_48347__emal_43963__pinl_13165__icc_5945;
    SAC_array_descriptor_t SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc = 
# 22825 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 22825 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__sz = 0;
    int SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__dim = 0;




    int SACp_pinl_48346__emal_43962__pinl_12933__flat_1140;
   
   




    int SACp_pinl_48345__emal_43961__pinl_22423__icc_8952;
   
   




    int SACp_pinl_48344__emal_43960__pinl_22485__esd_22406;
   
   




    
# 22853 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22853 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48341__emal_43957__pinl_22430__flat_1150;
   
   




    int SACp_pinl_48340__emal_43956__pinl_22436_val__SSA0_3;
   
   




    int SACp_pinl_48339__emal_43955__pinl_22429__flat_1154;
   
   




    int SACp_pinl_48337__emal_43953__pinl_22439_val__SSA0_5;
   
   




    
# 22881 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22881 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48336__emal_43952__uprf_22317;
   
   




    
# 22888 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22888 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48334__emal_43950__uprf_22308;
   
   




    int * SACp_pinl_48333__emal_43949__pinl_12972__idc_7637;
    SAC_array_descriptor_t SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__desc = 
# 22896 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 22896 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__shp0 = 1;
    const int SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz = 1;
    const int SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim = 1;




    
# 22904 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22904 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48332__emal_43948__uprf_22300;
   
   




    int * SACp_pinl_48331__emal_43947__pinl_12974__idc_7638;
    SAC_array_descriptor_t SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__desc = 
# 22912 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 22912 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__shp0 = 1;
    const int SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz = 1;
    const int SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim = 1;




    int SACp_pinl_48330__emal_43946__uprf_22295;
   
   




    
# 22927 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22927 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48328__emal_43944__uprf_22284;
   
   




    
# 22934 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22934 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48327__emal_43943__uprf_22278;
   
   




    int * SACp_pinl_48326__emal_43942__pinl_12984__idc_7644;
    SAC_array_descriptor_t SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__desc = 
# 22942 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 22942 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__shp0 = 1;
    const int SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz = 1;
    const int SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim = 1;




    int SACp_pinl_48325__emal_43941__pinl_22059__icc_6985;
   
   




    int SACp_pinl_48324__emal_43940__pinl_22062__icc_6991;
   
   




    int SACp_pinl_48323__emal_43939__pinl_22117_res;
   
   




    int SACp_pinl_48322__emal_43938__pinl_13019__wlbsc_9831_sc_e;
   
   




    int SACp_pinl_48318__emal_43934__uprf_22266;
   
   




    
# 22985 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22985 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48317__emal_43933__uprf_22260;
   
   




    
# 22992 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 22992 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48316__emal_43932__uprf_22254;
   
   




    int * SACp_pinl_48315__emal_43931__pinl_12993__idc_7649;
    SAC_array_descriptor_t SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__desc = 
# 23000 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23000 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__shp0 = 1;
    const int SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz = 1;
    const int SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim = 1;




    int SACp_pinl_48314__emal_43930__ivesli_42504;
   
   




    int SACp_pinl_48313__emal_43929__pinl_12927__icc_7620;
   
   




    int * SACp_pinl_48312__emal_43928__pinl_12932__icc_7626;
    SAC_array_descriptor_t SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc = 
# 23023 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23023 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__shp0;
    int SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz;
    const int SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim = 1;




    
# 23031 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 23031 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48311__emal_43927__pinl_13030__icc_5934_pred;
   
   




    
# 23038 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 23038 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48310__emal_43926__pinl_13037__icc_5939_pred;
   
   




    int * SACp_pinl_48309__emal_43925__pinl_13027__flat_456;
    SAC_array_descriptor_t SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc = 
# 23046 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23046 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48309__emal_43925__pinl_13027__flat_456__shp0;
    int SACp_pinl_48309__emal_43925__pinl_13027__flat_456__sz;
    const int SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim = 1;




    
# 23054 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 23054 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48308__emal_43924__pinl_13042__icc_5933_pred;
   
   




    
# 23061 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 23061 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48307__emal_43923__pinl_13044__icc_5935_pred;
   
   




    
# 23068 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 23068 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48306__emal_43922__pinl_13047__icc_5936_pred;
   
   




    int * SACp_pinl_48302__emal_43918_mem;
    SAC_array_descriptor_t SACp_pinl_48302__emal_43918_mem__desc = 
# 23076 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23076 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48302__emal_43918_mem__sz = 0;
    int SACp_pinl_48302__emal_43918_mem__dim = 0;




    int * SACp_pinl_48301__emal_43917__pinl_13026__icc_5945;
    SAC_array_descriptor_t SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc = 
# 23084 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23084 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__sz = 0;
    int SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__dim = 0;




    int SACp_pinl_48298__wlidx_42349__pinl_13165__icc_5945;
   
   




    int SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626;
   
   




    int SACp_pinl_48296__wlidx_42347__pinl_13026__icc_5945;
   
   




    int SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626;
   
   




    int SACp_pinl_48241__eat_446;
   
   




    int * SACp_pinl_48240_iv;
    SAC_array_descriptor_t SACp_pinl_48240_iv__desc = 
# 23127 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23127 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48240_iv__shp0 = 1;
    const int SACp_pinl_48240_iv__sz = 1;
    const int SACp_pinl_48240_iv__dim = 1;




    int * SACp_pinl_48231_iv;
    SAC_array_descriptor_t SACp_pinl_48231_iv__desc = 
# 23136 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23136 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48231_iv__shp0;
    int SACp_pinl_48231_iv__sz;
    const int SACp_pinl_48231_iv__dim = 1;




    int SACp_pinl_48223__eat_446;
   
   




    int * SACp_pinl_48222_iv;
    SAC_array_descriptor_t SACp_pinl_48222_iv__desc = 
# 23152 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23152 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_48222_iv__shp0 = 1;
    const int SACp_pinl_48222_iv__sz = 1;
    const int SACp_pinl_48222_iv__dim = 1;




    int * SACp_pinl_48213_iv;
    SAC_array_descriptor_t SACp_pinl_48213_iv__desc = 
# 23161 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23161 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_48213_iv__shp0;
    int SACp_pinl_48213_iv__sz;
    const int SACp_pinl_48213_iv__dim = 1;




    int SACp_emal_43916__isaa_32322_b;
   
   




    int * SACp_emal_43915__isaa_32323_b;
    SAC_array_descriptor_t SACp_emal_43915__isaa_32323_b__desc = 
# 23177 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23177 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43915__isaa_32323_b__shp0;
    int SACp_emal_43915__isaa_32323_b__sz;
    const int SACp_emal_43915__isaa_32323_b__dim = 1;




    int SACp_emal_43914__isaa_32325_a;
   
   




    int * SACp_emal_43913__isaa_32326_a;
    SAC_array_descriptor_t SACp_emal_43913__isaa_32326_a__desc = 
# 23193 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23193 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_43913__isaa_32326_a__shp0;
    int SACp_emal_43913__isaa_32326_a__sz;
    const int SACp_emal_43913__isaa_32326_a__dim = 1;




    int SACp_emal_43912__mse_32330_l;
   
   




    int * SACp_emal_43911__isaa_32329_lshp;
    SAC_array_descriptor_t SACp_emal_43911__isaa_32329_lshp__desc = 
# 23209 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23209 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43911__isaa_32329_lshp__shp0 = 1;
    const int SACp_emal_43911__isaa_32329_lshp__sz = 1;
    const int SACp_emal_43911__isaa_32329_lshp__dim = 1;




    int SACp_emal_43910__mse_32333_r;
   
   




    int * SACp_emal_43909__isaa_32332_rshp;
    SAC_array_descriptor_t SACp_emal_43909__isaa_32332_rshp__desc = 
# 23225 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23225 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_43909__isaa_32332_rshp__shp0 = 1;
    const int SACp_emal_43909__isaa_32332_rshp__sz = 1;
    const int SACp_emal_43909__isaa_32332_rshp__dim = 1;




    int SACp_emal_43907__pinl_12908__flat_964;
   
   




    
# 23240 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 23240 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_43906__pinl_12909__flat_1058;
   
   




    int * SACl_a__SSA0_1;
    SAC_array_descriptor_t SACl_a__SSA0_1__desc = 
# 23248 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23248 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACl_a__SSA0_1__sz = 0;
    int SACl_a__SSA0_1__dim = 0;




    int * SACl_b__SSA0_1;
    SAC_array_descriptor_t SACl_b__SSA0_1__desc = 
# 23256 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23256 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACl_b__SSA0_1__sz = 0;
    int SACl_b__SSA0_1__dim = 0;




    int * SACp_flat_403;
    SAC_array_descriptor_t SACp_flat_403__desc = 
# 23264 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 23264 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_flat_403__sz = 0;
    int SACp_flat_403__dim = 0;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_43916__isaa_32322_b = SACl_b__dim; }; }
    { { if (!((1 == SACp_emal_43915__isaa_32323_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43915__isaa_32323_b"); }; { if ((((6 + (SACp_emal_43915__isaa_32323_b__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43915__isaa_32323_b__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43915__isaa_32323_b__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43915__isaa_32323_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43915__isaa_32323_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43915__isaa_32323_b__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43915__isaa_32323_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43915__isaa_32323_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43915__isaa_32323_b__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43915__isaa_32323_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43915__isaa_32323_b__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43915__isaa_32323_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43915__isaa_32323_b__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43915__isaa_32323_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43915__isaa_32323_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43915__isaa_32323_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43915__isaa_32323_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43915__isaa_32323_b__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43915__isaa_32323_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43915__isaa_32323_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43915__isaa_32323_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43915__isaa_32323_b__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43915__isaa_32323_b__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43915__isaa_32323_b__desc) & (-1 ^ (3))))[4]) = SACp_emal_43915__isaa_32323_b__sz = SAC_size;
      if (!((SACp_emal_43915__isaa_32323_b__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 23298 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 23298 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23298 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 23298 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23298 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 23298 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 23298 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 23298, __extension__ __PRETTY_FUNCTION__); }))
# 23298 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43915__isaa_32323_b = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43915__isaa_32323_b__sz * sizeof (*SACp_emal_43915__isaa_32323_b)); break; case SAC_HM_multi_threaded: SACp_emal_43915__isaa_32323_b = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43915__isaa_32323_b__sz * sizeof (*SACp_emal_43915__isaa_32323_b), 0); break; case SAC_HM_any_threaded: SACp_emal_43915__isaa_32323_b = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43915__isaa_32323_b__sz * sizeof (*SACp_emal_43915__isaa_32323_b), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43915__isaa_32323_b__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43915__isaa_32323_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43915__isaa_32323_b__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
      { SACp_emal_43915__isaa_32323_b[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_43914__isaa_32325_a = SACl_a__dim; }; }
    { { if (!((1 == SACp_emal_43913__isaa_32326_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43913__isaa_32326_a"); }; { if ((((6 + (SACp_emal_43913__isaa_32326_a__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43913__isaa_32326_a__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_43913__isaa_32326_a__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43913__isaa_32326_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43913__isaa_32326_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_43913__isaa_32326_a__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43913__isaa_32326_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43913__isaa_32326_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_43913__isaa_32326_a__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_43913__isaa_32326_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_43913__isaa_32326_a__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_43913__isaa_32326_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_43913__isaa_32326_a__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43913__isaa_32326_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43913__isaa_32326_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43913__isaa_32326_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43913__isaa_32326_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43913__isaa_32326_a__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43913__isaa_32326_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43913__isaa_32326_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43913__isaa_32326_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_43913__isaa_32326_a__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43913__isaa_32326_a__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43913__isaa_32326_a__desc) & (-1 ^ (3))))[4]) = SACp_emal_43913__isaa_32326_a__sz = SAC_size;
      if (!((SACp_emal_43913__isaa_32326_a__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 23331 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 23331 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23331 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 23331 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23331 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 23331 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 23331 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 23331, __extension__ __PRETTY_FUNCTION__); }))
# 23331 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_43913__isaa_32326_a = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_43913__isaa_32326_a__sz * sizeof (*SACp_emal_43913__isaa_32326_a)); break; case SAC_HM_multi_threaded: SACp_emal_43913__isaa_32326_a = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_43913__isaa_32326_a__sz * sizeof (*SACp_emal_43913__isaa_32326_a), 0); break; case SAC_HM_any_threaded: SACp_emal_43913__isaa_32326_a = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_43913__isaa_32326_a__sz * sizeof (*SACp_emal_43913__isaa_32326_a), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43913__isaa_32326_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43913__isaa_32326_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43913__isaa_32326_a__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
      { SACp_emal_43913__isaa_32326_a[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; { SACp_emal_43912__mse_32330_l = ((SACp_emal_43914__isaa_32325_a) < 0) ? -(SACp_emal_43914__isaa_32325_a) : (SACp_emal_43914__isaa_32325_a); };
    { { if (!((1 == SACp_emal_43911__isaa_32329_lshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43911__isaa_32329_lshp"); }; { { if ((((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp)) + ((6 + (SACp_emal_43911__isaa_32329_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp)) + ((6 + (SACp_emal_43911__isaa_32329_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp)) + ((6 + (SACp_emal_43911__isaa_32329_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43911__isaa_32329_lshp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43911__isaa_32329_lshp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp)) + ((6 + (SACp_emal_43911__isaa_32329_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43911__isaa_32329_lshp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43911__isaa_32329_lshp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp)) + ((6 + (SACp_emal_43911__isaa_32329_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp)) + ((6 + (SACp_emal_43911__isaa_32329_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp)) + ((6 + (SACp_emal_43911__isaa_32329_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp)) + ((6 + (SACp_emal_43911__isaa_32329_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp)) + ((6 + (SACp_emal_43911__isaa_32329_lshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43911__isaa_32329_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43911__isaa_32329_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43911__isaa_32329_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43911__isaa_32329_lshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43911__isaa_32329_lshp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp), ((6 + (SACp_emal_43911__isaa_32329_lshp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43911__isaa_32329_lshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43911__isaa_32329_lshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43911__isaa_32329_lshp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43911__isaa_32329_lshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 35, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43911__isaa_32329_lshp__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 35, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43911__isaa_32329_lshp[0] = SACp_emal_43912__mse_32330_l; }

    { ; ; }
    ; { SACp_emal_43910__mse_32333_r = ((SACp_emal_43916__isaa_32322_b) < 0) ? -(SACp_emal_43916__isaa_32322_b) : (SACp_emal_43916__isaa_32322_b); };
    { { if (!((1 == SACp_emal_43909__isaa_32332_rshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_43909__isaa_32332_rshp"); }; { { if ((((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp)) + ((6 + (SACp_emal_43909__isaa_32332_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp)) + ((6 + (SACp_emal_43909__isaa_32332_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp)) + ((6 + (SACp_emal_43909__isaa_32332_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43909__isaa_32332_rshp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_43909__isaa_32332_rshp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp)) + ((6 + (SACp_emal_43909__isaa_32332_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_43909__isaa_32332_rshp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_43909__isaa_32332_rshp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp)) + ((6 + (SACp_emal_43909__isaa_32332_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp)) + ((6 + (SACp_emal_43909__isaa_32332_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp)) + ((6 + (SACp_emal_43909__isaa_32332_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp)) + ((6 + (SACp_emal_43909__isaa_32332_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp)) + ((6 + (SACp_emal_43909__isaa_32332_rshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_43909__isaa_32332_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_43909__isaa_32332_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_43909__isaa_32332_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_43909__isaa_32332_rshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_43909__isaa_32332_rshp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp), ((6 + (SACp_emal_43909__isaa_32332_rshp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43909__isaa_32332_rshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43909__isaa_32332_rshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43909__isaa_32332_rshp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_43909__isaa_32332_rshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 50, "Assignment with incompatible types found"); };
    if (!((SACp_emal_43909__isaa_32332_rshp__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 74, 50, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_43909__isaa_32332_rshp[0] = SACp_emal_43910__mse_32333_r; }

    { ; ; }
    ; ; { SACp_emal_43914__isaa_32325_a = (SACp_emal_43914__isaa_32325_a) - (SACp_emal_43916__isaa_32322_b); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ScalarArith.sac", 92, 133, "Assignment with incompatible types found"); };
    ;

    }
    ; { SACp_emal_43907__pinl_12908__flat_964 = ((SACp_emal_43914__isaa_32325_a) < 0) ? -(SACp_emal_43914__isaa_32325_a) : (SACp_emal_43914__isaa_32325_a); };
    ; ; { SACp_emal_43906__pinl_12909__flat_1058 = (SACp_emal_43914__isaa_32325_a) < (0); };
    { ; ; }
    if (SACp_emal_43906__pinl_12909__flat_1058)
    {
      { { free (SACp_emal_43913__isaa_32326_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43913__isaa_32326_a__desc) & (-1 ^ (3))))); } } }
      { { { if (((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, ((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)); } else { if (SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, ((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, ((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, ((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)); } else { if (((((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, ((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43911__isaa_32329_lshp__desc) & (-1 ^ (3))))); } } }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1747, "Assignment with incompatible types found"); };
      ;

      }
      { { SACp_pinl_48346__emal_43962__pinl_12933__flat_1140 = 0; }; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1896, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48345__emal_43961__pinl_22423__icc_8952 = ( SACp_emal_43909__isaa_32332_rshp[SACp_pinl_48346__emal_43962__pinl_12933__flat_1140]); }

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1969, "Assignment with incompatible types found"); };
      ;

      }
      ; { SACp_pinl_48344__emal_43960__pinl_22485__esd_22406 = -(SACp_emal_43907__pinl_12908__flat_964); };
      ; ; { SACp_pinl_48344__emal_43960__pinl_22485__esd_22406 = (SACp_pinl_48344__emal_43960__pinl_22485__esd_22406) - (SACp_pinl_48345__emal_43961__pinl_22423__icc_8952); };
      ; ; { SACp_pinl_48344__emal_43960__pinl_22485__esd_22406 = (0) > (SACp_pinl_48344__emal_43960__pinl_22485__esd_22406) ? (0) : (SACp_pinl_48344__emal_43960__pinl_22485__esd_22406); };
      ; ; { SACp_pinl_48341__emal_43957__pinl_22430__flat_1150 = (SACp_emal_43907__pinl_12908__flat_964) >= (0); };
      { if (SACp_pinl_48341__emal_43957__pinl_22430__flat_1150) { SACp_pinl_48340__emal_43956__pinl_22436_val__SSA0_3 = SACp_pinl_48346__emal_43962__pinl_12933__flat_1140; } else { SACp_pinl_48340__emal_43956__pinl_22436_val__SSA0_3 = SACp_pinl_48344__emal_43960__pinl_22485__esd_22406; } }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2152, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_pinl_48339__emal_43955__pinl_22429__flat_1154 = (SACp_pinl_48345__emal_43961__pinl_22423__icc_8952) + (SACp_emal_43907__pinl_12908__flat_964); };
      ; ; { SACp_pinl_48339__emal_43955__pinl_22429__flat_1154 = (0) > (SACp_pinl_48339__emal_43955__pinl_22429__flat_1154) ? (0) : (SACp_pinl_48339__emal_43955__pinl_22429__flat_1154); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2177, "Assignment with incompatible types found"); };
      ;

      }
      { if (SACp_pinl_48341__emal_43957__pinl_22430__flat_1150) { SACp_pinl_48337__emal_43953__pinl_22439_val__SSA0_5 = SACp_pinl_48346__emal_43962__pinl_12933__flat_1140; } else { SACp_pinl_48337__emal_43953__pinl_22439_val__SSA0_5 = SACp_pinl_48339__emal_43955__pinl_22429__flat_1154; } }
      { ; ; }
      { ; ; }
      if (SACp_pinl_48340__emal_43956__pinl_22436_val__SSA0_3 >= 0) { { SACp_pinl_48336__emal_43952__uprf_22317 = SACp_pinl_48340__emal_43956__pinl_22436_val__SSA0_3; }; SACp_pinl_48336__emal_43952__uprf_22317 = 1; } else { SACp_pinl_48336__emal_43952__uprf_22317 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48340__emal_43956__pinl_22436_val__SSA0_3"); }
      ; { SACp_emal_43907__pinl_12908__flat_964 = ((SACp_emal_43907__pinl_12908__flat_964) < 0) ? -(SACp_emal_43907__pinl_12908__flat_964) : (SACp_emal_43907__pinl_12908__flat_964); };
      if (SACp_pinl_48340__emal_43956__pinl_22436_val__SSA0_3 <= SACp_emal_43907__pinl_12908__flat_964) { SACp_pinl_48334__emal_43950__uprf_22308 = 1; } else { SACp_pinl_48334__emal_43950__uprf_22308 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Scalar constraint `" "SACp_pinl_48340__emal_43956__pinl_22436_val__SSA0_3" " (" "%d" ") <= " "SACp_emal_43907__pinl_12908__flat_964" " (" "%d" ")" "' violated", SACp_pinl_48340__emal_43956__pinl_22436_val__SSA0_3, SACp_emal_43907__pinl_12908__flat_964); }
      { { if (!((1 == SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48333__emal_43949__pinl_12972__idc_7637"); }; { { if ((((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637)) + ((6 + (SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637)) + ((6 + (SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637)) + ((6 + (SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48333__emal_43949__pinl_12972__idc_7637 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48333__emal_43949__pinl_12972__idc_7637 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637)) + ((6 + (SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48333__emal_43949__pinl_12972__idc_7637 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48333__emal_43949__pinl_12972__idc_7637 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637)) + ((6 + (SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637)) + ((6 + (SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637)) + ((6 + (SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637)) + ((6 + (SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637)) + ((6 + (SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48333__emal_43949__pinl_12972__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48333__emal_43949__pinl_12972__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48333__emal_43949__pinl_12972__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48333__emal_43949__pinl_12972__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637, SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637), ((6 + (SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48333__emal_43949__pinl_12972__idc_7637[0] = SACp_pinl_48340__emal_43956__pinl_22436_val__SSA0_3; }

      if (SACp_emal_43907__pinl_12908__flat_964 >= 0) { { SACp_pinl_48332__emal_43948__uprf_22300 = SACp_emal_43907__pinl_12908__flat_964; }; SACp_pinl_48332__emal_43948__uprf_22300 = 1; } else { SACp_pinl_48332__emal_43948__uprf_22300 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Non-negativity constraint violated " "for scalar " "SACp_emal_43907__pinl_12908__flat_964"); }
      { { if (!((1 == SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48331__emal_43947__pinl_12974__idc_7638"); }; { { if ((((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638)) + ((6 + (SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638)) + ((6 + (SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638)) + ((6 + (SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48331__emal_43947__pinl_12974__idc_7638 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48331__emal_43947__pinl_12974__idc_7638 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638)) + ((6 + (SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48331__emal_43947__pinl_12974__idc_7638 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48331__emal_43947__pinl_12974__idc_7638 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638)) + ((6 + (SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638)) + ((6 + (SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638)) + ((6 + (SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638)) + ((6 + (SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638)) + ((6 + (SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48331__emal_43947__pinl_12974__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48331__emal_43947__pinl_12974__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48331__emal_43947__pinl_12974__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48331__emal_43947__pinl_12974__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638, SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638), ((6 + (SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48331__emal_43947__pinl_12974__idc_7638[0] = SACp_emal_43907__pinl_12908__flat_964; }

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2297, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_pinl_48330__emal_43946__uprf_22295 = (SACp_pinl_48345__emal_43961__pinl_22423__icc_8952) < (SACp_emal_43907__pinl_12908__flat_964) ? (SACp_pinl_48345__emal_43961__pinl_22423__icc_8952) : (SACp_emal_43907__pinl_12908__flat_964); };
      ; ; { SACp_pinl_48330__emal_43946__uprf_22295 = (SACp_pinl_48330__emal_43946__uprf_22295) + (SACp_pinl_48340__emal_43956__pinl_22436_val__SSA0_3); };
      { ; ; }
      if (SACp_pinl_48330__emal_43946__uprf_22295 >= 0) { { SACp_pinl_48328__emal_43944__uprf_22284 = SACp_pinl_48330__emal_43946__uprf_22295; }; SACp_pinl_48328__emal_43944__uprf_22284 = 1; } else { SACp_pinl_48328__emal_43944__uprf_22284 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48330__emal_43946__uprf_22295"); }
      if (SACp_pinl_48330__emal_43946__uprf_22295 <= SACp_emal_43907__pinl_12908__flat_964) { SACp_pinl_48327__emal_43943__uprf_22278 = 1; } else { SACp_pinl_48327__emal_43943__uprf_22278 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Scalar constraint `" "SACp_pinl_48330__emal_43946__uprf_22295" " (" "%d" ") <= " "SACp_emal_43907__pinl_12908__flat_964" " (" "%d" ")" "' violated", SACp_pinl_48330__emal_43946__uprf_22295, SACp_emal_43907__pinl_12908__flat_964); }
      { ; ; }
      { { if (!((1 == SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48326__emal_43942__pinl_12984__idc_7644"); }; { { if ((((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644)) + ((6 + (SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644)) + ((6 + (SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644)) + ((6 + (SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48326__emal_43942__pinl_12984__idc_7644 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48326__emal_43942__pinl_12984__idc_7644 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644)) + ((6 + (SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48326__emal_43942__pinl_12984__idc_7644 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48326__emal_43942__pinl_12984__idc_7644 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644)) + ((6 + (SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644)) + ((6 + (SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644)) + ((6 + (SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644)) + ((6 + (SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644)) + ((6 + (SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48326__emal_43942__pinl_12984__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48326__emal_43942__pinl_12984__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48326__emal_43942__pinl_12984__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48326__emal_43942__pinl_12984__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644, SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644), ((6 + (SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2321, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2321, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48326__emal_43942__pinl_12984__idc_7644[0] = SACp_pinl_48330__emal_43946__uprf_22295; }

      { ; ; }
      if (!SACp_pinl_48332__emal_43948__uprf_22300) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48327__emal_43943__uprf_22278) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48334__emal_43950__uprf_22308) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48328__emal_43944__uprf_22284) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48336__emal_43952__uprf_22317) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48325__emal_43941__pinl_22059__icc_6985 = ( SACp_pinl_48333__emal_43949__pinl_12972__idc_7637[SACp_pinl_48346__emal_43962__pinl_12933__flat_1140]); }

      { { { if (((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637) - 1)->data1.arena)); } else { if (SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637) - 1)->data1.arena)); } else { if (((((SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__sz * sizeof (*SACp_pinl_48333__emal_43949__pinl_12972__idc_7637))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48333__emal_43949__pinl_12972__idc_7637__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48324__emal_43940__pinl_22062__icc_6991 = ( SACp_pinl_48326__emal_43942__pinl_12984__idc_7644[SACp_pinl_48346__emal_43962__pinl_12933__flat_1140]); }

      { { { if (((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644) - 1)->data1.arena)); } else { if (SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644) - 1)->data1.arena)); } else { if (((((SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__sz * sizeof (*SACp_pinl_48326__emal_43942__pinl_12984__idc_7644))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48326__emal_43942__pinl_12984__idc_7644__desc) & (-1 ^ (3))))); } } }
      ; ; { SACp_pinl_48323__emal_43939__pinl_22117_res = (SACp_pinl_48325__emal_43941__pinl_22059__icc_6985) > (SACp_pinl_48324__emal_43940__pinl_22062__icc_6991) ? (SACp_pinl_48325__emal_43941__pinl_22059__icc_6985) : (SACp_pinl_48324__emal_43940__pinl_22062__icc_6991); };



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48322__emal_43938__pinl_13019__wlbsc_9831_sc_e = ( SACp_pinl_48331__emal_43947__pinl_12974__idc_7638[SACp_pinl_48346__emal_43962__pinl_12933__flat_1140]); }

      { { { if (((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638) - 1)->data1.arena)); } else { if (SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638) - 1)->data1.arena)); } else { if (((((SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__sz * sizeof (*SACp_pinl_48331__emal_43947__pinl_12974__idc_7638))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48331__emal_43947__pinl_12974__idc_7638__desc) & (-1 ^ (3))))); } } }
      ; ; { SACp_pinl_48337__emal_43953__pinl_22439_val__SSA0_5 = (SACp_pinl_48337__emal_43953__pinl_22439_val__SSA0_5) - (SACp_pinl_48325__emal_43941__pinl_22059__icc_6985); };
      { { if (!((1 == SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48312__emal_43928__pinl_12932__icc_7626"); }; { if ((((6 + (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48322__emal_43938__pinl_13019__wlbsc_9831_sc_e;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz = SAC_size;
        if (!((SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 23548 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 23548 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23548 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 23548 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23548 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 23548 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 23548 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 23548, __extension__ __PRETTY_FUNCTION__); }))
# 23548 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48312__emal_43928__pinl_12932__icc_7626 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz * sizeof (*SACp_pinl_48312__emal_43928__pinl_12932__icc_7626)); break; case SAC_HM_multi_threaded: SACp_pinl_48312__emal_43928__pinl_12932__icc_7626 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz * sizeof (*SACp_pinl_48312__emal_43928__pinl_12932__icc_7626), 0); break; case SAC_HM_any_threaded: SACp_pinl_48312__emal_43928__pinl_12932__icc_7626 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz * sizeof (*SACp_pinl_48312__emal_43928__pinl_12932__icc_7626), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_pinl_48312__emal_43928__pinl_12932__icc_7626_shpfac0;




        {
          int SAC_i;
          SAC_SACp_pinl_48312__emal_43928__pinl_12932__icc_7626_shpfac0 = 1;
        }




        SAC_schedule_start0 = SACp_pinl_48323__emal_43939__pinl_22117_res;
        SAC_schedule_stop0 = SACp_pinl_48322__emal_43938__pinl_13019__wlbsc_9831_sc_e;




        SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48312__emal_43928__pinl_12932__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_48223__eat_446 = SACp_pinl_48322__emal_43938__pinl_13019__wlbsc_9831_sc_e; for (SACp_pinl_48223__eat_446 = SACp_pinl_48323__emal_43939__pinl_22117_res; SACp_pinl_48223__eat_446 < SACp_pinl_48322__emal_43938__pinl_13019__wlbsc_9831_sc_e;) {
       



        if (!((0 == (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim - SACp_pinl_48222_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48312__emal_43928__pinl_12932__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal size found!"); };
        { SACp_pinl_48312__emal_43928__pinl_12932__icc_7626[SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626] = SACp_pinl_48346__emal_43962__pinl_12933__flat_1140; };

        SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626 = SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626 + 1;
        SACp_pinl_48223__eat_446 = SACp_pinl_48223__eat_446 + 1;
        } }
# 23618 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_48325__emal_43941__pinl_22059__icc_6985;




        SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48312__emal_43928__pinl_12932__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_48223__eat_446 = SACp_pinl_48325__emal_43941__pinl_22059__icc_6985; for (SACp_pinl_48223__eat_446 = 0; SACp_pinl_48223__eat_446 < SACp_pinl_48325__emal_43941__pinl_22059__icc_6985;) {
       



        if (!((0 == (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim - SACp_pinl_48222_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48312__emal_43928__pinl_12932__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal size found!"); };
        { SACp_pinl_48312__emal_43928__pinl_12932__icc_7626[SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626] = SACp_pinl_48346__emal_43962__pinl_12933__flat_1140; };

        SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626 = SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626 + 1;
        SACp_pinl_48223__eat_446 = SACp_pinl_48223__eat_446 + 1;
        } }
# 23647 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_pinl_48325__emal_43941__pinl_22059__icc_6985;
        SAC_schedule_stop0 = SACp_pinl_48324__emal_43940__pinl_22062__icc_6991;




        SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48312__emal_43928__pinl_12932__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_48223__eat_446 = SACp_pinl_48324__emal_43940__pinl_22062__icc_6991; for (SACp_pinl_48223__eat_446 = SACp_pinl_48325__emal_43941__pinl_22059__icc_6985; SACp_pinl_48223__eat_446 < SACp_pinl_48324__emal_43940__pinl_22062__icc_6991;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_48318__emal_43934__uprf_22266 = (SACp_pinl_48223__eat_446) + (SACp_pinl_48337__emal_43953__pinl_22439_val__SSA0_5); };
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_48318__emal_43934__uprf_22266 >= 0) { { SACp_pinl_48317__emal_43933__uprf_22260 = SACp_pinl_48318__emal_43934__uprf_22266; }; SACp_pinl_48317__emal_43933__uprf_22260 = 1; } else { SACp_pinl_48317__emal_43933__uprf_22260 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48318__emal_43934__uprf_22266"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_48318__emal_43934__uprf_22266 < SACp_pinl_48345__emal_43961__pinl_22423__icc_8952) { SACp_pinl_48316__emal_43932__uprf_22254 = 1; } else { SACp_pinl_48316__emal_43932__uprf_22254 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Scalar constraint `" "SACp_pinl_48318__emal_43934__uprf_22266" " (" "%d" ") < " "SACp_pinl_48345__emal_43961__pinl_22423__icc_8952" " (" "%d" ")" "' violated", SACp_pinl_48318__emal_43934__uprf_22266, SACp_pinl_48345__emal_43961__pinl_22423__icc_8952); }
        { { if (!((1 == SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48315__emal_43931__pinl_12993__idc_7649"); }; { { if ((((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649)) + ((6 + (SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649)) + ((6 + (SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649)) + ((6 + (SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48315__emal_43931__pinl_12993__idc_7649 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48315__emal_43931__pinl_12993__idc_7649 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649)) + ((6 + (SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48315__emal_43931__pinl_12993__idc_7649 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48315__emal_43931__pinl_12993__idc_7649 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649)) + ((6 + (SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649)) + ((6 + (SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649)) + ((6 + (SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649)) + ((6 + (SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649)) + ((6 + (SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48315__emal_43931__pinl_12993__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48315__emal_43931__pinl_12993__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48315__emal_43931__pinl_12993__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48315__emal_43931__pinl_12993__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649, SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649), ((6 + (SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_48315__emal_43931__pinl_12993__idc_7649[0] = SACp_pinl_48318__emal_43934__uprf_22266; }

        { ; ; }
        if (!SACp_pinl_48316__emal_43932__uprf_22254) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48317__emal_43933__uprf_22260) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_48314__emal_43930__ivesli_42504 = ( SACp_pinl_48315__emal_43931__pinl_12993__idc_7649[0]);

        { { { if (((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649) - 1)->data1.arena)); } else { if (SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649) - 1)->data1.arena)); } else { if (((((SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__sz * sizeof (*SACp_pinl_48315__emal_43931__pinl_12993__idc_7649))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48315__emal_43931__pinl_12993__idc_7649__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_48313__emal_43929__pinl_12927__icc_7620 = ( SACp_emal_43915__isaa_32323_b[SACp_pinl_48314__emal_43930__ivesli_42504]); }

        { ; ; }
        if (!SACp_pinl_48316__emal_43932__uprf_22254) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48317__emal_43933__uprf_22260) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }



        if (!((0 == (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim - SACp_pinl_48222_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48312__emal_43928__pinl_12932__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal size found!"); };
        { SACp_pinl_48312__emal_43928__pinl_12932__icc_7626[SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626] = SACp_pinl_48313__emal_43929__pinl_12927__icc_7620; };

        { ; ; }
        SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626 = SACp_pinl_48295__wlidx_42346__pinl_12932__icc_7626 + 1;
        SACp_pinl_48223__eat_446 = SACp_pinl_48223__eat_446 + 1;
        } }
# 23755 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48566_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { { free (SACp_emal_43915__isaa_32323_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43915__isaa_32323_b__desc) & (-1 ^ (3))))); } } }
      { { { if (((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, ((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)); } else { if (SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, ((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, ((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, ((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)); } else { if (((((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, ((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43909__isaa_32332_rshp__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_48332__emal_43948__uprf_22300) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48327__emal_43943__uprf_22278) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48334__emal_43950__uprf_22308) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48328__emal_43944__uprf_22284) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48336__emal_43952__uprf_22317) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz; SAC_i++) { if (( SACp_pinl_48312__emal_43928__pinl_12932__icc_7626[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACp_pinl_48312__emal_43928__pinl_12932__icc_7626"); } { SACp_pinl_48311__emal_43927__pinl_13030__icc_5934_pred = ( SACp_pinl_48312__emal_43928__pinl_12932__icc_7626[SAC_i]); }; } SACp_pinl_48311__emal_43927__pinl_13030__icc_5934_pred = SAC_all; }
      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz; SAC_i++) { if (( SACp_pinl_48312__emal_43928__pinl_12932__icc_7626[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Non-negativity constraint violated " "for vector " "SACp_pinl_48312__emal_43928__pinl_12932__icc_7626"); } { SACp_pinl_48310__emal_43926__pinl_13037__icc_5939_pred = ( SACp_pinl_48312__emal_43928__pinl_12932__icc_7626[SAC_i]); }; } SACp_pinl_48310__emal_43926__pinl_13037__icc_5939_pred = SAC_all; }
      { { if (!((1 == SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48309__emal_43925__pinl_13027__flat_456"); }; { if ((((6 + (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48309__emal_43925__pinl_13027__flat_456__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48309__emal_43925__pinl_13027__flat_456__sz = SAC_size * SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz;
        if (!((SACp_pinl_48309__emal_43925__pinl_13027__flat_456__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 23796 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 23796 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23796 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 23796 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23796 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 23796 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 23796 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 23796, __extension__ __PRETTY_FUNCTION__); }))
# 23796 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48309__emal_43925__pinl_13027__flat_456 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__sz * sizeof (*SACp_pinl_48309__emal_43925__pinl_13027__flat_456)); break; case SAC_HM_multi_threaded: SACp_pinl_48309__emal_43925__pinl_13027__flat_456 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__sz * sizeof (*SACp_pinl_48309__emal_43925__pinl_13027__flat_456), 0); break; case SAC_HM_any_threaded: SACp_pinl_48309__emal_43925__pinl_13027__flat_456 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__sz * sizeof (*SACp_pinl_48309__emal_43925__pinl_13027__flat_456), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc) & (-1 ^ (3))))[1]) = 0; } }
      ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_pinl_48309__emal_43925__pinl_13027__flat_456__sz; SAC_i++) { { SACp_pinl_48309__emal_43925__pinl_13027__flat_456[SAC_i] = (0) * (( SACp_pinl_48312__emal_43928__pinl_12932__icc_7626[SAC_i])); }; } }
      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48309__emal_43925__pinl_13027__flat_456__sz; SAC_i++) { if (( SACp_pinl_48309__emal_43925__pinl_13027__flat_456[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACp_pinl_48309__emal_43925__pinl_13027__flat_456"); } { SACp_pinl_48308__emal_43924__pinl_13042__icc_5933_pred = ( SACp_pinl_48309__emal_43925__pinl_13027__flat_456[SAC_i]); }; } SACp_pinl_48308__emal_43924__pinl_13042__icc_5933_pred = SAC_all; }
            if (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__dim != SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim) {
        SACp_pinl_48307__emal_43923__pinl_13044__icc_5935_pred = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_pinl_48309__emal_43925__pinl_13027__flat_456""' with shape %s ""And `" "SACp_pinl_48312__emal_43928__pinl_12932__icc_7626""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc), SAC_PrintShape (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc));
      }
      else {
        int SAC_all = 1; if (0 || (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__shp0 != SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__shp0))
        {

          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_pinl_48309__emal_43925__pinl_13027__flat_456""' with shape %s ""And `" "SACp_pinl_48312__emal_43928__pinl_12932__icc_7626""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc), SAC_PrintShape (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc));
        }
        SACp_pinl_48307__emal_43923__pinl_13044__icc_5935_pred = SAC_all;
      }

      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48309__emal_43925__pinl_13027__flat_456__sz && SAC_i < SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz; SAC_i++) { if (( SACp_pinl_48309__emal_43925__pinl_13027__flat_456[SAC_i]) > ( SACp_pinl_48312__emal_43928__pinl_12932__icc_7626[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Vector constraint `" "SACp_pinl_48309__emal_43925__pinl_13027__flat_456" " < " "SACp_pinl_48312__emal_43928__pinl_12932__icc_7626" "' violated"); } } SACp_pinl_48306__emal_43922__pinl_13047__icc_5936_pred = SAC_all; }
      if (!SACp_pinl_48310__emal_43926__pinl_13037__icc_5939_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48306__emal_43922__pinl_13047__icc_5936_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48307__emal_43923__pinl_13044__icc_5935_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48311__emal_43927__pinl_13030__icc_5934_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48308__emal_43924__pinl_13042__icc_5933_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      { { if (!(((SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz) + (SACl_a__dim) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_pinl_48301__emal_43917__pinl_13026__icc_5945"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 23819 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 23819 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23819 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 23819 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23819 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 23819 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 23819 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 23819, __extension__ __PRETTY_FUNCTION__); }))
# 23819 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz) + (SACl_a__dim))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz) + (SACl_a__dim))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz) + (SACl_a__dim))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[3]) = SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__dim = (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz) + (SACl_a__dim); }



     
      if (!((SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Shape of genarray with-loop has (dim != 1)!"); };
      if (!((SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__dim == SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz + SACl_a__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
      {
        int SAC_i;
        int SAC_j;
        int SAC_size = 1;
        for (SAC_i = 0; SAC_i < SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__sz; SAC_i++)
        {

SAC_size *=
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_pinl_48312__emal_43928__pinl_12932__icc_7626[SAC_i]);
        }
        for (SAC_j = 0; SAC_i < SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__dim; SAC_i++, SAC_j++) {
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_j))]);
        }
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__sz = SAC_size * SACl_a__sz;
        if (!((SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 23843 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 23843 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23843 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 23843 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23843 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 23843 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 23843 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 23843, __extension__ __PRETTY_FUNCTION__); }))
# 23843 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48301__emal_43917__pinl_13026__icc_5945 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__sz * sizeof (*SACp_pinl_48301__emal_43917__pinl_13026__icc_5945)); break; case SAC_HM_multi_threaded: SACp_pinl_48301__emal_43917__pinl_13026__icc_5945 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__sz * sizeof (*SACp_pinl_48301__emal_43917__pinl_13026__icc_5945), 0); break; case SAC_HM_any_threaded: SACp_pinl_48301__emal_43917__pinl_13026__icc_5945 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__sz * sizeof (*SACp_pinl_48301__emal_43917__pinl_13026__icc_5945), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[1]) = 0; } }
      { { if (!((1 == SACp_pinl_48213_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48213_iv"); }; { if ((((6 + (SACp_pinl_48213_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48213_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48213_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48213_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48213_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48213_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48213_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48213_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48213_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48213_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48213_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48213_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48213_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48213_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48213_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48213_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48213_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48213_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48213_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48213_iv__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48213_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48213_iv__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48213_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48309__emal_43925__pinl_13027__flat_456__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48213_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48213_iv__sz = SAC_size * SACp_pinl_48309__emal_43925__pinl_13027__flat_456__sz;
        if (!((SACp_pinl_48213_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 23858 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 23858 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23858 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 23858 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23858 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 23858 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 23858 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 23858, __extension__ __PRETTY_FUNCTION__); }))
# 23858 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48213_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48213_iv__sz * sizeof (*SACp_pinl_48213_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_48213_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48213_iv__sz * sizeof (*SACp_pinl_48213_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_48213_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48213_iv__sz * sizeof (*SACp_pinl_48213_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48213_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48213_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48213_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
      ;

      }
      { if (!(((SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__dim) - (SACp_pinl_48213_iv__sz) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_pinl_48302__emal_43918_mem"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 23867 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 23867 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23867 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 23867 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 23867 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 23867 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 23867 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 23867, __extension__ __PRETTY_FUNCTION__); }))
# 23867 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48302__emal_43918_mem__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__dim) - (SACp_pinl_48213_iv__sz))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_pinl_48302__emal_43918_mem__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__dim) - (SACp_pinl_48213_iv__sz))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_pinl_48302__emal_43918_mem__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__dim) - (SACp_pinl_48213_iv__sz))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48302__emal_43918_mem__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48302__emal_43918_mem__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48302__emal_43918_mem__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48302__emal_43918_mem__desc) & (-1 ^ (3))))[3]) = SACp_pinl_48302__emal_43918_mem__dim = (SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__dim) - (SACp_pinl_48213_iv__sz); }



      if (!((SACp_pinl_48302__emal_43918_mem__dim == SACl_a__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "Assignment with incompatible types found"); };
      {
        int SAC_i;
        int SAC_size = 1;
        for (SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++)
        {

          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48302__emal_43918_mem__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]);
        }
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48302__emal_43918_mem__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48302__emal_43918_mem__sz = SAC_size * SACl_a__sz;
        if (!((SACp_pinl_48302__emal_43918_mem__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "Array with size <0 found!"); };
      }

      { int SAC_d = 0; int SAC_max_d = SACp_pinl_48213_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
      while (SAC_d <= SAC_max_d) { SACp_pinl_48213_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__sz > 0;
      int SAC_off_inc0 = 1; int SAC_SACp_pinl_48301__emal_43917__pinl_13026__icc_5945_shpfac0; SAC_d = SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__dim - 1; SACp_pinl_48296__wlidx_42347__pinl_13026__icc_5945 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_pinl_48301__emal_43917__pinl_13026__icc_5945_shpfac0 = SAC_off_inc0;
      while (SAC_within_bounds) { SAC_in_gen = 1;
      SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_pinl_48309__emal_43925__pinl_13027__flat_456[SAC_d]) <= ( SACp_pinl_48213_iv[SAC_d])) && (( SACp_pinl_48213_iv[SAC_d]) < ( SACp_pinl_48312__emal_43928__pinl_12932__icc_7626[SAC_d])); SAC_d--; }
      if (SAC_in_gen) {



      SACp_pinl_48302__emal_43918_mem = SACp_pinl_48301__emal_43917__pinl_13026__icc_5945+SACp_pinl_48296__wlidx_42347__pinl_13026__icc_5945;

      { int SAC_i; if (!((SACp_pinl_48302__emal_43918_mem__sz == SACl_a__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACl_a__sz; SAC_i++) { { SACp_pinl_48302__emal_43918_mem[SAC_i] = ( SACl_a[SAC_i]); } } }
      } else {



      SACp_pinl_48302__emal_43918_mem = SACp_pinl_48301__emal_43917__pinl_13026__icc_5945+SACp_pinl_48296__wlidx_42347__pinl_13026__icc_5945;

      { int SAC_i; if (!((SACp_pinl_48302__emal_43918_mem__sz == SACl_a__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACl_a__sz; SAC_i++) { { SACp_pinl_48302__emal_43918_mem[SAC_i] = ( SACl_a[SAC_i]); } } }
      }
      SACp_pinl_48296__wlidx_42347__pinl_13026__icc_5945 = SACp_pinl_48296__wlidx_42347__pinl_13026__icc_5945 + SAC_off_inc0;
      SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_48213_iv[SAC_d] = ( SACp_pinl_48213_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_48213_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_48213_iv[SAC_d] = 0; SAC_d--; SACp_pinl_48213_iv[SAC_d] = ( SACp_pinl_48213_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_48213_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
      }
      }
      { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48302__emal_43918_mem__desc) & (-1 ^ (3))))); } }
      { { free (SACp_pinl_48312__emal_43928__pinl_12932__icc_7626); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48312__emal_43928__pinl_12932__icc_7626__desc) & (-1 ^ (3))))); } } }
      { { free (SACp_pinl_48309__emal_43925__pinl_13027__flat_456); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48309__emal_43925__pinl_13027__flat_456__desc) & (-1 ^ (3))))); } } }
      { { free (SACp_pinl_48213_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48213_iv__desc) & (-1 ^ (3))))); } } }
      { ; ; }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
      if (!SACp_pinl_48310__emal_43926__pinl_13037__icc_5939_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48306__emal_43922__pinl_13047__icc_5936_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48307__emal_43923__pinl_13044__icc_5935_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48311__emal_43927__pinl_13030__icc_5934_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48308__emal_43924__pinl_13042__icc_5933_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }



      SACl_a__SSA0_1__desc = SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__desc;
      SACl_a__SSA0_1__sz = SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__sz;
      SACl_a__SSA0_1__dim = SACp_pinl_48301__emal_43917__pinl_13026__icc_5945__dim;
      ;
      { SACl_a__SSA0_1 = SACp_pinl_48301__emal_43917__pinl_13026__icc_5945; }




      SACl_b__SSA0_1__desc = SACl_b__desc;
      SACl_b__SSA0_1__sz = SACl_b__sz;
      SACl_b__SSA0_1__dim = SACl_b__dim;
      ;
      { SACl_b__SSA0_1 = SACl_b; }

    }
    else
    {
      { { free (SACp_emal_43915__isaa_32323_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43915__isaa_32323_b__desc) & (-1 ^ (3))))); } } }
      { { { if (((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, ((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)); } else { if (SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, ((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, ((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, ((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)); } else { if (((((SACp_emal_43909__isaa_32332_rshp__sz * sizeof (*SACp_emal_43909__isaa_32332_rshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, ((((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43909__isaa_32332_rshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43909__isaa_32332_rshp__desc) & (-1 ^ (3))))); } } }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1747, "Assignment with incompatible types found"); };
      ;

      }
      { { SACp_pinl_48392__emal_44008__pinl_13072__flat_1140 = 0; }; }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1896, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48391__emal_44007__pinl_22497__icc_8952 = ( SACp_emal_43911__isaa_32329_lshp[SACp_pinl_48392__emal_44008__pinl_13072__flat_1140]); }

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 1969, "Assignment with incompatible types found"); };
      ;

      }
      ; { SACp_pinl_48390__emal_44006__pinl_22559__esd_22403 = -(SACp_emal_43907__pinl_12908__flat_964); };
      ; ; { SACp_pinl_48390__emal_44006__pinl_22559__esd_22403 = (SACp_pinl_48390__emal_44006__pinl_22559__esd_22403) - (SACp_pinl_48391__emal_44007__pinl_22497__icc_8952); };
      ; ; { SACp_pinl_48390__emal_44006__pinl_22559__esd_22403 = (0) > (SACp_pinl_48390__emal_44006__pinl_22559__esd_22403) ? (0) : (SACp_pinl_48390__emal_44006__pinl_22559__esd_22403); };
      ; ; { SACp_pinl_48387__emal_44003__pinl_22504__flat_1150 = (SACp_emal_43907__pinl_12908__flat_964) >= (0); };
      { if (SACp_pinl_48387__emal_44003__pinl_22504__flat_1150) { SACp_pinl_48386__emal_44002__pinl_22510_val__SSA0_3 = SACp_pinl_48392__emal_44008__pinl_13072__flat_1140; } else { SACp_pinl_48386__emal_44002__pinl_22510_val__SSA0_3 = SACp_pinl_48390__emal_44006__pinl_22559__esd_22403; } }
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2152, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_pinl_48385__emal_44001__pinl_22503__flat_1154 = (SACp_pinl_48391__emal_44007__pinl_22497__icc_8952) + (SACp_emal_43907__pinl_12908__flat_964); };
      ; ; { SACp_pinl_48385__emal_44001__pinl_22503__flat_1154 = (0) > (SACp_pinl_48385__emal_44001__pinl_22503__flat_1154) ? (0) : (SACp_pinl_48385__emal_44001__pinl_22503__flat_1154); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2177, "Assignment with incompatible types found"); };
      ;

      }
      { if (SACp_pinl_48387__emal_44003__pinl_22504__flat_1150) { SACp_pinl_48383__emal_43999__pinl_22513_val__SSA0_5 = SACp_pinl_48392__emal_44008__pinl_13072__flat_1140; } else { SACp_pinl_48383__emal_43999__pinl_22513_val__SSA0_5 = SACp_pinl_48385__emal_44001__pinl_22503__flat_1154; } }
      { ; ; }
      { ; ; }
      if (SACp_pinl_48386__emal_44002__pinl_22510_val__SSA0_3 >= 0) { { SACp_pinl_48382__emal_43998__uprf_22389 = SACp_pinl_48386__emal_44002__pinl_22510_val__SSA0_3; }; SACp_pinl_48382__emal_43998__uprf_22389 = 1; } else { SACp_pinl_48382__emal_43998__uprf_22389 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48386__emal_44002__pinl_22510_val__SSA0_3"); }
      ; { SACp_emal_43907__pinl_12908__flat_964 = ((SACp_emal_43907__pinl_12908__flat_964) < 0) ? -(SACp_emal_43907__pinl_12908__flat_964) : (SACp_emal_43907__pinl_12908__flat_964); };
      if (SACp_pinl_48386__emal_44002__pinl_22510_val__SSA0_3 <= SACp_emal_43907__pinl_12908__flat_964) { SACp_pinl_48380__emal_43996__uprf_22380 = 1; } else { SACp_pinl_48380__emal_43996__uprf_22380 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Scalar constraint `" "SACp_pinl_48386__emal_44002__pinl_22510_val__SSA0_3" " (" "%d" ") <= " "SACp_emal_43907__pinl_12908__flat_964" " (" "%d" ")" "' violated", SACp_pinl_48386__emal_44002__pinl_22510_val__SSA0_3, SACp_emal_43907__pinl_12908__flat_964); }
      { { if (!((1 == SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48379__emal_43995__pinl_13111__idc_7637"); }; { { if ((((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637)) + ((6 + (SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637)) + ((6 + (SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637)) + ((6 + (SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48379__emal_43995__pinl_13111__idc_7637 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48379__emal_43995__pinl_13111__idc_7637 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637)) + ((6 + (SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48379__emal_43995__pinl_13111__idc_7637 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48379__emal_43995__pinl_13111__idc_7637 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637)) + ((6 + (SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637)) + ((6 + (SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637)) + ((6 + (SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637)) + ((6 + (SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637)) + ((6 + (SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48379__emal_43995__pinl_13111__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48379__emal_43995__pinl_13111__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48379__emal_43995__pinl_13111__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48379__emal_43995__pinl_13111__idc_7637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637, SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637), ((6 + (SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48379__emal_43995__pinl_13111__idc_7637[0] = SACp_pinl_48386__emal_44002__pinl_22510_val__SSA0_3; }

      if (SACp_emal_43907__pinl_12908__flat_964 >= 0) { { SACp_pinl_48378__emal_43994__uprf_22372 = SACp_emal_43907__pinl_12908__flat_964; }; SACp_pinl_48378__emal_43994__uprf_22372 = 1; } else { SACp_pinl_48378__emal_43994__uprf_22372 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Non-negativity constraint violated " "for scalar " "SACp_emal_43907__pinl_12908__flat_964"); }
      { { if (!((1 == SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48377__emal_43993__pinl_13113__idc_7638"); }; { { if ((((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638)) + ((6 + (SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638)) + ((6 + (SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638)) + ((6 + (SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48377__emal_43993__pinl_13113__idc_7638 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48377__emal_43993__pinl_13113__idc_7638 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638)) + ((6 + (SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48377__emal_43993__pinl_13113__idc_7638 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48377__emal_43993__pinl_13113__idc_7638 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638)) + ((6 + (SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638)) + ((6 + (SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638)) + ((6 + (SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638)) + ((6 + (SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638)) + ((6 + (SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48377__emal_43993__pinl_13113__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48377__emal_43993__pinl_13113__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48377__emal_43993__pinl_13113__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48377__emal_43993__pinl_13113__idc_7638 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638, SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638), ((6 + (SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2269, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48377__emal_43993__pinl_13113__idc_7638[0] = SACp_emal_43907__pinl_12908__flat_964; }

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2297, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_pinl_48376__emal_43992__uprf_22367 = (SACp_pinl_48391__emal_44007__pinl_22497__icc_8952) < (SACp_emal_43907__pinl_12908__flat_964) ? (SACp_pinl_48391__emal_44007__pinl_22497__icc_8952) : (SACp_emal_43907__pinl_12908__flat_964); };
      ; ; { SACp_pinl_48376__emal_43992__uprf_22367 = (SACp_pinl_48376__emal_43992__uprf_22367) + (SACp_pinl_48386__emal_44002__pinl_22510_val__SSA0_3); };
      { ; ; }
      if (SACp_pinl_48376__emal_43992__uprf_22367 >= 0) { { SACp_pinl_48374__emal_43990__uprf_22356 = SACp_pinl_48376__emal_43992__uprf_22367; }; SACp_pinl_48374__emal_43990__uprf_22356 = 1; } else { SACp_pinl_48374__emal_43990__uprf_22356 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48376__emal_43992__uprf_22367"); }
      if (SACp_pinl_48376__emal_43992__uprf_22367 <= SACp_emal_43907__pinl_12908__flat_964) { SACp_pinl_48373__emal_43989__uprf_22350 = 1; } else { SACp_pinl_48373__emal_43989__uprf_22350 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "Scalar constraint `" "SACp_pinl_48376__emal_43992__uprf_22367" " (" "%d" ") <= " "SACp_emal_43907__pinl_12908__flat_964" " (" "%d" ")" "' violated", SACp_pinl_48376__emal_43992__uprf_22367, SACp_emal_43907__pinl_12908__flat_964); }
      { ; ; }
      { { if (!((1 == SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48372__emal_43988__pinl_13123__idc_7644"); }; { { if ((((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644)) + ((6 + (SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644)) + ((6 + (SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644)) + ((6 + (SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48372__emal_43988__pinl_13123__idc_7644 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48372__emal_43988__pinl_13123__idc_7644 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644)) + ((6 + (SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48372__emal_43988__pinl_13123__idc_7644 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48372__emal_43988__pinl_13123__idc_7644 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644)) + ((6 + (SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644)) + ((6 + (SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644)) + ((6 + (SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644)) + ((6 + (SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644)) + ((6 + (SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48372__emal_43988__pinl_13123__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48372__emal_43988__pinl_13123__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48372__emal_43988__pinl_13123__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48372__emal_43988__pinl_13123__idc_7644 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644, SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644), ((6 + (SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2321, "Assignment with incompatible types found"); };
      if (!((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2321, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_pinl_48372__emal_43988__pinl_13123__idc_7644[0] = SACp_pinl_48376__emal_43992__uprf_22367; }

      { ; ; }
      if (!SACp_pinl_48378__emal_43994__uprf_22372) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48373__emal_43989__uprf_22350) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48380__emal_43996__uprf_22380) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48374__emal_43990__uprf_22356) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48382__emal_43998__uprf_22389) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48371__emal_43987__pinl_22120__icc_6985 = ( SACp_pinl_48379__emal_43995__pinl_13111__idc_7637[SACp_pinl_48392__emal_44008__pinl_13072__flat_1140]); }

      { { { if (((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637) - 1)->data1.arena)); } else { if (SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637) - 1)->data1.arena)); } else { if (((((SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__sz * sizeof (*SACp_pinl_48379__emal_43995__pinl_13111__idc_7637))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637, ((((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48379__emal_43995__pinl_13111__idc_7637__desc) & (-1 ^ (3))))); } } }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48370__emal_43986__pinl_22123__icc_6991 = ( SACp_pinl_48372__emal_43988__pinl_13123__idc_7644[SACp_pinl_48392__emal_44008__pinl_13072__flat_1140]); }

      { { { if (((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644) - 1)->data1.arena)); } else { if (SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644) - 1)->data1.arena)); } else { if (((((SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__sz * sizeof (*SACp_pinl_48372__emal_43988__pinl_13123__idc_7644))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644, ((((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48372__emal_43988__pinl_13123__idc_7644__desc) & (-1 ^ (3))))); } } }
      ; ; { SACp_pinl_48369__emal_43985__pinl_22178_res = (SACp_pinl_48371__emal_43987__pinl_22120__icc_6985) > (SACp_pinl_48370__emal_43986__pinl_22123__icc_6991) ? (SACp_pinl_48371__emal_43987__pinl_22120__icc_6985) : (SACp_pinl_48370__emal_43986__pinl_22123__icc_6991); };



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2439, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_pinl_48368__emal_43984__pinl_13158__wlbsc_9831_sc_e = ( SACp_pinl_48377__emal_43993__pinl_13113__idc_7638[SACp_pinl_48392__emal_44008__pinl_13072__flat_1140]); }

      { { { if (((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638) - 1)->data1.arena)); } else { if (SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638) - 1)->data1.arena)); } else { if (((((SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__sz * sizeof (*SACp_pinl_48377__emal_43993__pinl_13113__idc_7638))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638, ((((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48377__emal_43993__pinl_13113__idc_7638__desc) & (-1 ^ (3))))); } } }
      ; ; { SACp_pinl_48383__emal_43999__pinl_22513_val__SSA0_5 = (SACp_pinl_48383__emal_43999__pinl_22513_val__SSA0_5) - (SACp_pinl_48371__emal_43987__pinl_22120__icc_6985); };
      { { if (!((1 == SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48358__emal_43974__pinl_13071__icc_7626"); }; { if ((((6 + (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SAC_size *=
        SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48368__emal_43984__pinl_13158__wlbsc_9831_sc_e;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz = SAC_size;
        if (!((SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 24106 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 24106 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24106 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 24106 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24106 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 24106 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 24106 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 24106, __extension__ __PRETTY_FUNCTION__); }))
# 24106 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48358__emal_43974__pinl_13071__icc_7626 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz * sizeof (*SACp_pinl_48358__emal_43974__pinl_13071__icc_7626)); break; case SAC_HM_multi_threaded: SACp_pinl_48358__emal_43974__pinl_13071__icc_7626 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz * sizeof (*SACp_pinl_48358__emal_43974__pinl_13071__icc_7626), 0); break; case SAC_HM_any_threaded: SACp_pinl_48358__emal_43974__pinl_13071__icc_7626 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz * sizeof (*SACp_pinl_48358__emal_43974__pinl_13071__icc_7626), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2346, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_pinl_48358__emal_43974__pinl_13071__icc_7626_shpfac0;




        {
          int SAC_i;
          SAC_SACp_pinl_48358__emal_43974__pinl_13071__icc_7626_shpfac0 = 1;
        }




        SAC_schedule_start0 = SACp_pinl_48369__emal_43985__pinl_22178_res;
        SAC_schedule_stop0 = SACp_pinl_48368__emal_43984__pinl_13158__wlbsc_9831_sc_e;




        SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48358__emal_43974__pinl_13071__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_48241__eat_446 = SACp_pinl_48368__emal_43984__pinl_13158__wlbsc_9831_sc_e; for (SACp_pinl_48241__eat_446 = SACp_pinl_48369__emal_43985__pinl_22178_res; SACp_pinl_48241__eat_446 < SACp_pinl_48368__emal_43984__pinl_13158__wlbsc_9831_sc_e;) {
       



        if (!((0 == (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim - SACp_pinl_48240_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48358__emal_43974__pinl_13071__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal size found!"); };
        { SACp_pinl_48358__emal_43974__pinl_13071__icc_7626[SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626] = SACp_pinl_48392__emal_44008__pinl_13072__flat_1140; };

        SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626 = SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626 + 1;
        SACp_pinl_48241__eat_446 = SACp_pinl_48241__eat_446 + 1;
        } }
# 24176 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_pinl_48371__emal_43987__pinl_22120__icc_6985;




        SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48358__emal_43974__pinl_13071__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_48241__eat_446 = SACp_pinl_48371__emal_43987__pinl_22120__icc_6985; for (SACp_pinl_48241__eat_446 = 0; SACp_pinl_48241__eat_446 < SACp_pinl_48371__emal_43987__pinl_22120__icc_6985;) {
       



        if (!((0 == (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim - SACp_pinl_48240_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48358__emal_43974__pinl_13071__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2361, "WL expression with illegal size found!"); };
        { SACp_pinl_48358__emal_43974__pinl_13071__icc_7626[SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626] = SACp_pinl_48392__emal_44008__pinl_13072__flat_1140; };

        SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626 = SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626 + 1;
        SACp_pinl_48241__eat_446 = SACp_pinl_48241__eat_446 + 1;
        } }
# 24205 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_pinl_48371__emal_43987__pinl_22120__icc_6985;
        SAC_schedule_stop0 = SACp_pinl_48370__emal_43986__pinl_22123__icc_6991;




        SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626
          = SAC_schedule_start0 * SAC_SACp_pinl_48358__emal_43974__pinl_13071__icc_7626_shpfac0;

        { int SAC_stop_SACp_pinl_48241__eat_446 = SACp_pinl_48370__emal_43986__pinl_22123__icc_6991; for (SACp_pinl_48241__eat_446 = SACp_pinl_48371__emal_43987__pinl_22120__icc_6985; SACp_pinl_48241__eat_446 < SACp_pinl_48370__emal_43986__pinl_22123__icc_6991;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_pinl_48364__emal_43980__uprf_22338 = (SACp_pinl_48241__eat_446) + (SACp_pinl_48383__emal_43999__pinl_22513_val__SSA0_5); };
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_48364__emal_43980__uprf_22338 >= 0) { { SACp_pinl_48363__emal_43979__uprf_22332 = SACp_pinl_48364__emal_43980__uprf_22338; }; SACp_pinl_48363__emal_43979__uprf_22332 = 1; } else { SACp_pinl_48363__emal_43979__uprf_22332 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Non-negativity constraint violated " "for scalar " "SACp_pinl_48364__emal_43980__uprf_22338"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_pinl_48364__emal_43980__uprf_22338 < SACp_pinl_48391__emal_44007__pinl_22497__icc_8952) { SACp_pinl_48362__emal_43978__uprf_22326 = 1; } else { SACp_pinl_48362__emal_43978__uprf_22326 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Scalar constraint `" "SACp_pinl_48364__emal_43980__uprf_22338" " (" "%d" ") < " "SACp_pinl_48391__emal_44007__pinl_22497__icc_8952" " (" "%d" ")" "' violated", SACp_pinl_48364__emal_43980__uprf_22338, SACp_pinl_48391__emal_44007__pinl_22497__icc_8952); }
        { { if (!((1 == SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48361__emal_43977__pinl_13132__idc_7649"); }; { { if ((((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649)) + ((6 + (SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649)) + ((6 + (SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649)) + ((6 + (SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48361__emal_43977__pinl_13132__idc_7649 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48361__emal_43977__pinl_13132__idc_7649 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649)) + ((6 + (SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48361__emal_43977__pinl_13132__idc_7649 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48361__emal_43977__pinl_13132__idc_7649 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649)) + ((6 + (SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649)) + ((6 + (SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649)) + ((6 + (SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649)) + ((6 + (SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649)) + ((6 + (SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48361__emal_43977__pinl_13132__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48361__emal_43977__pinl_13132__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48361__emal_43977__pinl_13132__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48361__emal_43977__pinl_13132__idc_7649 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649, SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649), ((6 + (SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        if (!((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2390, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_pinl_48361__emal_43977__pinl_13132__idc_7649[0] = SACp_pinl_48364__emal_43980__uprf_22338; }

        { ; ; }
        if (!SACp_pinl_48362__emal_43978__uprf_22326) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48363__emal_43979__uprf_22332) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }



        SACp_pinl_48360__emal_43976__ivesli_42505 = ( SACp_pinl_48361__emal_43977__pinl_13132__idc_7649[0]);

        { { { if (((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649) - 1)->data1.arena)); } else { if (SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649) - 1)->data1.arena)); } } else { if (((((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649) - 1)->data1.arena)); } else { if (((((SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__sz * sizeof (*SACp_pinl_48361__emal_43977__pinl_13132__idc_7649))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649, ((((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48361__emal_43977__pinl_13132__idc_7649__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_pinl_48359__emal_43975__pinl_13066__icc_7620 = ( SACp_emal_43913__isaa_32326_a[SACp_pinl_48360__emal_43976__ivesli_42505]); }

        { ; ; }
        if (!SACp_pinl_48362__emal_43978__uprf_22326) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_pinl_48363__emal_43979__uprf_22332) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2379, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }



        if (!((0 == (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim - SACp_pinl_48240_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_pinl_48358__emal_43974__pinl_13071__icc_7626_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal size found!"); };
        { SACp_pinl_48358__emal_43974__pinl_13071__icc_7626[SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626] = SACp_pinl_48359__emal_43975__pinl_13066__icc_7620; };

        { ; ; }
        SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626 = SACp_pinl_48297__wlidx_42348__pinl_13071__icc_7626 + 1;
        SACp_pinl_48241__eat_446 = SACp_pinl_48241__eat_446 + 1;
        } }
# 24313 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_48568_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { { free (SACp_emal_43913__isaa_32326_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43913__isaa_32326_a__desc) & (-1 ^ (3))))); } } }
      { { { if (((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, ((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)); } else { if (SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, ((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, ((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, ((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)); } else { if (((((SACp_emal_43911__isaa_32329_lshp__sz * sizeof (*SACp_emal_43911__isaa_32329_lshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, ((((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_43911__isaa_32329_lshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_43911__isaa_32329_lshp__desc) & (-1 ^ (3))))); } } }
      if (!SACp_pinl_48378__emal_43994__uprf_22372) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48373__emal_43989__uprf_22350) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48380__emal_43996__uprf_22380) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48374__emal_43990__uprf_22356) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      if (!SACp_pinl_48382__emal_43998__uprf_22389) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "With-loop guard failed"); }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz; SAC_i++) { if (( SACp_pinl_48358__emal_43974__pinl_13071__icc_7626[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACp_pinl_48358__emal_43974__pinl_13071__icc_7626"); } { SACp_pinl_48357__emal_43973__pinl_13169__icc_5934_pred = ( SACp_pinl_48358__emal_43974__pinl_13071__icc_7626[SAC_i]); }; } SACp_pinl_48357__emal_43973__pinl_13169__icc_5934_pred = SAC_all; }
      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz; SAC_i++) { if (( SACp_pinl_48358__emal_43974__pinl_13071__icc_7626[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Non-negativity constraint violated " "for vector " "SACp_pinl_48358__emal_43974__pinl_13071__icc_7626"); } { SACp_pinl_48356__emal_43972__pinl_13176__icc_5939_pred = ( SACp_pinl_48358__emal_43974__pinl_13071__icc_7626[SAC_i]); }; } SACp_pinl_48356__emal_43972__pinl_13176__icc_5939_pred = SAC_all; }
      { { if (!((1 == SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48355__emal_43971__pinl_13166__flat_456"); }; { if ((((6 + (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48355__emal_43971__pinl_13166__flat_456__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48355__emal_43971__pinl_13166__flat_456__sz = SAC_size * SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz;
        if (!((SACp_pinl_48355__emal_43971__pinl_13166__flat_456__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 24354 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 24354 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24354 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 24354 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24354 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 24354 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 24354 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 24354, __extension__ __PRETTY_FUNCTION__); }))
# 24354 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48355__emal_43971__pinl_13166__flat_456 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__sz * sizeof (*SACp_pinl_48355__emal_43971__pinl_13166__flat_456)); break; case SAC_HM_multi_threaded: SACp_pinl_48355__emal_43971__pinl_13166__flat_456 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__sz * sizeof (*SACp_pinl_48355__emal_43971__pinl_13166__flat_456), 0); break; case SAC_HM_any_threaded: SACp_pinl_48355__emal_43971__pinl_13166__flat_456 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__sz * sizeof (*SACp_pinl_48355__emal_43971__pinl_13166__flat_456), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc) & (-1 ^ (3))))[1]) = 0; } }
      ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_pinl_48355__emal_43971__pinl_13166__flat_456__sz; SAC_i++) { { SACp_pinl_48355__emal_43971__pinl_13166__flat_456[SAC_i] = (0) * (( SACp_pinl_48358__emal_43974__pinl_13071__icc_7626[SAC_i])); }; } }
      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48355__emal_43971__pinl_13166__flat_456__sz; SAC_i++) { if (( SACp_pinl_48355__emal_43971__pinl_13166__flat_456[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACp_pinl_48355__emal_43971__pinl_13166__flat_456"); } { SACp_pinl_48354__emal_43970__pinl_13181__icc_5933_pred = ( SACp_pinl_48355__emal_43971__pinl_13166__flat_456[SAC_i]); }; } SACp_pinl_48354__emal_43970__pinl_13181__icc_5933_pred = SAC_all; }
            if (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__dim != SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim) {
        SACp_pinl_48353__emal_43969__pinl_13183__icc_5935_pred = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_pinl_48355__emal_43971__pinl_13166__flat_456""' with shape %s ""And `" "SACp_pinl_48358__emal_43974__pinl_13071__icc_7626""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc), SAC_PrintShape (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc));
      }
      else {
        int SAC_all = 1; if (0 || (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__shp0 != SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__shp0))
        {

          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_pinl_48355__emal_43971__pinl_13166__flat_456""' with shape %s ""And `" "SACp_pinl_48358__emal_43974__pinl_13071__icc_7626""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc), SAC_PrintShape (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc));
        }
        SACp_pinl_48353__emal_43969__pinl_13183__icc_5935_pred = SAC_all;
      }

      { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_pinl_48355__emal_43971__pinl_13166__flat_456__sz && SAC_i < SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz; SAC_i++) { if (( SACp_pinl_48355__emal_43971__pinl_13166__flat_456[SAC_i]) > ( SACp_pinl_48358__emal_43974__pinl_13071__icc_7626[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Vector constraint `" "SACp_pinl_48355__emal_43971__pinl_13166__flat_456" " < " "SACp_pinl_48358__emal_43974__pinl_13071__icc_7626" "' violated"); } } SACp_pinl_48352__emal_43968__pinl_13186__icc_5936_pred = SAC_all; }
      if (!SACp_pinl_48356__emal_43972__pinl_13176__icc_5939_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48352__emal_43968__pinl_13186__icc_5936_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48353__emal_43969__pinl_13183__icc_5935_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48357__emal_43973__pinl_13169__icc_5934_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48354__emal_43970__pinl_13181__icc_5933_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      { { if (!(((SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz) + (SACl_b__dim) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_pinl_48347__emal_43963__pinl_13165__icc_5945"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 24377 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 24377 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24377 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 24377 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24377 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 24377 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 24377 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 24377, __extension__ __PRETTY_FUNCTION__); }))
# 24377 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz) + (SACl_b__dim))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz) + (SACl_b__dim))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz) + (SACl_b__dim))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[3]) = SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__dim = (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz) + (SACl_b__dim); }



     
      if (!((SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Shape of genarray with-loop has (dim != 1)!"); };
      if (!((SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__dim == SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz + SACl_b__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
      {
        int SAC_i;
        int SAC_j;
        int SAC_size = 1;
        for (SAC_i = 0; SAC_i < SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__sz; SAC_i++)
        {

SAC_size *=
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_pinl_48358__emal_43974__pinl_13071__icc_7626[SAC_i]);
        }
        for (SAC_j = 0; SAC_i < SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__dim; SAC_i++, SAC_j++) {
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_j))]);
        }
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__sz = SAC_size * SACl_b__sz;
        if (!((SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 24401 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 24401 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24401 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 24401 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24401 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 24401 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 24401 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 24401, __extension__ __PRETTY_FUNCTION__); }))
# 24401 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48347__emal_43963__pinl_13165__icc_5945 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__sz * sizeof (*SACp_pinl_48347__emal_43963__pinl_13165__icc_5945)); break; case SAC_HM_multi_threaded: SACp_pinl_48347__emal_43963__pinl_13165__icc_5945 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__sz * sizeof (*SACp_pinl_48347__emal_43963__pinl_13165__icc_5945), 0); break; case SAC_HM_any_threaded: SACp_pinl_48347__emal_43963__pinl_13165__icc_5945 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__sz * sizeof (*SACp_pinl_48347__emal_43963__pinl_13165__icc_5945), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[1]) = 0; } }
      { { if (!((1 == SACp_pinl_48231_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_48231_iv"); }; { if ((((6 + (SACp_pinl_48231_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48231_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_48231_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48231_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_48231_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_48231_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_48231_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_48231_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_48231_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_48231_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_48231_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_48231_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_48231_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_48231_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_48231_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_48231_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_48231_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48231_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48231_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48231_iv__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_pinl_48231_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_pinl_48231_iv__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48231_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_48355__emal_43971__pinl_13166__flat_456__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48231_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48231_iv__sz = SAC_size * SACp_pinl_48355__emal_43971__pinl_13166__flat_456__sz;
        if (!((SACp_pinl_48231_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
      }

      { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 24416 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 24416 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24416 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 24416 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24416 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 24416 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 24416 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 24416, __extension__ __PRETTY_FUNCTION__); }))
# 24416 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48231_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_48231_iv__sz * sizeof (*SACp_pinl_48231_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_48231_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_48231_iv__sz * sizeof (*SACp_pinl_48231_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_48231_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_48231_iv__sz * sizeof (*SACp_pinl_48231_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48231_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48231_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48231_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
      ;

      }
      { if (!(((SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__dim) - (SACp_pinl_48231_iv__sz) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_pinl_48348__emal_43964_mem"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 24425 "/home/rubenhensen/sac/a.out.c" 3 4
     ((void) sizeof ((
# 24425 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24425 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ? 1 : 0), __extension__ ({ if (
# 24425 "/home/rubenhensen/sac/a.out.c"
     SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24425 "/home/rubenhensen/sac/a.out.c" 3 4
     ) ; else __assert_fail (
# 24425 "/home/rubenhensen/sac/a.out.c"
     "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 24425 "/home/rubenhensen/sac/a.out.c" 3 4
     , "/home/rubenhensen/sac/a.out.c", 24425, __extension__ __PRETTY_FUNCTION__); }))
# 24425 "/home/rubenhensen/sac/a.out.c"
     ; SACp_pinl_48348__emal_43964_mem__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__dim) - (SACp_pinl_48231_iv__sz))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_pinl_48348__emal_43964_mem__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__dim) - (SACp_pinl_48231_iv__sz))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_pinl_48348__emal_43964_mem__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__dim) - (SACp_pinl_48231_iv__sz))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48348__emal_43964_mem__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48348__emal_43964_mem__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48348__emal_43964_mem__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48348__emal_43964_mem__desc) & (-1 ^ (3))))[3]) = SACp_pinl_48348__emal_43964_mem__dim = (SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__dim) - (SACp_pinl_48231_iv__sz); }



      if (!((SACp_pinl_48348__emal_43964_mem__dim == SACl_b__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "Assignment with incompatible types found"); };
      {
        int SAC_i;
        int SAC_size = 1;
        for (SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++)
        {

          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48348__emal_43964_mem__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]);
        }
        (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48348__emal_43964_mem__desc) & (-1 ^ (3))))[4]) = SACp_pinl_48348__emal_43964_mem__sz = SAC_size * SACl_b__sz;
        if (!((SACp_pinl_48348__emal_43964_mem__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "Array with size <0 found!"); };
      }

      { int SAC_d = 0; int SAC_max_d = SACp_pinl_48231_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
      while (SAC_d <= SAC_max_d) { SACp_pinl_48231_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__sz > 0;
      int SAC_off_inc0 = 1; int SAC_SACp_pinl_48347__emal_43963__pinl_13165__icc_5945_shpfac0; SAC_d = SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__dim - 1; SACp_pinl_48298__wlidx_42349__pinl_13165__icc_5945 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_pinl_48347__emal_43963__pinl_13165__icc_5945_shpfac0 = SAC_off_inc0;
      while (SAC_within_bounds) { SAC_in_gen = 1;
      SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_pinl_48355__emal_43971__pinl_13166__flat_456[SAC_d]) <= ( SACp_pinl_48231_iv[SAC_d])) && (( SACp_pinl_48231_iv[SAC_d]) < ( SACp_pinl_48358__emal_43974__pinl_13071__icc_7626[SAC_d])); SAC_d--; }
      if (SAC_in_gen) {



      SACp_pinl_48348__emal_43964_mem = SACp_pinl_48347__emal_43963__pinl_13165__icc_5945+SACp_pinl_48298__wlidx_42349__pinl_13165__icc_5945;

      { int SAC_i; if (!((SACp_pinl_48348__emal_43964_mem__sz == SACl_b__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACl_b__sz; SAC_i++) { { SACp_pinl_48348__emal_43964_mem[SAC_i] = ( SACl_b[SAC_i]); } } }
      } else {



      SACp_pinl_48348__emal_43964_mem = SACp_pinl_48347__emal_43963__pinl_13165__icc_5945+SACp_pinl_48298__wlidx_42349__pinl_13165__icc_5945;

      { int SAC_i; if (!((SACp_pinl_48348__emal_43964_mem__sz == SACl_b__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACl_b__sz; SAC_i++) { { SACp_pinl_48348__emal_43964_mem[SAC_i] = ( SACl_b[SAC_i]); } } }
      }
      SACp_pinl_48298__wlidx_42349__pinl_13165__icc_5945 = SACp_pinl_48298__wlidx_42349__pinl_13165__icc_5945 + SAC_off_inc0;
      SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_48231_iv[SAC_d] = ( SACp_pinl_48231_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_48231_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_48231_iv[SAC_d] = 0; SAC_d--; SACp_pinl_48231_iv[SAC_d] = ( SACp_pinl_48231_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_48231_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
      }
      }
      { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48348__emal_43964_mem__desc) & (-1 ^ (3))))); } }
      { { free (SACp_pinl_48358__emal_43974__pinl_13071__icc_7626); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48358__emal_43974__pinl_13071__icc_7626__desc) & (-1 ^ (3))))); } } }
      { { free (SACp_pinl_48355__emal_43971__pinl_13166__flat_456); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48355__emal_43971__pinl_13166__flat_456__desc) & (-1 ^ (3))))); } } }
      { { free (SACp_pinl_48231_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_48231_iv__desc) & (-1 ^ (3))))); } } }
      { ; ; }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))); } } } } else { } }
      if (!SACp_pinl_48356__emal_43972__pinl_13176__icc_5939_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48352__emal_43968__pinl_13186__icc_5936_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48353__emal_43969__pinl_13183__icc_5935_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48357__emal_43973__pinl_13169__icc_5934_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      if (!SACp_pinl_48354__emal_43970__pinl_13181__icc_5933_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }



      SACl_a__SSA0_1__desc = SACl_a__desc;
      SACl_a__SSA0_1__sz = SACl_a__sz;
      SACl_a__SSA0_1__dim = SACl_a__dim;
      ;
      { SACl_a__SSA0_1 = SACl_a; }




      SACl_b__SSA0_1__desc = SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__desc;
      SACl_b__SSA0_1__sz = SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__sz;
      SACl_b__SSA0_1__dim = SACp_pinl_48347__emal_43963__pinl_13165__icc_5945__dim;
      ;
      { SACl_b__SSA0_1 = SACp_pinl_48347__emal_43963__pinl_13165__icc_5945; }

    }



    SACwf__MAIN___PL__i_S__i_S (&SACp_flat_403, &SACp_flat_403__desc, SACl_a__SSA0_1, SACl_a__SSA0_1__desc, SACl_b__SSA0_1, SACl_b__SSA0_1__desc);




    SACp_flat_403__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_403__desc) & (-1 ^ (3))))[4]);
    SACp_flat_403__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_403__desc) & (-1 ^ (3))))[3]);




    { *SAC_arg_1__p = SACp_flat_403; *SAC_arg_1__desc__p = SACp_flat_403__desc; }
    return;
   
  }



}
}
# 24533 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___PL__i_S__i_P (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    
# 24542 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24542 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48420__emal_44767__hce_41__SSA0_1;
   
   




    
# 24549 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24549 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48418__emal_44769__hce_42__SSA0_1;
   
   




    
# 24556 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24556 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48417__emal_44768__hce_42;
   
   




    
# 24563 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24563 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48414__emal_44770__hce_39__SSA0_1;
   
   




    
# 24570 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24570 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48412__emal_44772__hce_40__SSA0_1;
   
   




    
# 24577 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24577 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48411__emal_44771__hce_40;
   
   




    int SACp_emal_44766__isaa_34162_b;
   
   




    int * SACp_emal_44765__isaa_34163_b;
    SAC_array_descriptor_t SACp_emal_44765__isaa_34163_b__desc = 
# 24592 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 24592 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44765__isaa_34163_b__shp0;
    int SACp_emal_44765__isaa_34163_b__sz;
    const int SACp_emal_44765__isaa_34163_b__dim = 1;




    int SACp_emal_44764__isaa_34165_a;
   
   




    int * SACp_emal_44763__isaa_34166_a;
    SAC_array_descriptor_t SACp_emal_44763__isaa_34166_a__desc = 
# 24608 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 24608 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44763__isaa_34166_a__shp0;
    int SACp_emal_44763__isaa_34166_a__sz;
    const int SACp_emal_44763__isaa_34166_a__dim = 1;




    
# 24616 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24616 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44761__pinl_13212__flat_157;
   
   




    int * SACp_emal_44760__pinl_13216__flat_161;
    SAC_array_descriptor_t SACp_emal_44760__pinl_13216__flat_161__desc = 
# 24624 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 24624 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44760__pinl_13216__flat_161__shp0;
    int SACp_emal_44760__pinl_13216__flat_161__sz;
    const int SACp_emal_44760__pinl_13216__flat_161__dim = 1;




    
# 24632 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24632 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44759__pinl_13225__icc_4911_pred;
   
   




    int * SACp_emal_44758__ctz_22895;
    SAC_array_descriptor_t SACp_emal_44758__ctz_22895__desc = 
# 24640 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 24640 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44758__ctz_22895__shp0;
    int SACp_emal_44758__ctz_22895__sz;
    const int SACp_emal_44758__ctz_22895__dim = 1;




    
# 24648 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24648 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_44757__pinl_13210__icc_4914;
    SAC_array_descriptor_t SACp_emal_44757__pinl_13210__icc_4914__desc = 
# 24649 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 24649 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44757__pinl_13210__icc_4914__shp0;
    int SACp_emal_44757__pinl_13210__icc_4914__sz;
    const int SACp_emal_44757__pinl_13210__icc_4914__dim = 1;




    
# 24657 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24657 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44756__pinl_13214__flat_159;
   
   




    int SACp_emal_44755__isaa_34191__rtpf_10_res;
   
   




    int * SACp_emal_44754__isaa_34192__rtpf_10_res;
    SAC_array_descriptor_t SACp_emal_44754__isaa_34192__rtpf_10_res__desc = 
# 24672 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 24672 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44754__isaa_34192__rtpf_10_res__shp0;
    int SACp_emal_44754__isaa_34192__rtpf_10_res__sz;
    const int SACp_emal_44754__isaa_34192__rtpf_10_res__dim = 1;




    
# 24680 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24680 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44752__pinl_13234__flat_164;
   
   




    int * SACp_emal_44751__pinl_13238__flat_168;
    SAC_array_descriptor_t SACp_emal_44751__pinl_13238__flat_168__desc = 
# 24688 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 24688 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44751__pinl_13238__flat_168__shp0;
    int SACp_emal_44751__pinl_13238__flat_168__sz;
    const int SACp_emal_44751__pinl_13238__flat_168__dim = 1;




    
# 24696 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24696 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44750__pinl_13247__icc_4917_pred;
   
   




    int * SACp_emal_44749__ctz_22891;
    SAC_array_descriptor_t SACp_emal_44749__ctz_22891__desc = 
# 24704 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 24704 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44749__ctz_22891__shp0;
    int SACp_emal_44749__ctz_22891__sz;
    const int SACp_emal_44749__ctz_22891__dim = 1;




    
# 24712 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24712 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_44748__pinl_13232__icc_4920;
    SAC_array_descriptor_t SACp_emal_44748__pinl_13232__icc_4920__desc = 
# 24713 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 24713 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44748__pinl_13232__icc_4920__shp0;
    int SACp_emal_44748__pinl_13232__icc_4920__sz;
    const int SACp_emal_44748__pinl_13232__icc_4920__dim = 1;




    
# 24721 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24721 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44747__pinl_13236__flat_166;
   
   




    
# 24728 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24728 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_13222__hce_39;
   
   




    
# 24735 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24735 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_13221__hce_40;
   
   




    
# 24742 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24742 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_13244__hce_41;
   
   




    
# 24749 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24749 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_13243__hce_42;
   
   




    int * SACl_b__SSA0_1;
    SAC_array_descriptor_t SACl_b__SSA0_1__desc = 
# 24757 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 24757 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACl_b__SSA0_1__sz = 0;
    int SACl_b__SSA0_1__dim = 0;




    int * SACp_rtpf_10_res;
    SAC_array_descriptor_t SACp_rtpf_10_res__desc = 
# 24765 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 24765 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_rtpf_10_res__sz = 0;
    int SACp_rtpf_10_res__dim = 0;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_44766__isaa_34162_b = SACl_b__dim; }; }
    { { if (!((1 == SACp_emal_44765__isaa_34163_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44765__isaa_34163_b"); }; { if ((((6 + (SACp_emal_44765__isaa_34163_b__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44765__isaa_34163_b__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44765__isaa_34163_b__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44765__isaa_34163_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44765__isaa_34163_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44765__isaa_34163_b__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44765__isaa_34163_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44765__isaa_34163_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44765__isaa_34163_b__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44765__isaa_34163_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44765__isaa_34163_b__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44765__isaa_34163_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44765__isaa_34163_b__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44765__isaa_34163_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44765__isaa_34163_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44765__isaa_34163_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44765__isaa_34163_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44765__isaa_34163_b__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44765__isaa_34163_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44765__isaa_34163_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44765__isaa_34163_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44765__isaa_34163_b__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44765__isaa_34163_b__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44765__isaa_34163_b__desc) & (-1 ^ (3))))[4]) = SACp_emal_44765__isaa_34163_b__sz = SAC_size;
      if (!((SACp_emal_44765__isaa_34163_b__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 24807 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 24807 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24807 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 24807 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24807 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 24807 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 24807 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 24807, __extension__ __PRETTY_FUNCTION__); }))
# 24807 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44765__isaa_34163_b = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44765__isaa_34163_b__sz * sizeof (*SACp_emal_44765__isaa_34163_b)); break; case SAC_HM_multi_threaded: SACp_emal_44765__isaa_34163_b = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44765__isaa_34163_b__sz * sizeof (*SACp_emal_44765__isaa_34163_b), 0); break; case SAC_HM_any_threaded: SACp_emal_44765__isaa_34163_b = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44765__isaa_34163_b__sz * sizeof (*SACp_emal_44765__isaa_34163_b), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44765__isaa_34163_b__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44765__isaa_34163_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44765__isaa_34163_b__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
      { SACp_emal_44765__isaa_34163_b[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { SACp_emal_44764__isaa_34165_a = SACl_a__dim; }; }
    { { if (!((1 == SACp_emal_44763__isaa_34166_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44763__isaa_34166_a"); }; { if ((((6 + (SACp_emal_44763__isaa_34166_a__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44763__isaa_34166_a__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44763__isaa_34166_a__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44763__isaa_34166_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44763__isaa_34166_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44763__isaa_34166_a__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44763__isaa_34166_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44763__isaa_34166_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44763__isaa_34166_a__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44763__isaa_34166_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44763__isaa_34166_a__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44763__isaa_34166_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44763__isaa_34166_a__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44763__isaa_34166_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44763__isaa_34166_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44763__isaa_34166_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44763__isaa_34166_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44763__isaa_34166_a__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44763__isaa_34166_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44763__isaa_34166_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44763__isaa_34166_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44763__isaa_34166_a__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44763__isaa_34166_a__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44763__isaa_34166_a__desc) & (-1 ^ (3))))[4]) = SACp_emal_44763__isaa_34166_a__sz = SAC_size;
      if (!((SACp_emal_44763__isaa_34166_a__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 24832 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 24832 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24832 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 24832 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24832 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 24832 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 24832 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 24832, __extension__ __PRETTY_FUNCTION__); }))
# 24832 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44763__isaa_34166_a = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44763__isaa_34166_a__sz * sizeof (*SACp_emal_44763__isaa_34166_a)); break; case SAC_HM_multi_threaded: SACp_emal_44763__isaa_34166_a = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44763__isaa_34166_a__sz * sizeof (*SACp_emal_44763__isaa_34166_a), 0); break; case SAC_HM_any_threaded: SACp_emal_44763__isaa_34166_a = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44763__isaa_34166_a__sz * sizeof (*SACp_emal_44763__isaa_34166_a), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44763__isaa_34166_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44763__isaa_34166_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44763__isaa_34166_a__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
      { SACp_emal_44763__isaa_34166_a[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; ; { SACp_emal_44766__isaa_34162_b = (SACp_emal_44764__isaa_34165_a) - (SACp_emal_44766__isaa_34162_b); };
    ; ; { SACp_emal_44761__pinl_13212__flat_157 = (SACp_emal_44766__isaa_34162_b) == (0); };
    { ; ; }
    if (SACp_emal_44761__pinl_13212__flat_157)
    {
      { ; ; }
      { { SACp_pinl_48411__emal_44771__hce_40 = 
# 24847 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 24847 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13221__hce_40 = SACp_pinl_48411__emal_44771__hce_40; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `d' in a"); SACp_pinl_48412__emal_44772__hce_40__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13221__hce_40 = SACp_pinl_48412__emal_44772__hce_40__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_44760__pinl_13216__flat_161__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44760__pinl_13216__flat_161"); }; { if ((((6 + (SACp_emal_44760__pinl_13216__flat_161__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44760__pinl_13216__flat_161__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44760__pinl_13216__flat_161__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44760__pinl_13216__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44760__pinl_13216__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44760__pinl_13216__flat_161__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44760__pinl_13216__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44760__pinl_13216__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44760__pinl_13216__flat_161__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44760__pinl_13216__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44760__pinl_13216__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44760__pinl_13216__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44760__pinl_13216__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44760__pinl_13216__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44760__pinl_13216__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44760__pinl_13216__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44760__pinl_13216__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44760__pinl_13216__flat_161__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44760__pinl_13216__flat_161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44760__pinl_13216__flat_161__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_44765__isaa_34163_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_44760__pinl_13216__flat_161__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44760__pinl_13216__flat_161__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44760__pinl_13216__flat_161__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_44764__isaa_34165_a) < 0) ? (-(SACp_emal_44764__isaa_34165_a)) : (SACp_emal_44764__isaa_34165_a));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44760__pinl_13216__flat_161__desc) & (-1 ^ (3))))[4]) = SACp_emal_44760__pinl_13216__flat_161__sz = SAC_size;
      if (!((SACp_emal_44760__pinl_13216__flat_161__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 24890 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 24890 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24890 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 24890 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24890 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 24890 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 24890 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 24890, __extension__ __PRETTY_FUNCTION__); }))
# 24890 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44760__pinl_13216__flat_161 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44760__pinl_13216__flat_161__sz * sizeof (*SACp_emal_44760__pinl_13216__flat_161)); break; case SAC_HM_multi_threaded: SACp_emal_44760__pinl_13216__flat_161 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44760__pinl_13216__flat_161__sz * sizeof (*SACp_emal_44760__pinl_13216__flat_161), 0); break; case SAC_HM_any_threaded: SACp_emal_44760__pinl_13216__flat_161 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44760__pinl_13216__flat_161__sz * sizeof (*SACp_emal_44760__pinl_13216__flat_161), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44760__pinl_13216__flat_161__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44760__pinl_13216__flat_161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44760__pinl_13216__flat_161__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 24897 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 24897 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_44764__isaa_34165_a;
      SAC_cond = (SACp_emal_44764__isaa_34165_a < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_44765__isaa_34163_b__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_44765__isaa_34163_b__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 39, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_44760__pinl_13216__flat_161[SAC_i] = ( SACp_emal_44765__isaa_34163_b[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_44765__isaa_34163_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44765__isaa_34163_b__desc) & (-1 ^ (3))))); } } }
        if (SACp_emal_44763__isaa_34166_a__dim != SACp_emal_44760__pinl_13216__flat_161__dim) {
      SACp_emal_44759__pinl_13225__icc_4911_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_44763__isaa_34166_a""' with shape %s ""And `" "SACp_emal_44760__pinl_13216__flat_161""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_44763__isaa_34166_a__desc), SAC_PrintShape (SACp_emal_44760__pinl_13216__flat_161__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_44763__isaa_34166_a__shp0 != SACp_emal_44760__pinl_13216__flat_161__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_44763__isaa_34166_a""' with shape %s ""And `" "SACp_emal_44760__pinl_13216__flat_161""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_44763__isaa_34166_a__desc), SAC_PrintShape (SACp_emal_44760__pinl_13216__flat_161__desc));
      }
      SACp_emal_44759__pinl_13225__icc_4911_pred = SAC_all;
    }

    if (!SACp_emal_44759__pinl_13225__icc_4911_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { { if (!((1 == SACp_emal_44758__ctz_22895__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44758__ctz_22895"); }; { if ((((6 + (SACp_emal_44758__ctz_22895__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44758__ctz_22895__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44758__ctz_22895__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44758__ctz_22895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44758__ctz_22895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44758__ctz_22895__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44758__ctz_22895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44758__ctz_22895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44758__ctz_22895__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44758__ctz_22895__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44758__ctz_22895__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44758__ctz_22895__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44758__ctz_22895__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44758__ctz_22895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44758__ctz_22895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44758__ctz_22895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44758__ctz_22895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44758__ctz_22895__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44758__ctz_22895__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44758__ctz_22895__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44758__ctz_22895__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44758__ctz_22895__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44758__ctz_22895__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44760__pinl_13216__flat_161__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44758__ctz_22895__desc) & (-1 ^ (3))))[4]) = SACp_emal_44758__ctz_22895__sz = SAC_size * SACp_emal_44760__pinl_13216__flat_161__sz;
      if (!((SACp_emal_44758__ctz_22895__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 24943 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 24943 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24943 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 24943 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24943 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 24943 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 24943 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 24943, __extension__ __PRETTY_FUNCTION__); }))
# 24943 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44758__ctz_22895 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44758__ctz_22895__sz * sizeof (*SACp_emal_44758__ctz_22895)); break; case SAC_HM_multi_threaded: SACp_emal_44758__ctz_22895 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44758__ctz_22895__sz * sizeof (*SACp_emal_44758__ctz_22895), 0); break; case SAC_HM_any_threaded: SACp_emal_44758__ctz_22895 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44758__ctz_22895__sz * sizeof (*SACp_emal_44758__ctz_22895), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44758__ctz_22895__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44758__ctz_22895__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44758__ctz_22895__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44758__ctz_22895__sz; SAC_i++) { { SACp_emal_44758__ctz_22895[SAC_i] = (( SACp_emal_44763__isaa_34166_a[SAC_i])) - (( SACp_emal_44760__pinl_13216__flat_161[SAC_i])); }; } }
    { { free (SACp_emal_44760__pinl_13216__flat_161); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44760__pinl_13216__flat_161__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_44757__pinl_13210__icc_4914__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44757__pinl_13210__icc_4914"); }; { if ((((6 + (SACp_emal_44757__pinl_13210__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44757__pinl_13210__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44757__pinl_13210__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44757__pinl_13210__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44757__pinl_13210__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44757__pinl_13210__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44757__pinl_13210__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44757__pinl_13210__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44757__pinl_13210__icc_4914__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44757__pinl_13210__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44757__pinl_13210__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44757__pinl_13210__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44757__pinl_13210__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44757__pinl_13210__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44757__pinl_13210__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44757__pinl_13210__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44757__pinl_13210__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44757__pinl_13210__icc_4914__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44757__pinl_13210__icc_4914__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44757__pinl_13210__icc_4914__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44757__pinl_13210__icc_4914__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44757__pinl_13210__icc_4914__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44757__pinl_13210__icc_4914__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44758__ctz_22895__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44757__pinl_13210__icc_4914__desc) & (-1 ^ (3))))[4]) = SACp_emal_44757__pinl_13210__icc_4914__sz = SAC_size * SACp_emal_44758__ctz_22895__sz;
      if (!((SACp_emal_44757__pinl_13210__icc_4914__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 24960 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 24960 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24960 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 24960 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 24960 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 24960 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 24960 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 24960, __extension__ __PRETTY_FUNCTION__); }))
# 24960 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44757__pinl_13210__icc_4914 = (
# 24960 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24960 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_44757__pinl_13210__icc_4914__sz * sizeof (*SACp_emal_44757__pinl_13210__icc_4914)); break; case SAC_HM_multi_threaded: SACp_emal_44757__pinl_13210__icc_4914 = (
# 24960 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24960 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44757__pinl_13210__icc_4914__sz * sizeof (*SACp_emal_44757__pinl_13210__icc_4914), 0); break; case SAC_HM_any_threaded: SACp_emal_44757__pinl_13210__icc_4914 = (
# 24960 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 24960 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_44757__pinl_13210__icc_4914__sz * sizeof (*SACp_emal_44757__pinl_13210__icc_4914), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44757__pinl_13210__icc_4914__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44757__pinl_13210__icc_4914__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44757__pinl_13210__icc_4914__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44757__pinl_13210__icc_4914__sz; SAC_i++) { { SACp_emal_44757__pinl_13210__icc_4914[SAC_i] = (( SACp_emal_44758__ctz_22895[SAC_i])) == (0); }; } }
    { { free (SACp_emal_44758__ctz_22895); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44758__ctz_22895__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_44759__pinl_13225__icc_4911_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44757__pinl_13210__icc_4914__sz; SAC_i++) { if (( SACp_emal_44757__pinl_13210__icc_4914[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_44756__pinl_13214__flat_159 = SAC_all; }
    { { free (SACp_emal_44757__pinl_13210__icc_4914); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44757__pinl_13210__icc_4914__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_44756__pinl_13214__flat_159)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13222__hce_39 = SACp_pinl_13221__hce_40; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `shp' in a"); SACp_pinl_48414__emal_44770__hce_39__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13222__hce_39 = SACp_pinl_48414__emal_44770__hce_39__SSA0_1; }

    }
    if (!SACp_pinl_13222__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failedType pattern pre-condition of + failed"); }



    SACl_b__SSA0_1__desc = SACl_b__desc;
    SACl_b__SSA0_1__sz = SACl_b__sz;
    SACl_b__SSA0_1__dim = SACl_b__dim;
    ;
    { SACl_b__SSA0_1 = SACl_b; }




    SACwf__MAIN___rtpf_8_impl__i_S__i_S (&SACp_rtpf_10_res, &SACp_rtpf_10_res__desc, SACl_a, SACl_a__desc, SACl_b__SSA0_1, SACl_b__SSA0_1__desc);




    SACp_rtpf_10_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_rtpf_10_res__desc) & (-1 ^ (3))))[4]);
    SACp_rtpf_10_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_rtpf_10_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_44755__isaa_34191__rtpf_10_res = SACp_rtpf_10_res__dim; }; }
    { { if (!((1 == SACp_emal_44754__isaa_34192__rtpf_10_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44754__isaa_34192__rtpf_10_res"); }; { if ((((6 + (SACp_emal_44754__isaa_34192__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44754__isaa_34192__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44754__isaa_34192__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44754__isaa_34192__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44754__isaa_34192__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44754__isaa_34192__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44754__isaa_34192__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44754__isaa_34192__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44754__isaa_34192__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44754__isaa_34192__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44754__isaa_34192__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44754__isaa_34192__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44754__isaa_34192__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44754__isaa_34192__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44754__isaa_34192__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44754__isaa_34192__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44754__isaa_34192__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44754__isaa_34192__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44754__isaa_34192__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44754__isaa_34192__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44754__isaa_34192__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44754__isaa_34192__rtpf_10_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44754__isaa_34192__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_rtpf_10_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44754__isaa_34192__rtpf_10_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_44754__isaa_34192__rtpf_10_res__sz = SAC_size;
      if (!((SACp_emal_44754__isaa_34192__rtpf_10_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 25040 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 25040 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25040 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 25040 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25040 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 25040 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 25040 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 25040, __extension__ __PRETTY_FUNCTION__); }))
# 25040 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44754__isaa_34192__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44754__isaa_34192__rtpf_10_res__sz * sizeof (*SACp_emal_44754__isaa_34192__rtpf_10_res)); break; case SAC_HM_multi_threaded: SACp_emal_44754__isaa_34192__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44754__isaa_34192__rtpf_10_res__sz * sizeof (*SACp_emal_44754__isaa_34192__rtpf_10_res), 0); break; case SAC_HM_any_threaded: SACp_emal_44754__isaa_34192__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44754__isaa_34192__rtpf_10_res__sz * sizeof (*SACp_emal_44754__isaa_34192__rtpf_10_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44754__isaa_34192__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44754__isaa_34192__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44754__isaa_34192__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_rtpf_10_res__dim; SAC_i++) {
      { SACp_emal_44754__isaa_34192__rtpf_10_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    if (!SACp_pinl_13222__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failed"); }
    ;
    ; ; { SACp_emal_44755__isaa_34191__rtpf_10_res = (SACp_emal_44764__isaa_34165_a) - (SACp_emal_44755__isaa_34191__rtpf_10_res); };
    ; ; { SACp_emal_44752__pinl_13234__flat_164 = (SACp_emal_44755__isaa_34191__rtpf_10_res) == (0); };
    { ; ; }
    if (SACp_emal_44752__pinl_13234__flat_164)
    {
      { ; ; }
      { { SACp_pinl_48417__emal_44768__hce_42 = 
# 25057 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 25057 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13243__hce_42 = SACp_pinl_48417__emal_44768__hce_42; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `d' in a"); SACp_pinl_48418__emal_44769__hce_42__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13243__hce_42 = SACp_pinl_48418__emal_44769__hce_42__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_44751__pinl_13238__flat_168__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44751__pinl_13238__flat_168"); }; { if ((((6 + (SACp_emal_44751__pinl_13238__flat_168__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44751__pinl_13238__flat_168__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44751__pinl_13238__flat_168__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44751__pinl_13238__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44751__pinl_13238__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44751__pinl_13238__flat_168__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44751__pinl_13238__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44751__pinl_13238__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44751__pinl_13238__flat_168__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44751__pinl_13238__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44751__pinl_13238__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44751__pinl_13238__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44751__pinl_13238__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44751__pinl_13238__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44751__pinl_13238__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44751__pinl_13238__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44751__pinl_13238__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44751__pinl_13238__flat_168__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44751__pinl_13238__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44751__pinl_13238__flat_168__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_44754__isaa_34192__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_44751__pinl_13238__flat_168__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44751__pinl_13238__flat_168__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44751__pinl_13238__flat_168__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_44764__isaa_34165_a) < 0) ? (-(SACp_emal_44764__isaa_34165_a)) : (SACp_emal_44764__isaa_34165_a));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44751__pinl_13238__flat_168__desc) & (-1 ^ (3))))[4]) = SACp_emal_44751__pinl_13238__flat_168__sz = SAC_size;
      if (!((SACp_emal_44751__pinl_13238__flat_168__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 25100 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 25100 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25100 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 25100 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25100 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 25100 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 25100 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 25100, __extension__ __PRETTY_FUNCTION__); }))
# 25100 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44751__pinl_13238__flat_168 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44751__pinl_13238__flat_168__sz * sizeof (*SACp_emal_44751__pinl_13238__flat_168)); break; case SAC_HM_multi_threaded: SACp_emal_44751__pinl_13238__flat_168 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44751__pinl_13238__flat_168__sz * sizeof (*SACp_emal_44751__pinl_13238__flat_168), 0); break; case SAC_HM_any_threaded: SACp_emal_44751__pinl_13238__flat_168 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44751__pinl_13238__flat_168__sz * sizeof (*SACp_emal_44751__pinl_13238__flat_168), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44751__pinl_13238__flat_168__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44751__pinl_13238__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44751__pinl_13238__flat_168__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 25107 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 25107 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_44764__isaa_34165_a;
      SAC_cond = (SACp_emal_44764__isaa_34165_a < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_44754__isaa_34192__rtpf_10_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_44754__isaa_34192__rtpf_10_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_44751__pinl_13238__flat_168[SAC_i] = ( SACp_emal_44754__isaa_34192__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_44754__isaa_34192__rtpf_10_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44754__isaa_34192__rtpf_10_res__desc) & (-1 ^ (3))))); } } }
    { ; ; }
        if (SACp_emal_44763__isaa_34166_a__dim != SACp_emal_44751__pinl_13238__flat_168__dim) {
      SACp_emal_44750__pinl_13247__icc_4917_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_44763__isaa_34166_a""' with shape %s ""And `" "SACp_emal_44751__pinl_13238__flat_168""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_44763__isaa_34166_a__desc), SAC_PrintShape (SACp_emal_44751__pinl_13238__flat_168__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_44763__isaa_34166_a__shp0 != SACp_emal_44751__pinl_13238__flat_168__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_44763__isaa_34166_a""' with shape %s ""And `" "SACp_emal_44751__pinl_13238__flat_168""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_44763__isaa_34166_a__desc), SAC_PrintShape (SACp_emal_44751__pinl_13238__flat_168__desc));
      }
      SACp_emal_44750__pinl_13247__icc_4917_pred = SAC_all;
    }

    if (!SACp_emal_44750__pinl_13247__icc_4917_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { { if (!((1 == SACp_emal_44749__ctz_22891__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44749__ctz_22891"); }; { if ((((6 + (SACp_emal_44749__ctz_22891__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44749__ctz_22891__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44749__ctz_22891__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44749__ctz_22891__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44749__ctz_22891__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44749__ctz_22891__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44749__ctz_22891__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44749__ctz_22891__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44749__ctz_22891__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44749__ctz_22891__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44749__ctz_22891__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44749__ctz_22891__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44749__ctz_22891__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44749__ctz_22891__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44749__ctz_22891__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44749__ctz_22891__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44749__ctz_22891__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44749__ctz_22891__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44749__ctz_22891__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44749__ctz_22891__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44749__ctz_22891__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44749__ctz_22891__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44749__ctz_22891__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44751__pinl_13238__flat_168__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44749__ctz_22891__desc) & (-1 ^ (3))))[4]) = SACp_emal_44749__ctz_22891__sz = SAC_size * SACp_emal_44751__pinl_13238__flat_168__sz;
      if (!((SACp_emal_44749__ctz_22891__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 25154 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 25154 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25154 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 25154 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25154 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 25154 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 25154 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 25154, __extension__ __PRETTY_FUNCTION__); }))
# 25154 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44749__ctz_22891 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44749__ctz_22891__sz * sizeof (*SACp_emal_44749__ctz_22891)); break; case SAC_HM_multi_threaded: SACp_emal_44749__ctz_22891 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44749__ctz_22891__sz * sizeof (*SACp_emal_44749__ctz_22891), 0); break; case SAC_HM_any_threaded: SACp_emal_44749__ctz_22891 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44749__ctz_22891__sz * sizeof (*SACp_emal_44749__ctz_22891), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44749__ctz_22891__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44749__ctz_22891__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44749__ctz_22891__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44749__ctz_22891__sz; SAC_i++) { { SACp_emal_44749__ctz_22891[SAC_i] = (( SACp_emal_44763__isaa_34166_a[SAC_i])) - (( SACp_emal_44751__pinl_13238__flat_168[SAC_i])); }; } }
    { { free (SACp_emal_44751__pinl_13238__flat_168); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44751__pinl_13238__flat_168__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44763__isaa_34166_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44763__isaa_34166_a__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_44748__pinl_13232__icc_4920__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44748__pinl_13232__icc_4920"); }; { if ((((6 + (SACp_emal_44748__pinl_13232__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44748__pinl_13232__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44748__pinl_13232__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44748__pinl_13232__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44748__pinl_13232__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44748__pinl_13232__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44748__pinl_13232__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44748__pinl_13232__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44748__pinl_13232__icc_4920__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44748__pinl_13232__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44748__pinl_13232__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44748__pinl_13232__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44748__pinl_13232__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44748__pinl_13232__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44748__pinl_13232__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44748__pinl_13232__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44748__pinl_13232__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44748__pinl_13232__icc_4920__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44748__pinl_13232__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44748__pinl_13232__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44748__pinl_13232__icc_4920__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44748__pinl_13232__icc_4920__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44748__pinl_13232__icc_4920__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44749__ctz_22891__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44748__pinl_13232__icc_4920__desc) & (-1 ^ (3))))[4]) = SACp_emal_44748__pinl_13232__icc_4920__sz = SAC_size * SACp_emal_44749__ctz_22891__sz;
      if (!((SACp_emal_44748__pinl_13232__icc_4920__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 25172 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 25172 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25172 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 25172 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25172 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 25172 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 25172 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 25172, __extension__ __PRETTY_FUNCTION__); }))
# 25172 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44748__pinl_13232__icc_4920 = (
# 25172 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25172 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_44748__pinl_13232__icc_4920__sz * sizeof (*SACp_emal_44748__pinl_13232__icc_4920)); break; case SAC_HM_multi_threaded: SACp_emal_44748__pinl_13232__icc_4920 = (
# 25172 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25172 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44748__pinl_13232__icc_4920__sz * sizeof (*SACp_emal_44748__pinl_13232__icc_4920), 0); break; case SAC_HM_any_threaded: SACp_emal_44748__pinl_13232__icc_4920 = (
# 25172 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25172 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_44748__pinl_13232__icc_4920__sz * sizeof (*SACp_emal_44748__pinl_13232__icc_4920), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44748__pinl_13232__icc_4920__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44748__pinl_13232__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44748__pinl_13232__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44748__pinl_13232__icc_4920__sz; SAC_i++) { { SACp_emal_44748__pinl_13232__icc_4920[SAC_i] = (( SACp_emal_44749__ctz_22891[SAC_i])) == (0); }; } }
    { { free (SACp_emal_44749__ctz_22891); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44749__ctz_22891__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_44750__pinl_13247__icc_4917_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44748__pinl_13232__icc_4920__sz; SAC_i++) { if (( SACp_emal_44748__pinl_13232__icc_4920[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_44747__pinl_13236__flat_166 = SAC_all; }
    { { free (SACp_emal_44748__pinl_13232__icc_4920); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44748__pinl_13232__icc_4920__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_44747__pinl_13236__flat_166)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13244__hce_41 = SACp_pinl_13243__hce_42; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `shp' in a"); SACp_pinl_48420__emal_44767__hce_41__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13244__hce_41 = SACp_pinl_48420__emal_44767__hce_41__SSA0_1; }

    }
    if (!SACp_pinl_13244__hce_41) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failed"); }
    ;



    { *SAC_arg_1__p = SACp_rtpf_10_res; *SAC_arg_1__desc__p = SACp_rtpf_10_res__desc; }
    return;
   
  }



}
}
# 25230 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_8_impl__i_S__i_P (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int SACp_emal_44850__isaa_34225_b;
   
   




    int * SACp_emal_44849__isaa_34226_b;
    SAC_array_descriptor_t SACp_emal_44849__isaa_34226_b__desc = 
# 25247 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25247 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44849__isaa_34226_b__shp0;
    int SACp_emal_44849__isaa_34226_b__sz;
    const int SACp_emal_44849__isaa_34226_b__dim = 1;




    int SACp_emal_44848__isaa_34228_a;
   
   




    int * SACp_emal_44847__isaa_34229_a;
    SAC_array_descriptor_t SACp_emal_44847__isaa_34229_a__desc = 
# 25263 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25263 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44847__isaa_34229_a__shp0;
    int SACp_emal_44847__isaa_34229_a__sz;
    const int SACp_emal_44847__isaa_34229_a__dim = 1;




    int SACp_emal_44846__ivesplit_34326;
   
   




    int SACp_emal_44845__uprf_23048;
   
   




    
# 25285 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25285 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44844__uprf_23042;
   
   




    
# 25292 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25292 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44843__uprf_23036;
   
   




    int * SACp_emal_44842__idc_7175;
    SAC_array_descriptor_t SACp_emal_44842__idc_7175__desc = 
# 25300 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25300 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44842__idc_7175__shp0 = 1;
    const int SACp_emal_44842__idc_7175__sz = 1;
    const int SACp_emal_44842__idc_7175__dim = 1;




    
# 25308 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25308 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44841__uprf_23030;
   
   




    int SACp_emal_44840__uprf_23029;
   
   




    int * SACp_emal_44839__idc_7179;
    SAC_array_descriptor_t SACp_emal_44839__idc_7179__desc = 
# 25323 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25323 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44839__idc_7179__shp0 = 1;
    const int SACp_emal_44839__idc_7179__sz = 1;
    const int SACp_emal_44839__idc_7179__dim = 1;




    int SACp_emal_44838__pinl_22909__icc_6985;
   
   




    int SACp_emal_44837__pinl_22912__icc_6991;
   
   




    
# 25345 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25345 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44834__uprf_23022;
   
   




    
# 25352 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25352 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44833__uprf_23016;
   
   




    
# 25359 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25359 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44832__uprf_23007;
   
   




    
# 25366 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25366 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44831__uprf_23001;
   
   




    int * SACp_emal_44830__idc_7185;
    SAC_array_descriptor_t SACp_emal_44830__idc_7185__desc = 
# 25374 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25374 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44830__idc_7185__shp0 = 1;
    const int SACp_emal_44830__idc_7185__sz = 1;
    const int SACp_emal_44830__idc_7185__dim = 1;




    int SACp_emal_44829__ivesli_42565;
   
   




    int SACp_emal_44828__icc_7120;
   
   




    int SACp_emal_44827__ivesli_42564;
   
   




    int SACp_emal_44826__icc_7126;
   
   




    int * SACp_emal_44824__icc_7132;
    SAC_array_descriptor_t SACp_emal_44824__icc_7132__desc = 
# 25411 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25411 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44824__icc_7132__shp0;
    int SACp_emal_44824__icc_7132__sz;
    const int SACp_emal_44824__icc_7132__dim = 1;




    
# 25419 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25419 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44823__icc_7152_pred;
   
   




    
# 25426 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25426 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44822__icc_7157_pred;
   
   




    int * SACp_emal_44821__flat_199;
    SAC_array_descriptor_t SACp_emal_44821__flat_199__desc = 
# 25434 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25434 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44821__flat_199__shp0;
    int SACp_emal_44821__flat_199__sz;
    const int SACp_emal_44821__flat_199__dim = 1;




    
# 25442 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25442 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44820__icc_7151_pred;
   
   




    
# 25449 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25449 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44819__icc_7153_pred;
   
   




    
# 25456 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25456 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44818__icc_7154_pred;
   
   




    int SACp_emal_44817__icc_7164;
   
   




    int * SACp_emal_44816__pinl_13371_new_shape;
    SAC_array_descriptor_t SACp_emal_44816__pinl_13371_new_shape__desc = 
# 25471 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25471 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44816__pinl_13371_new_shape__shp0;
    int SACp_emal_44816__pinl_13371_new_shape__sz;
    const int SACp_emal_44816__pinl_13371_new_shape__dim = 1;




    
# 25479 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25479 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44815__pinl_13380__icc_7221_pred;
   
   




    
# 25486 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25486 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44814__pinl_13387__icc_7226_pred;
   
   




    int * SACp_emal_44813__pinl_13369__flat_322;
    SAC_array_descriptor_t SACp_emal_44813__pinl_13369__flat_322__desc = 
# 25494 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25494 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44813__pinl_13369__flat_322__shp0;
    int SACp_emal_44813__pinl_13369__flat_322__sz;
    const int SACp_emal_44813__pinl_13369__flat_322__dim = 1;




    
# 25502 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25502 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44812__pinl_13389__icc_7220_pred;
   
   




    
# 25509 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25509 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44811__pinl_13391__icc_7222_pred;
   
   




    
# 25516 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25516 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44810__pinl_13394__icc_7223_pred;
   
   




    int * SACp_emal_44809__pinl_13422_new_shape;
    SAC_array_descriptor_t SACp_emal_44809__pinl_13422_new_shape__desc = 
# 25524 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25524 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44809__pinl_13422_new_shape__shp0;
    int SACp_emal_44809__pinl_13422_new_shape__sz;
    const int SACp_emal_44809__pinl_13422_new_shape__dim = 1;




    
# 25532 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25532 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44808__pinl_13431__icc_5145_pred;
   
   




    
# 25539 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25539 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44807__pinl_13438__icc_5150_pred;
   
   




    int * SACp_emal_44806__pinl_13420__flat_322;
    SAC_array_descriptor_t SACp_emal_44806__pinl_13420__flat_322__desc = 
# 25547 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25547 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44806__pinl_13420__flat_322__shp0;
    int SACp_emal_44806__pinl_13420__flat_322__sz;
    const int SACp_emal_44806__pinl_13420__flat_322__dim = 1;




    
# 25555 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25555 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44805__pinl_13440__icc_5144_pred;
   
   




    
# 25562 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25562 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44804__pinl_13442__icc_5146_pred;
   
   




    
# 25569 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25569 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44803__pinl_13445__icc_5147_pred;
   
   




    int * SACp_emal_44798__pinl_13373_new_idx;
    SAC_array_descriptor_t SACp_emal_44798__pinl_13373_new_idx__desc = 
# 25577 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25577 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44798__pinl_13373_new_idx__shp0;
    int SACp_emal_44798__pinl_13373_new_idx__sz;
    const int SACp_emal_44798__pinl_13373_new_idx__dim = 1;




    
# 25585 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25585 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44797__pinl_13396__icc_7227_pred;
   
   




    
# 25592 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25592 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44796__pinl_13398__icc_7228_pred;
   
   




    
# 25599 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25599 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44795__pinl_13400__icc_7229_pred;
   
   




    int SACp_emal_44794__ivesli_42563;
   
   




    int SACp_emal_44793__pinl_13359__icc_7232;
   
   




    int * SACp_emal_44792__pinl_13363__icc_7238;
    SAC_array_descriptor_t SACp_emal_44792__pinl_13363__icc_7238__desc = 
# 25621 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25621 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44792__pinl_13363__icc_7238__sz = 0;
    int SACp_emal_44792__pinl_13363__icc_7238__dim = 0;




    
# 25628 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25628 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44791__icc_7159_pred;
   
   




    int SACp_emal_44790__idc_7210;
   
   




    int * SACp_emal_44787__pinl_13424_new_idx;
    SAC_array_descriptor_t SACp_emal_44787__pinl_13424_new_idx__desc = 
# 25643 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25643 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44787__pinl_13424_new_idx__shp0;
    int SACp_emal_44787__pinl_13424_new_idx__sz;
    const int SACp_emal_44787__pinl_13424_new_idx__dim = 1;




    
# 25651 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25651 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44786__pinl_13447__icc_5151_pred;
   
   




    
# 25658 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25658 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44785__pinl_13449__icc_5152_pred;
   
   




    
# 25665 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25665 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44784__pinl_13451__icc_5153_pred;
   
   




    int SACp_emal_44783__ivesli_42562;
   
   




    int SACp_emal_44782__pinl_13410__icc_5156;
   
   




    int * SACp_emal_44781__pinl_13414__icc_5162;
    SAC_array_descriptor_t SACp_emal_44781__pinl_13414__icc_5162__desc = 
# 25687 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25687 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44781__pinl_13414__icc_5162__sz = 0;
    int SACp_emal_44781__pinl_13414__icc_5162__dim = 0;




    
# 25694 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 25694 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44780__icc_7158_pred;
   
   




    int SACp_emal_44779__idc_7211;
   
   




    int * SACp_emal_44778__icc_7161;
    SAC_array_descriptor_t SACp_emal_44778__icc_7161__desc = 
# 25709 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25709 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44778__icc_7161__sz = 0;
    int SACp_emal_44778__icc_7161__dim = 0;




    int * SACp_emal_44777__icc_7160;
    SAC_array_descriptor_t SACp_emal_44777__icc_7160__desc = 
# 25717 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25717 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44777__icc_7160__sz = 0;
    int SACp_emal_44777__icc_7160__dim = 0;




    int SACp_emal_44776__asd_43076__icc_7161;
   
   




    int SACp_emal_44775__asd_43075__icc_7160;
   
   




    int * SACp_emal_44773__icc_7168;
    SAC_array_descriptor_t SACp_emal_44773__icc_7168__desc = 
# 25739 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25739 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44773__icc_7168__sz = 0;
    int SACp_emal_44773__icc_7168__dim = 0;




    int SACp_wlidx_42367__pinl_13414__icc_5162;
   
   




    int SACp_wlidx_42366__pinl_13363__icc_7238;
   
   




    int SACp_wlidx_42365__icc_7168;
   
   




    int SACp_wlidx_42364__icc_7132;
   
   




    int * SACp_pinl_13372_iv;
    SAC_array_descriptor_t SACp_pinl_13372_iv__desc = 
# 25775 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25775 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_13372_iv__shp0;
    int SACp_pinl_13372_iv__sz;
    const int SACp_pinl_13372_iv__dim = 1;




    int * SACp_pinl_13423_iv;
    SAC_array_descriptor_t SACp_pinl_13423_iv__desc = 
# 25784 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25784 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_13423_iv__shp0;
    int SACp_pinl_13423_iv__sz;
    const int SACp_pinl_13423_iv__dim = 1;




    int SACp_eat_435;
   
   




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 25800 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25800 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACl_iv__shp0;
    int SACl_iv__sz;
    const int SACl_iv__dim = 1;




    int * SACp_seri_34_index_min;
    SAC_array_descriptor_t SACp_seri_34_index_min__desc = 
# 25809 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 25809 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_seri_34_index_min__shp0 = 1;
    const int SACp_seri_34_index_min__sz = 1;
    const int SACp_seri_34_index_min__dim = 1;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_44850__isaa_34225_b = SACl_b__dim; }; }
    { { if (!((1 == SACp_emal_44849__isaa_34226_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44849__isaa_34226_b"); }; { if ((((6 + (SACp_emal_44849__isaa_34226_b__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44849__isaa_34226_b__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44849__isaa_34226_b__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44849__isaa_34226_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44849__isaa_34226_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44849__isaa_34226_b__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44849__isaa_34226_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44849__isaa_34226_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44849__isaa_34226_b__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44849__isaa_34226_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44849__isaa_34226_b__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44849__isaa_34226_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44849__isaa_34226_b__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44849__isaa_34226_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44849__isaa_34226_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44849__isaa_34226_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44849__isaa_34226_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44849__isaa_34226_b__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44849__isaa_34226_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44849__isaa_34226_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44849__isaa_34226_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44849__isaa_34226_b__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44849__isaa_34226_b__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44849__isaa_34226_b__desc) & (-1 ^ (3))))[4]) = SACp_emal_44849__isaa_34226_b__sz = SAC_size;
      if (!((SACp_emal_44849__isaa_34226_b__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 25844 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 25844 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25844 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 25844 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25844 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 25844 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 25844 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 25844, __extension__ __PRETTY_FUNCTION__); }))
# 25844 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44849__isaa_34226_b = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44849__isaa_34226_b__sz * sizeof (*SACp_emal_44849__isaa_34226_b)); break; case SAC_HM_multi_threaded: SACp_emal_44849__isaa_34226_b = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44849__isaa_34226_b__sz * sizeof (*SACp_emal_44849__isaa_34226_b), 0); break; case SAC_HM_any_threaded: SACp_emal_44849__isaa_34226_b = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44849__isaa_34226_b__sz * sizeof (*SACp_emal_44849__isaa_34226_b), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44849__isaa_34226_b__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44849__isaa_34226_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44849__isaa_34226_b__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
      { SACp_emal_44849__isaa_34226_b[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { SACp_emal_44848__isaa_34228_a = SACl_a__dim; }; }
    { { if (!((1 == SACp_emal_44847__isaa_34229_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44847__isaa_34229_a"); }; { if ((((6 + (SACp_emal_44847__isaa_34229_a__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44847__isaa_34229_a__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44847__isaa_34229_a__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44847__isaa_34229_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44847__isaa_34229_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44847__isaa_34229_a__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44847__isaa_34229_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44847__isaa_34229_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44847__isaa_34229_a__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44847__isaa_34229_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44847__isaa_34229_a__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44847__isaa_34229_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44847__isaa_34229_a__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44847__isaa_34229_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44847__isaa_34229_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44847__isaa_34229_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44847__isaa_34229_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44847__isaa_34229_a__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44847__isaa_34229_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44847__isaa_34229_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44847__isaa_34229_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44847__isaa_34229_a__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44847__isaa_34229_a__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44847__isaa_34229_a__desc) & (-1 ^ (3))))[4]) = SACp_emal_44847__isaa_34229_a__sz = SAC_size;
      if (!((SACp_emal_44847__isaa_34229_a__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 25869 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 25869 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25869 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 25869 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25869 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 25869 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 25869 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 25869, __extension__ __PRETTY_FUNCTION__); }))
# 25869 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44847__isaa_34229_a = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44847__isaa_34229_a__sz * sizeof (*SACp_emal_44847__isaa_34229_a)); break; case SAC_HM_multi_threaded: SACp_emal_44847__isaa_34229_a = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44847__isaa_34229_a__sz * sizeof (*SACp_emal_44847__isaa_34229_a), 0); break; case SAC_HM_any_threaded: SACp_emal_44847__isaa_34229_a = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44847__isaa_34229_a__sz * sizeof (*SACp_emal_44847__isaa_34229_a), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44847__isaa_34229_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44847__isaa_34229_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44847__isaa_34229_a__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
      { SACp_emal_44847__isaa_34229_a[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_44846__ivesplit_34326 = 0; }; }
    ; ; { SACp_emal_44845__uprf_23048 = (SACp_emal_44850__isaa_34225_b) < (SACp_emal_44848__isaa_34228_a) ? (SACp_emal_44850__isaa_34225_b) : (SACp_emal_44848__isaa_34228_a); };
    if (SACp_emal_44845__uprf_23048 >= 0) { { SACp_emal_44844__uprf_23042 = SACp_emal_44845__uprf_23048; }; SACp_emal_44844__uprf_23042 = 1; } else { SACp_emal_44844__uprf_23042 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_44845__uprf_23048"); }
    if (SACp_emal_44845__uprf_23048 >= 0) { { SACp_emal_44843__uprf_23036 = SACp_emal_44845__uprf_23048; }; SACp_emal_44843__uprf_23036 = 1; } else { SACp_emal_44843__uprf_23036 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_44845__uprf_23048"); }
    { { if (!((1 == SACp_emal_44842__idc_7175__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44842__idc_7175"); }; { { if ((((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175)) + ((6 + (SACp_emal_44842__idc_7175__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175)) + ((6 + (SACp_emal_44842__idc_7175__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175)) + ((6 + (SACp_emal_44842__idc_7175__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44842__idc_7175 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44842__idc_7175 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175)) + ((6 + (SACp_emal_44842__idc_7175__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44842__idc_7175 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44842__idc_7175 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175)) + ((6 + (SACp_emal_44842__idc_7175__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175)) + ((6 + (SACp_emal_44842__idc_7175__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175)) + ((6 + (SACp_emal_44842__idc_7175__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175)) + ((6 + (SACp_emal_44842__idc_7175__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175)) + ((6 + (SACp_emal_44842__idc_7175__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44842__idc_7175 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44842__idc_7175 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44842__idc_7175 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44842__idc_7175 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44842__idc_7175__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44842__idc_7175, SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175), ((6 + (SACp_emal_44842__idc_7175__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44842__idc_7175__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44842__idc_7175__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44842__idc_7175__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44842__idc_7175__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44842__idc_7175__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_44842__idc_7175[0] = SACp_emal_44845__uprf_23048; }

    if (SACp_emal_44846__ivesplit_34326 <= SACp_emal_44845__uprf_23048) { SACp_emal_44841__uprf_23030 = 1; } else { SACp_emal_44841__uprf_23030 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Scalar constraint `" "SACp_emal_44846__ivesplit_34326" " (" "%d" ") <= " "SACp_emal_44845__uprf_23048" " (" "%d" ")" "' violated", SACp_emal_44846__ivesplit_34326, SACp_emal_44845__uprf_23048); }
    { ; ; }
    { { SACp_emal_44840__uprf_23029 = SACp_emal_44846__ivesplit_34326; } }
    { { if (!((1 == SACp_emal_44839__idc_7179__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44839__idc_7179"); }; { { if ((((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179)) + ((6 + (SACp_emal_44839__idc_7179__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179)) + ((6 + (SACp_emal_44839__idc_7179__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179)) + ((6 + (SACp_emal_44839__idc_7179__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44839__idc_7179 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44839__idc_7179 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179)) + ((6 + (SACp_emal_44839__idc_7179__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44839__idc_7179 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44839__idc_7179 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179)) + ((6 + (SACp_emal_44839__idc_7179__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179)) + ((6 + (SACp_emal_44839__idc_7179__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179)) + ((6 + (SACp_emal_44839__idc_7179__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179)) + ((6 + (SACp_emal_44839__idc_7179__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179)) + ((6 + (SACp_emal_44839__idc_7179__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44839__idc_7179 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44839__idc_7179 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44839__idc_7179 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44839__idc_7179 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44839__idc_7179__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44839__idc_7179, SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179), ((6 + (SACp_emal_44839__idc_7179__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44839__idc_7179__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44839__idc_7179__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44839__idc_7179__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44839__idc_7179__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44839__idc_7179__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_44839__idc_7179[0] = SACp_emal_44840__uprf_23029; }

    { ; ; }
    if (!SACp_emal_44843__uprf_23036) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44841__uprf_23030) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44844__uprf_23042) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44838__pinl_22909__icc_6985 = ( SACp_emal_44839__idc_7179[SACp_emal_44846__ivesplit_34326]); }

    { { { if (((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44839__idc_7179, ((((SAC_HM_header_t *)SACp_emal_44839__idc_7179) - 1)->data1.arena)); } else { if (SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_44839__idc_7179) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44839__idc_7179, ((((SAC_HM_header_t *)SACp_emal_44839__idc_7179) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44839__idc_7179, ((((SAC_HM_header_t *)SACp_emal_44839__idc_7179) - 1)->data1.arena)); } } else { if (((((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44839__idc_7179, ((((SAC_HM_header_t *)SACp_emal_44839__idc_7179) - 1)->data1.arena)); } else { if (((((SACp_emal_44839__idc_7179__sz * sizeof (*SACp_emal_44839__idc_7179))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_44839__idc_7179) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44839__idc_7179, ((((SAC_HM_header_t *)SACp_emal_44839__idc_7179) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44839__idc_7179, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44839__idc_7179); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44839__idc_7179); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44839__idc_7179, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44839__idc_7179); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44839__idc_7179); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44839__idc_7179__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44837__pinl_22912__icc_6991 = ( SACp_emal_44842__idc_7175[SACp_emal_44846__ivesplit_34326]); }

    { { { if (((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44842__idc_7175, ((((SAC_HM_header_t *)SACp_emal_44842__idc_7175) - 1)->data1.arena)); } else { if (SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_44842__idc_7175) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44842__idc_7175, ((((SAC_HM_header_t *)SACp_emal_44842__idc_7175) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44842__idc_7175, ((((SAC_HM_header_t *)SACp_emal_44842__idc_7175) - 1)->data1.arena)); } } else { if (((((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44842__idc_7175, ((((SAC_HM_header_t *)SACp_emal_44842__idc_7175) - 1)->data1.arena)); } else { if (((((SACp_emal_44842__idc_7175__sz * sizeof (*SACp_emal_44842__idc_7175))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_44842__idc_7175) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44842__idc_7175, ((((SAC_HM_header_t *)SACp_emal_44842__idc_7175) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44842__idc_7175, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44842__idc_7175); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44842__idc_7175); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44842__idc_7175, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44842__idc_7175); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44842__idc_7175); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44842__idc_7175__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_44824__icc_7132__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44824__icc_7132"); }; { if ((((6 + (SACp_emal_44824__icc_7132__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44824__icc_7132__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44824__icc_7132__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44824__icc_7132__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44824__icc_7132__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44824__icc_7132__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44824__icc_7132__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44824__icc_7132__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44824__icc_7132__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44824__icc_7132__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44824__icc_7132__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44824__icc_7132__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44824__icc_7132__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44824__icc_7132__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44824__icc_7132__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44824__icc_7132__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44824__icc_7132__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44824__icc_7132__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44824__icc_7132__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44824__icc_7132__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44824__icc_7132__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44824__icc_7132__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44824__icc_7132__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44837__pinl_22912__icc_6991;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44824__icc_7132__desc) & (-1 ^ (3))))[4]) = SACp_emal_44824__icc_7132__sz = SAC_size;
      if (!((SACp_emal_44824__icc_7132__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 25956 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 25956 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25956 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 25956 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 25956 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 25956 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 25956 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 25956, __extension__ __PRETTY_FUNCTION__); }))
# 25956 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44824__icc_7132 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44824__icc_7132__sz * sizeof (*SACp_emal_44824__icc_7132)); break; case SAC_HM_multi_threaded: SACp_emal_44824__icc_7132 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44824__icc_7132__sz * sizeof (*SACp_emal_44824__icc_7132), 0); break; case SAC_HM_any_threaded: SACp_emal_44824__icc_7132 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44824__icc_7132__sz * sizeof (*SACp_emal_44824__icc_7132), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44824__icc_7132__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44824__icc_7132__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44824__icc_7132__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_44824__icc_7132_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_44824__icc_7132_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_44838__pinl_22909__icc_6985;




      SACp_wlidx_42364__icc_7132
        = SAC_schedule_start0 * SAC_SACp_emal_44824__icc_7132_shpfac0;

      { int SAC_stop_SACp_eat_435 = SACp_emal_44838__pinl_22909__icc_6985; for (SACp_eat_435 = 0; SACp_eat_435 < SACp_emal_44838__pinl_22909__icc_6985;) {
     



      if (!((0 == (SACp_emal_44824__icc_7132__dim - SACp_seri_34_index_min__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_44824__icc_7132_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
      { SACp_emal_44824__icc_7132[SACp_wlidx_42364__icc_7132] = SACp_emal_44846__ivesplit_34326; };

      SACp_wlidx_42364__icc_7132 = SACp_wlidx_42364__icc_7132 + 1;
      SACp_eat_435 = SACp_eat_435 + 1;
      } }
# 26026 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_44838__pinl_22909__icc_6985;
      SAC_schedule_stop0 = SACp_emal_44837__pinl_22912__icc_6991;




      SACp_wlidx_42364__icc_7132
        = SAC_schedule_start0 * SAC_SACp_emal_44824__icc_7132_shpfac0;

      { int SAC_stop_SACp_eat_435 = SACp_emal_44837__pinl_22912__icc_6991; for (SACp_eat_435 = SACp_emal_44838__pinl_22909__icc_6985; SACp_eat_435 < SACp_emal_44837__pinl_22912__icc_6991;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_435 >= 0) { { SACp_emal_44834__uprf_23022 = SACp_eat_435; }; SACp_emal_44834__uprf_23022 = 1; } else { SACp_emal_44834__uprf_23022 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_eat_435"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_435 < SACp_emal_44850__isaa_34225_b) { SACp_emal_44833__uprf_23016 = 1; } else { SACp_emal_44833__uprf_23016 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Scalar constraint `" "SACp_eat_435" " (" "%d" ") < " "SACp_emal_44850__isaa_34225_b" " (" "%d" ")" "' violated", SACp_eat_435, SACp_emal_44850__isaa_34225_b); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_435 >= 0) { { SACp_emal_44832__uprf_23007 = SACp_eat_435; }; SACp_emal_44832__uprf_23007 = 1; } else { SACp_emal_44832__uprf_23007 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_eat_435"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_435 < SACp_emal_44848__isaa_34228_a) { SACp_emal_44831__uprf_23001 = 1; } else { SACp_emal_44831__uprf_23001 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Scalar constraint `" "SACp_eat_435" " (" "%d" ") < " "SACp_emal_44848__isaa_34228_a" " (" "%d" ")" "' violated", SACp_eat_435, SACp_emal_44848__isaa_34228_a); }
      { { if (!((1 == SACp_emal_44830__idc_7185__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44830__idc_7185"); }; { { if ((((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185)) + ((6 + (SACp_emal_44830__idc_7185__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185)) + ((6 + (SACp_emal_44830__idc_7185__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185)) + ((6 + (SACp_emal_44830__idc_7185__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44830__idc_7185 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44830__idc_7185 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185)) + ((6 + (SACp_emal_44830__idc_7185__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44830__idc_7185 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44830__idc_7185 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185)) + ((6 + (SACp_emal_44830__idc_7185__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185)) + ((6 + (SACp_emal_44830__idc_7185__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185)) + ((6 + (SACp_emal_44830__idc_7185__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185)) + ((6 + (SACp_emal_44830__idc_7185__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185)) + ((6 + (SACp_emal_44830__idc_7185__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44830__idc_7185 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44830__idc_7185 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44830__idc_7185 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44830__idc_7185 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44830__idc_7185__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44830__idc_7185, SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185), ((6 + (SACp_emal_44830__idc_7185__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44830__idc_7185__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44830__idc_7185__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44830__idc_7185__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_44830__idc_7185__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      if (!((SACp_emal_44830__idc_7185__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_44830__idc_7185[0] = SACp_eat_435; }

      if (!SACp_emal_44833__uprf_23016) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_44834__uprf_23022) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_44829__ivesli_42565 = ( SACp_emal_44830__idc_7185[0]);

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_44828__icc_7120 = ( SACp_emal_44849__isaa_34226_b[SACp_emal_44829__ivesli_42565]); }

      { ; ; }
      if (!SACp_emal_44833__uprf_23016) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_44834__uprf_23022) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      if (!SACp_emal_44831__uprf_23001) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_44832__uprf_23007) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_44827__ivesli_42564 = ( SACp_emal_44830__idc_7185[0]);

      { { { if (((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44830__idc_7185, ((((SAC_HM_header_t *)SACp_emal_44830__idc_7185) - 1)->data1.arena)); } else { if (SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_44830__idc_7185) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44830__idc_7185, ((((SAC_HM_header_t *)SACp_emal_44830__idc_7185) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44830__idc_7185, ((((SAC_HM_header_t *)SACp_emal_44830__idc_7185) - 1)->data1.arena)); } } else { if (((((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44830__idc_7185, ((((SAC_HM_header_t *)SACp_emal_44830__idc_7185) - 1)->data1.arena)); } else { if (((((SACp_emal_44830__idc_7185__sz * sizeof (*SACp_emal_44830__idc_7185))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_44830__idc_7185) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44830__idc_7185, ((((SAC_HM_header_t *)SACp_emal_44830__idc_7185) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44830__idc_7185, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44830__idc_7185); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44830__idc_7185); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44830__idc_7185, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44830__idc_7185); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44830__idc_7185); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44830__idc_7185__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_44826__icc_7126 = ( SACp_emal_44847__isaa_34229_a[SACp_emal_44827__ivesli_42564]); }

      { ; ; }
      if (!SACp_emal_44831__uprf_23001) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_44832__uprf_23007) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      ; ; { SACp_emal_44826__icc_7126 = (SACp_emal_44826__icc_7126) < (SACp_emal_44828__icc_7120) ? (SACp_emal_44826__icc_7126) : (SACp_emal_44828__icc_7120); };
      { ; ; }



      if (!((0 == (SACp_emal_44824__icc_7132__dim - SACp_seri_34_index_min__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_44824__icc_7132_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
      { SACp_emal_44824__icc_7132[SACp_wlidx_42364__icc_7132] = SACp_emal_44826__icc_7126; };

      { ; ; }
      SACp_wlidx_42364__icc_7132 = SACp_wlidx_42364__icc_7132 + 1;
      SACp_eat_435 = SACp_eat_435 + 1;
      } }
# 26179 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_48570_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_44843__uprf_23036) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44841__uprf_23030) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44844__uprf_23042) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44824__icc_7132__sz; SAC_i++) { if (( SACp_emal_44824__icc_7132[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_44824__icc_7132"); } { SACp_emal_44823__icc_7152_pred = ( SACp_emal_44824__icc_7132[SAC_i]); }; } SACp_emal_44823__icc_7152_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44824__icc_7132__sz; SAC_i++) { if (( SACp_emal_44824__icc_7132[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_44824__icc_7132"); } { SACp_emal_44822__icc_7157_pred = ( SACp_emal_44824__icc_7132[SAC_i]); }; } SACp_emal_44822__icc_7157_pred = SAC_all; }
    { { if (!((1 == SACp_emal_44821__flat_199__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44821__flat_199"); }; { if ((((6 + (SACp_emal_44821__flat_199__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44821__flat_199__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44821__flat_199__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44821__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44821__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44821__flat_199__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44821__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44821__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44821__flat_199__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44821__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44821__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44821__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44821__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44821__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44821__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44821__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44821__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44821__flat_199__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44821__flat_199__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44821__flat_199__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44821__flat_199__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44821__flat_199__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44821__flat_199__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44824__icc_7132__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44821__flat_199__desc) & (-1 ^ (3))))[4]) = SACp_emal_44821__flat_199__sz = SAC_size * SACp_emal_44824__icc_7132__sz;
      if (!((SACp_emal_44821__flat_199__sz >= 0))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26210 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26210 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26210 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26210 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26210 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26210 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26210 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26210, __extension__ __PRETTY_FUNCTION__); }))
# 26210 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44821__flat_199 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44821__flat_199__sz * sizeof (*SACp_emal_44821__flat_199)); break; case SAC_HM_multi_threaded: SACp_emal_44821__flat_199 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44821__flat_199__sz * sizeof (*SACp_emal_44821__flat_199), 0); break; case SAC_HM_any_threaded: SACp_emal_44821__flat_199 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44821__flat_199__sz * sizeof (*SACp_emal_44821__flat_199), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44821__flat_199__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44821__flat_199__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44821__flat_199__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44821__flat_199__sz; SAC_i++) { { SACp_emal_44821__flat_199[SAC_i] = (( SACp_emal_44824__icc_7132[SAC_i])) * (0); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44821__flat_199__sz; SAC_i++) { if (( SACp_emal_44821__flat_199[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_44821__flat_199"); } { SACp_emal_44820__icc_7151_pred = ( SACp_emal_44821__flat_199[SAC_i]); }; } SACp_emal_44820__icc_7151_pred = SAC_all; }
        if (SACp_emal_44821__flat_199__dim != SACp_emal_44824__icc_7132__dim) {
      SACp_emal_44819__icc_7153_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Arrays `" "SACp_emal_44821__flat_199""' with shape %s ""And `" "SACp_emal_44824__icc_7132""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_44821__flat_199__desc), SAC_PrintShape (SACp_emal_44824__icc_7132__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_44821__flat_199__shp0 != SACp_emal_44824__icc_7132__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Arrays `" "SACp_emal_44821__flat_199""' with shape %s ""And `" "SACp_emal_44824__icc_7132""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_44821__flat_199__desc), SAC_PrintShape (SACp_emal_44824__icc_7132__desc));
      }
      SACp_emal_44819__icc_7153_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44821__flat_199__sz && SAC_i < SACp_emal_44824__icc_7132__sz; SAC_i++) { if (( SACp_emal_44821__flat_199[SAC_i]) > ( SACp_emal_44824__icc_7132[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Vector constraint `" "SACp_emal_44821__flat_199" " < " "SACp_emal_44824__icc_7132" "' violated"); } } SACp_emal_44818__icc_7154_pred = SAC_all; }
    if (!SACp_emal_44822__icc_7157_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44818__icc_7154_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44819__icc_7153_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44823__icc_7152_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44820__icc_7151_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_44817__icc_7164 = SACp_emal_44846__ivesplit_34326; } }
    { { if (!((1 == SACp_emal_44816__pinl_13371_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44816__pinl_13371_new_shape"); }; { if ((((6 + (SACp_emal_44816__pinl_13371_new_shape__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44816__pinl_13371_new_shape__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44816__pinl_13371_new_shape__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44816__pinl_13371_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44816__pinl_13371_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44816__pinl_13371_new_shape__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44816__pinl_13371_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44816__pinl_13371_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44816__pinl_13371_new_shape__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44816__pinl_13371_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44816__pinl_13371_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44816__pinl_13371_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44816__pinl_13371_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44816__pinl_13371_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44816__pinl_13371_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44816__pinl_13371_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44816__pinl_13371_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44816__pinl_13371_new_shape__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44816__pinl_13371_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44816__pinl_13371_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_44849__isaa_34226_b__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_44816__pinl_13371_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44816__pinl_13371_new_shape__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44816__pinl_13371_new_shape__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44849__isaa_34226_b__sz - (((SACp_emal_44837__pinl_22912__icc_6991) < 0) ? (-(SACp_emal_44837__pinl_22912__icc_6991)) : (SACp_emal_44837__pinl_22912__icc_6991));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44816__pinl_13371_new_shape__desc) & (-1 ^ (3))))[4]) = SACp_emal_44816__pinl_13371_new_shape__sz = SAC_size;
      if (!((SACp_emal_44816__pinl_13371_new_shape__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26260 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26260 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26260 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26260 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26260 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26260 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26260 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26260, __extension__ __PRETTY_FUNCTION__); }))
# 26260 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44816__pinl_13371_new_shape = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44816__pinl_13371_new_shape__sz * sizeof (*SACp_emal_44816__pinl_13371_new_shape)); break; case SAC_HM_multi_threaded: SACp_emal_44816__pinl_13371_new_shape = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44816__pinl_13371_new_shape__sz * sizeof (*SACp_emal_44816__pinl_13371_new_shape), 0); break; case SAC_HM_any_threaded: SACp_emal_44816__pinl_13371_new_shape = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44816__pinl_13371_new_shape__sz * sizeof (*SACp_emal_44816__pinl_13371_new_shape), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44816__pinl_13371_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44816__pinl_13371_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44816__pinl_13371_new_shape__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 26267 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 26267 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_44837__pinl_22912__icc_6991;
      SAC_cond = (SACp_emal_44837__pinl_22912__icc_6991 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_44849__isaa_34226_b__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_44849__isaa_34226_b__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_44816__pinl_13371_new_shape[SAC_i] = ( SACp_emal_44849__isaa_34226_b[SAC_off + SAC_i]); };
      }
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44816__pinl_13371_new_shape__sz; SAC_i++) { if (( SACp_emal_44816__pinl_13371_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_44816__pinl_13371_new_shape"); } { SACp_emal_44815__pinl_13380__icc_7221_pred = ( SACp_emal_44816__pinl_13371_new_shape[SAC_i]); }; } SACp_emal_44815__pinl_13380__icc_7221_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44816__pinl_13371_new_shape__sz; SAC_i++) { if (( SACp_emal_44816__pinl_13371_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Non-negativity constraint violated " "for vector " "SACp_emal_44816__pinl_13371_new_shape"); } { SACp_emal_44814__pinl_13387__icc_7226_pred = ( SACp_emal_44816__pinl_13371_new_shape[SAC_i]); }; } SACp_emal_44814__pinl_13387__icc_7226_pred = SAC_all; }
    { { if (!((1 == SACp_emal_44813__pinl_13369__flat_322__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44813__pinl_13369__flat_322"); }; { if ((((6 + (SACp_emal_44813__pinl_13369__flat_322__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44813__pinl_13369__flat_322__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44813__pinl_13369__flat_322__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44813__pinl_13369__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44813__pinl_13369__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44813__pinl_13369__flat_322__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44813__pinl_13369__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44813__pinl_13369__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44813__pinl_13369__flat_322__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44813__pinl_13369__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44813__pinl_13369__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44813__pinl_13369__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44813__pinl_13369__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44813__pinl_13369__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44813__pinl_13369__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44813__pinl_13369__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44813__pinl_13369__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44813__pinl_13369__flat_322__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44813__pinl_13369__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44813__pinl_13369__flat_322__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44813__pinl_13369__flat_322__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44813__pinl_13369__flat_322__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44813__pinl_13369__flat_322__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44816__pinl_13371_new_shape__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44813__pinl_13369__flat_322__desc) & (-1 ^ (3))))[4]) = SACp_emal_44813__pinl_13369__flat_322__sz = SAC_size * SACp_emal_44816__pinl_13371_new_shape__sz;
      if (!((SACp_emal_44813__pinl_13369__flat_322__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26300 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26300 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26300 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26300 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26300 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26300 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26300 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26300, __extension__ __PRETTY_FUNCTION__); }))
# 26300 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44813__pinl_13369__flat_322 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44813__pinl_13369__flat_322__sz * sizeof (*SACp_emal_44813__pinl_13369__flat_322)); break; case SAC_HM_multi_threaded: SACp_emal_44813__pinl_13369__flat_322 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44813__pinl_13369__flat_322__sz * sizeof (*SACp_emal_44813__pinl_13369__flat_322), 0); break; case SAC_HM_any_threaded: SACp_emal_44813__pinl_13369__flat_322 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44813__pinl_13369__flat_322__sz * sizeof (*SACp_emal_44813__pinl_13369__flat_322), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44813__pinl_13369__flat_322__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44813__pinl_13369__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44813__pinl_13369__flat_322__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44813__pinl_13369__flat_322__sz; SAC_i++) { { SACp_emal_44813__pinl_13369__flat_322[SAC_i] = (0) * (( SACp_emal_44816__pinl_13371_new_shape[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44813__pinl_13369__flat_322__sz; SAC_i++) { if (( SACp_emal_44813__pinl_13369__flat_322[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_44813__pinl_13369__flat_322"); } { SACp_emal_44812__pinl_13389__icc_7220_pred = ( SACp_emal_44813__pinl_13369__flat_322[SAC_i]); }; } SACp_emal_44812__pinl_13389__icc_7220_pred = SAC_all; }
        if (SACp_emal_44813__pinl_13369__flat_322__dim != SACp_emal_44816__pinl_13371_new_shape__dim) {
      SACp_emal_44811__pinl_13391__icc_7222_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_44813__pinl_13369__flat_322""' with shape %s ""And `" "SACp_emal_44816__pinl_13371_new_shape""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_44813__pinl_13369__flat_322__desc), SAC_PrintShape (SACp_emal_44816__pinl_13371_new_shape__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_44813__pinl_13369__flat_322__shp0 != SACp_emal_44816__pinl_13371_new_shape__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_44813__pinl_13369__flat_322""' with shape %s ""And `" "SACp_emal_44816__pinl_13371_new_shape""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_44813__pinl_13369__flat_322__desc), SAC_PrintShape (SACp_emal_44816__pinl_13371_new_shape__desc));
      }
      SACp_emal_44811__pinl_13391__icc_7222_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44813__pinl_13369__flat_322__sz && SAC_i < SACp_emal_44816__pinl_13371_new_shape__sz; SAC_i++) { if (( SACp_emal_44813__pinl_13369__flat_322[SAC_i]) > ( SACp_emal_44816__pinl_13371_new_shape[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Vector constraint `" "SACp_emal_44813__pinl_13369__flat_322" " < " "SACp_emal_44816__pinl_13371_new_shape" "' violated"); } } SACp_emal_44810__pinl_13394__icc_7223_pred = SAC_all; }
    if (!SACp_emal_44814__pinl_13387__icc_7226_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44810__pinl_13394__icc_7223_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44811__pinl_13391__icc_7222_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44815__pinl_13380__icc_7221_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44812__pinl_13389__icc_7220_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { { if (!((1 == SACp_emal_44809__pinl_13422_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44809__pinl_13422_new_shape"); }; { if ((((6 + (SACp_emal_44809__pinl_13422_new_shape__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44809__pinl_13422_new_shape__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44809__pinl_13422_new_shape__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44809__pinl_13422_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44809__pinl_13422_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44809__pinl_13422_new_shape__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44809__pinl_13422_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44809__pinl_13422_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44809__pinl_13422_new_shape__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44809__pinl_13422_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44809__pinl_13422_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44809__pinl_13422_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44809__pinl_13422_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44809__pinl_13422_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44809__pinl_13422_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44809__pinl_13422_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44809__pinl_13422_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44809__pinl_13422_new_shape__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44809__pinl_13422_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44809__pinl_13422_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_44847__isaa_34229_a__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_44809__pinl_13422_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44809__pinl_13422_new_shape__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44809__pinl_13422_new_shape__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44847__isaa_34229_a__sz - (((SACp_emal_44837__pinl_22912__icc_6991) < 0) ? (-(SACp_emal_44837__pinl_22912__icc_6991)) : (SACp_emal_44837__pinl_22912__icc_6991));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44809__pinl_13422_new_shape__desc) & (-1 ^ (3))))[4]) = SACp_emal_44809__pinl_13422_new_shape__sz = SAC_size;
      if (!((SACp_emal_44809__pinl_13422_new_shape__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26341 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26341 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26341 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26341 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26341 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26341 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26341 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26341, __extension__ __PRETTY_FUNCTION__); }))
# 26341 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44809__pinl_13422_new_shape = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44809__pinl_13422_new_shape__sz * sizeof (*SACp_emal_44809__pinl_13422_new_shape)); break; case SAC_HM_multi_threaded: SACp_emal_44809__pinl_13422_new_shape = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44809__pinl_13422_new_shape__sz * sizeof (*SACp_emal_44809__pinl_13422_new_shape), 0); break; case SAC_HM_any_threaded: SACp_emal_44809__pinl_13422_new_shape = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44809__pinl_13422_new_shape__sz * sizeof (*SACp_emal_44809__pinl_13422_new_shape), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44809__pinl_13422_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44809__pinl_13422_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44809__pinl_13422_new_shape__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 26348 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 26348 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_44837__pinl_22912__icc_6991;
      SAC_cond = (SACp_emal_44837__pinl_22912__icc_6991 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_44847__isaa_34229_a__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_44847__isaa_34229_a__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_44809__pinl_13422_new_shape[SAC_i] = ( SACp_emal_44847__isaa_34229_a[SAC_off + SAC_i]); };
      }
    }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44809__pinl_13422_new_shape__sz; SAC_i++) { if (( SACp_emal_44809__pinl_13422_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_44809__pinl_13422_new_shape"); } { SACp_emal_44808__pinl_13431__icc_5145_pred = ( SACp_emal_44809__pinl_13422_new_shape[SAC_i]); }; } SACp_emal_44808__pinl_13431__icc_5145_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44809__pinl_13422_new_shape__sz; SAC_i++) { if (( SACp_emal_44809__pinl_13422_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Non-negativity constraint violated " "for vector " "SACp_emal_44809__pinl_13422_new_shape"); } { SACp_emal_44807__pinl_13438__icc_5150_pred = ( SACp_emal_44809__pinl_13422_new_shape[SAC_i]); }; } SACp_emal_44807__pinl_13438__icc_5150_pred = SAC_all; }
    { { if (!((1 == SACp_emal_44806__pinl_13420__flat_322__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44806__pinl_13420__flat_322"); }; { if ((((6 + (SACp_emal_44806__pinl_13420__flat_322__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44806__pinl_13420__flat_322__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44806__pinl_13420__flat_322__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44806__pinl_13420__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44806__pinl_13420__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44806__pinl_13420__flat_322__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44806__pinl_13420__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44806__pinl_13420__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44806__pinl_13420__flat_322__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44806__pinl_13420__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44806__pinl_13420__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44806__pinl_13420__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44806__pinl_13420__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44806__pinl_13420__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44806__pinl_13420__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44806__pinl_13420__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44806__pinl_13420__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44806__pinl_13420__flat_322__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44806__pinl_13420__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44806__pinl_13420__flat_322__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44806__pinl_13420__flat_322__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44806__pinl_13420__flat_322__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44806__pinl_13420__flat_322__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44809__pinl_13422_new_shape__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44806__pinl_13420__flat_322__desc) & (-1 ^ (3))))[4]) = SACp_emal_44806__pinl_13420__flat_322__sz = SAC_size * SACp_emal_44809__pinl_13422_new_shape__sz;
      if (!((SACp_emal_44806__pinl_13420__flat_322__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26382 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26382 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26382 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26382 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26382 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26382 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26382 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26382, __extension__ __PRETTY_FUNCTION__); }))
# 26382 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44806__pinl_13420__flat_322 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44806__pinl_13420__flat_322__sz * sizeof (*SACp_emal_44806__pinl_13420__flat_322)); break; case SAC_HM_multi_threaded: SACp_emal_44806__pinl_13420__flat_322 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44806__pinl_13420__flat_322__sz * sizeof (*SACp_emal_44806__pinl_13420__flat_322), 0); break; case SAC_HM_any_threaded: SACp_emal_44806__pinl_13420__flat_322 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44806__pinl_13420__flat_322__sz * sizeof (*SACp_emal_44806__pinl_13420__flat_322), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44806__pinl_13420__flat_322__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44806__pinl_13420__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44806__pinl_13420__flat_322__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44806__pinl_13420__flat_322__sz; SAC_i++) { { SACp_emal_44806__pinl_13420__flat_322[SAC_i] = (0) * (( SACp_emal_44809__pinl_13422_new_shape[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44806__pinl_13420__flat_322__sz; SAC_i++) { if (( SACp_emal_44806__pinl_13420__flat_322[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_44806__pinl_13420__flat_322"); } { SACp_emal_44805__pinl_13440__icc_5144_pred = ( SACp_emal_44806__pinl_13420__flat_322[SAC_i]); }; } SACp_emal_44805__pinl_13440__icc_5144_pred = SAC_all; }
        if (SACp_emal_44806__pinl_13420__flat_322__dim != SACp_emal_44809__pinl_13422_new_shape__dim) {
      SACp_emal_44804__pinl_13442__icc_5146_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_44806__pinl_13420__flat_322""' with shape %s ""And `" "SACp_emal_44809__pinl_13422_new_shape""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_44806__pinl_13420__flat_322__desc), SAC_PrintShape (SACp_emal_44809__pinl_13422_new_shape__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_44806__pinl_13420__flat_322__shp0 != SACp_emal_44809__pinl_13422_new_shape__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_44806__pinl_13420__flat_322""' with shape %s ""And `" "SACp_emal_44809__pinl_13422_new_shape""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_44806__pinl_13420__flat_322__desc), SAC_PrintShape (SACp_emal_44809__pinl_13422_new_shape__desc));
      }
      SACp_emal_44804__pinl_13442__icc_5146_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44806__pinl_13420__flat_322__sz && SAC_i < SACp_emal_44809__pinl_13422_new_shape__sz; SAC_i++) { if (( SACp_emal_44806__pinl_13420__flat_322[SAC_i]) > ( SACp_emal_44809__pinl_13422_new_shape[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Vector constraint `" "SACp_emal_44806__pinl_13420__flat_322" " < " "SACp_emal_44809__pinl_13422_new_shape" "' violated"); } } SACp_emal_44803__pinl_13445__icc_5147_pred = SAC_all; }
    if (!SACp_emal_44807__pinl_13438__icc_5150_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44803__pinl_13445__icc_5147_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44804__pinl_13442__icc_5146_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44808__pinl_13431__icc_5145_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44805__pinl_13440__icc_5144_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { { if (!(((SACp_emal_44824__icc_7132__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_44773__icc_7168"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26405 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26405 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26405 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26405 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26405 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26405 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26405 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26405, __extension__ __PRETTY_FUNCTION__); }))
# 26405 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44773__icc_7168__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_44824__icc_7132__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_44773__icc_7168__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_44824__icc_7132__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_44773__icc_7168__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_44824__icc_7132__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[3]) = SACp_emal_44773__icc_7168__dim = (SACp_emal_44824__icc_7132__sz) + (0); }



   
    if (!((SACp_emal_44824__icc_7132__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_44773__icc_7168__dim == SACp_emal_44824__icc_7132__sz + (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_44824__icc_7132__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_44824__icc_7132[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[4]) = SACp_emal_44773__icc_7168__sz = SAC_size;
      if (!((SACp_emal_44773__icc_7168__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26425 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26425 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26425 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26425 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26425 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26425 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26425 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26425, __extension__ __PRETTY_FUNCTION__); }))
# 26425 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44773__icc_7168 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44773__icc_7168__sz * sizeof (*SACp_emal_44773__icc_7168)); break; case SAC_HM_multi_threaded: SACp_emal_44773__icc_7168 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44773__icc_7168__sz * sizeof (*SACp_emal_44773__icc_7168), 0); break; case SAC_HM_any_threaded: SACp_emal_44773__icc_7168 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44773__icc_7168__sz * sizeof (*SACp_emal_44773__icc_7168), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACl_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACl_iv"); }; { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACl_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACl_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACl_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44821__flat_199__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[4]) = SACl_iv__sz = SAC_size * SACp_emal_44821__flat_199__sz;
      if (!((SACl_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26440 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26440 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26440 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26440 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26440 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26440 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26440 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26440, __extension__ __PRETTY_FUNCTION__); }))
# 26440 "/home/rubenhensen/sac/a.out.c"
   ; SACl_iv = (int *)SAC_HM_MallocAnyChunk_st (SACl_iv__sz * sizeof (*SACl_iv)); break; case SAC_HM_multi_threaded: SACl_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACl_iv__sz * sizeof (*SACl_iv), 0); break; case SAC_HM_any_threaded: SACl_iv = (int *)SAC_HM_MallocAnyChunk_at (SACl_iv__sz * sizeof (*SACl_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACl_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACl_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_44773__icc_7168__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_44773__icc_7168_shpfac0; SAC_d = SACp_emal_44773__icc_7168__dim - 1; SACp_wlidx_42365__icc_7168 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_44773__icc_7168_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_44821__flat_199[SAC_d]) <= ( SACl_iv[SAC_d])) && (( SACl_iv[SAC_d]) < ( SACp_emal_44824__icc_7132[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!(((SACp_emal_44816__pinl_13371_new_shape__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_44792__pinl_13363__icc_7238"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26455 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26455 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26455 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26455 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26455 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26455 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26455 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26455, __extension__ __PRETTY_FUNCTION__); }))
# 26455 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44792__pinl_13363__icc_7238__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_44816__pinl_13371_new_shape__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_44792__pinl_13363__icc_7238__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_44816__pinl_13371_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_44792__pinl_13363__icc_7238__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_44816__pinl_13371_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[3]) = SACp_emal_44792__pinl_13363__icc_7238__dim = (SACp_emal_44816__pinl_13371_new_shape__sz) + (0); }



   
    if (!((SACp_emal_44816__pinl_13371_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_44792__pinl_13363__icc_7238__dim == SACp_emal_44816__pinl_13371_new_shape__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_44816__pinl_13371_new_shape__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_44816__pinl_13371_new_shape[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[4]) = SACp_emal_44792__pinl_13363__icc_7238__sz = SAC_size;
      if (!((SACp_emal_44792__pinl_13363__icc_7238__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26475 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26475 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26475 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26475 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26475 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26475 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26475 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26475, __extension__ __PRETTY_FUNCTION__); }))
# 26475 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44792__pinl_13363__icc_7238 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44792__pinl_13363__icc_7238__sz * sizeof (*SACp_emal_44792__pinl_13363__icc_7238)); break; case SAC_HM_multi_threaded: SACp_emal_44792__pinl_13363__icc_7238 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44792__pinl_13363__icc_7238__sz * sizeof (*SACp_emal_44792__pinl_13363__icc_7238), 0); break; case SAC_HM_any_threaded: SACp_emal_44792__pinl_13363__icc_7238 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44792__pinl_13363__icc_7238__sz * sizeof (*SACp_emal_44792__pinl_13363__icc_7238), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_13372_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_13372_iv"); }; { if ((((6 + (SACp_pinl_13372_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_13372_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_13372_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_13372_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_13372_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_13372_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_13372_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_13372_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_13372_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_13372_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_13372_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_13372_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_13372_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_13372_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_13372_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_13372_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_13372_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13372_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13372_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13372_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_13372_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_13372_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13372_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44813__pinl_13369__flat_322__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13372_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_13372_iv__sz = SAC_size * SACp_emal_44813__pinl_13369__flat_322__sz;
      if (!((SACp_pinl_13372_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26490 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26490 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26490 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26490 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26490 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26490 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26490 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26490, __extension__ __PRETTY_FUNCTION__); }))
# 26490 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_13372_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_13372_iv__sz * sizeof (*SACp_pinl_13372_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_13372_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_13372_iv__sz * sizeof (*SACp_pinl_13372_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_13372_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_13372_iv__sz * sizeof (*SACp_pinl_13372_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13372_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13372_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13372_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_13372_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_13372_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_44792__pinl_13363__icc_7238__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_44792__pinl_13363__icc_7238_shpfac0; SAC_d = SACp_emal_44792__pinl_13363__icc_7238__dim - 1; SACp_wlidx_42366__pinl_13363__icc_7238 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_44792__pinl_13363__icc_7238_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_44813__pinl_13369__flat_322[SAC_d]) <= ( SACp_pinl_13372_iv[SAC_d])) && (( SACp_pinl_13372_iv[SAC_d]) < ( SACp_emal_44816__pinl_13371_new_shape[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!((1 == SACp_emal_44798__pinl_13373_new_idx__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44798__pinl_13373_new_idx"); }; { if ((((6 + (SACp_emal_44798__pinl_13373_new_idx__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44798__pinl_13373_new_idx__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44798__pinl_13373_new_idx__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44798__pinl_13373_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44798__pinl_13373_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44798__pinl_13373_new_idx__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44798__pinl_13373_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44798__pinl_13373_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44798__pinl_13373_new_idx__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44798__pinl_13373_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44798__pinl_13373_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44798__pinl_13373_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44798__pinl_13373_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44798__pinl_13373_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44798__pinl_13373_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44798__pinl_13373_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44798__pinl_13373_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44798__pinl_13373_new_idx__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44798__pinl_13373_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44798__pinl_13373_new_idx__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACl_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_pinl_13372_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_44798__pinl_13373_new_idx__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44798__pinl_13373_new_idx__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44798__pinl_13373_new_idx__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_iv__sz + SACp_pinl_13372_iv__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44798__pinl_13373_new_idx__desc) & (-1 ^ (3))))[4]) = SACp_emal_44798__pinl_13373_new_idx__sz = SAC_size;
      if (!((SACp_emal_44798__pinl_13373_new_idx__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26523 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26523 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26523 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26523 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26523 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26523 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26523 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26523, __extension__ __PRETTY_FUNCTION__); }))
# 26523 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44798__pinl_13373_new_idx = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44798__pinl_13373_new_idx__sz * sizeof (*SACp_emal_44798__pinl_13373_new_idx)); break; case SAC_HM_multi_threaded: SACp_emal_44798__pinl_13373_new_idx = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44798__pinl_13373_new_idx__sz * sizeof (*SACp_emal_44798__pinl_13373_new_idx), 0); break; case SAC_HM_any_threaded: SACp_emal_44798__pinl_13373_new_idx = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44798__pinl_13373_new_idx__sz * sizeof (*SACp_emal_44798__pinl_13373_new_idx), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44798__pinl_13373_new_idx__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44798__pinl_13373_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44798__pinl_13373_new_idx__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACl_iv__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_44798__pinl_13373_new_idx[SAC_i] = ( SACl_iv[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_pinl_13372_iv__sz; SAC_i++) { { SACp_emal_44798__pinl_13373_new_idx[SAC_off + SAC_i] = ( SACp_pinl_13372_iv[SAC_i]); }; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    if ((SACp_emal_44798__pinl_13373_new_idx__dim == 1) && (SACp_emal_44798__pinl_13373_new_idx__shp0 == SACl_b__dim)) { SACp_emal_44797__pinl_13396__icc_7227_pred = 1; } else { SACp_emal_44797__pinl_13396__icc_7227_pred = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays " "SACp_emal_44798__pinl_13373_new_idx" " and " "SACl_b" " do not adhere to shape matches dim constraint"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44798__pinl_13373_new_idx__sz; SAC_i++) { if (( SACp_emal_44798__pinl_13373_new_idx[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for vector " "SACp_emal_44798__pinl_13373_new_idx"); } { SACp_emal_44796__pinl_13398__icc_7228_pred = ( SACp_emal_44798__pinl_13373_new_idx[SAC_i]); }; } SACp_emal_44796__pinl_13398__icc_7228_pred = SAC_all; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }



    if ((SACp_emal_44798__pinl_13373_new_idx__dim != 1) && (SACp_emal_44798__pinl_13373_new_idx__shp0 != SACl_b__dim)) {
      SACp_emal_44795__pinl_13400__icc_7229_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_44798__pinl_13373_new_idx""' with shape %s ""And `" "SACl_b""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_44798__pinl_13373_new_idx__desc), SAC_PrintShape (SACl_b__desc));
    }
    else {
      int SAC_all = 1; for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
        if (( SACp_emal_44798__pinl_13373_new_idx[SAC_i]) >= (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))])) {
          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_44798__pinl_13373_new_idx""' with shape %s ""And `" "SACl_b""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_44798__pinl_13373_new_idx__desc), SAC_PrintShape (SACl_b__desc));
        }
      }
      SACp_emal_44795__pinl_13400__icc_7229_pred = SAC_all;
    }

    if (!SACp_emal_44795__pinl_13400__icc_7229_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44796__pinl_13398__icc_7228_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44797__pinl_13396__icc_7227_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      for (SAC_i = 0; SAC_i < SACp_emal_44798__pinl_13373_new_idx__sz; SAC_i++)
      {

        SAC_l = ( SACp_emal_44849__isaa_34226_b[SAC_i]) * SAC_l + ( SACp_emal_44798__pinl_13373_new_idx[SAC_i]);
      }
      for (SAC_i = SACp_emal_44798__pinl_13373_new_idx__sz; SAC_i < SACp_emal_44849__isaa_34226_b__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_44849__isaa_34226_b[SAC_i]);
      }
      SACp_emal_44794__ivesli_42563 = SAC_l;
    }

    { { free (SACp_emal_44798__pinl_13373_new_idx); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44798__pinl_13373_new_idx__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44793__pinl_13359__icc_7232 = ( SACl_b[SACp_emal_44794__ivesli_42563]); }

    { ; ; }
    if (!SACp_emal_44795__pinl_13400__icc_7229_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44796__pinl_13398__icc_7228_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44797__pinl_13396__icc_7227_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_44792__pinl_13363__icc_7238__dim - SACp_pinl_13372_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44792__pinl_13363__icc_7238_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal size found!"); };
    { SACp_emal_44792__pinl_13363__icc_7238[SACp_wlidx_42366__pinl_13363__icc_7238] = SACp_emal_44793__pinl_13359__icc_7232; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_44792__pinl_13363__icc_7238__dim - SACp_pinl_13372_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44792__pinl_13363__icc_7238_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal size found!"); };
    { SACp_emal_44792__pinl_13363__icc_7238[SACp_wlidx_42366__pinl_13363__icc_7238] = SACp_emal_44846__ivesplit_34326; };

    }
    SACp_wlidx_42366__pinl_13363__icc_7238 = SACp_wlidx_42366__pinl_13363__icc_7238 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_13372_iv[SAC_d] = ( SACp_pinl_13372_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_13372_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_13372_iv[SAC_d] = 0; SAC_d--; SACp_pinl_13372_iv[SAC_d] = ( SACp_pinl_13372_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_13372_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_13372_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13372_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_44814__pinl_13387__icc_7226_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44810__pinl_13394__icc_7223_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44811__pinl_13391__icc_7222_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44815__pinl_13380__icc_7221_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44812__pinl_13389__icc_7220_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Assignment with incompatible types found"); };
    ;

    }
        if (SACp_emal_44792__pinl_13363__icc_7238__dim != 0) {
      SACp_emal_44791__icc_7159_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Array `" "SACp_emal_44792__pinl_13363__icc_7238""' with shape %s ""does not adhere to `dim == 0' constraint", SAC_PrintShape (SACp_emal_44792__pinl_13363__icc_7238__desc));
    }
    else {
      if (0)
      {

        SACp_emal_44791__icc_7159_pred = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Array `" "SACp_emal_44792__pinl_13363__icc_7238""' with shape %s ""does not adhere to `shp == []' constraint", SAC_PrintShape (SACp_emal_44792__pinl_13363__icc_7238__desc));
      }
      else {
        SACp_emal_44791__icc_7159_pred = 1;
      }
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_44792__pinl_13363__icc_7238__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44790__idc_7210 = ( SACp_emal_44792__pinl_13363__icc_7238[0]); } }
    { { free (SACp_emal_44792__pinl_13363__icc_7238); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44792__pinl_13363__icc_7238__desc) & (-1 ^ (3))))); } } }
    { { if (!(((SACp_emal_44809__pinl_13422_new_shape__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_44781__pinl_13414__icc_5162"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26683 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26683 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26683 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26683 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26683 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26683 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26683 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26683, __extension__ __PRETTY_FUNCTION__); }))
# 26683 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44781__pinl_13414__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_44809__pinl_13422_new_shape__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_44781__pinl_13414__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_44809__pinl_13422_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_44781__pinl_13414__icc_5162__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_44809__pinl_13422_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[3]) = SACp_emal_44781__pinl_13414__icc_5162__dim = (SACp_emal_44809__pinl_13422_new_shape__sz) + (0); }



   
    if (!((SACp_emal_44809__pinl_13422_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_44781__pinl_13414__icc_5162__dim == SACp_emal_44809__pinl_13422_new_shape__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_44809__pinl_13422_new_shape__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_44809__pinl_13422_new_shape[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[4]) = SACp_emal_44781__pinl_13414__icc_5162__sz = SAC_size;
      if (!((SACp_emal_44781__pinl_13414__icc_5162__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26703 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26703 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26703 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26703 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26703 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26703 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26703 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26703, __extension__ __PRETTY_FUNCTION__); }))
# 26703 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44781__pinl_13414__icc_5162 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44781__pinl_13414__icc_5162__sz * sizeof (*SACp_emal_44781__pinl_13414__icc_5162)); break; case SAC_HM_multi_threaded: SACp_emal_44781__pinl_13414__icc_5162 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44781__pinl_13414__icc_5162__sz * sizeof (*SACp_emal_44781__pinl_13414__icc_5162), 0); break; case SAC_HM_any_threaded: SACp_emal_44781__pinl_13414__icc_5162 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44781__pinl_13414__icc_5162__sz * sizeof (*SACp_emal_44781__pinl_13414__icc_5162), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_13423_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_13423_iv"); }; { if ((((6 + (SACp_pinl_13423_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_13423_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_13423_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_13423_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_13423_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_13423_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_13423_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_13423_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_13423_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_13423_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_13423_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_13423_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_13423_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_13423_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_13423_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_13423_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_13423_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13423_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13423_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13423_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_13423_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_13423_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13423_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44806__pinl_13420__flat_322__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13423_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_13423_iv__sz = SAC_size * SACp_emal_44806__pinl_13420__flat_322__sz;
      if (!((SACp_pinl_13423_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26718 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26718 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26718 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26718 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26718 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26718 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26718 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26718, __extension__ __PRETTY_FUNCTION__); }))
# 26718 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_13423_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_13423_iv__sz * sizeof (*SACp_pinl_13423_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_13423_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_13423_iv__sz * sizeof (*SACp_pinl_13423_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_13423_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_13423_iv__sz * sizeof (*SACp_pinl_13423_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13423_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13423_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13423_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_13423_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_13423_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_44781__pinl_13414__icc_5162__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_44781__pinl_13414__icc_5162_shpfac0; SAC_d = SACp_emal_44781__pinl_13414__icc_5162__dim - 1; SACp_wlidx_42367__pinl_13414__icc_5162 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_44781__pinl_13414__icc_5162_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_44806__pinl_13420__flat_322[SAC_d]) <= ( SACp_pinl_13423_iv[SAC_d])) && (( SACp_pinl_13423_iv[SAC_d]) < ( SACp_emal_44809__pinl_13422_new_shape[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!((1 == SACp_emal_44787__pinl_13424_new_idx__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44787__pinl_13424_new_idx"); }; { if ((((6 + (SACp_emal_44787__pinl_13424_new_idx__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44787__pinl_13424_new_idx__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44787__pinl_13424_new_idx__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44787__pinl_13424_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44787__pinl_13424_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44787__pinl_13424_new_idx__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44787__pinl_13424_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44787__pinl_13424_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44787__pinl_13424_new_idx__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44787__pinl_13424_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44787__pinl_13424_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44787__pinl_13424_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44787__pinl_13424_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44787__pinl_13424_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44787__pinl_13424_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44787__pinl_13424_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44787__pinl_13424_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44787__pinl_13424_new_idx__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44787__pinl_13424_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44787__pinl_13424_new_idx__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACl_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_pinl_13423_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_44787__pinl_13424_new_idx__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44787__pinl_13424_new_idx__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44787__pinl_13424_new_idx__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_iv__sz + SACp_pinl_13423_iv__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44787__pinl_13424_new_idx__desc) & (-1 ^ (3))))[4]) = SACp_emal_44787__pinl_13424_new_idx__sz = SAC_size;
      if (!((SACp_emal_44787__pinl_13424_new_idx__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26751 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26751 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26751 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26751 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26751 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26751 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26751 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26751, __extension__ __PRETTY_FUNCTION__); }))
# 26751 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44787__pinl_13424_new_idx = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44787__pinl_13424_new_idx__sz * sizeof (*SACp_emal_44787__pinl_13424_new_idx)); break; case SAC_HM_multi_threaded: SACp_emal_44787__pinl_13424_new_idx = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44787__pinl_13424_new_idx__sz * sizeof (*SACp_emal_44787__pinl_13424_new_idx), 0); break; case SAC_HM_any_threaded: SACp_emal_44787__pinl_13424_new_idx = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44787__pinl_13424_new_idx__sz * sizeof (*SACp_emal_44787__pinl_13424_new_idx), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44787__pinl_13424_new_idx__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44787__pinl_13424_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44787__pinl_13424_new_idx__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACl_iv__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_44787__pinl_13424_new_idx[SAC_i] = ( SACl_iv[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_pinl_13423_iv__sz; SAC_i++) { { SACp_emal_44787__pinl_13424_new_idx[SAC_off + SAC_i] = ( SACp_pinl_13423_iv[SAC_i]); }; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    if ((SACp_emal_44787__pinl_13424_new_idx__dim == 1) && (SACp_emal_44787__pinl_13424_new_idx__shp0 == SACl_a__dim)) { SACp_emal_44786__pinl_13447__icc_5151_pred = 1; } else { SACp_emal_44786__pinl_13447__icc_5151_pred = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays " "SACp_emal_44787__pinl_13424_new_idx" " and " "SACl_a" " do not adhere to shape matches dim constraint"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44787__pinl_13424_new_idx__sz; SAC_i++) { if (( SACp_emal_44787__pinl_13424_new_idx[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for vector " "SACp_emal_44787__pinl_13424_new_idx"); } { SACp_emal_44785__pinl_13449__icc_5152_pred = ( SACp_emal_44787__pinl_13424_new_idx[SAC_i]); }; } SACp_emal_44785__pinl_13449__icc_5152_pred = SAC_all; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }



    if ((SACp_emal_44787__pinl_13424_new_idx__dim != 1) && (SACp_emal_44787__pinl_13424_new_idx__shp0 != SACl_a__dim)) {
      SACp_emal_44784__pinl_13451__icc_5153_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_44787__pinl_13424_new_idx""' with shape %s ""And `" "SACl_a""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_44787__pinl_13424_new_idx__desc), SAC_PrintShape (SACl_a__desc));
    }
    else {
      int SAC_all = 1; for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
        if (( SACp_emal_44787__pinl_13424_new_idx[SAC_i]) >= (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))])) {
          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_44787__pinl_13424_new_idx""' with shape %s ""And `" "SACl_a""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_44787__pinl_13424_new_idx__desc), SAC_PrintShape (SACl_a__desc));
        }
      }
      SACp_emal_44784__pinl_13451__icc_5153_pred = SAC_all;
    }

    if (!SACp_emal_44784__pinl_13451__icc_5153_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44785__pinl_13449__icc_5152_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44786__pinl_13447__icc_5151_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      for (SAC_i = 0; SAC_i < SACp_emal_44787__pinl_13424_new_idx__sz; SAC_i++)
      {

        SAC_l = ( SACp_emal_44847__isaa_34229_a[SAC_i]) * SAC_l + ( SACp_emal_44787__pinl_13424_new_idx[SAC_i]);
      }
      for (SAC_i = SACp_emal_44787__pinl_13424_new_idx__sz; SAC_i < SACp_emal_44847__isaa_34229_a__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_44847__isaa_34229_a[SAC_i]);
      }
      SACp_emal_44783__ivesli_42562 = SAC_l;
    }

    { { free (SACp_emal_44787__pinl_13424_new_idx); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44787__pinl_13424_new_idx__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44782__pinl_13410__icc_5156 = ( SACl_a[SACp_emal_44783__ivesli_42562]); }

    { ; ; }
    if (!SACp_emal_44784__pinl_13451__icc_5153_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44785__pinl_13449__icc_5152_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44786__pinl_13447__icc_5151_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_44781__pinl_13414__icc_5162__dim - SACp_pinl_13423_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44781__pinl_13414__icc_5162_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal size found!"); };
    { SACp_emal_44781__pinl_13414__icc_5162[SACp_wlidx_42367__pinl_13414__icc_5162] = SACp_emal_44782__pinl_13410__icc_5156; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_44781__pinl_13414__icc_5162__dim - SACp_pinl_13423_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44781__pinl_13414__icc_5162_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal size found!"); };
    { SACp_emal_44781__pinl_13414__icc_5162[SACp_wlidx_42367__pinl_13414__icc_5162] = SACp_emal_44846__ivesplit_34326; };

    }
    SACp_wlidx_42367__pinl_13414__icc_5162 = SACp_wlidx_42367__pinl_13414__icc_5162 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_13423_iv[SAC_d] = ( SACp_pinl_13423_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_13423_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_13423_iv[SAC_d] = 0; SAC_d--; SACp_pinl_13423_iv[SAC_d] = ( SACp_pinl_13423_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_13423_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_13423_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13423_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_44807__pinl_13438__icc_5150_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44803__pinl_13445__icc_5147_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44804__pinl_13442__icc_5146_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44808__pinl_13431__icc_5145_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44805__pinl_13440__icc_5144_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Assignment with incompatible types found"); };
    ;

    }
        if (SACp_emal_44781__pinl_13414__icc_5162__dim != 0) {
      SACp_emal_44780__icc_7158_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Array `" "SACp_emal_44781__pinl_13414__icc_5162""' with shape %s ""does not adhere to `dim == 0' constraint", SAC_PrintShape (SACp_emal_44781__pinl_13414__icc_5162__desc));
    }
    else {
      if (0)
      {

        SACp_emal_44780__icc_7158_pred = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Array `" "SACp_emal_44781__pinl_13414__icc_5162""' with shape %s ""does not adhere to `shp == []' constraint", SAC_PrintShape (SACp_emal_44781__pinl_13414__icc_5162__desc));
      }
      else {
        SACp_emal_44780__icc_7158_pred = 1;
      }
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_44781__pinl_13414__icc_5162__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44779__idc_7211 = ( SACp_emal_44781__pinl_13414__icc_5162[0]); } }
    { { free (SACp_emal_44781__pinl_13414__icc_5162); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44781__pinl_13414__icc_5162__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_44791__icc_7159_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    if (!SACp_emal_44780__icc_7158_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    { { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_44778__icc_7161"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26913 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26913 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26913 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26913 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26913 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26913 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26913 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26913, __extension__ __PRETTY_FUNCTION__); }))
# 26913 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44778__icc_7161__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_44778__icc_7161__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_44778__icc_7161__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44778__icc_7161__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44778__icc_7161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44778__icc_7161__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44778__icc_7161__desc) & (-1 ^ (3))))[3]) = SACp_emal_44778__icc_7161__dim = 0; }



    if (!((SACp_emal_44778__icc_7161__dim == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44778__icc_7161__desc) & (-1 ^ (3))))[4]) = SACp_emal_44778__icc_7161__sz = SAC_size * 1;
      if (!((SACp_emal_44778__icc_7161__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26925 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26925 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26925 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26925 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26925 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26925 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26925 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26925, __extension__ __PRETTY_FUNCTION__); }))
# 26925 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44778__icc_7161 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44778__icc_7161__sz * sizeof (*SACp_emal_44778__icc_7161)); break; case SAC_HM_multi_threaded: SACp_emal_44778__icc_7161 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44778__icc_7161__sz * sizeof (*SACp_emal_44778__icc_7161), 0); break; case SAC_HM_any_threaded: SACp_emal_44778__icc_7161 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44778__icc_7161__sz * sizeof (*SACp_emal_44778__icc_7161), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44778__icc_7161__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44778__icc_7161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44778__icc_7161__desc) & (-1 ^ (3))))[1]) = 0; } }
    { if (!((SACp_emal_44778__icc_7161__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44778__icc_7161[0] = SACp_emal_44790__idc_7210; } }
    { ; ; }
    { { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_44777__icc_7160"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26928 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26928 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26928 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26928 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26928 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26928 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26928 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26928, __extension__ __PRETTY_FUNCTION__); }))
# 26928 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44777__icc_7160__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_44777__icc_7160__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_44777__icc_7160__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44777__icc_7160__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44777__icc_7160__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44777__icc_7160__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44777__icc_7160__desc) & (-1 ^ (3))))[3]) = SACp_emal_44777__icc_7160__dim = 0; }



    if (!((SACp_emal_44777__icc_7160__dim == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44777__icc_7160__desc) & (-1 ^ (3))))[4]) = SACp_emal_44777__icc_7160__sz = SAC_size * 1;
      if (!((SACp_emal_44777__icc_7160__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 26940 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 26940 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26940 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 26940 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 26940 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 26940 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 26940 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 26940, __extension__ __PRETTY_FUNCTION__); }))
# 26940 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44777__icc_7160 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44777__icc_7160__sz * sizeof (*SACp_emal_44777__icc_7160)); break; case SAC_HM_multi_threaded: SACp_emal_44777__icc_7160 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44777__icc_7160__sz * sizeof (*SACp_emal_44777__icc_7160), 0); break; case SAC_HM_any_threaded: SACp_emal_44777__icc_7160 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44777__icc_7160__sz * sizeof (*SACp_emal_44777__icc_7160), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44777__icc_7160__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44777__icc_7160__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44777__icc_7160__desc) & (-1 ^ (3))))[1]) = 0; } }
    { if (!((SACp_emal_44777__icc_7160__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44777__icc_7160[0] = SACp_emal_44779__idc_7211; } }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_44778__icc_7161__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44776__asd_43076__icc_7161 = ( SACp_emal_44778__icc_7161[0]); } }
    { { free (SACp_emal_44778__icc_7161); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44778__icc_7161__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_44777__icc_7160__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44775__asd_43075__icc_7160 = ( SACp_emal_44777__icc_7160[0]); } }
    { { free (SACp_emal_44777__icc_7160); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44777__icc_7160__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_44775__asd_43075__icc_7160 = (SACp_emal_44775__asd_43075__icc_7160) + (SACp_emal_44776__asd_43076__icc_7161); };
    { ; ; }
    if (!SACp_emal_44791__icc_7159_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    if (!SACp_emal_44780__icc_7158_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_44773__icc_7168__dim - SACl_iv__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44773__icc_7168_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
    { SACp_emal_44773__icc_7168[SACp_wlidx_42365__icc_7168] = SACp_emal_44775__asd_43075__icc_7160; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_44773__icc_7168__dim - SACl_iv__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44773__icc_7168_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
    { SACp_emal_44773__icc_7168[SACp_wlidx_42365__icc_7168] = SACp_emal_44817__icc_7164; };

    }
    SACp_wlidx_42365__icc_7168 = SACp_wlidx_42365__icc_7168 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACl_iv[SAC_d] = ( SACl_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACl_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACl_iv[SAC_d] = 0; SAC_d--; SACl_iv[SAC_d] = ( SACl_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACl_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44773__icc_7168__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_emal_44824__icc_7132); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44824__icc_7132__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44821__flat_199); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44821__flat_199__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { { free (SACl_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44806__pinl_13420__flat_322); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44806__pinl_13420__flat_322__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44809__pinl_13422_new_shape); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44809__pinl_13422_new_shape__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_44813__pinl_13369__flat_322); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44813__pinl_13369__flat_322__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44816__pinl_13371_new_shape); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44816__pinl_13371_new_shape__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_44849__isaa_34226_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44849__isaa_34226_b__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44847__isaa_34229_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44847__isaa_34229_a__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))); } } } } else { } }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
    if (!SACp_emal_44822__icc_7157_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44818__icc_7154_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44819__icc_7153_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44823__icc_7152_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44820__icc_7151_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_44773__icc_7168; *SAC_arg_1__desc__p = SACp_emal_44773__icc_7168__desc; }
    return;
   
  }



}
}
# 27045 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_31_impl_pluscarret__i__i_2_3 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_a, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48515_SACl_b;
    SAC_array_descriptor_t _tcp_48515_SACl_b__desc = 
# 27055 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27055 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48515_SACl_b__sz = 0;
    int _tcp_48515_SACl_b__dim = 0;




    int * _tcp_48514_SACp_emal_44865__wlur_29730;
    SAC_array_descriptor_t _tcp_48514_SACp_emal_44865__wlur_29730__desc = 
# 27063 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27063 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48514_SACp_emal_44865__wlur_29730__sz = 0;
    int _tcp_48514_SACp_emal_44865__wlur_29730__dim = 0;




    
# 27070 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27070 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48426__emal_44867__hce_41__SSA0_1;
   
   




    
# 27077 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27077 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48424__emal_44869__hce_42__SSA0_1;
   
   




    
# 27084 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27084 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48423__emal_44868__hce_42;
   
   

    const int SACp_emal_44866__isaa_34392_a = 0;



    int * SACp_emal_44865__wlur_29730;
    SAC_array_descriptor_t SACp_emal_44865__wlur_29730__desc = 
# 27093 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27093 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44865__wlur_29730__shp0 = 2;
    const int SACp_emal_44865__wlur_29730__shp1 = 3;
    const int SACp_emal_44865__wlur_29730__sz = 6;
    const int SACp_emal_44865__wlur_29730__dim = 2;




    int SACp_emal_44864__isaa_34395__pinl_13738__rtpf_10_res;
   
   




    int * SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res;
    SAC_array_descriptor_t SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc = 
# 27110 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27110 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__shp0;
    int SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__sz;
    const int SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim = 1;




    
# 27118 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27118 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44861__pinl_13747__flat_164;
   
   




    int * SACp_emal_44860__pinl_13751__flat_168;
    SAC_array_descriptor_t SACp_emal_44860__pinl_13751__flat_168__desc = 
# 27126 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27126 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44860__pinl_13751__flat_168__shp0 = 2;
    const int SACp_emal_44860__pinl_13751__flat_168__sz = 2;
    const int SACp_emal_44860__pinl_13751__flat_168__dim = 1;




    int SACp_emal_44859__uprf_29723;
   
   

    const int SACp_emal_44858__ivesplit_34409 = 1;



    int SACp_emal_44857__uprf_29728;
   
   




    
# 27149 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27149 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44855__uprf_29716;
   
   




    
# 27156 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27156 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44853__uprf_29719;
   
   




    
# 27163 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27163 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_44852__pinl_13745__icc_4920;
    SAC_array_descriptor_t SACp_emal_44852__pinl_13745__icc_4920__desc = 
# 27164 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27164 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44852__pinl_13745__icc_4920__shp0 = 2;
    const int SACp_emal_44852__pinl_13745__icc_4920__sz = 2;
    const int SACp_emal_44852__pinl_13745__icc_4920__dim = 1;




    
# 27172 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27172 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44851__pinl_13749__flat_166;
   
   




    
# 27179 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27179 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_13757__hce_41;
   
   




    
# 27186 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27186 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_13756__hce_42;
   
   




    int * SACp_pinl_13738__rtpf_10_res;
    SAC_array_descriptor_t SACp_pinl_13738__rtpf_10_res__desc = 
# 27194 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27194 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_13738__rtpf_10_res__sz = 0;
    int SACp_pinl_13738__rtpf_10_res__dim = 0;





    const int SACl_b__shp0 = 2;
    const int SACl_b__shp1 = 3;
    const int SACl_b__sz = 6;
    const int SACl_b__dim = 2;




   

   
    { { if (!((2 == SACp_emal_44865__wlur_29730__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44865__wlur_29730"); }; { { if ((((SACp_emal_44865__wlur_29730__sz * sizeof (*SACp_emal_44865__wlur_29730)) + ((6 + (SACp_emal_44865__wlur_29730__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44865__wlur_29730__sz * sizeof (*SACp_emal_44865__wlur_29730)) + ((6 + (SACp_emal_44865__wlur_29730__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44865__wlur_29730__sz * sizeof (*SACp_emal_44865__wlur_29730)) + ((6 + (SACp_emal_44865__wlur_29730__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44865__wlur_29730 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44865__wlur_29730 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44865__wlur_29730__sz * sizeof (*SACp_emal_44865__wlur_29730)) + ((6 + (SACp_emal_44865__wlur_29730__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44865__wlur_29730 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44865__wlur_29730 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44865__wlur_29730__sz * sizeof (*SACp_emal_44865__wlur_29730)) + ((6 + (SACp_emal_44865__wlur_29730__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44865__wlur_29730__sz * sizeof (*SACp_emal_44865__wlur_29730)) + ((6 + (SACp_emal_44865__wlur_29730__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44865__wlur_29730__sz * sizeof (*SACp_emal_44865__wlur_29730)) + ((6 + (SACp_emal_44865__wlur_29730__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44865__wlur_29730__sz * sizeof (*SACp_emal_44865__wlur_29730)) + ((6 + (SACp_emal_44865__wlur_29730__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44865__wlur_29730__sz * sizeof (*SACp_emal_44865__wlur_29730)) + ((6 + (SACp_emal_44865__wlur_29730__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44865__wlur_29730 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44865__wlur_29730 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44865__wlur_29730 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44865__wlur_29730 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44865__wlur_29730__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44865__wlur_29730, SACp_emal_44865__wlur_29730__sz * sizeof (*SACp_emal_44865__wlur_29730), ((6 + (SACp_emal_44865__wlur_29730__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44865__wlur_29730__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44865__wlur_29730__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44865__wlur_29730__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44865__wlur_29730__dim == (2)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44865__wlur_29730__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44865__wlur_29730__shp1 == 3))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_44865__wlur_29730[0] = SACl_a; }
    { SACp_emal_44865__wlur_29730[1] = SACl_a; }
    { SACp_emal_44865__wlur_29730[2] = SACl_a; }
    { SACp_emal_44865__wlur_29730[3] = SACl_a; }
    { SACp_emal_44865__wlur_29730[4] = SACl_a; }
    { SACp_emal_44865__wlur_29730[5] = SACl_a; }

    ;



    _tcp_48515_SACl_b__desc = SACl_b__desc;
    _tcp_48515_SACl_b__sz = SACl_b__sz;
    _tcp_48515_SACl_b__dim = SACl_b__dim;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48515_SACl_b__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48515_SACl_b__desc) & (-1 ^ (3))))[(6 + (1))]) = SACl_b__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48515_SACl_b__desc) & (-1 ^ (3))))[4]) = SACl_b__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48515_SACl_b__desc) & (-1 ^ (3))))[3]) = SACl_b__dim;
    { _tcp_48515_SACl_b = SACl_b; }




    _tcp_48514_SACp_emal_44865__wlur_29730__desc = SACp_emal_44865__wlur_29730__desc;
    _tcp_48514_SACp_emal_44865__wlur_29730__sz = SACp_emal_44865__wlur_29730__sz;
    _tcp_48514_SACp_emal_44865__wlur_29730__dim = SACp_emal_44865__wlur_29730__dim;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48514_SACp_emal_44865__wlur_29730__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44865__wlur_29730__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48514_SACp_emal_44865__wlur_29730__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_44865__wlur_29730__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48514_SACp_emal_44865__wlur_29730__desc) & (-1 ^ (3))))[4]) = SACp_emal_44865__wlur_29730__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48514_SACp_emal_44865__wlur_29730__desc) & (-1 ^ (3))))[3]) = SACp_emal_44865__wlur_29730__dim;
    { _tcp_48514_SACp_emal_44865__wlur_29730 = SACp_emal_44865__wlur_29730; }




    SACf__MAIN___rtpf_8_impl__i_P__i_P (&SACp_pinl_13738__rtpf_10_res, &SACp_pinl_13738__rtpf_10_res__desc, _tcp_48514_SACp_emal_44865__wlur_29730, _tcp_48514_SACp_emal_44865__wlur_29730__desc, _tcp_48515_SACl_b, _tcp_48515_SACl_b__desc);




    SACp_pinl_13738__rtpf_10_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_13738__rtpf_10_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_44864__isaa_34395__pinl_13738__rtpf_10_res = SACp_pinl_13738__rtpf_10_res__dim; }; }
    { { if (!((1 == SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res"); }; { if ((((6 + (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_13738__rtpf_10_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__sz = SAC_size;
      if (!((SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 27293 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 27293 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27293 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 27293 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27293 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 27293 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 27293 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 27293, __extension__ __PRETTY_FUNCTION__); }))
# 27293 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__sz * sizeof (*SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res)); break; case SAC_HM_multi_threaded: SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__sz * sizeof (*SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res), 0); break; case SAC_HM_any_threaded: SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__sz * sizeof (*SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_13738__rtpf_10_res__dim; SAC_i++) {
      { SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; ; { SACp_emal_44864__isaa_34395__pinl_13738__rtpf_10_res = (2) - (SACp_emal_44864__isaa_34395__pinl_13738__rtpf_10_res); };
    ; ; { SACp_emal_44861__pinl_13747__flat_164 = (SACp_emal_44864__isaa_34395__pinl_13738__rtpf_10_res) == (0); };
    { ; ; }
    if (SACp_emal_44861__pinl_13747__flat_164)
    {
      { ; ; }
      { { SACp_pinl_48423__emal_44868__hce_42 = 
# 27308 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 27308 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13756__hce_42 = SACp_pinl_48423__emal_44868__hce_42; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `d' in a"); SACp_pinl_48424__emal_44869__hce_42__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13756__hce_42 = SACp_pinl_48424__emal_44869__hce_42__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_44860__pinl_13751__flat_168__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44860__pinl_13751__flat_168"); }; { { if ((((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168)) + ((6 + (SACp_emal_44860__pinl_13751__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168)) + ((6 + (SACp_emal_44860__pinl_13751__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168)) + ((6 + (SACp_emal_44860__pinl_13751__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44860__pinl_13751__flat_168 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44860__pinl_13751__flat_168 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168)) + ((6 + (SACp_emal_44860__pinl_13751__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44860__pinl_13751__flat_168 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44860__pinl_13751__flat_168 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168)) + ((6 + (SACp_emal_44860__pinl_13751__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168)) + ((6 + (SACp_emal_44860__pinl_13751__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168)) + ((6 + (SACp_emal_44860__pinl_13751__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168)) + ((6 + (SACp_emal_44860__pinl_13751__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168)) + ((6 + (SACp_emal_44860__pinl_13751__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44860__pinl_13751__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44860__pinl_13751__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44860__pinl_13751__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44860__pinl_13751__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44860__pinl_13751__flat_168__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168, SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168), ((6 + (SACp_emal_44860__pinl_13751__flat_168__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44860__pinl_13751__flat_168__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44860__pinl_13751__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44860__pinl_13751__flat_168__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44860__pinl_13751__flat_168__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44860__pinl_13751__flat_168__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 27348 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 27348 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_44860__pinl_13751__flat_168[SAC_i] = ( SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44863__isaa_34396__pinl_13738__rtpf_10_res__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44859__uprf_29723 = ( SACp_emal_44860__pinl_13751__flat_168[SACp_emal_44866__isaa_34392_a]); }

    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44857__uprf_29728 = ( SACp_emal_44860__pinl_13751__flat_168[SACp_emal_44858__ivesplit_34409]); }

    { { { if (((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168, ((((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168) - 1)->data1.arena)); } else { if (SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168, ((((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168, ((((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168) - 1)->data1.arena)); } } else { if (((((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168, ((((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168) - 1)->data1.arena)); } else { if (((((SACp_emal_44860__pinl_13751__flat_168__sz * sizeof (*SACp_emal_44860__pinl_13751__flat_168))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168, ((((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44860__pinl_13751__flat_168); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44860__pinl_13751__flat_168__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    ; ; { SACp_emal_44859__uprf_29723 = (-2) + (SACp_emal_44859__uprf_29723); };
    ; ; { SACp_emal_44855__uprf_29716 = (SACp_emal_44859__uprf_29723) == (0); };
    { ; ; }
    ; ; { SACp_emal_44857__uprf_29728 = (-3) + (SACp_emal_44857__uprf_29728); };
    ; ; { SACp_emal_44853__uprf_29719 = (SACp_emal_44857__uprf_29728) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_44852__pinl_13745__icc_4920__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44852__pinl_13745__icc_4920"); }; { { if ((((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920)) + ((6 + (SACp_emal_44852__pinl_13745__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920)) + ((6 + (SACp_emal_44852__pinl_13745__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920)) + ((6 + (SACp_emal_44852__pinl_13745__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44852__pinl_13745__icc_4920 = (
# 27404 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27404 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44852__pinl_13745__icc_4920 = (
# 27404 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27404 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920)) + ((6 + (SACp_emal_44852__pinl_13745__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44852__pinl_13745__icc_4920 = (
# 27404 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27404 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44852__pinl_13745__icc_4920 = (
# 27404 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27404 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920)) + ((6 + (SACp_emal_44852__pinl_13745__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920)) + ((6 + (SACp_emal_44852__pinl_13745__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920)) + ((6 + (SACp_emal_44852__pinl_13745__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920)) + ((6 + (SACp_emal_44852__pinl_13745__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920)) + ((6 + (SACp_emal_44852__pinl_13745__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44852__pinl_13745__icc_4920 = (
# 27404 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27404 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44852__pinl_13745__icc_4920 = (
# 27404 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27404 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44852__pinl_13745__icc_4920 = (
# 27404 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27404 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44852__pinl_13745__icc_4920 = (
# 27404 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27404 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44852__pinl_13745__icc_4920__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920, SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920), ((6 + (SACp_emal_44852__pinl_13745__icc_4920__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44852__pinl_13745__icc_4920__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44852__pinl_13745__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44852__pinl_13745__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44852__pinl_13745__icc_4920__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44852__pinl_13745__icc_4920__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_44852__pinl_13745__icc_4920[0] = SACp_emal_44855__uprf_29716; }
    { SACp_emal_44852__pinl_13745__icc_4920[1] = SACp_emal_44853__uprf_29719; }

    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44852__pinl_13745__icc_4920__sz; SAC_i++) { if (( SACp_emal_44852__pinl_13745__icc_4920[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_44851__pinl_13749__flat_166 = SAC_all; }
    { { { if (((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920, ((((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920) - 1)->data1.arena)); } else { if (SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920, ((((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920, ((((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920) - 1)->data1.arena)); } } else { if (((((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920, ((((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920) - 1)->data1.arena)); } else { if (((((SACp_emal_44852__pinl_13745__icc_4920__sz * sizeof (*SACp_emal_44852__pinl_13745__icc_4920))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920, ((((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44852__pinl_13745__icc_4920); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44852__pinl_13745__icc_4920__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_44851__pinl_13749__flat_166)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13757__hce_41 = SACp_pinl_13756__hce_42; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `shp' in a"); SACp_pinl_48426__emal_44867__hce_41__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13757__hce_41 = SACp_pinl_48426__emal_44867__hce_41__SSA0_1; }

    }
    if (!SACp_pinl_13757__hce_41) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failed"); }
    ;



    { *SAC_arg_1__p = SACp_pinl_13738__rtpf_10_res; *SAC_arg_1__desc__p = SACp_pinl_13738__rtpf_10_res__desc; }
    return;
   
  }



}
}
# 27474 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___PL__i_P__i_P (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    
# 27483 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27483 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48438__emal_44890__hce_41__SSA0_1;
   
   




    
# 27490 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27490 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48436__emal_44892__hce_42__SSA0_1;
   
   




    
# 27497 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27497 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48435__emal_44891__hce_42;
   
   




    
# 27504 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27504 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48432__emal_44893__hce_39__SSA0_1;
   
   




    
# 27511 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27511 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48430__emal_44895__hce_40__SSA0_1;
   
   




    
# 27518 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27518 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48429__emal_44894__hce_40;
   
   




    int SACp_emal_44889__isaa_34425_b;
   
   




    int * SACp_emal_44888__isaa_34426_b;
    SAC_array_descriptor_t SACp_emal_44888__isaa_34426_b__desc = 
# 27533 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27533 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44888__isaa_34426_b__shp0;
    int SACp_emal_44888__isaa_34426_b__sz;
    const int SACp_emal_44888__isaa_34426_b__dim = 1;




    int SACp_emal_44887__isaa_34428_a;
   
   




    int * SACp_emal_44886__isaa_34429_a;
    SAC_array_descriptor_t SACp_emal_44886__isaa_34429_a__desc = 
# 27549 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27549 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44886__isaa_34429_a__shp0;
    int SACp_emal_44886__isaa_34429_a__sz;
    const int SACp_emal_44886__isaa_34429_a__dim = 1;




    
# 27557 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27557 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44884__pinl_13791__flat_157;
   
   




    int * SACp_emal_44883__pinl_13795__flat_161;
    SAC_array_descriptor_t SACp_emal_44883__pinl_13795__flat_161__desc = 
# 27565 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27565 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44883__pinl_13795__flat_161__shp0;
    int SACp_emal_44883__pinl_13795__flat_161__sz;
    const int SACp_emal_44883__pinl_13795__flat_161__dim = 1;




    
# 27573 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27573 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44882__pinl_13804__icc_4911_pred;
   
   




    int * SACp_emal_44881__ctz_23638;
    SAC_array_descriptor_t SACp_emal_44881__ctz_23638__desc = 
# 27581 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27581 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44881__ctz_23638__shp0;
    int SACp_emal_44881__ctz_23638__sz;
    const int SACp_emal_44881__ctz_23638__dim = 1;




    
# 27589 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27589 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_44880__pinl_13789__icc_4914;
    SAC_array_descriptor_t SACp_emal_44880__pinl_13789__icc_4914__desc = 
# 27590 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27590 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44880__pinl_13789__icc_4914__shp0;
    int SACp_emal_44880__pinl_13789__icc_4914__sz;
    const int SACp_emal_44880__pinl_13789__icc_4914__dim = 1;




    
# 27598 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27598 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44879__pinl_13793__flat_159;
   
   




    int SACp_emal_44878__isaa_34454__rtpf_10_res;
   
   




    int * SACp_emal_44877__isaa_34455__rtpf_10_res;
    SAC_array_descriptor_t SACp_emal_44877__isaa_34455__rtpf_10_res__desc = 
# 27613 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27613 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44877__isaa_34455__rtpf_10_res__shp0;
    int SACp_emal_44877__isaa_34455__rtpf_10_res__sz;
    const int SACp_emal_44877__isaa_34455__rtpf_10_res__dim = 1;




    
# 27621 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27621 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44875__pinl_13813__flat_164;
   
   




    int * SACp_emal_44874__pinl_13817__flat_168;
    SAC_array_descriptor_t SACp_emal_44874__pinl_13817__flat_168__desc = 
# 27629 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27629 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44874__pinl_13817__flat_168__shp0;
    int SACp_emal_44874__pinl_13817__flat_168__sz;
    const int SACp_emal_44874__pinl_13817__flat_168__dim = 1;




    
# 27637 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27637 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44873__pinl_13826__icc_4917_pred;
   
   




    int * SACp_emal_44872__ctz_23634;
    SAC_array_descriptor_t SACp_emal_44872__ctz_23634__desc = 
# 27645 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27645 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44872__ctz_23634__shp0;
    int SACp_emal_44872__ctz_23634__sz;
    const int SACp_emal_44872__ctz_23634__dim = 1;




    
# 27653 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27653 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_44871__pinl_13811__icc_4920;
    SAC_array_descriptor_t SACp_emal_44871__pinl_13811__icc_4920__desc = 
# 27654 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27654 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44871__pinl_13811__icc_4920__shp0;
    int SACp_emal_44871__pinl_13811__icc_4920__sz;
    const int SACp_emal_44871__pinl_13811__icc_4920__dim = 1;




    
# 27662 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27662 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44870__pinl_13815__flat_166;
   
   




    
# 27669 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27669 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_13801__hce_39;
   
   




    
# 27676 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27676 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_13800__hce_40;
   
   




    
# 27683 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27683 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_13823__hce_41;
   
   




    
# 27690 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27690 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_13822__hce_42;
   
   




    int * SACl_b__SSA0_1;
    SAC_array_descriptor_t SACl_b__SSA0_1__desc = 
# 27698 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27698 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACl_b__SSA0_1__sz = 0;
    int SACl_b__SSA0_1__dim = 0;




    int * SACl_a__SSA0_1;
    SAC_array_descriptor_t SACl_a__SSA0_1__desc = 
# 27706 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27706 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACl_a__SSA0_1__sz = 0;
    int SACl_a__SSA0_1__dim = 0;




    int * SACp_rtpf_10_res;
    SAC_array_descriptor_t SACp_rtpf_10_res__desc = 
# 27714 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 27714 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_rtpf_10_res__sz = 0;
    int SACp_rtpf_10_res__dim = 0;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_44889__isaa_34425_b = SACl_b__dim; }; }
    { { if (!((1 == SACp_emal_44888__isaa_34426_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44888__isaa_34426_b"); }; { if ((((6 + (SACp_emal_44888__isaa_34426_b__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44888__isaa_34426_b__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44888__isaa_34426_b__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44888__isaa_34426_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44888__isaa_34426_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44888__isaa_34426_b__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44888__isaa_34426_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44888__isaa_34426_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44888__isaa_34426_b__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44888__isaa_34426_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44888__isaa_34426_b__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44888__isaa_34426_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44888__isaa_34426_b__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44888__isaa_34426_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44888__isaa_34426_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44888__isaa_34426_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44888__isaa_34426_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44888__isaa_34426_b__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44888__isaa_34426_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44888__isaa_34426_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44888__isaa_34426_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44888__isaa_34426_b__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44888__isaa_34426_b__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44888__isaa_34426_b__desc) & (-1 ^ (3))))[4]) = SACp_emal_44888__isaa_34426_b__sz = SAC_size;
      if (!((SACp_emal_44888__isaa_34426_b__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 27756 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 27756 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27756 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 27756 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27756 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 27756 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 27756 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 27756, __extension__ __PRETTY_FUNCTION__); }))
# 27756 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44888__isaa_34426_b = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44888__isaa_34426_b__sz * sizeof (*SACp_emal_44888__isaa_34426_b)); break; case SAC_HM_multi_threaded: SACp_emal_44888__isaa_34426_b = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44888__isaa_34426_b__sz * sizeof (*SACp_emal_44888__isaa_34426_b), 0); break; case SAC_HM_any_threaded: SACp_emal_44888__isaa_34426_b = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44888__isaa_34426_b__sz * sizeof (*SACp_emal_44888__isaa_34426_b), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44888__isaa_34426_b__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44888__isaa_34426_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44888__isaa_34426_b__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
      { SACp_emal_44888__isaa_34426_b[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { SACp_emal_44887__isaa_34428_a = SACl_a__dim; }; }
    { { if (!((1 == SACp_emal_44886__isaa_34429_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44886__isaa_34429_a"); }; { if ((((6 + (SACp_emal_44886__isaa_34429_a__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44886__isaa_34429_a__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44886__isaa_34429_a__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44886__isaa_34429_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44886__isaa_34429_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44886__isaa_34429_a__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44886__isaa_34429_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44886__isaa_34429_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44886__isaa_34429_a__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44886__isaa_34429_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44886__isaa_34429_a__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44886__isaa_34429_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44886__isaa_34429_a__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44886__isaa_34429_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44886__isaa_34429_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44886__isaa_34429_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44886__isaa_34429_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44886__isaa_34429_a__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44886__isaa_34429_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44886__isaa_34429_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44886__isaa_34429_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44886__isaa_34429_a__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44886__isaa_34429_a__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44886__isaa_34429_a__desc) & (-1 ^ (3))))[4]) = SACp_emal_44886__isaa_34429_a__sz = SAC_size;
      if (!((SACp_emal_44886__isaa_34429_a__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 27781 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 27781 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27781 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 27781 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27781 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 27781 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 27781 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 27781, __extension__ __PRETTY_FUNCTION__); }))
# 27781 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44886__isaa_34429_a = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44886__isaa_34429_a__sz * sizeof (*SACp_emal_44886__isaa_34429_a)); break; case SAC_HM_multi_threaded: SACp_emal_44886__isaa_34429_a = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44886__isaa_34429_a__sz * sizeof (*SACp_emal_44886__isaa_34429_a), 0); break; case SAC_HM_any_threaded: SACp_emal_44886__isaa_34429_a = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44886__isaa_34429_a__sz * sizeof (*SACp_emal_44886__isaa_34429_a), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44886__isaa_34429_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44886__isaa_34429_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44886__isaa_34429_a__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
      { SACp_emal_44886__isaa_34429_a[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; ; { SACp_emal_44889__isaa_34425_b = (SACp_emal_44887__isaa_34428_a) - (SACp_emal_44889__isaa_34425_b); };
    ; ; { SACp_emal_44884__pinl_13791__flat_157 = (SACp_emal_44889__isaa_34425_b) == (0); };
    { ; ; }
    if (SACp_emal_44884__pinl_13791__flat_157)
    {
      { ; ; }
      { { SACp_pinl_48429__emal_44894__hce_40 = 
# 27796 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 27796 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13800__hce_40 = SACp_pinl_48429__emal_44894__hce_40; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `d' in a"); SACp_pinl_48430__emal_44895__hce_40__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13800__hce_40 = SACp_pinl_48430__emal_44895__hce_40__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_44883__pinl_13795__flat_161__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44883__pinl_13795__flat_161"); }; { if ((((6 + (SACp_emal_44883__pinl_13795__flat_161__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44883__pinl_13795__flat_161__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44883__pinl_13795__flat_161__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44883__pinl_13795__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44883__pinl_13795__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44883__pinl_13795__flat_161__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44883__pinl_13795__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44883__pinl_13795__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44883__pinl_13795__flat_161__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44883__pinl_13795__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44883__pinl_13795__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44883__pinl_13795__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44883__pinl_13795__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44883__pinl_13795__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44883__pinl_13795__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44883__pinl_13795__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44883__pinl_13795__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44883__pinl_13795__flat_161__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44883__pinl_13795__flat_161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44883__pinl_13795__flat_161__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_44888__isaa_34426_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_44883__pinl_13795__flat_161__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44883__pinl_13795__flat_161__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44883__pinl_13795__flat_161__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_44887__isaa_34428_a) < 0) ? (-(SACp_emal_44887__isaa_34428_a)) : (SACp_emal_44887__isaa_34428_a));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44883__pinl_13795__flat_161__desc) & (-1 ^ (3))))[4]) = SACp_emal_44883__pinl_13795__flat_161__sz = SAC_size;
      if (!((SACp_emal_44883__pinl_13795__flat_161__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 27839 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 27839 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27839 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 27839 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27839 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 27839 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 27839 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 27839, __extension__ __PRETTY_FUNCTION__); }))
# 27839 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44883__pinl_13795__flat_161 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44883__pinl_13795__flat_161__sz * sizeof (*SACp_emal_44883__pinl_13795__flat_161)); break; case SAC_HM_multi_threaded: SACp_emal_44883__pinl_13795__flat_161 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44883__pinl_13795__flat_161__sz * sizeof (*SACp_emal_44883__pinl_13795__flat_161), 0); break; case SAC_HM_any_threaded: SACp_emal_44883__pinl_13795__flat_161 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44883__pinl_13795__flat_161__sz * sizeof (*SACp_emal_44883__pinl_13795__flat_161), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44883__pinl_13795__flat_161__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44883__pinl_13795__flat_161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44883__pinl_13795__flat_161__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 27846 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 27846 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_44887__isaa_34428_a;
      SAC_cond = (SACp_emal_44887__isaa_34428_a < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_44888__isaa_34426_b__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_44888__isaa_34426_b__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 39, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_44883__pinl_13795__flat_161[SAC_i] = ( SACp_emal_44888__isaa_34426_b[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_44888__isaa_34426_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44888__isaa_34426_b__desc) & (-1 ^ (3))))); } } }
        if (SACp_emal_44886__isaa_34429_a__dim != SACp_emal_44883__pinl_13795__flat_161__dim) {
      SACp_emal_44882__pinl_13804__icc_4911_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_44886__isaa_34429_a""' with shape %s ""And `" "SACp_emal_44883__pinl_13795__flat_161""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_44886__isaa_34429_a__desc), SAC_PrintShape (SACp_emal_44883__pinl_13795__flat_161__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_44886__isaa_34429_a__shp0 != SACp_emal_44883__pinl_13795__flat_161__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_44886__isaa_34429_a""' with shape %s ""And `" "SACp_emal_44883__pinl_13795__flat_161""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_44886__isaa_34429_a__desc), SAC_PrintShape (SACp_emal_44883__pinl_13795__flat_161__desc));
      }
      SACp_emal_44882__pinl_13804__icc_4911_pred = SAC_all;
    }

    if (!SACp_emal_44882__pinl_13804__icc_4911_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { { if (!((1 == SACp_emal_44881__ctz_23638__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44881__ctz_23638"); }; { if ((((6 + (SACp_emal_44881__ctz_23638__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44881__ctz_23638__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44881__ctz_23638__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44881__ctz_23638__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44881__ctz_23638__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44881__ctz_23638__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44881__ctz_23638__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44881__ctz_23638__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44881__ctz_23638__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44881__ctz_23638__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44881__ctz_23638__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44881__ctz_23638__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44881__ctz_23638__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44881__ctz_23638__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44881__ctz_23638__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44881__ctz_23638__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44881__ctz_23638__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44881__ctz_23638__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44881__ctz_23638__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44881__ctz_23638__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44881__ctz_23638__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44881__ctz_23638__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44881__ctz_23638__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44883__pinl_13795__flat_161__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44881__ctz_23638__desc) & (-1 ^ (3))))[4]) = SACp_emal_44881__ctz_23638__sz = SAC_size * SACp_emal_44883__pinl_13795__flat_161__sz;
      if (!((SACp_emal_44881__ctz_23638__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 27892 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 27892 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27892 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 27892 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27892 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 27892 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 27892 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 27892, __extension__ __PRETTY_FUNCTION__); }))
# 27892 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44881__ctz_23638 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44881__ctz_23638__sz * sizeof (*SACp_emal_44881__ctz_23638)); break; case SAC_HM_multi_threaded: SACp_emal_44881__ctz_23638 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44881__ctz_23638__sz * sizeof (*SACp_emal_44881__ctz_23638), 0); break; case SAC_HM_any_threaded: SACp_emal_44881__ctz_23638 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44881__ctz_23638__sz * sizeof (*SACp_emal_44881__ctz_23638), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44881__ctz_23638__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44881__ctz_23638__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44881__ctz_23638__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44881__ctz_23638__sz; SAC_i++) { { SACp_emal_44881__ctz_23638[SAC_i] = (( SACp_emal_44886__isaa_34429_a[SAC_i])) - (( SACp_emal_44883__pinl_13795__flat_161[SAC_i])); }; } }
    { { free (SACp_emal_44883__pinl_13795__flat_161); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44883__pinl_13795__flat_161__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_44880__pinl_13789__icc_4914__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44880__pinl_13789__icc_4914"); }; { if ((((6 + (SACp_emal_44880__pinl_13789__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44880__pinl_13789__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44880__pinl_13789__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44880__pinl_13789__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44880__pinl_13789__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44880__pinl_13789__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44880__pinl_13789__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44880__pinl_13789__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44880__pinl_13789__icc_4914__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44880__pinl_13789__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44880__pinl_13789__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44880__pinl_13789__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44880__pinl_13789__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44880__pinl_13789__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44880__pinl_13789__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44880__pinl_13789__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44880__pinl_13789__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44880__pinl_13789__icc_4914__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44880__pinl_13789__icc_4914__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44880__pinl_13789__icc_4914__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44880__pinl_13789__icc_4914__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44880__pinl_13789__icc_4914__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44880__pinl_13789__icc_4914__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44881__ctz_23638__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44880__pinl_13789__icc_4914__desc) & (-1 ^ (3))))[4]) = SACp_emal_44880__pinl_13789__icc_4914__sz = SAC_size * SACp_emal_44881__ctz_23638__sz;
      if (!((SACp_emal_44880__pinl_13789__icc_4914__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 27909 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 27909 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27909 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 27909 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27909 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 27909 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 27909 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 27909, __extension__ __PRETTY_FUNCTION__); }))
# 27909 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44880__pinl_13789__icc_4914 = (
# 27909 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27909 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_44880__pinl_13789__icc_4914__sz * sizeof (*SACp_emal_44880__pinl_13789__icc_4914)); break; case SAC_HM_multi_threaded: SACp_emal_44880__pinl_13789__icc_4914 = (
# 27909 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27909 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44880__pinl_13789__icc_4914__sz * sizeof (*SACp_emal_44880__pinl_13789__icc_4914), 0); break; case SAC_HM_any_threaded: SACp_emal_44880__pinl_13789__icc_4914 = (
# 27909 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 27909 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_44880__pinl_13789__icc_4914__sz * sizeof (*SACp_emal_44880__pinl_13789__icc_4914), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44880__pinl_13789__icc_4914__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44880__pinl_13789__icc_4914__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44880__pinl_13789__icc_4914__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44880__pinl_13789__icc_4914__sz; SAC_i++) { { SACp_emal_44880__pinl_13789__icc_4914[SAC_i] = (( SACp_emal_44881__ctz_23638[SAC_i])) == (0); }; } }
    { { free (SACp_emal_44881__ctz_23638); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44881__ctz_23638__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_44882__pinl_13804__icc_4911_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44880__pinl_13789__icc_4914__sz; SAC_i++) { if (( SACp_emal_44880__pinl_13789__icc_4914[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_44879__pinl_13793__flat_159 = SAC_all; }
    { { free (SACp_emal_44880__pinl_13789__icc_4914); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44880__pinl_13789__icc_4914__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_44879__pinl_13793__flat_159)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13801__hce_39 = SACp_pinl_13800__hce_40; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `shp' in a"); SACp_pinl_48432__emal_44893__hce_39__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13801__hce_39 = SACp_pinl_48432__emal_44893__hce_39__SSA0_1; }

    }
    if (!SACp_pinl_13801__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failedType pattern pre-condition of + failed"); }



    SACl_b__SSA0_1__desc = SACl_b__desc;
    SACl_b__SSA0_1__sz = SACl_b__sz;
    SACl_b__SSA0_1__dim = SACl_b__dim;
    ;
    { SACl_b__SSA0_1 = SACl_b; }




    SACl_a__SSA0_1__desc = SACl_a__desc;
    SACl_a__SSA0_1__sz = SACl_a__sz;
    SACl_a__SSA0_1__dim = SACl_a__dim;
    ;
    { SACl_a__SSA0_1 = SACl_a; }




    SACwf__MAIN___rtpf_8_impl__i_S__i_S (&SACp_rtpf_10_res, &SACp_rtpf_10_res__desc, SACl_a__SSA0_1, SACl_a__SSA0_1__desc, SACl_b__SSA0_1, SACl_b__SSA0_1__desc);




    SACp_rtpf_10_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_rtpf_10_res__desc) & (-1 ^ (3))))[4]);
    SACp_rtpf_10_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_rtpf_10_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_44878__isaa_34454__rtpf_10_res = SACp_rtpf_10_res__dim; }; }
    { { if (!((1 == SACp_emal_44877__isaa_34455__rtpf_10_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44877__isaa_34455__rtpf_10_res"); }; { if ((((6 + (SACp_emal_44877__isaa_34455__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44877__isaa_34455__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44877__isaa_34455__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44877__isaa_34455__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44877__isaa_34455__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44877__isaa_34455__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44877__isaa_34455__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44877__isaa_34455__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44877__isaa_34455__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44877__isaa_34455__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44877__isaa_34455__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44877__isaa_34455__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44877__isaa_34455__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44877__isaa_34455__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44877__isaa_34455__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44877__isaa_34455__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44877__isaa_34455__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44877__isaa_34455__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44877__isaa_34455__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44877__isaa_34455__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44877__isaa_34455__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44877__isaa_34455__rtpf_10_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44877__isaa_34455__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_rtpf_10_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44877__isaa_34455__rtpf_10_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_44877__isaa_34455__rtpf_10_res__sz = SAC_size;
      if (!((SACp_emal_44877__isaa_34455__rtpf_10_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 27998 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 27998 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27998 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 27998 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 27998 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 27998 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 27998 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 27998, __extension__ __PRETTY_FUNCTION__); }))
# 27998 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44877__isaa_34455__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44877__isaa_34455__rtpf_10_res__sz * sizeof (*SACp_emal_44877__isaa_34455__rtpf_10_res)); break; case SAC_HM_multi_threaded: SACp_emal_44877__isaa_34455__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44877__isaa_34455__rtpf_10_res__sz * sizeof (*SACp_emal_44877__isaa_34455__rtpf_10_res), 0); break; case SAC_HM_any_threaded: SACp_emal_44877__isaa_34455__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44877__isaa_34455__rtpf_10_res__sz * sizeof (*SACp_emal_44877__isaa_34455__rtpf_10_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44877__isaa_34455__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44877__isaa_34455__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44877__isaa_34455__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_rtpf_10_res__dim; SAC_i++) {
      { SACp_emal_44877__isaa_34455__rtpf_10_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    if (!SACp_pinl_13801__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failed"); }
    ;
    ; ; { SACp_emal_44878__isaa_34454__rtpf_10_res = (SACp_emal_44887__isaa_34428_a) - (SACp_emal_44878__isaa_34454__rtpf_10_res); };
    ; ; { SACp_emal_44875__pinl_13813__flat_164 = (SACp_emal_44878__isaa_34454__rtpf_10_res) == (0); };
    { ; ; }
    if (SACp_emal_44875__pinl_13813__flat_164)
    {
      { ; ; }
      { { SACp_pinl_48435__emal_44891__hce_42 = 
# 28015 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 28015 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13822__hce_42 = SACp_pinl_48435__emal_44891__hce_42; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `d' in a"); SACp_pinl_48436__emal_44892__hce_42__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13822__hce_42 = SACp_pinl_48436__emal_44892__hce_42__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_44874__pinl_13817__flat_168__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44874__pinl_13817__flat_168"); }; { if ((((6 + (SACp_emal_44874__pinl_13817__flat_168__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44874__pinl_13817__flat_168__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44874__pinl_13817__flat_168__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44874__pinl_13817__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44874__pinl_13817__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44874__pinl_13817__flat_168__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44874__pinl_13817__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44874__pinl_13817__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44874__pinl_13817__flat_168__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44874__pinl_13817__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44874__pinl_13817__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44874__pinl_13817__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44874__pinl_13817__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44874__pinl_13817__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44874__pinl_13817__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44874__pinl_13817__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44874__pinl_13817__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44874__pinl_13817__flat_168__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44874__pinl_13817__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44874__pinl_13817__flat_168__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_44877__isaa_34455__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_44874__pinl_13817__flat_168__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44874__pinl_13817__flat_168__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44874__pinl_13817__flat_168__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_44887__isaa_34428_a) < 0) ? (-(SACp_emal_44887__isaa_34428_a)) : (SACp_emal_44887__isaa_34428_a));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44874__pinl_13817__flat_168__desc) & (-1 ^ (3))))[4]) = SACp_emal_44874__pinl_13817__flat_168__sz = SAC_size;
      if (!((SACp_emal_44874__pinl_13817__flat_168__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 28058 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 28058 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28058 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 28058 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28058 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 28058 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 28058 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 28058, __extension__ __PRETTY_FUNCTION__); }))
# 28058 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44874__pinl_13817__flat_168 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44874__pinl_13817__flat_168__sz * sizeof (*SACp_emal_44874__pinl_13817__flat_168)); break; case SAC_HM_multi_threaded: SACp_emal_44874__pinl_13817__flat_168 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44874__pinl_13817__flat_168__sz * sizeof (*SACp_emal_44874__pinl_13817__flat_168), 0); break; case SAC_HM_any_threaded: SACp_emal_44874__pinl_13817__flat_168 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44874__pinl_13817__flat_168__sz * sizeof (*SACp_emal_44874__pinl_13817__flat_168), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44874__pinl_13817__flat_168__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44874__pinl_13817__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44874__pinl_13817__flat_168__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 28065 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 28065 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_44887__isaa_34428_a;
      SAC_cond = (SACp_emal_44887__isaa_34428_a < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_44877__isaa_34455__rtpf_10_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_44877__isaa_34455__rtpf_10_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_44874__pinl_13817__flat_168[SAC_i] = ( SACp_emal_44877__isaa_34455__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_44877__isaa_34455__rtpf_10_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44877__isaa_34455__rtpf_10_res__desc) & (-1 ^ (3))))); } } }
    { ; ; }
        if (SACp_emal_44886__isaa_34429_a__dim != SACp_emal_44874__pinl_13817__flat_168__dim) {
      SACp_emal_44873__pinl_13826__icc_4917_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_44886__isaa_34429_a""' with shape %s ""And `" "SACp_emal_44874__pinl_13817__flat_168""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_44886__isaa_34429_a__desc), SAC_PrintShape (SACp_emal_44874__pinl_13817__flat_168__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_44886__isaa_34429_a__shp0 != SACp_emal_44874__pinl_13817__flat_168__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_44886__isaa_34429_a""' with shape %s ""And `" "SACp_emal_44874__pinl_13817__flat_168""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_44886__isaa_34429_a__desc), SAC_PrintShape (SACp_emal_44874__pinl_13817__flat_168__desc));
      }
      SACp_emal_44873__pinl_13826__icc_4917_pred = SAC_all;
    }

    if (!SACp_emal_44873__pinl_13826__icc_4917_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { { if (!((1 == SACp_emal_44872__ctz_23634__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44872__ctz_23634"); }; { if ((((6 + (SACp_emal_44872__ctz_23634__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44872__ctz_23634__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44872__ctz_23634__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44872__ctz_23634__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44872__ctz_23634__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44872__ctz_23634__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44872__ctz_23634__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44872__ctz_23634__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44872__ctz_23634__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44872__ctz_23634__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44872__ctz_23634__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44872__ctz_23634__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44872__ctz_23634__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44872__ctz_23634__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44872__ctz_23634__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44872__ctz_23634__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44872__ctz_23634__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44872__ctz_23634__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44872__ctz_23634__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44872__ctz_23634__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44872__ctz_23634__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44872__ctz_23634__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44872__ctz_23634__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44874__pinl_13817__flat_168__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44872__ctz_23634__desc) & (-1 ^ (3))))[4]) = SACp_emal_44872__ctz_23634__sz = SAC_size * SACp_emal_44874__pinl_13817__flat_168__sz;
      if (!((SACp_emal_44872__ctz_23634__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 28112 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 28112 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28112 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 28112 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28112 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 28112 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 28112 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 28112, __extension__ __PRETTY_FUNCTION__); }))
# 28112 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44872__ctz_23634 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44872__ctz_23634__sz * sizeof (*SACp_emal_44872__ctz_23634)); break; case SAC_HM_multi_threaded: SACp_emal_44872__ctz_23634 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44872__ctz_23634__sz * sizeof (*SACp_emal_44872__ctz_23634), 0); break; case SAC_HM_any_threaded: SACp_emal_44872__ctz_23634 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44872__ctz_23634__sz * sizeof (*SACp_emal_44872__ctz_23634), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44872__ctz_23634__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44872__ctz_23634__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44872__ctz_23634__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44872__ctz_23634__sz; SAC_i++) { { SACp_emal_44872__ctz_23634[SAC_i] = (( SACp_emal_44886__isaa_34429_a[SAC_i])) - (( SACp_emal_44874__pinl_13817__flat_168[SAC_i])); }; } }
    { { free (SACp_emal_44874__pinl_13817__flat_168); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44874__pinl_13817__flat_168__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44886__isaa_34429_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44886__isaa_34429_a__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_44871__pinl_13811__icc_4920__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44871__pinl_13811__icc_4920"); }; { if ((((6 + (SACp_emal_44871__pinl_13811__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44871__pinl_13811__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44871__pinl_13811__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44871__pinl_13811__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44871__pinl_13811__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44871__pinl_13811__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44871__pinl_13811__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44871__pinl_13811__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44871__pinl_13811__icc_4920__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44871__pinl_13811__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44871__pinl_13811__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44871__pinl_13811__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44871__pinl_13811__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44871__pinl_13811__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44871__pinl_13811__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44871__pinl_13811__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44871__pinl_13811__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44871__pinl_13811__icc_4920__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44871__pinl_13811__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44871__pinl_13811__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44871__pinl_13811__icc_4920__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44871__pinl_13811__icc_4920__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44871__pinl_13811__icc_4920__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44872__ctz_23634__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44871__pinl_13811__icc_4920__desc) & (-1 ^ (3))))[4]) = SACp_emal_44871__pinl_13811__icc_4920__sz = SAC_size * SACp_emal_44872__ctz_23634__sz;
      if (!((SACp_emal_44871__pinl_13811__icc_4920__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 28130 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 28130 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28130 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 28130 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28130 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 28130 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 28130 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 28130, __extension__ __PRETTY_FUNCTION__); }))
# 28130 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44871__pinl_13811__icc_4920 = (
# 28130 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28130 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_44871__pinl_13811__icc_4920__sz * sizeof (*SACp_emal_44871__pinl_13811__icc_4920)); break; case SAC_HM_multi_threaded: SACp_emal_44871__pinl_13811__icc_4920 = (
# 28130 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28130 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44871__pinl_13811__icc_4920__sz * sizeof (*SACp_emal_44871__pinl_13811__icc_4920), 0); break; case SAC_HM_any_threaded: SACp_emal_44871__pinl_13811__icc_4920 = (
# 28130 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28130 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_44871__pinl_13811__icc_4920__sz * sizeof (*SACp_emal_44871__pinl_13811__icc_4920), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44871__pinl_13811__icc_4920__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44871__pinl_13811__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44871__pinl_13811__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44871__pinl_13811__icc_4920__sz; SAC_i++) { { SACp_emal_44871__pinl_13811__icc_4920[SAC_i] = (( SACp_emal_44872__ctz_23634[SAC_i])) == (0); }; } }
    { { free (SACp_emal_44872__ctz_23634); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44872__ctz_23634__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_44873__pinl_13826__icc_4917_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44871__pinl_13811__icc_4920__sz; SAC_i++) { if (( SACp_emal_44871__pinl_13811__icc_4920[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_44870__pinl_13815__flat_166 = SAC_all; }
    { { free (SACp_emal_44871__pinl_13811__icc_4920); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44871__pinl_13811__icc_4920__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_44870__pinl_13815__flat_166)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13823__hce_41 = SACp_pinl_13822__hce_42; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `shp' in a"); SACp_pinl_48438__emal_44890__hce_41__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13823__hce_41 = SACp_pinl_48438__emal_44890__hce_41__SSA0_1; }

    }
    if (!SACp_pinl_13823__hce_41) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failed"); }
    ;



    { *SAC_arg_1__p = SACp_rtpf_10_res; *SAC_arg_1__desc__p = SACp_rtpf_10_res__desc; }
    return;
   
  }



}
}
# 28188 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_8_impl__i_P__i_P (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int SACp_emal_44973__isaa_34488_b;
   
   




    int * SACp_emal_44972__isaa_34489_b;
    SAC_array_descriptor_t SACp_emal_44972__isaa_34489_b__desc = 
# 28205 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28205 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44972__isaa_34489_b__shp0;
    int SACp_emal_44972__isaa_34489_b__sz;
    const int SACp_emal_44972__isaa_34489_b__dim = 1;




    int SACp_emal_44971__isaa_34491_a;
   
   




    int * SACp_emal_44970__isaa_34492_a;
    SAC_array_descriptor_t SACp_emal_44970__isaa_34492_a__desc = 
# 28221 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28221 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44970__isaa_34492_a__shp0;
    int SACp_emal_44970__isaa_34492_a__sz;
    const int SACp_emal_44970__isaa_34492_a__dim = 1;




    int SACp_emal_44969__ivesplit_34589;
   
   




    int SACp_emal_44968__uprf_23791;
   
   




    
# 28243 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28243 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44967__uprf_23785;
   
   




    
# 28250 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28250 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44966__uprf_23779;
   
   




    int * SACp_emal_44965__idc_7327;
    SAC_array_descriptor_t SACp_emal_44965__idc_7327__desc = 
# 28258 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28258 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44965__idc_7327__shp0 = 1;
    const int SACp_emal_44965__idc_7327__sz = 1;
    const int SACp_emal_44965__idc_7327__dim = 1;




    
# 28266 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28266 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44964__uprf_23773;
   
   




    int SACp_emal_44963__uprf_23772;
   
   




    int * SACp_emal_44962__idc_7331;
    SAC_array_descriptor_t SACp_emal_44962__idc_7331__desc = 
# 28281 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28281 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44962__idc_7331__shp0 = 1;
    const int SACp_emal_44962__idc_7331__sz = 1;
    const int SACp_emal_44962__idc_7331__dim = 1;




    int SACp_emal_44961__pinl_23652__icc_6985;
   
   




    int SACp_emal_44960__pinl_23655__icc_6991;
   
   




    
# 28303 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28303 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44957__uprf_23765;
   
   




    
# 28310 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28310 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44956__uprf_23759;
   
   




    
# 28317 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28317 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44955__uprf_23750;
   
   




    
# 28324 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28324 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44954__uprf_23744;
   
   




    int * SACp_emal_44953__idc_7337;
    SAC_array_descriptor_t SACp_emal_44953__idc_7337__desc = 
# 28332 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28332 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44953__idc_7337__shp0 = 1;
    const int SACp_emal_44953__idc_7337__sz = 1;
    const int SACp_emal_44953__idc_7337__dim = 1;




    int SACp_emal_44952__ivesli_42569;
   
   




    int SACp_emal_44951__icc_7272;
   
   




    int SACp_emal_44950__ivesli_42568;
   
   




    int SACp_emal_44949__icc_7278;
   
   




    int * SACp_emal_44947__icc_7284;
    SAC_array_descriptor_t SACp_emal_44947__icc_7284__desc = 
# 28369 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28369 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44947__icc_7284__shp0;
    int SACp_emal_44947__icc_7284__sz;
    const int SACp_emal_44947__icc_7284__dim = 1;




    
# 28377 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28377 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44946__icc_7304_pred;
   
   




    
# 28384 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28384 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44945__icc_7309_pred;
   
   




    int * SACp_emal_44944__flat_199;
    SAC_array_descriptor_t SACp_emal_44944__flat_199__desc = 
# 28392 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28392 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44944__flat_199__shp0;
    int SACp_emal_44944__flat_199__sz;
    const int SACp_emal_44944__flat_199__dim = 1;




    
# 28400 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28400 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44943__icc_7303_pred;
   
   




    
# 28407 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28407 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44942__icc_7305_pred;
   
   




    
# 28414 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28414 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44941__icc_7306_pred;
   
   




    int SACp_emal_44940__icc_7316;
   
   




    int * SACp_emal_44939__pinl_13950_new_shape;
    SAC_array_descriptor_t SACp_emal_44939__pinl_13950_new_shape__desc = 
# 28429 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28429 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44939__pinl_13950_new_shape__shp0;
    int SACp_emal_44939__pinl_13950_new_shape__sz;
    const int SACp_emal_44939__pinl_13950_new_shape__dim = 1;




    
# 28437 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28437 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44938__pinl_13959__icc_7221_pred;
   
   




    
# 28444 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28444 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44937__pinl_13966__icc_7226_pred;
   
   




    int * SACp_emal_44936__pinl_13948__flat_322;
    SAC_array_descriptor_t SACp_emal_44936__pinl_13948__flat_322__desc = 
# 28452 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28452 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44936__pinl_13948__flat_322__shp0;
    int SACp_emal_44936__pinl_13948__flat_322__sz;
    const int SACp_emal_44936__pinl_13948__flat_322__dim = 1;




    
# 28460 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28460 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44935__pinl_13968__icc_7220_pred;
   
   




    
# 28467 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28467 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44934__pinl_13970__icc_7222_pred;
   
   




    
# 28474 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28474 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44933__pinl_13973__icc_7223_pred;
   
   




    int * SACp_emal_44932__pinl_14001_new_shape;
    SAC_array_descriptor_t SACp_emal_44932__pinl_14001_new_shape__desc = 
# 28482 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28482 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44932__pinl_14001_new_shape__shp0;
    int SACp_emal_44932__pinl_14001_new_shape__sz;
    const int SACp_emal_44932__pinl_14001_new_shape__dim = 1;




    
# 28490 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28490 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44931__pinl_14010__icc_7221_pred;
   
   




    
# 28497 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28497 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44930__pinl_14017__icc_7226_pred;
   
   




    int * SACp_emal_44929__pinl_13999__flat_322;
    SAC_array_descriptor_t SACp_emal_44929__pinl_13999__flat_322__desc = 
# 28505 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28505 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44929__pinl_13999__flat_322__shp0;
    int SACp_emal_44929__pinl_13999__flat_322__sz;
    const int SACp_emal_44929__pinl_13999__flat_322__dim = 1;




    
# 28513 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28513 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44928__pinl_14019__icc_7220_pred;
   
   




    
# 28520 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28520 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44927__pinl_14021__icc_7222_pred;
   
   




    
# 28527 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28527 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44926__pinl_14024__icc_7223_pred;
   
   




    int * SACp_emal_44921__pinl_13952_new_idx;
    SAC_array_descriptor_t SACp_emal_44921__pinl_13952_new_idx__desc = 
# 28535 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28535 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44921__pinl_13952_new_idx__shp0;
    int SACp_emal_44921__pinl_13952_new_idx__sz;
    const int SACp_emal_44921__pinl_13952_new_idx__dim = 1;




    
# 28543 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28543 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44920__pinl_13975__icc_7227_pred;
   
   




    
# 28550 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28550 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44919__pinl_13977__icc_7228_pred;
   
   




    
# 28557 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28557 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44918__pinl_13979__icc_7229_pred;
   
   




    int SACp_emal_44917__ivesli_42567;
   
   




    int SACp_emal_44916__pinl_13938__icc_7232;
   
   




    int * SACp_emal_44915__pinl_13942__icc_7238;
    SAC_array_descriptor_t SACp_emal_44915__pinl_13942__icc_7238__desc = 
# 28579 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28579 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44915__pinl_13942__icc_7238__sz = 0;
    int SACp_emal_44915__pinl_13942__icc_7238__dim = 0;




    
# 28586 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28586 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44914__icc_7311_pred;
   
   




    int SACp_emal_44913__idc_7362;
   
   




    int * SACp_emal_44910__pinl_14003_new_idx;
    SAC_array_descriptor_t SACp_emal_44910__pinl_14003_new_idx__desc = 
# 28601 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28601 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44910__pinl_14003_new_idx__shp0;
    int SACp_emal_44910__pinl_14003_new_idx__sz;
    const int SACp_emal_44910__pinl_14003_new_idx__dim = 1;




    
# 28609 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28609 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44909__pinl_14026__icc_7227_pred;
   
   




    
# 28616 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28616 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44908__pinl_14028__icc_7228_pred;
   
   




    
# 28623 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28623 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44907__pinl_14030__icc_7229_pred;
   
   




    int SACp_emal_44906__ivesli_42566;
   
   




    int SACp_emal_44905__pinl_13989__icc_7232;
   
   




    int * SACp_emal_44904__pinl_13993__icc_7238;
    SAC_array_descriptor_t SACp_emal_44904__pinl_13993__icc_7238__desc = 
# 28645 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28645 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44904__pinl_13993__icc_7238__sz = 0;
    int SACp_emal_44904__pinl_13993__icc_7238__dim = 0;




    
# 28652 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 28652 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44903__icc_7310_pred;
   
   




    int SACp_emal_44902__idc_7363;
   
   




    int * SACp_emal_44901__icc_7313;
    SAC_array_descriptor_t SACp_emal_44901__icc_7313__desc = 
# 28667 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28667 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44901__icc_7313__sz = 0;
    int SACp_emal_44901__icc_7313__dim = 0;




    int * SACp_emal_44900__icc_7312;
    SAC_array_descriptor_t SACp_emal_44900__icc_7312__desc = 
# 28675 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28675 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44900__icc_7312__sz = 0;
    int SACp_emal_44900__icc_7312__dim = 0;




    int SACp_emal_44899__asd_43074__icc_7313;
   
   




    int SACp_emal_44898__asd_43073__icc_7312;
   
   




    int * SACp_emal_44896__icc_7320;
    SAC_array_descriptor_t SACp_emal_44896__icc_7320__desc = 
# 28697 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28697 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44896__icc_7320__sz = 0;
    int SACp_emal_44896__icc_7320__dim = 0;




    int SACp_wlidx_42371__pinl_13993__icc_7238;
   
   




    int SACp_wlidx_42370__pinl_13942__icc_7238;
   
   




    int SACp_wlidx_42369__icc_7320;
   
   




    int SACp_wlidx_42368__icc_7284;
   
   




    int * SACp_pinl_13951_iv;
    SAC_array_descriptor_t SACp_pinl_13951_iv__desc = 
# 28733 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28733 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_13951_iv__shp0;
    int SACp_pinl_13951_iv__sz;
    const int SACp_pinl_13951_iv__dim = 1;




    int * SACp_pinl_14002_iv;
    SAC_array_descriptor_t SACp_pinl_14002_iv__desc = 
# 28742 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28742 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_14002_iv__shp0;
    int SACp_pinl_14002_iv__sz;
    const int SACp_pinl_14002_iv__dim = 1;




    int SACp_eat_440;
   
   




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 28758 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28758 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACl_iv__shp0;
    int SACl_iv__sz;
    const int SACl_iv__dim = 1;




    int * SACp_seri_34_index_min;
    SAC_array_descriptor_t SACp_seri_34_index_min__desc = 
# 28767 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 28767 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_seri_34_index_min__shp0 = 1;
    const int SACp_seri_34_index_min__sz = 1;
    const int SACp_seri_34_index_min__dim = 1;





    int SACl_b__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[4]);
    int SACl_b__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[3]);




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_44973__isaa_34488_b = SACl_b__dim; }; }
    { { if (!((1 == SACp_emal_44972__isaa_34489_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44972__isaa_34489_b"); }; { if ((((6 + (SACp_emal_44972__isaa_34489_b__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44972__isaa_34489_b__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44972__isaa_34489_b__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44972__isaa_34489_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44972__isaa_34489_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44972__isaa_34489_b__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44972__isaa_34489_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44972__isaa_34489_b__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44972__isaa_34489_b__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44972__isaa_34489_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44972__isaa_34489_b__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44972__isaa_34489_b__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44972__isaa_34489_b__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44972__isaa_34489_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44972__isaa_34489_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44972__isaa_34489_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44972__isaa_34489_b__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44972__isaa_34489_b__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44972__isaa_34489_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44972__isaa_34489_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44972__isaa_34489_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44972__isaa_34489_b__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44972__isaa_34489_b__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44972__isaa_34489_b__desc) & (-1 ^ (3))))[4]) = SACp_emal_44972__isaa_34489_b__sz = SAC_size;
      if (!((SACp_emal_44972__isaa_34489_b__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 28802 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 28802 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28802 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 28802 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28802 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 28802 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 28802 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 28802, __extension__ __PRETTY_FUNCTION__); }))
# 28802 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44972__isaa_34489_b = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44972__isaa_34489_b__sz * sizeof (*SACp_emal_44972__isaa_34489_b)); break; case SAC_HM_multi_threaded: SACp_emal_44972__isaa_34489_b = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44972__isaa_34489_b__sz * sizeof (*SACp_emal_44972__isaa_34489_b), 0); break; case SAC_HM_any_threaded: SACp_emal_44972__isaa_34489_b = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44972__isaa_34489_b__sz * sizeof (*SACp_emal_44972__isaa_34489_b), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44972__isaa_34489_b__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44972__isaa_34489_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44972__isaa_34489_b__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
      { SACp_emal_44972__isaa_34489_b[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { SACp_emal_44971__isaa_34491_a = SACl_a__dim; }; }
    { { if (!((1 == SACp_emal_44970__isaa_34492_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44970__isaa_34492_a"); }; { if ((((6 + (SACp_emal_44970__isaa_34492_a__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44970__isaa_34492_a__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44970__isaa_34492_a__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44970__isaa_34492_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44970__isaa_34492_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44970__isaa_34492_a__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44970__isaa_34492_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44970__isaa_34492_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44970__isaa_34492_a__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44970__isaa_34492_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44970__isaa_34492_a__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44970__isaa_34492_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44970__isaa_34492_a__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44970__isaa_34492_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44970__isaa_34492_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44970__isaa_34492_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44970__isaa_34492_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44970__isaa_34492_a__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44970__isaa_34492_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44970__isaa_34492_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44970__isaa_34492_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44970__isaa_34492_a__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44970__isaa_34492_a__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44970__isaa_34492_a__desc) & (-1 ^ (3))))[4]) = SACp_emal_44970__isaa_34492_a__sz = SAC_size;
      if (!((SACp_emal_44970__isaa_34492_a__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 28827 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 28827 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28827 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 28827 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28827 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 28827 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 28827 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 28827, __extension__ __PRETTY_FUNCTION__); }))
# 28827 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44970__isaa_34492_a = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44970__isaa_34492_a__sz * sizeof (*SACp_emal_44970__isaa_34492_a)); break; case SAC_HM_multi_threaded: SACp_emal_44970__isaa_34492_a = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44970__isaa_34492_a__sz * sizeof (*SACp_emal_44970__isaa_34492_a), 0); break; case SAC_HM_any_threaded: SACp_emal_44970__isaa_34492_a = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44970__isaa_34492_a__sz * sizeof (*SACp_emal_44970__isaa_34492_a), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44970__isaa_34492_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44970__isaa_34492_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44970__isaa_34492_a__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
      { SACp_emal_44970__isaa_34492_a[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_44969__ivesplit_34589 = 0; }; }
    ; ; { SACp_emal_44968__uprf_23791 = (SACp_emal_44973__isaa_34488_b) < (SACp_emal_44971__isaa_34491_a) ? (SACp_emal_44973__isaa_34488_b) : (SACp_emal_44971__isaa_34491_a); };
    if (SACp_emal_44968__uprf_23791 >= 0) { { SACp_emal_44967__uprf_23785 = SACp_emal_44968__uprf_23791; }; SACp_emal_44967__uprf_23785 = 1; } else { SACp_emal_44967__uprf_23785 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_44968__uprf_23791"); }
    if (SACp_emal_44968__uprf_23791 >= 0) { { SACp_emal_44966__uprf_23779 = SACp_emal_44968__uprf_23791; }; SACp_emal_44966__uprf_23779 = 1; } else { SACp_emal_44966__uprf_23779 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_44968__uprf_23791"); }
    { { if (!((1 == SACp_emal_44965__idc_7327__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44965__idc_7327"); }; { { if ((((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327)) + ((6 + (SACp_emal_44965__idc_7327__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327)) + ((6 + (SACp_emal_44965__idc_7327__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327)) + ((6 + (SACp_emal_44965__idc_7327__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44965__idc_7327 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44965__idc_7327 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327)) + ((6 + (SACp_emal_44965__idc_7327__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44965__idc_7327 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44965__idc_7327 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327)) + ((6 + (SACp_emal_44965__idc_7327__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327)) + ((6 + (SACp_emal_44965__idc_7327__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327)) + ((6 + (SACp_emal_44965__idc_7327__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327)) + ((6 + (SACp_emal_44965__idc_7327__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327)) + ((6 + (SACp_emal_44965__idc_7327__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44965__idc_7327 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44965__idc_7327 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44965__idc_7327 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44965__idc_7327 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44965__idc_7327__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44965__idc_7327, SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327), ((6 + (SACp_emal_44965__idc_7327__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44965__idc_7327__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44965__idc_7327__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44965__idc_7327__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44965__idc_7327__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44965__idc_7327__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_44965__idc_7327[0] = SACp_emal_44968__uprf_23791; }

    if (SACp_emal_44969__ivesplit_34589 <= SACp_emal_44968__uprf_23791) { SACp_emal_44964__uprf_23773 = 1; } else { SACp_emal_44964__uprf_23773 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Scalar constraint `" "SACp_emal_44969__ivesplit_34589" " (" "%d" ") <= " "SACp_emal_44968__uprf_23791" " (" "%d" ")" "' violated", SACp_emal_44969__ivesplit_34589, SACp_emal_44968__uprf_23791); }
    { ; ; }
    { { SACp_emal_44963__uprf_23772 = SACp_emal_44969__ivesplit_34589; } }
    { { if (!((1 == SACp_emal_44962__idc_7331__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44962__idc_7331"); }; { { if ((((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331)) + ((6 + (SACp_emal_44962__idc_7331__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331)) + ((6 + (SACp_emal_44962__idc_7331__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331)) + ((6 + (SACp_emal_44962__idc_7331__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44962__idc_7331 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44962__idc_7331 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331)) + ((6 + (SACp_emal_44962__idc_7331__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44962__idc_7331 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44962__idc_7331 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331)) + ((6 + (SACp_emal_44962__idc_7331__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331)) + ((6 + (SACp_emal_44962__idc_7331__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331)) + ((6 + (SACp_emal_44962__idc_7331__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331)) + ((6 + (SACp_emal_44962__idc_7331__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331)) + ((6 + (SACp_emal_44962__idc_7331__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44962__idc_7331 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44962__idc_7331 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44962__idc_7331 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44962__idc_7331 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44962__idc_7331__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44962__idc_7331, SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331), ((6 + (SACp_emal_44962__idc_7331__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44962__idc_7331__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44962__idc_7331__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44962__idc_7331__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44962__idc_7331__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44962__idc_7331__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_44962__idc_7331[0] = SACp_emal_44963__uprf_23772; }

    { ; ; }
    if (!SACp_emal_44966__uprf_23779) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44964__uprf_23773) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44967__uprf_23785) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44961__pinl_23652__icc_6985 = ( SACp_emal_44962__idc_7331[SACp_emal_44969__ivesplit_34589]); }

    { { { if (((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44962__idc_7331, ((((SAC_HM_header_t *)SACp_emal_44962__idc_7331) - 1)->data1.arena)); } else { if (SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_44962__idc_7331) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44962__idc_7331, ((((SAC_HM_header_t *)SACp_emal_44962__idc_7331) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44962__idc_7331, ((((SAC_HM_header_t *)SACp_emal_44962__idc_7331) - 1)->data1.arena)); } } else { if (((((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44962__idc_7331, ((((SAC_HM_header_t *)SACp_emal_44962__idc_7331) - 1)->data1.arena)); } else { if (((((SACp_emal_44962__idc_7331__sz * sizeof (*SACp_emal_44962__idc_7331))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_44962__idc_7331) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44962__idc_7331, ((((SAC_HM_header_t *)SACp_emal_44962__idc_7331) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44962__idc_7331, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44962__idc_7331); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44962__idc_7331); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44962__idc_7331, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44962__idc_7331); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44962__idc_7331); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44962__idc_7331__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44960__pinl_23655__icc_6991 = ( SACp_emal_44965__idc_7327[SACp_emal_44969__ivesplit_34589]); }

    { { { if (((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44965__idc_7327, ((((SAC_HM_header_t *)SACp_emal_44965__idc_7327) - 1)->data1.arena)); } else { if (SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_44965__idc_7327) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44965__idc_7327, ((((SAC_HM_header_t *)SACp_emal_44965__idc_7327) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44965__idc_7327, ((((SAC_HM_header_t *)SACp_emal_44965__idc_7327) - 1)->data1.arena)); } } else { if (((((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44965__idc_7327, ((((SAC_HM_header_t *)SACp_emal_44965__idc_7327) - 1)->data1.arena)); } else { if (((((SACp_emal_44965__idc_7327__sz * sizeof (*SACp_emal_44965__idc_7327))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_44965__idc_7327) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44965__idc_7327, ((((SAC_HM_header_t *)SACp_emal_44965__idc_7327) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44965__idc_7327, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44965__idc_7327); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44965__idc_7327); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44965__idc_7327, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44965__idc_7327); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44965__idc_7327); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44965__idc_7327__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_44947__icc_7284__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44947__icc_7284"); }; { if ((((6 + (SACp_emal_44947__icc_7284__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44947__icc_7284__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44947__icc_7284__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44947__icc_7284__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44947__icc_7284__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44947__icc_7284__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44947__icc_7284__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44947__icc_7284__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44947__icc_7284__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44947__icc_7284__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44947__icc_7284__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44947__icc_7284__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44947__icc_7284__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44947__icc_7284__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44947__icc_7284__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44947__icc_7284__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44947__icc_7284__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44947__icc_7284__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44947__icc_7284__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44947__icc_7284__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44947__icc_7284__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44947__icc_7284__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44947__icc_7284__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44960__pinl_23655__icc_6991;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44947__icc_7284__desc) & (-1 ^ (3))))[4]) = SACp_emal_44947__icc_7284__sz = SAC_size;
      if (!((SACp_emal_44947__icc_7284__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 28914 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 28914 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28914 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 28914 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 28914 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 28914 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 28914 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 28914, __extension__ __PRETTY_FUNCTION__); }))
# 28914 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44947__icc_7284 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44947__icc_7284__sz * sizeof (*SACp_emal_44947__icc_7284)); break; case SAC_HM_multi_threaded: SACp_emal_44947__icc_7284 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44947__icc_7284__sz * sizeof (*SACp_emal_44947__icc_7284), 0); break; case SAC_HM_any_threaded: SACp_emal_44947__icc_7284 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44947__icc_7284__sz * sizeof (*SACp_emal_44947__icc_7284), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44947__icc_7284__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44947__icc_7284__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44947__icc_7284__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_44947__icc_7284_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_44947__icc_7284_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_44961__pinl_23652__icc_6985;




      SACp_wlidx_42368__icc_7284
        = SAC_schedule_start0 * SAC_SACp_emal_44947__icc_7284_shpfac0;

      { int SAC_stop_SACp_eat_440 = SACp_emal_44961__pinl_23652__icc_6985; for (SACp_eat_440 = 0; SACp_eat_440 < SACp_emal_44961__pinl_23652__icc_6985;) {
     



      if (!((0 == (SACp_emal_44947__icc_7284__dim - SACp_seri_34_index_min__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_44947__icc_7284_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
      { SACp_emal_44947__icc_7284[SACp_wlidx_42368__icc_7284] = SACp_emal_44969__ivesplit_34589; };

      SACp_wlidx_42368__icc_7284 = SACp_wlidx_42368__icc_7284 + 1;
      SACp_eat_440 = SACp_eat_440 + 1;
      } }
# 28984 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_44961__pinl_23652__icc_6985;
      SAC_schedule_stop0 = SACp_emal_44960__pinl_23655__icc_6991;




      SACp_wlidx_42368__icc_7284
        = SAC_schedule_start0 * SAC_SACp_emal_44947__icc_7284_shpfac0;

      { int SAC_stop_SACp_eat_440 = SACp_emal_44960__pinl_23655__icc_6991; for (SACp_eat_440 = SACp_emal_44961__pinl_23652__icc_6985; SACp_eat_440 < SACp_emal_44960__pinl_23655__icc_6991;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_440 >= 0) { { SACp_emal_44957__uprf_23765 = SACp_eat_440; }; SACp_emal_44957__uprf_23765 = 1; } else { SACp_emal_44957__uprf_23765 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_eat_440"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_440 < SACp_emal_44973__isaa_34488_b) { SACp_emal_44956__uprf_23759 = 1; } else { SACp_emal_44956__uprf_23759 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Scalar constraint `" "SACp_eat_440" " (" "%d" ") < " "SACp_emal_44973__isaa_34488_b" " (" "%d" ")" "' violated", SACp_eat_440, SACp_emal_44973__isaa_34488_b); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_440 >= 0) { { SACp_emal_44955__uprf_23750 = SACp_eat_440; }; SACp_emal_44955__uprf_23750 = 1; } else { SACp_emal_44955__uprf_23750 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for scalar " "SACp_eat_440"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_440 < SACp_emal_44971__isaa_34491_a) { SACp_emal_44954__uprf_23744 = 1; } else { SACp_emal_44954__uprf_23744 = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Scalar constraint `" "SACp_eat_440" " (" "%d" ") < " "SACp_emal_44971__isaa_34491_a" " (" "%d" ")" "' violated", SACp_eat_440, SACp_emal_44971__isaa_34491_a); }
      { { if (!((1 == SACp_emal_44953__idc_7337__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44953__idc_7337"); }; { { if ((((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337)) + ((6 + (SACp_emal_44953__idc_7337__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337)) + ((6 + (SACp_emal_44953__idc_7337__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337)) + ((6 + (SACp_emal_44953__idc_7337__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44953__idc_7337 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44953__idc_7337 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337)) + ((6 + (SACp_emal_44953__idc_7337__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44953__idc_7337 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44953__idc_7337 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337)) + ((6 + (SACp_emal_44953__idc_7337__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337)) + ((6 + (SACp_emal_44953__idc_7337__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337)) + ((6 + (SACp_emal_44953__idc_7337__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337)) + ((6 + (SACp_emal_44953__idc_7337__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337)) + ((6 + (SACp_emal_44953__idc_7337__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44953__idc_7337 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44953__idc_7337 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44953__idc_7337 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44953__idc_7337 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44953__idc_7337__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44953__idc_7337, SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337), ((6 + (SACp_emal_44953__idc_7337__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44953__idc_7337__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44953__idc_7337__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44953__idc_7337__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_44953__idc_7337__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      if (!((SACp_emal_44953__idc_7337__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_44953__idc_7337[0] = SACp_eat_440; }

      if (!SACp_emal_44956__uprf_23759) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_44957__uprf_23765) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_44952__ivesli_42569 = ( SACp_emal_44953__idc_7337[0]);

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_44951__icc_7272 = ( SACp_emal_44972__isaa_34489_b[SACp_emal_44952__ivesli_42569]); }

      { ; ; }
      if (!SACp_emal_44956__uprf_23759) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_44957__uprf_23765) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      if (!SACp_emal_44954__uprf_23744) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_44955__uprf_23750) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_44950__ivesli_42568 = ( SACp_emal_44953__idc_7337[0]);

      { { { if (((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44953__idc_7337, ((((SAC_HM_header_t *)SACp_emal_44953__idc_7337) - 1)->data1.arena)); } else { if (SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_44953__idc_7337) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44953__idc_7337, ((((SAC_HM_header_t *)SACp_emal_44953__idc_7337) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44953__idc_7337, ((((SAC_HM_header_t *)SACp_emal_44953__idc_7337) - 1)->data1.arena)); } } else { if (((((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44953__idc_7337, ((((SAC_HM_header_t *)SACp_emal_44953__idc_7337) - 1)->data1.arena)); } else { if (((((SACp_emal_44953__idc_7337__sz * sizeof (*SACp_emal_44953__idc_7337))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_44953__idc_7337) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44953__idc_7337, ((((SAC_HM_header_t *)SACp_emal_44953__idc_7337) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44953__idc_7337, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44953__idc_7337); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44953__idc_7337); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44953__idc_7337, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44953__idc_7337); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44953__idc_7337); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44953__idc_7337__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_44949__icc_7278 = ( SACp_emal_44970__isaa_34492_a[SACp_emal_44950__ivesli_42568]); }

      { ; ; }
      if (!SACp_emal_44954__uprf_23744) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_44955__uprf_23750) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      ; ; { SACp_emal_44949__icc_7278 = (SACp_emal_44949__icc_7278) < (SACp_emal_44951__icc_7272) ? (SACp_emal_44949__icc_7278) : (SACp_emal_44951__icc_7272); };
      { ; ; }



      if (!((0 == (SACp_emal_44947__icc_7284__dim - SACp_seri_34_index_min__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_44947__icc_7284_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
      { SACp_emal_44947__icc_7284[SACp_wlidx_42368__icc_7284] = SACp_emal_44949__icc_7278; };

      { ; ; }
      SACp_wlidx_42368__icc_7284 = SACp_wlidx_42368__icc_7284 + 1;
      SACp_eat_440 = SACp_eat_440 + 1;
      } }
# 29137 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_48574_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_44966__uprf_23779) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44964__uprf_23773) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44967__uprf_23785) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44947__icc_7284__sz; SAC_i++) { if (( SACp_emal_44947__icc_7284[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_44947__icc_7284"); } { SACp_emal_44946__icc_7304_pred = ( SACp_emal_44947__icc_7284[SAC_i]); }; } SACp_emal_44946__icc_7304_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44947__icc_7284__sz; SAC_i++) { if (( SACp_emal_44947__icc_7284[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_44947__icc_7284"); } { SACp_emal_44945__icc_7309_pred = ( SACp_emal_44947__icc_7284[SAC_i]); }; } SACp_emal_44945__icc_7309_pred = SAC_all; }
    { { if (!((1 == SACp_emal_44944__flat_199__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44944__flat_199"); }; { if ((((6 + (SACp_emal_44944__flat_199__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44944__flat_199__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44944__flat_199__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44944__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44944__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44944__flat_199__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44944__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44944__flat_199__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44944__flat_199__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44944__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44944__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44944__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44944__flat_199__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44944__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44944__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44944__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44944__flat_199__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44944__flat_199__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44944__flat_199__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44944__flat_199__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44944__flat_199__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44944__flat_199__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44944__flat_199__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44947__icc_7284__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44944__flat_199__desc) & (-1 ^ (3))))[4]) = SACp_emal_44944__flat_199__sz = SAC_size * SACp_emal_44947__icc_7284__sz;
      if (!((SACp_emal_44944__flat_199__sz >= 0))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29168 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29168 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29168 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29168 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29168 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29168 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29168 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29168, __extension__ __PRETTY_FUNCTION__); }))
# 29168 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44944__flat_199 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44944__flat_199__sz * sizeof (*SACp_emal_44944__flat_199)); break; case SAC_HM_multi_threaded: SACp_emal_44944__flat_199 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44944__flat_199__sz * sizeof (*SACp_emal_44944__flat_199), 0); break; case SAC_HM_any_threaded: SACp_emal_44944__flat_199 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44944__flat_199__sz * sizeof (*SACp_emal_44944__flat_199), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44944__flat_199__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44944__flat_199__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44944__flat_199__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44944__flat_199__sz; SAC_i++) { { SACp_emal_44944__flat_199[SAC_i] = (( SACp_emal_44947__icc_7284[SAC_i])) * (0); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44944__flat_199__sz; SAC_i++) { if (( SACp_emal_44944__flat_199[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_44944__flat_199"); } { SACp_emal_44943__icc_7303_pred = ( SACp_emal_44944__flat_199[SAC_i]); }; } SACp_emal_44943__icc_7303_pred = SAC_all; }
        if (SACp_emal_44944__flat_199__dim != SACp_emal_44947__icc_7284__dim) {
      SACp_emal_44942__icc_7305_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Arrays `" "SACp_emal_44944__flat_199""' with shape %s ""And `" "SACp_emal_44947__icc_7284""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_44944__flat_199__desc), SAC_PrintShape (SACp_emal_44947__icc_7284__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_44944__flat_199__shp0 != SACp_emal_44947__icc_7284__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Arrays `" "SACp_emal_44944__flat_199""' with shape %s ""And `" "SACp_emal_44947__icc_7284""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_44944__flat_199__desc), SAC_PrintShape (SACp_emal_44947__icc_7284__desc));
      }
      SACp_emal_44942__icc_7305_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44944__flat_199__sz && SAC_i < SACp_emal_44947__icc_7284__sz; SAC_i++) { if (( SACp_emal_44944__flat_199[SAC_i]) > ( SACp_emal_44947__icc_7284[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Vector constraint `" "SACp_emal_44944__flat_199" " < " "SACp_emal_44947__icc_7284" "' violated"); } } SACp_emal_44941__icc_7306_pred = SAC_all; }
    if (!SACp_emal_44945__icc_7309_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44941__icc_7306_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44942__icc_7305_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44946__icc_7304_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44943__icc_7303_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_44940__icc_7316 = SACp_emal_44969__ivesplit_34589; } }
    { { if (!((1 == SACp_emal_44939__pinl_13950_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44939__pinl_13950_new_shape"); }; { if ((((6 + (SACp_emal_44939__pinl_13950_new_shape__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44939__pinl_13950_new_shape__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44939__pinl_13950_new_shape__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44939__pinl_13950_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44939__pinl_13950_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44939__pinl_13950_new_shape__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44939__pinl_13950_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44939__pinl_13950_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44939__pinl_13950_new_shape__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44939__pinl_13950_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44939__pinl_13950_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44939__pinl_13950_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44939__pinl_13950_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44939__pinl_13950_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44939__pinl_13950_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44939__pinl_13950_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44939__pinl_13950_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44939__pinl_13950_new_shape__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44939__pinl_13950_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44939__pinl_13950_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_44972__isaa_34489_b__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_44939__pinl_13950_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44939__pinl_13950_new_shape__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44939__pinl_13950_new_shape__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44972__isaa_34489_b__sz - (((SACp_emal_44960__pinl_23655__icc_6991) < 0) ? (-(SACp_emal_44960__pinl_23655__icc_6991)) : (SACp_emal_44960__pinl_23655__icc_6991));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44939__pinl_13950_new_shape__desc) & (-1 ^ (3))))[4]) = SACp_emal_44939__pinl_13950_new_shape__sz = SAC_size;
      if (!((SACp_emal_44939__pinl_13950_new_shape__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29218 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29218 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29218 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29218 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29218 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29218 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29218 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29218, __extension__ __PRETTY_FUNCTION__); }))
# 29218 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44939__pinl_13950_new_shape = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44939__pinl_13950_new_shape__sz * sizeof (*SACp_emal_44939__pinl_13950_new_shape)); break; case SAC_HM_multi_threaded: SACp_emal_44939__pinl_13950_new_shape = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44939__pinl_13950_new_shape__sz * sizeof (*SACp_emal_44939__pinl_13950_new_shape), 0); break; case SAC_HM_any_threaded: SACp_emal_44939__pinl_13950_new_shape = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44939__pinl_13950_new_shape__sz * sizeof (*SACp_emal_44939__pinl_13950_new_shape), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44939__pinl_13950_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44939__pinl_13950_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44939__pinl_13950_new_shape__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 29225 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 29225 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_44960__pinl_23655__icc_6991;
      SAC_cond = (SACp_emal_44960__pinl_23655__icc_6991 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_44972__isaa_34489_b__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_44972__isaa_34489_b__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_44939__pinl_13950_new_shape[SAC_i] = ( SACp_emal_44972__isaa_34489_b[SAC_off + SAC_i]); };
      }
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44939__pinl_13950_new_shape__sz; SAC_i++) { if (( SACp_emal_44939__pinl_13950_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_44939__pinl_13950_new_shape"); } { SACp_emal_44938__pinl_13959__icc_7221_pred = ( SACp_emal_44939__pinl_13950_new_shape[SAC_i]); }; } SACp_emal_44938__pinl_13959__icc_7221_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44939__pinl_13950_new_shape__sz; SAC_i++) { if (( SACp_emal_44939__pinl_13950_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Non-negativity constraint violated " "for vector " "SACp_emal_44939__pinl_13950_new_shape"); } { SACp_emal_44937__pinl_13966__icc_7226_pred = ( SACp_emal_44939__pinl_13950_new_shape[SAC_i]); }; } SACp_emal_44937__pinl_13966__icc_7226_pred = SAC_all; }
    { { if (!((1 == SACp_emal_44936__pinl_13948__flat_322__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44936__pinl_13948__flat_322"); }; { if ((((6 + (SACp_emal_44936__pinl_13948__flat_322__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44936__pinl_13948__flat_322__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44936__pinl_13948__flat_322__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44936__pinl_13948__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44936__pinl_13948__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44936__pinl_13948__flat_322__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44936__pinl_13948__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44936__pinl_13948__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44936__pinl_13948__flat_322__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44936__pinl_13948__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44936__pinl_13948__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44936__pinl_13948__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44936__pinl_13948__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44936__pinl_13948__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44936__pinl_13948__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44936__pinl_13948__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44936__pinl_13948__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44936__pinl_13948__flat_322__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44936__pinl_13948__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44936__pinl_13948__flat_322__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44936__pinl_13948__flat_322__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44936__pinl_13948__flat_322__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44936__pinl_13948__flat_322__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44939__pinl_13950_new_shape__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44936__pinl_13948__flat_322__desc) & (-1 ^ (3))))[4]) = SACp_emal_44936__pinl_13948__flat_322__sz = SAC_size * SACp_emal_44939__pinl_13950_new_shape__sz;
      if (!((SACp_emal_44936__pinl_13948__flat_322__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29258 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29258 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29258 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29258 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29258 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29258 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29258 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29258, __extension__ __PRETTY_FUNCTION__); }))
# 29258 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44936__pinl_13948__flat_322 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44936__pinl_13948__flat_322__sz * sizeof (*SACp_emal_44936__pinl_13948__flat_322)); break; case SAC_HM_multi_threaded: SACp_emal_44936__pinl_13948__flat_322 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44936__pinl_13948__flat_322__sz * sizeof (*SACp_emal_44936__pinl_13948__flat_322), 0); break; case SAC_HM_any_threaded: SACp_emal_44936__pinl_13948__flat_322 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44936__pinl_13948__flat_322__sz * sizeof (*SACp_emal_44936__pinl_13948__flat_322), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44936__pinl_13948__flat_322__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44936__pinl_13948__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44936__pinl_13948__flat_322__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44936__pinl_13948__flat_322__sz; SAC_i++) { { SACp_emal_44936__pinl_13948__flat_322[SAC_i] = (0) * (( SACp_emal_44939__pinl_13950_new_shape[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44936__pinl_13948__flat_322__sz; SAC_i++) { if (( SACp_emal_44936__pinl_13948__flat_322[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_44936__pinl_13948__flat_322"); } { SACp_emal_44935__pinl_13968__icc_7220_pred = ( SACp_emal_44936__pinl_13948__flat_322[SAC_i]); }; } SACp_emal_44935__pinl_13968__icc_7220_pred = SAC_all; }
        if (SACp_emal_44936__pinl_13948__flat_322__dim != SACp_emal_44939__pinl_13950_new_shape__dim) {
      SACp_emal_44934__pinl_13970__icc_7222_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_44936__pinl_13948__flat_322""' with shape %s ""And `" "SACp_emal_44939__pinl_13950_new_shape""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_44936__pinl_13948__flat_322__desc), SAC_PrintShape (SACp_emal_44939__pinl_13950_new_shape__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_44936__pinl_13948__flat_322__shp0 != SACp_emal_44939__pinl_13950_new_shape__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_44936__pinl_13948__flat_322""' with shape %s ""And `" "SACp_emal_44939__pinl_13950_new_shape""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_44936__pinl_13948__flat_322__desc), SAC_PrintShape (SACp_emal_44939__pinl_13950_new_shape__desc));
      }
      SACp_emal_44934__pinl_13970__icc_7222_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44936__pinl_13948__flat_322__sz && SAC_i < SACp_emal_44939__pinl_13950_new_shape__sz; SAC_i++) { if (( SACp_emal_44936__pinl_13948__flat_322[SAC_i]) > ( SACp_emal_44939__pinl_13950_new_shape[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Vector constraint `" "SACp_emal_44936__pinl_13948__flat_322" " < " "SACp_emal_44939__pinl_13950_new_shape" "' violated"); } } SACp_emal_44933__pinl_13973__icc_7223_pred = SAC_all; }
    if (!SACp_emal_44937__pinl_13966__icc_7226_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44933__pinl_13973__icc_7223_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44934__pinl_13970__icc_7222_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44938__pinl_13959__icc_7221_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44935__pinl_13968__icc_7220_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { { if (!((1 == SACp_emal_44932__pinl_14001_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44932__pinl_14001_new_shape"); }; { if ((((6 + (SACp_emal_44932__pinl_14001_new_shape__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44932__pinl_14001_new_shape__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44932__pinl_14001_new_shape__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44932__pinl_14001_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44932__pinl_14001_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44932__pinl_14001_new_shape__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44932__pinl_14001_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44932__pinl_14001_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44932__pinl_14001_new_shape__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44932__pinl_14001_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44932__pinl_14001_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44932__pinl_14001_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44932__pinl_14001_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44932__pinl_14001_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44932__pinl_14001_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44932__pinl_14001_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44932__pinl_14001_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44932__pinl_14001_new_shape__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44932__pinl_14001_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44932__pinl_14001_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_44970__isaa_34492_a__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_44932__pinl_14001_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44932__pinl_14001_new_shape__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44932__pinl_14001_new_shape__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44970__isaa_34492_a__sz - (((SACp_emal_44960__pinl_23655__icc_6991) < 0) ? (-(SACp_emal_44960__pinl_23655__icc_6991)) : (SACp_emal_44960__pinl_23655__icc_6991));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44932__pinl_14001_new_shape__desc) & (-1 ^ (3))))[4]) = SACp_emal_44932__pinl_14001_new_shape__sz = SAC_size;
      if (!((SACp_emal_44932__pinl_14001_new_shape__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29299 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29299 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29299 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29299 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29299 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29299 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29299 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29299, __extension__ __PRETTY_FUNCTION__); }))
# 29299 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44932__pinl_14001_new_shape = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44932__pinl_14001_new_shape__sz * sizeof (*SACp_emal_44932__pinl_14001_new_shape)); break; case SAC_HM_multi_threaded: SACp_emal_44932__pinl_14001_new_shape = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44932__pinl_14001_new_shape__sz * sizeof (*SACp_emal_44932__pinl_14001_new_shape), 0); break; case SAC_HM_any_threaded: SACp_emal_44932__pinl_14001_new_shape = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44932__pinl_14001_new_shape__sz * sizeof (*SACp_emal_44932__pinl_14001_new_shape), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44932__pinl_14001_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44932__pinl_14001_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44932__pinl_14001_new_shape__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 29306 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 29306 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_44960__pinl_23655__icc_6991;
      SAC_cond = (SACp_emal_44960__pinl_23655__icc_6991 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_44970__isaa_34492_a__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_44970__isaa_34492_a__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_44932__pinl_14001_new_shape[SAC_i] = ( SACp_emal_44970__isaa_34492_a[SAC_off + SAC_i]); };
      }
    }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44932__pinl_14001_new_shape__sz; SAC_i++) { if (( SACp_emal_44932__pinl_14001_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_44932__pinl_14001_new_shape"); } { SACp_emal_44931__pinl_14010__icc_7221_pred = ( SACp_emal_44932__pinl_14001_new_shape[SAC_i]); }; } SACp_emal_44931__pinl_14010__icc_7221_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44932__pinl_14001_new_shape__sz; SAC_i++) { if (( SACp_emal_44932__pinl_14001_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Non-negativity constraint violated " "for vector " "SACp_emal_44932__pinl_14001_new_shape"); } { SACp_emal_44930__pinl_14017__icc_7226_pred = ( SACp_emal_44932__pinl_14001_new_shape[SAC_i]); }; } SACp_emal_44930__pinl_14017__icc_7226_pred = SAC_all; }
    { { if (!((1 == SACp_emal_44929__pinl_13999__flat_322__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44929__pinl_13999__flat_322"); }; { if ((((6 + (SACp_emal_44929__pinl_13999__flat_322__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44929__pinl_13999__flat_322__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44929__pinl_13999__flat_322__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44929__pinl_13999__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44929__pinl_13999__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44929__pinl_13999__flat_322__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44929__pinl_13999__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44929__pinl_13999__flat_322__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44929__pinl_13999__flat_322__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44929__pinl_13999__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44929__pinl_13999__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44929__pinl_13999__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44929__pinl_13999__flat_322__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44929__pinl_13999__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44929__pinl_13999__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44929__pinl_13999__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44929__pinl_13999__flat_322__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44929__pinl_13999__flat_322__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44929__pinl_13999__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44929__pinl_13999__flat_322__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44929__pinl_13999__flat_322__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_44929__pinl_13999__flat_322__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44929__pinl_13999__flat_322__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44932__pinl_14001_new_shape__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44929__pinl_13999__flat_322__desc) & (-1 ^ (3))))[4]) = SACp_emal_44929__pinl_13999__flat_322__sz = SAC_size * SACp_emal_44932__pinl_14001_new_shape__sz;
      if (!((SACp_emal_44929__pinl_13999__flat_322__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29340 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29340 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29340 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29340 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29340 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29340 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29340 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29340, __extension__ __PRETTY_FUNCTION__); }))
# 29340 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44929__pinl_13999__flat_322 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44929__pinl_13999__flat_322__sz * sizeof (*SACp_emal_44929__pinl_13999__flat_322)); break; case SAC_HM_multi_threaded: SACp_emal_44929__pinl_13999__flat_322 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44929__pinl_13999__flat_322__sz * sizeof (*SACp_emal_44929__pinl_13999__flat_322), 0); break; case SAC_HM_any_threaded: SACp_emal_44929__pinl_13999__flat_322 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44929__pinl_13999__flat_322__sz * sizeof (*SACp_emal_44929__pinl_13999__flat_322), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44929__pinl_13999__flat_322__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44929__pinl_13999__flat_322__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44929__pinl_13999__flat_322__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_44929__pinl_13999__flat_322__sz; SAC_i++) { { SACp_emal_44929__pinl_13999__flat_322[SAC_i] = (0) * (( SACp_emal_44932__pinl_14001_new_shape[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44929__pinl_13999__flat_322__sz; SAC_i++) { if (( SACp_emal_44929__pinl_13999__flat_322[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for vector " "SACp_emal_44929__pinl_13999__flat_322"); } { SACp_emal_44928__pinl_14019__icc_7220_pred = ( SACp_emal_44929__pinl_13999__flat_322[SAC_i]); }; } SACp_emal_44928__pinl_14019__icc_7220_pred = SAC_all; }
        if (SACp_emal_44929__pinl_13999__flat_322__dim != SACp_emal_44932__pinl_14001_new_shape__dim) {
      SACp_emal_44927__pinl_14021__icc_7222_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_44929__pinl_13999__flat_322""' with shape %s ""And `" "SACp_emal_44932__pinl_14001_new_shape""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_44929__pinl_13999__flat_322__desc), SAC_PrintShape (SACp_emal_44932__pinl_14001_new_shape__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_44929__pinl_13999__flat_322__shp0 != SACp_emal_44932__pinl_14001_new_shape__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Arrays `" "SACp_emal_44929__pinl_13999__flat_322""' with shape %s ""And `" "SACp_emal_44932__pinl_14001_new_shape""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_44929__pinl_13999__flat_322__desc), SAC_PrintShape (SACp_emal_44932__pinl_14001_new_shape__desc));
      }
      SACp_emal_44927__pinl_14021__icc_7222_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44929__pinl_13999__flat_322__sz && SAC_i < SACp_emal_44932__pinl_14001_new_shape__sz; SAC_i++) { if (( SACp_emal_44929__pinl_13999__flat_322[SAC_i]) > ( SACp_emal_44932__pinl_14001_new_shape[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Vector constraint `" "SACp_emal_44929__pinl_13999__flat_322" " < " "SACp_emal_44932__pinl_14001_new_shape" "' violated"); } } SACp_emal_44926__pinl_14024__icc_7223_pred = SAC_all; }
    if (!SACp_emal_44930__pinl_14017__icc_7226_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44926__pinl_14024__icc_7223_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44927__pinl_14021__icc_7222_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44931__pinl_14010__icc_7221_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44928__pinl_14019__icc_7220_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { { if (!(((SACp_emal_44947__icc_7284__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_44896__icc_7320"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29363 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29363 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29363 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29363 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29363 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29363 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29363 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29363, __extension__ __PRETTY_FUNCTION__); }))
# 29363 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44896__icc_7320__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_44947__icc_7284__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_44896__icc_7320__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_44947__icc_7284__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_44896__icc_7320__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_44947__icc_7284__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[3]) = SACp_emal_44896__icc_7320__dim = (SACp_emal_44947__icc_7284__sz) + (0); }



   
    if (!((SACp_emal_44947__icc_7284__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_44896__icc_7320__dim == SACp_emal_44947__icc_7284__sz + (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_44947__icc_7284__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_44947__icc_7284[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[4]) = SACp_emal_44896__icc_7320__sz = SAC_size;
      if (!((SACp_emal_44896__icc_7320__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29383 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29383 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29383 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29383 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29383 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29383 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29383 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29383, __extension__ __PRETTY_FUNCTION__); }))
# 29383 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44896__icc_7320 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44896__icc_7320__sz * sizeof (*SACp_emal_44896__icc_7320)); break; case SAC_HM_multi_threaded: SACp_emal_44896__icc_7320 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44896__icc_7320__sz * sizeof (*SACp_emal_44896__icc_7320), 0); break; case SAC_HM_any_threaded: SACp_emal_44896__icc_7320 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44896__icc_7320__sz * sizeof (*SACp_emal_44896__icc_7320), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACl_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACl_iv"); }; { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACl_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACl_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACl_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACl_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACl_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44944__flat_199__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[4]) = SACl_iv__sz = SAC_size * SACp_emal_44944__flat_199__sz;
      if (!((SACl_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29398 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29398 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29398 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29398 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29398 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29398 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29398 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29398, __extension__ __PRETTY_FUNCTION__); }))
# 29398 "/home/rubenhensen/sac/a.out.c"
   ; SACl_iv = (int *)SAC_HM_MallocAnyChunk_st (SACl_iv__sz * sizeof (*SACl_iv)); break; case SAC_HM_multi_threaded: SACl_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACl_iv__sz * sizeof (*SACl_iv), 0); break; case SAC_HM_any_threaded: SACl_iv = (int *)SAC_HM_MallocAnyChunk_at (SACl_iv__sz * sizeof (*SACl_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACl_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACl_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_44896__icc_7320__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_44896__icc_7320_shpfac0; SAC_d = SACp_emal_44896__icc_7320__dim - 1; SACp_wlidx_42369__icc_7320 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_44896__icc_7320_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_44944__flat_199[SAC_d]) <= ( SACl_iv[SAC_d])) && (( SACl_iv[SAC_d]) < ( SACp_emal_44947__icc_7284[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!(((SACp_emal_44939__pinl_13950_new_shape__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_44915__pinl_13942__icc_7238"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29413 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29413 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29413 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29413 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29413 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29413 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29413 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29413, __extension__ __PRETTY_FUNCTION__); }))
# 29413 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44915__pinl_13942__icc_7238__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_44939__pinl_13950_new_shape__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_44915__pinl_13942__icc_7238__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_44939__pinl_13950_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_44915__pinl_13942__icc_7238__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_44939__pinl_13950_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[3]) = SACp_emal_44915__pinl_13942__icc_7238__dim = (SACp_emal_44939__pinl_13950_new_shape__sz) + (0); }



   
    if (!((SACp_emal_44939__pinl_13950_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_44915__pinl_13942__icc_7238__dim == SACp_emal_44939__pinl_13950_new_shape__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_44939__pinl_13950_new_shape__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_44939__pinl_13950_new_shape[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[4]) = SACp_emal_44915__pinl_13942__icc_7238__sz = SAC_size;
      if (!((SACp_emal_44915__pinl_13942__icc_7238__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29433 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29433 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29433 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29433 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29433 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29433 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29433 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29433, __extension__ __PRETTY_FUNCTION__); }))
# 29433 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44915__pinl_13942__icc_7238 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44915__pinl_13942__icc_7238__sz * sizeof (*SACp_emal_44915__pinl_13942__icc_7238)); break; case SAC_HM_multi_threaded: SACp_emal_44915__pinl_13942__icc_7238 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44915__pinl_13942__icc_7238__sz * sizeof (*SACp_emal_44915__pinl_13942__icc_7238), 0); break; case SAC_HM_any_threaded: SACp_emal_44915__pinl_13942__icc_7238 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44915__pinl_13942__icc_7238__sz * sizeof (*SACp_emal_44915__pinl_13942__icc_7238), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_13951_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_13951_iv"); }; { if ((((6 + (SACp_pinl_13951_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_13951_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_13951_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_13951_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_13951_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_13951_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_13951_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_13951_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_13951_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_13951_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_13951_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_13951_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_13951_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_13951_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_13951_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_13951_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_13951_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13951_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13951_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13951_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_13951_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_13951_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13951_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44936__pinl_13948__flat_322__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13951_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_13951_iv__sz = SAC_size * SACp_emal_44936__pinl_13948__flat_322__sz;
      if (!((SACp_pinl_13951_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29448 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29448 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29448 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29448 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29448 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29448 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29448 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29448, __extension__ __PRETTY_FUNCTION__); }))
# 29448 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_13951_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_13951_iv__sz * sizeof (*SACp_pinl_13951_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_13951_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_13951_iv__sz * sizeof (*SACp_pinl_13951_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_13951_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_13951_iv__sz * sizeof (*SACp_pinl_13951_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13951_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13951_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13951_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_13951_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_13951_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_44915__pinl_13942__icc_7238__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_44915__pinl_13942__icc_7238_shpfac0; SAC_d = SACp_emal_44915__pinl_13942__icc_7238__dim - 1; SACp_wlidx_42370__pinl_13942__icc_7238 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_44915__pinl_13942__icc_7238_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_44936__pinl_13948__flat_322[SAC_d]) <= ( SACp_pinl_13951_iv[SAC_d])) && (( SACp_pinl_13951_iv[SAC_d]) < ( SACp_emal_44939__pinl_13950_new_shape[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!((1 == SACp_emal_44921__pinl_13952_new_idx__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44921__pinl_13952_new_idx"); }; { if ((((6 + (SACp_emal_44921__pinl_13952_new_idx__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44921__pinl_13952_new_idx__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44921__pinl_13952_new_idx__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44921__pinl_13952_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44921__pinl_13952_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44921__pinl_13952_new_idx__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44921__pinl_13952_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44921__pinl_13952_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44921__pinl_13952_new_idx__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44921__pinl_13952_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44921__pinl_13952_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44921__pinl_13952_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44921__pinl_13952_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44921__pinl_13952_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44921__pinl_13952_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44921__pinl_13952_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44921__pinl_13952_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44921__pinl_13952_new_idx__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44921__pinl_13952_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44921__pinl_13952_new_idx__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACl_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_pinl_13951_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_44921__pinl_13952_new_idx__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44921__pinl_13952_new_idx__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44921__pinl_13952_new_idx__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_iv__sz + SACp_pinl_13951_iv__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44921__pinl_13952_new_idx__desc) & (-1 ^ (3))))[4]) = SACp_emal_44921__pinl_13952_new_idx__sz = SAC_size;
      if (!((SACp_emal_44921__pinl_13952_new_idx__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29481 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29481 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29481 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29481 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29481 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29481 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29481 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29481, __extension__ __PRETTY_FUNCTION__); }))
# 29481 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44921__pinl_13952_new_idx = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44921__pinl_13952_new_idx__sz * sizeof (*SACp_emal_44921__pinl_13952_new_idx)); break; case SAC_HM_multi_threaded: SACp_emal_44921__pinl_13952_new_idx = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44921__pinl_13952_new_idx__sz * sizeof (*SACp_emal_44921__pinl_13952_new_idx), 0); break; case SAC_HM_any_threaded: SACp_emal_44921__pinl_13952_new_idx = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44921__pinl_13952_new_idx__sz * sizeof (*SACp_emal_44921__pinl_13952_new_idx), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44921__pinl_13952_new_idx__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44921__pinl_13952_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44921__pinl_13952_new_idx__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACl_iv__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_44921__pinl_13952_new_idx[SAC_i] = ( SACl_iv[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_pinl_13951_iv__sz; SAC_i++) { { SACp_emal_44921__pinl_13952_new_idx[SAC_off + SAC_i] = ( SACp_pinl_13951_iv[SAC_i]); }; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    if ((SACp_emal_44921__pinl_13952_new_idx__dim == 1) && (SACp_emal_44921__pinl_13952_new_idx__shp0 == SACl_b__dim)) { SACp_emal_44920__pinl_13975__icc_7227_pred = 1; } else { SACp_emal_44920__pinl_13975__icc_7227_pred = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays " "SACp_emal_44921__pinl_13952_new_idx" " and " "SACl_b" " do not adhere to shape matches dim constraint"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44921__pinl_13952_new_idx__sz; SAC_i++) { if (( SACp_emal_44921__pinl_13952_new_idx[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for vector " "SACp_emal_44921__pinl_13952_new_idx"); } { SACp_emal_44919__pinl_13977__icc_7228_pred = ( SACp_emal_44921__pinl_13952_new_idx[SAC_i]); }; } SACp_emal_44919__pinl_13977__icc_7228_pred = SAC_all; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }



    if ((SACp_emal_44921__pinl_13952_new_idx__dim != 1) && (SACp_emal_44921__pinl_13952_new_idx__shp0 != SACl_b__dim)) {
      SACp_emal_44918__pinl_13979__icc_7229_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_44921__pinl_13952_new_idx""' with shape %s ""And `" "SACl_b""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_44921__pinl_13952_new_idx__desc), SAC_PrintShape (SACl_b__desc));
    }
    else {
      int SAC_all = 1; for (int SAC_i = 0; SAC_i < SACl_b__dim; SAC_i++) {
        if (( SACp_emal_44921__pinl_13952_new_idx[SAC_i]) >= (((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[(6 + (SAC_i))])) {
          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_44921__pinl_13952_new_idx""' with shape %s ""And `" "SACl_b""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_44921__pinl_13952_new_idx__desc), SAC_PrintShape (SACl_b__desc));
        }
      }
      SACp_emal_44918__pinl_13979__icc_7229_pred = SAC_all;
    }

    if (!SACp_emal_44918__pinl_13979__icc_7229_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44919__pinl_13977__icc_7228_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44920__pinl_13975__icc_7227_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      for (SAC_i = 0; SAC_i < SACp_emal_44921__pinl_13952_new_idx__sz; SAC_i++)
      {

        SAC_l = ( SACp_emal_44972__isaa_34489_b[SAC_i]) * SAC_l + ( SACp_emal_44921__pinl_13952_new_idx[SAC_i]);
      }
      for (SAC_i = SACp_emal_44921__pinl_13952_new_idx__sz; SAC_i < SACp_emal_44972__isaa_34489_b__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_44972__isaa_34489_b[SAC_i]);
      }
      SACp_emal_44917__ivesli_42567 = SAC_l;
    }

    { { free (SACp_emal_44921__pinl_13952_new_idx); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44921__pinl_13952_new_idx__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44916__pinl_13938__icc_7232 = ( SACl_b[SACp_emal_44917__ivesli_42567]); }

    { ; ; }
    if (!SACp_emal_44918__pinl_13979__icc_7229_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44919__pinl_13977__icc_7228_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44920__pinl_13975__icc_7227_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_44915__pinl_13942__icc_7238__dim - SACp_pinl_13951_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44915__pinl_13942__icc_7238_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal size found!"); };
    { SACp_emal_44915__pinl_13942__icc_7238[SACp_wlidx_42370__pinl_13942__icc_7238] = SACp_emal_44916__pinl_13938__icc_7232; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_44915__pinl_13942__icc_7238__dim - SACp_pinl_13951_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44915__pinl_13942__icc_7238_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal size found!"); };
    { SACp_emal_44915__pinl_13942__icc_7238[SACp_wlidx_42370__pinl_13942__icc_7238] = SACp_emal_44969__ivesplit_34589; };

    }
    SACp_wlidx_42370__pinl_13942__icc_7238 = SACp_wlidx_42370__pinl_13942__icc_7238 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_13951_iv[SAC_d] = ( SACp_pinl_13951_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_13951_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_13951_iv[SAC_d] = 0; SAC_d--; SACp_pinl_13951_iv[SAC_d] = ( SACp_pinl_13951_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_13951_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_13951_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13951_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_44937__pinl_13966__icc_7226_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44933__pinl_13973__icc_7223_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44934__pinl_13970__icc_7222_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44938__pinl_13959__icc_7221_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44935__pinl_13968__icc_7220_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Assignment with incompatible types found"); };
    ;

    }
        if (SACp_emal_44915__pinl_13942__icc_7238__dim != 0) {
      SACp_emal_44914__icc_7311_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Array `" "SACp_emal_44915__pinl_13942__icc_7238""' with shape %s ""does not adhere to `dim == 0' constraint", SAC_PrintShape (SACp_emal_44915__pinl_13942__icc_7238__desc));
    }
    else {
      if (0)
      {

        SACp_emal_44914__icc_7311_pred = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Array `" "SACp_emal_44915__pinl_13942__icc_7238""' with shape %s ""does not adhere to `shp == []' constraint", SAC_PrintShape (SACp_emal_44915__pinl_13942__icc_7238__desc));
      }
      else {
        SACp_emal_44914__icc_7311_pred = 1;
      }
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 35, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_44915__pinl_13942__icc_7238__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44913__idc_7362 = ( SACp_emal_44915__pinl_13942__icc_7238[0]); } }
    { { free (SACp_emal_44915__pinl_13942__icc_7238); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44915__pinl_13942__icc_7238__desc) & (-1 ^ (3))))); } } }
    { { if (!(((SACp_emal_44932__pinl_14001_new_shape__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_44904__pinl_13993__icc_7238"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29641 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29641 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29641 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29641 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29641 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29641 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29641 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29641, __extension__ __PRETTY_FUNCTION__); }))
# 29641 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44904__pinl_13993__icc_7238__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_44932__pinl_14001_new_shape__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_44904__pinl_13993__icc_7238__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_44932__pinl_14001_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_44904__pinl_13993__icc_7238__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_44932__pinl_14001_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[3]) = SACp_emal_44904__pinl_13993__icc_7238__dim = (SACp_emal_44932__pinl_14001_new_shape__sz) + (0); }



   
    if (!((SACp_emal_44932__pinl_14001_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_44904__pinl_13993__icc_7238__dim == SACp_emal_44932__pinl_14001_new_shape__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_44932__pinl_14001_new_shape__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_44932__pinl_14001_new_shape[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[4]) = SACp_emal_44904__pinl_13993__icc_7238__sz = SAC_size;
      if (!((SACp_emal_44904__pinl_13993__icc_7238__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29661 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29661 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29661 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29661 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29661 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29661 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29661 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29661, __extension__ __PRETTY_FUNCTION__); }))
# 29661 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44904__pinl_13993__icc_7238 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44904__pinl_13993__icc_7238__sz * sizeof (*SACp_emal_44904__pinl_13993__icc_7238)); break; case SAC_HM_multi_threaded: SACp_emal_44904__pinl_13993__icc_7238 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44904__pinl_13993__icc_7238__sz * sizeof (*SACp_emal_44904__pinl_13993__icc_7238), 0); break; case SAC_HM_any_threaded: SACp_emal_44904__pinl_13993__icc_7238 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44904__pinl_13993__icc_7238__sz * sizeof (*SACp_emal_44904__pinl_13993__icc_7238), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_14002_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_14002_iv"); }; { if ((((6 + (SACp_pinl_14002_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_14002_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_14002_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_14002_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_14002_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_14002_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_14002_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_14002_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_14002_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_14002_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_14002_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_14002_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_14002_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_14002_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_14002_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_14002_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_14002_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14002_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14002_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14002_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_14002_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_14002_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14002_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44929__pinl_13999__flat_322__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14002_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_14002_iv__sz = SAC_size * SACp_emal_44929__pinl_13999__flat_322__sz;
      if (!((SACp_pinl_14002_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29676 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29676 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29676 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29676 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29676 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29676 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29676 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29676, __extension__ __PRETTY_FUNCTION__); }))
# 29676 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_14002_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_14002_iv__sz * sizeof (*SACp_pinl_14002_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_14002_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_14002_iv__sz * sizeof (*SACp_pinl_14002_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_14002_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_14002_iv__sz * sizeof (*SACp_pinl_14002_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14002_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14002_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14002_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_14002_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_14002_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_44904__pinl_13993__icc_7238__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_44904__pinl_13993__icc_7238_shpfac0; SAC_d = SACp_emal_44904__pinl_13993__icc_7238__dim - 1; SACp_wlidx_42371__pinl_13993__icc_7238 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_44904__pinl_13993__icc_7238_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_44929__pinl_13999__flat_322[SAC_d]) <= ( SACp_pinl_14002_iv[SAC_d])) && (( SACp_pinl_14002_iv[SAC_d]) < ( SACp_emal_44932__pinl_14001_new_shape[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!((1 == SACp_emal_44910__pinl_14003_new_idx__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44910__pinl_14003_new_idx"); }; { if ((((6 + (SACp_emal_44910__pinl_14003_new_idx__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44910__pinl_14003_new_idx__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44910__pinl_14003_new_idx__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44910__pinl_14003_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44910__pinl_14003_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44910__pinl_14003_new_idx__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44910__pinl_14003_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44910__pinl_14003_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44910__pinl_14003_new_idx__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44910__pinl_14003_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44910__pinl_14003_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44910__pinl_14003_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44910__pinl_14003_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44910__pinl_14003_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44910__pinl_14003_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44910__pinl_14003_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44910__pinl_14003_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44910__pinl_14003_new_idx__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44910__pinl_14003_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44910__pinl_14003_new_idx__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACl_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_pinl_14002_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_44910__pinl_14003_new_idx__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44910__pinl_14003_new_idx__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44910__pinl_14003_new_idx__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_iv__sz + SACp_pinl_14002_iv__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44910__pinl_14003_new_idx__desc) & (-1 ^ (3))))[4]) = SACp_emal_44910__pinl_14003_new_idx__sz = SAC_size;
      if (!((SACp_emal_44910__pinl_14003_new_idx__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29709 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29709 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29709 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29709 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29709 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29709 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29709 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29709, __extension__ __PRETTY_FUNCTION__); }))
# 29709 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44910__pinl_14003_new_idx = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44910__pinl_14003_new_idx__sz * sizeof (*SACp_emal_44910__pinl_14003_new_idx)); break; case SAC_HM_multi_threaded: SACp_emal_44910__pinl_14003_new_idx = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44910__pinl_14003_new_idx__sz * sizeof (*SACp_emal_44910__pinl_14003_new_idx), 0); break; case SAC_HM_any_threaded: SACp_emal_44910__pinl_14003_new_idx = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44910__pinl_14003_new_idx__sz * sizeof (*SACp_emal_44910__pinl_14003_new_idx), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44910__pinl_14003_new_idx__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44910__pinl_14003_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44910__pinl_14003_new_idx__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACl_iv__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_44910__pinl_14003_new_idx[SAC_i] = ( SACl_iv[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_pinl_14002_iv__sz; SAC_i++) { { SACp_emal_44910__pinl_14003_new_idx[SAC_off + SAC_i] = ( SACp_pinl_14002_iv[SAC_i]); }; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    if ((SACp_emal_44910__pinl_14003_new_idx__dim == 1) && (SACp_emal_44910__pinl_14003_new_idx__shp0 == SACl_a__dim)) { SACp_emal_44909__pinl_14026__icc_7227_pred = 1; } else { SACp_emal_44909__pinl_14026__icc_7227_pred = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays " "SACp_emal_44910__pinl_14003_new_idx" " and " "SACl_a" " do not adhere to shape matches dim constraint"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44910__pinl_14003_new_idx__sz; SAC_i++) { if (( SACp_emal_44910__pinl_14003_new_idx[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for vector " "SACp_emal_44910__pinl_14003_new_idx"); } { SACp_emal_44908__pinl_14028__icc_7228_pred = ( SACp_emal_44910__pinl_14003_new_idx[SAC_i]); }; } SACp_emal_44908__pinl_14028__icc_7228_pred = SAC_all; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
    ;

    }



    if ((SACp_emal_44910__pinl_14003_new_idx__dim != 1) && (SACp_emal_44910__pinl_14003_new_idx__shp0 != SACl_a__dim)) {
      SACp_emal_44907__pinl_14030__icc_7229_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_44910__pinl_14003_new_idx""' with shape %s ""And `" "SACl_a""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_44910__pinl_14003_new_idx__desc), SAC_PrintShape (SACl_a__desc));
    }
    else {
      int SAC_all = 1; for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
        if (( SACp_emal_44910__pinl_14003_new_idx[SAC_i]) >= (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))])) {
          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Arrays `" "SACp_emal_44910__pinl_14003_new_idx""' with shape %s ""And `" "SACl_a""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_44910__pinl_14003_new_idx__desc), SAC_PrintShape (SACl_a__desc));
        }
      }
      SACp_emal_44907__pinl_14030__icc_7229_pred = SAC_all;
    }

    if (!SACp_emal_44907__pinl_14030__icc_7229_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44908__pinl_14028__icc_7228_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44909__pinl_14026__icc_7227_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      for (SAC_i = 0; SAC_i < SACp_emal_44910__pinl_14003_new_idx__sz; SAC_i++)
      {

        SAC_l = ( SACp_emal_44970__isaa_34492_a[SAC_i]) * SAC_l + ( SACp_emal_44910__pinl_14003_new_idx[SAC_i]);
      }
      for (SAC_i = SACp_emal_44910__pinl_14003_new_idx__sz; SAC_i < SACp_emal_44970__isaa_34492_a__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_44970__isaa_34492_a[SAC_i]);
      }
      SACp_emal_44906__ivesli_42566 = SAC_l;
    }

    { { free (SACp_emal_44910__pinl_14003_new_idx); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44910__pinl_14003_new_idx__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44905__pinl_13989__icc_7232 = ( SACl_a[SACp_emal_44906__ivesli_42566]); }

    { ; ; }
    if (!SACp_emal_44907__pinl_14030__icc_7229_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44908__pinl_14028__icc_7228_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_44909__pinl_14026__icc_7227_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_44904__pinl_13993__icc_7238__dim - SACp_pinl_14002_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44904__pinl_13993__icc_7238_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal size found!"); };
    { SACp_emal_44904__pinl_13993__icc_7238[SACp_wlidx_42371__pinl_13993__icc_7238] = SACp_emal_44905__pinl_13989__icc_7232; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_44904__pinl_13993__icc_7238__dim - SACp_pinl_14002_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44904__pinl_13993__icc_7238_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal size found!"); };
    { SACp_emal_44904__pinl_13993__icc_7238[SACp_wlidx_42371__pinl_13993__icc_7238] = SACp_emal_44969__ivesplit_34589; };

    }
    SACp_wlidx_42371__pinl_13993__icc_7238 = SACp_wlidx_42371__pinl_13993__icc_7238 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_14002_iv[SAC_d] = ( SACp_pinl_14002_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_14002_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_14002_iv[SAC_d] = 0; SAC_d--; SACp_pinl_14002_iv[SAC_d] = ( SACp_pinl_14002_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_14002_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_14002_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14002_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_44930__pinl_14017__icc_7226_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44926__pinl_14024__icc_7223_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44927__pinl_14021__icc_7222_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44931__pinl_14010__icc_7221_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_44928__pinl_14019__icc_7220_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Assignment with incompatible types found"); };
    ;

    }
        if (SACp_emal_44904__pinl_13993__icc_7238__dim != 0) {
      SACp_emal_44903__icc_7310_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Array `" "SACp_emal_44904__pinl_13993__icc_7238""' with shape %s ""does not adhere to `dim == 0' constraint", SAC_PrintShape (SACp_emal_44904__pinl_13993__icc_7238__desc));
    }
    else {
      if (0)
      {

        SACp_emal_44903__icc_7310_pred = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Array `" "SACp_emal_44904__pinl_13993__icc_7238""' with shape %s ""does not adhere to `shp == []' constraint", SAC_PrintShape (SACp_emal_44904__pinl_13993__icc_7238__desc));
      }
      else {
        SACp_emal_44903__icc_7310_pred = 1;
      }
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 29, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_44904__pinl_13993__icc_7238__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44902__idc_7363 = ( SACp_emal_44904__pinl_13993__icc_7238[0]); } }
    { { free (SACp_emal_44904__pinl_13993__icc_7238); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44904__pinl_13993__icc_7238__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_44914__icc_7311_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    if (!SACp_emal_44903__icc_7310_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    { { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_44901__icc_7313"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29871 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29871 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29871 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29871 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29871 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29871 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29871 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29871, __extension__ __PRETTY_FUNCTION__); }))
# 29871 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44901__icc_7313__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_44901__icc_7313__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_44901__icc_7313__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44901__icc_7313__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44901__icc_7313__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44901__icc_7313__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44901__icc_7313__desc) & (-1 ^ (3))))[3]) = SACp_emal_44901__icc_7313__dim = 0; }



    if (!((SACp_emal_44901__icc_7313__dim == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44901__icc_7313__desc) & (-1 ^ (3))))[4]) = SACp_emal_44901__icc_7313__sz = SAC_size * 1;
      if (!((SACp_emal_44901__icc_7313__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29883 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29883 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29883 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29883 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29883 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29883 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29883 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29883, __extension__ __PRETTY_FUNCTION__); }))
# 29883 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44901__icc_7313 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44901__icc_7313__sz * sizeof (*SACp_emal_44901__icc_7313)); break; case SAC_HM_multi_threaded: SACp_emal_44901__icc_7313 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44901__icc_7313__sz * sizeof (*SACp_emal_44901__icc_7313), 0); break; case SAC_HM_any_threaded: SACp_emal_44901__icc_7313 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44901__icc_7313__sz * sizeof (*SACp_emal_44901__icc_7313), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44901__icc_7313__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44901__icc_7313__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44901__icc_7313__desc) & (-1 ^ (3))))[1]) = 0; } }
    { if (!((SACp_emal_44901__icc_7313__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44901__icc_7313[0] = SACp_emal_44913__idc_7362; } }
    { ; ; }
    { { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_44900__icc_7312"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29886 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29886 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29886 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29886 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29886 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29886 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29886 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29886, __extension__ __PRETTY_FUNCTION__); }))
# 29886 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44900__icc_7312__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_44900__icc_7312__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_44900__icc_7312__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44900__icc_7312__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44900__icc_7312__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44900__icc_7312__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44900__icc_7312__desc) & (-1 ^ (3))))[3]) = SACp_emal_44900__icc_7312__dim = 0; }



    if (!((SACp_emal_44900__icc_7312__dim == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44900__icc_7312__desc) & (-1 ^ (3))))[4]) = SACp_emal_44900__icc_7312__sz = SAC_size * 1;
      if (!((SACp_emal_44900__icc_7312__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 29898 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 29898 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29898 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 29898 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 29898 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 29898 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 29898 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 29898, __extension__ __PRETTY_FUNCTION__); }))
# 29898 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44900__icc_7312 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44900__icc_7312__sz * sizeof (*SACp_emal_44900__icc_7312)); break; case SAC_HM_multi_threaded: SACp_emal_44900__icc_7312 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44900__icc_7312__sz * sizeof (*SACp_emal_44900__icc_7312), 0); break; case SAC_HM_any_threaded: SACp_emal_44900__icc_7312 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44900__icc_7312__sz * sizeof (*SACp_emal_44900__icc_7312), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44900__icc_7312__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44900__icc_7312__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44900__icc_7312__desc) & (-1 ^ (3))))[1]) = 0; } }
    { if (!((SACp_emal_44900__icc_7312__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44900__icc_7312[0] = SACp_emal_44902__idc_7363; } }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_44901__icc_7313__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44899__asd_43074__icc_7313 = ( SACp_emal_44901__icc_7313[0]); } }
    { { free (SACp_emal_44901__icc_7313); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44901__icc_7313__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 19, "Assignment with incompatible types found"); };
    ;

    }
    { if (!((SACp_emal_44900__icc_7312__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_44898__asd_43073__icc_7312 = ( SACp_emal_44900__icc_7312[0]); } }
    { { free (SACp_emal_44900__icc_7312); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44900__icc_7312__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_44898__asd_43073__icc_7312 = (SACp_emal_44898__asd_43073__icc_7312) + (SACp_emal_44899__asd_43074__icc_7313); };
    { ; ; }
    if (!SACp_emal_44914__icc_7311_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    if (!SACp_emal_44903__icc_7310_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 19, "Primitive function _add_SxS_ guard failed"); }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_44896__icc_7320__dim - SACl_iv__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44896__icc_7320_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
    { SACp_emal_44896__icc_7320[SACp_wlidx_42369__icc_7320] = SACp_emal_44898__asd_43073__icc_7312; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_44896__icc_7320__dim - SACl_iv__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44896__icc_7320_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 31, 12, "WL expression with illegal size found!"); };
    { SACp_emal_44896__icc_7320[SACp_wlidx_42369__icc_7320] = SACp_emal_44940__icc_7316; };

    }
    SACp_wlidx_42369__icc_7320 = SACp_wlidx_42369__icc_7320 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACl_iv[SAC_d] = ( SACl_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACl_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACl_iv[SAC_d] = 0; SAC_d--; SACl_iv[SAC_d] = ( SACl_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACl_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44896__icc_7320__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_emal_44947__icc_7284); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44947__icc_7284__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44944__flat_199); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44944__flat_199__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { { free (SACl_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_iv__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44929__pinl_13999__flat_322); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44929__pinl_13999__flat_322__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44932__pinl_14001_new_shape); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44932__pinl_14001_new_shape__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_44936__pinl_13948__flat_322); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44936__pinl_13948__flat_322__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44939__pinl_13950_new_shape); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44939__pinl_13950_new_shape__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_44972__isaa_34489_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44972__isaa_34489_b__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_44970__isaa_34492_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44970__isaa_34492_a__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_b); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))); } } } } else { } }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
    if (!SACp_emal_44945__icc_7309_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44941__icc_7306_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44942__icc_7305_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44946__icc_7304_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    if (!SACp_emal_44943__icc_7303_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 31, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_44896__icc_7320; *SAC_arg_1__desc__p = SACp_emal_44896__icc_7320__desc; }
    return;
   
  }



}
}
# 30003 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_31_impl_pluscarret__i_3__i_2_3 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48513_SACl_b;
    SAC_array_descriptor_t _tcp_48513_SACl_b__desc = 
# 30013 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30013 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48513_SACl_b__sz = 0;
    int _tcp_48513_SACl_b__dim = 0;




    int * _tcp_48512_SACp_emal_44987__pinl_23970__icc_7402;
    SAC_array_descriptor_t _tcp_48512_SACp_emal_44987__pinl_23970__icc_7402__desc = 
# 30021 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30021 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48512_SACp_emal_44987__pinl_23970__icc_7402__sz = 0;
    int _tcp_48512_SACp_emal_44987__pinl_23970__icc_7402__dim = 0;




    
# 30028 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30028 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48444__emal_44992__hce_41__SSA0_1;
   
   




    
# 30035 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30035 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48442__emal_44994__hce_42__SSA0_1;
   
   




    
# 30042 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30042 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48441__emal_44993__hce_42;
   
   

    const int SACp_emal_44991__isaa_34655_a = 1;
    const int SACp_emal_44990__pinl_24009__flat_1140 = 0;



    int SACp_emal_44988__dup_29760__wlsw_29754;
   
   




    int * SACp_emal_44987__pinl_23970__icc_7402;
    SAC_array_descriptor_t SACp_emal_44987__pinl_23970__icc_7402__desc = 
# 30059 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30059 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44987__pinl_23970__icc_7402__shp0 = 2;
    const int SACp_emal_44987__pinl_23970__icc_7402__shp1 = 3;
    const int SACp_emal_44987__pinl_23970__icc_7402__sz = 6;
    const int SACp_emal_44987__pinl_23970__icc_7402__dim = 2;




    int SACp_emal_44986__isaa_34658__pinl_14317__rtpf_10_res;
   
   




    int * SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res;
    SAC_array_descriptor_t SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc = 
# 30076 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30076 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__shp0;
    int SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__sz;
    const int SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim = 1;




    
# 30084 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30084 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44983__pinl_14326__flat_164;
   
   




    int * SACp_emal_44982__pinl_14330__flat_168;
    SAC_array_descriptor_t SACp_emal_44982__pinl_14330__flat_168__desc = 
# 30092 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30092 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44982__pinl_14330__flat_168__shp0 = 2;
    const int SACp_emal_44982__pinl_14330__flat_168__sz = 2;
    const int SACp_emal_44982__pinl_14330__flat_168__dim = 1;




    int SACp_emal_44981__uprf_29771;
   
   




    int SACp_emal_44980__uprf_29776;
   
   




    
# 30114 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30114 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44978__uprf_29764;
   
   




    
# 30121 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30121 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44976__uprf_29767;
   
   




    
# 30128 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30128 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_44975__pinl_14324__icc_4920;
    SAC_array_descriptor_t SACp_emal_44975__pinl_14324__icc_4920__desc = 
# 30129 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30129 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_44975__pinl_14324__icc_4920__shp0 = 2;
    const int SACp_emal_44975__pinl_14324__icc_4920__sz = 2;
    const int SACp_emal_44975__pinl_14324__icc_4920__dim = 1;




    
# 30137 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30137 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_44974__pinl_14328__flat_166;
   
   




    int SACp_wlidx_42372__pinl_23970__icc_7402;
   
   




    int * SACp_wlsb_29755;
    SAC_array_descriptor_t SACp_wlsb_29755__desc = 
# 30152 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30152 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_wlsb_29755__shp0 = 2;
    const int SACp_wlsb_29755__sz = 2;
    const int SACp_wlsb_29755__dim = 1;




    int SACp_wlsw_29751;
   
   




    int SACp_eat_29747;
   
   




    
# 30174 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30174 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_14336__hce_41;
   
   




    
# 30181 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30181 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_14335__hce_42;
   
   




    int * SACp_pinl_14317__rtpf_10_res;
    SAC_array_descriptor_t SACp_pinl_14317__rtpf_10_res__desc = 
# 30189 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30189 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_14317__rtpf_10_res__sz = 0;
    int SACp_pinl_14317__rtpf_10_res__dim = 0;





    const int SACl_b__shp0 = 2;
    const int SACl_b__shp1 = 3;
    const int SACl_b__sz = 6;
    const int SACl_b__dim = 2;




    const int SACl_a__shp0 = 3;
    const int SACl_a__sz = 3;
    const int SACl_a__dim = 1;

   
    { { if (!((2 == SACp_emal_44987__pinl_23970__icc_7402__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44987__pinl_23970__icc_7402"); }; { { if ((((SACp_emal_44987__pinl_23970__icc_7402__sz * sizeof (*SACp_emal_44987__pinl_23970__icc_7402)) + ((6 + (SACp_emal_44987__pinl_23970__icc_7402__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44987__pinl_23970__icc_7402__sz * sizeof (*SACp_emal_44987__pinl_23970__icc_7402)) + ((6 + (SACp_emal_44987__pinl_23970__icc_7402__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44987__pinl_23970__icc_7402__sz * sizeof (*SACp_emal_44987__pinl_23970__icc_7402)) + ((6 + (SACp_emal_44987__pinl_23970__icc_7402__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44987__pinl_23970__icc_7402 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44987__pinl_23970__icc_7402 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44987__pinl_23970__icc_7402__sz * sizeof (*SACp_emal_44987__pinl_23970__icc_7402)) + ((6 + (SACp_emal_44987__pinl_23970__icc_7402__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44987__pinl_23970__icc_7402 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44987__pinl_23970__icc_7402 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44987__pinl_23970__icc_7402__sz * sizeof (*SACp_emal_44987__pinl_23970__icc_7402)) + ((6 + (SACp_emal_44987__pinl_23970__icc_7402__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44987__pinl_23970__icc_7402__sz * sizeof (*SACp_emal_44987__pinl_23970__icc_7402)) + ((6 + (SACp_emal_44987__pinl_23970__icc_7402__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44987__pinl_23970__icc_7402__sz * sizeof (*SACp_emal_44987__pinl_23970__icc_7402)) + ((6 + (SACp_emal_44987__pinl_23970__icc_7402__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44987__pinl_23970__icc_7402__sz * sizeof (*SACp_emal_44987__pinl_23970__icc_7402)) + ((6 + (SACp_emal_44987__pinl_23970__icc_7402__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44987__pinl_23970__icc_7402__sz * sizeof (*SACp_emal_44987__pinl_23970__icc_7402)) + ((6 + (SACp_emal_44987__pinl_23970__icc_7402__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44987__pinl_23970__icc_7402 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44987__pinl_23970__icc_7402 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44987__pinl_23970__icc_7402 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44987__pinl_23970__icc_7402 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44987__pinl_23970__icc_7402__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44987__pinl_23970__icc_7402, SACp_emal_44987__pinl_23970__icc_7402__sz * sizeof (*SACp_emal_44987__pinl_23970__icc_7402), ((6 + (SACp_emal_44987__pinl_23970__icc_7402__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44987__pinl_23970__icc_7402__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44987__pinl_23970__icc_7402__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44987__pinl_23970__icc_7402__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44987__pinl_23970__icc_7402__dim == (2)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44987__pinl_23970__icc_7402__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44987__pinl_23970__icc_7402__shp1 == 3))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;
      int SAC_schedule_start1;
      int SAC_schedule_stop1;




      int SAC_SACp_emal_44987__pinl_23970__icc_7402_shpfac0;
      int SAC_SACp_emal_44987__pinl_23970__icc_7402_shpfac1;




      {
        int SAC_i;
        SAC_SACp_emal_44987__pinl_23970__icc_7402_shpfac0 = 1 * SACp_emal_44987__pinl_23970__icc_7402__shp1;
        SAC_SACp_emal_44987__pinl_23970__icc_7402_shpfac1 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = 2;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = 3;




      SACp_wlidx_42372__pinl_23970__icc_7402
        = SAC_schedule_start0 * SAC_SACp_emal_44987__pinl_23970__icc_7402_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_44987__pinl_23970__icc_7402_shpfac1;

      { int SAC_stop_SACp_eat_29747 = 2; for (SACp_eat_29747 = 0; SACp_eat_29747 < 2;) {
     



      SACp_wlidx_42372__pinl_23970__icc_7402
        = ( SACp_emal_44987__pinl_23970__icc_7402__shp1 * SACp_eat_29747
         + SAC_schedule_start1 ) * SAC_SACp_emal_44987__pinl_23970__icc_7402_shpfac1;

      { int SAC_stop_SACp_wlsw_29751 = 3; for (SACp_wlsw_29751 = 0; SACp_wlsw_29751 < 3;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_44988__dup_29760__wlsw_29754 = ( SACl_a[SACp_wlsw_29751]); }




      if (!((0 == (SACp_emal_44987__pinl_23970__icc_7402__dim - SACp_wlsb_29755__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_44987__pinl_23970__icc_7402_shpfac1))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_44987__pinl_23970__icc_7402[SACp_wlidx_42372__pinl_23970__icc_7402] = SACp_emal_44988__dup_29760__wlsw_29754; };

      { ; ; }
      SACp_wlidx_42372__pinl_23970__icc_7402 = SACp_wlidx_42372__pinl_23970__icc_7402 + 1;
      SACp_wlsw_29751 = SACp_wlsw_29751 + 1;
      } }
      SACp_eat_29747 = SACp_eat_29747 + 1;
      } }
# 30331 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_48578_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACl_a__sz * sizeof (*SACl_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_a, ((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)); } else { if (SACl_a__sz * sizeof (*SACl_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_a, ((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_a, ((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)); } } else { if (((((SACl_a__sz * sizeof (*SACl_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_a, ((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)); } else { if (((((SACl_a__sz * sizeof (*SACl_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_a, ((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }



    _tcp_48513_SACl_b__desc = SACl_b__desc;
    _tcp_48513_SACl_b__sz = SACl_b__sz;
    _tcp_48513_SACl_b__dim = SACl_b__dim;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48513_SACl_b__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48513_SACl_b__desc) & (-1 ^ (3))))[(6 + (1))]) = SACl_b__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48513_SACl_b__desc) & (-1 ^ (3))))[4]) = SACl_b__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48513_SACl_b__desc) & (-1 ^ (3))))[3]) = SACl_b__dim;
    { _tcp_48513_SACl_b = SACl_b; }




    _tcp_48512_SACp_emal_44987__pinl_23970__icc_7402__desc = SACp_emal_44987__pinl_23970__icc_7402__desc;
    _tcp_48512_SACp_emal_44987__pinl_23970__icc_7402__sz = SACp_emal_44987__pinl_23970__icc_7402__sz;
    _tcp_48512_SACp_emal_44987__pinl_23970__icc_7402__dim = SACp_emal_44987__pinl_23970__icc_7402__dim;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48512_SACp_emal_44987__pinl_23970__icc_7402__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_44987__pinl_23970__icc_7402__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48512_SACp_emal_44987__pinl_23970__icc_7402__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_44987__pinl_23970__icc_7402__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48512_SACp_emal_44987__pinl_23970__icc_7402__desc) & (-1 ^ (3))))[4]) = SACp_emal_44987__pinl_23970__icc_7402__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48512_SACp_emal_44987__pinl_23970__icc_7402__desc) & (-1 ^ (3))))[3]) = SACp_emal_44987__pinl_23970__icc_7402__dim;
    { _tcp_48512_SACp_emal_44987__pinl_23970__icc_7402 = SACp_emal_44987__pinl_23970__icc_7402; }




    SACf__MAIN___rtpf_8_impl__i_P__i_P (&SACp_pinl_14317__rtpf_10_res, &SACp_pinl_14317__rtpf_10_res__desc, _tcp_48512_SACp_emal_44987__pinl_23970__icc_7402, _tcp_48512_SACp_emal_44987__pinl_23970__icc_7402__desc, _tcp_48513_SACl_b, _tcp_48513_SACl_b__desc);




    SACp_pinl_14317__rtpf_10_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_14317__rtpf_10_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_44986__isaa_34658__pinl_14317__rtpf_10_res = SACp_pinl_14317__rtpf_10_res__dim; }; }
    { { if (!((1 == SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res"); }; { if ((((6 + (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_14317__rtpf_10_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__sz = SAC_size;
      if (!((SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 30398 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 30398 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30398 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 30398 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30398 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 30398 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 30398 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 30398, __extension__ __PRETTY_FUNCTION__); }))
# 30398 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__sz * sizeof (*SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res)); break; case SAC_HM_multi_threaded: SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__sz * sizeof (*SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res), 0); break; case SAC_HM_any_threaded: SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__sz * sizeof (*SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_14317__rtpf_10_res__dim; SAC_i++) {
      { SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; ; { SACp_emal_44986__isaa_34658__pinl_14317__rtpf_10_res = (2) - (SACp_emal_44986__isaa_34658__pinl_14317__rtpf_10_res); };
    ; ; { SACp_emal_44983__pinl_14326__flat_164 = (SACp_emal_44986__isaa_34658__pinl_14317__rtpf_10_res) == (0); };
    { ; ; }
    if (SACp_emal_44983__pinl_14326__flat_164)
    {
      { ; ; }
      { { SACp_pinl_48441__emal_44993__hce_42 = 
# 30413 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 30413 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14335__hce_42 = SACp_pinl_48441__emal_44993__hce_42; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `d' in a"); SACp_pinl_48442__emal_44994__hce_42__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14335__hce_42 = SACp_pinl_48442__emal_44994__hce_42__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_44982__pinl_14330__flat_168__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44982__pinl_14330__flat_168"); }; { { if ((((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168)) + ((6 + (SACp_emal_44982__pinl_14330__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168)) + ((6 + (SACp_emal_44982__pinl_14330__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168)) + ((6 + (SACp_emal_44982__pinl_14330__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44982__pinl_14330__flat_168 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44982__pinl_14330__flat_168 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168)) + ((6 + (SACp_emal_44982__pinl_14330__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44982__pinl_14330__flat_168 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44982__pinl_14330__flat_168 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168)) + ((6 + (SACp_emal_44982__pinl_14330__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168)) + ((6 + (SACp_emal_44982__pinl_14330__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168)) + ((6 + (SACp_emal_44982__pinl_14330__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168)) + ((6 + (SACp_emal_44982__pinl_14330__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168)) + ((6 + (SACp_emal_44982__pinl_14330__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44982__pinl_14330__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44982__pinl_14330__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44982__pinl_14330__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44982__pinl_14330__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44982__pinl_14330__flat_168__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168, SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168), ((6 + (SACp_emal_44982__pinl_14330__flat_168__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44982__pinl_14330__flat_168__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44982__pinl_14330__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44982__pinl_14330__flat_168__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44982__pinl_14330__flat_168__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44982__pinl_14330__flat_168__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 30453 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 30453 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_44982__pinl_14330__flat_168[SAC_i] = ( SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44985__isaa_34659__pinl_14317__rtpf_10_res__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44981__uprf_29771 = ( SACp_emal_44982__pinl_14330__flat_168[SACp_emal_44990__pinl_24009__flat_1140]); }

    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_44980__uprf_29776 = ( SACp_emal_44982__pinl_14330__flat_168[SACp_emal_44991__isaa_34655_a]); }

    { { { if (((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168, ((((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168) - 1)->data1.arena)); } else { if (SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168, ((((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168, ((((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168) - 1)->data1.arena)); } } else { if (((((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168, ((((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168) - 1)->data1.arena)); } else { if (((((SACp_emal_44982__pinl_14330__flat_168__sz * sizeof (*SACp_emal_44982__pinl_14330__flat_168))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168, ((((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44982__pinl_14330__flat_168); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44982__pinl_14330__flat_168__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    ; ; { SACp_emal_44981__uprf_29771 = (-2) + (SACp_emal_44981__uprf_29771); };
    ; ; { SACp_emal_44978__uprf_29764 = (SACp_emal_44981__uprf_29771) == (0); };
    { ; ; }
    ; ; { SACp_emal_44980__uprf_29776 = (-3) + (SACp_emal_44980__uprf_29776); };
    ; ; { SACp_emal_44976__uprf_29767 = (SACp_emal_44980__uprf_29776) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_44975__pinl_14324__icc_4920__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_44975__pinl_14324__icc_4920"); }; { { if ((((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920)) + ((6 + (SACp_emal_44975__pinl_14324__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920)) + ((6 + (SACp_emal_44975__pinl_14324__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920)) + ((6 + (SACp_emal_44975__pinl_14324__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44975__pinl_14324__icc_4920 = (
# 30509 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30509 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_44975__pinl_14324__icc_4920 = (
# 30509 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30509 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920)) + ((6 + (SACp_emal_44975__pinl_14324__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_44975__pinl_14324__icc_4920 = (
# 30509 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30509 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_44975__pinl_14324__icc_4920 = (
# 30509 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30509 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920)) + ((6 + (SACp_emal_44975__pinl_14324__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920)) + ((6 + (SACp_emal_44975__pinl_14324__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920)) + ((6 + (SACp_emal_44975__pinl_14324__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920)) + ((6 + (SACp_emal_44975__pinl_14324__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920)) + ((6 + (SACp_emal_44975__pinl_14324__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_44975__pinl_14324__icc_4920 = (
# 30509 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30509 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_44975__pinl_14324__icc_4920 = (
# 30509 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30509 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_44975__pinl_14324__icc_4920 = (
# 30509 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30509 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_44975__pinl_14324__icc_4920 = (
# 30509 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30509 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_44975__pinl_14324__icc_4920__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920, SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920), ((6 + (SACp_emal_44975__pinl_14324__icc_4920__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44975__pinl_14324__icc_4920__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44975__pinl_14324__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44975__pinl_14324__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_44975__pinl_14324__icc_4920__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_44975__pinl_14324__icc_4920__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_44975__pinl_14324__icc_4920[0] = SACp_emal_44978__uprf_29764; }
    { SACp_emal_44975__pinl_14324__icc_4920[1] = SACp_emal_44976__uprf_29767; }

    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_44975__pinl_14324__icc_4920__sz; SAC_i++) { if (( SACp_emal_44975__pinl_14324__icc_4920[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_44974__pinl_14328__flat_166 = SAC_all; }
    { { { if (((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920, ((((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920) - 1)->data1.arena)); } else { if (SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920, ((((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920, ((((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920) - 1)->data1.arena)); } } else { if (((((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920, ((((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920) - 1)->data1.arena)); } else { if (((((SACp_emal_44975__pinl_14324__icc_4920__sz * sizeof (*SACp_emal_44975__pinl_14324__icc_4920))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920, ((((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_44975__pinl_14324__icc_4920); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44975__pinl_14324__icc_4920__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_44974__pinl_14328__flat_166)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14336__hce_41 = SACp_pinl_14335__hce_42; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `shp' in a"); SACp_pinl_48444__emal_44992__hce_41__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14336__hce_41 = SACp_pinl_48444__emal_44992__hce_41__SSA0_1; }

    }
    if (!SACp_pinl_14336__hce_41) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failed"); }
    ;



    { *SAC_arg_1__p = SACp_pinl_14317__rtpf_10_res; *SAC_arg_1__desc__p = SACp_pinl_14317__rtpf_10_res__desc; }
    return;
   
  }



}
}
# 30579 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc, int SACl_data) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    
# 30588 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30588 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45013__pinl_14682__icc_7809_pred;
   
   




    
# 30595 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30595 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45012__pinl_14689__icc_7814_pred;
   
   




    int * SACp_emal_45011__pinl_14679__flat_456;
    SAC_array_descriptor_t SACp_emal_45011__pinl_14679__flat_456__desc = 
# 30603 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30603 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45011__pinl_14679__flat_456__shp0;
    int SACp_emal_45011__pinl_14679__flat_456__sz;
    const int SACp_emal_45011__pinl_14679__flat_456__dim = 1;




    
# 30611 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30611 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45010__pinl_14694__icc_7808_pred;
   
   




    
# 30618 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30618 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45009__pinl_14696__icc_7810_pred;
   
   




    
# 30625 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30625 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45008__pinl_14699__icc_7811_pred;
   
   




    
# 30632 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30632 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45007__icc_7539_pred;
   
   




    
# 30639 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30639 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45006__icc_7544_pred;
   
   




    int * SACp_emal_45005__flat_384;
    SAC_array_descriptor_t SACp_emal_45005__flat_384__desc = 
# 30647 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30647 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45005__flat_384__shp0;
    int SACp_emal_45005__flat_384__sz;
    const int SACp_emal_45005__flat_384__dim = 1;




    
# 30655 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30655 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45004__icc_7538_pred;
   
   




    
# 30662 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30662 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45003__icc_7540_pred;
   
   




    
# 30669 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30669 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45002__icc_7541_pred;
   
   




    int * SACp_emal_44996__pinl_14755__icc_7820;
    SAC_array_descriptor_t SACp_emal_44996__pinl_14755__icc_7820__desc = 
# 30677 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30677 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_44996__pinl_14755__icc_7820__sz = 0;
    int SACp_emal_44996__pinl_14755__icc_7820__dim = 0;




    int SACp_wlidx_42374__pinl_14755__icc_7820;
   
   




    int * SACp_pinl_14758_iv;
    SAC_array_descriptor_t SACp_pinl_14758_iv__desc = 
# 30692 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30692 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_14758_iv__shp0;
    int SACp_pinl_14758_iv__sz;
    const int SACp_pinl_14758_iv__dim = 1;





   




    int SACl_shp__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_shp__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[4]);
    const int SACl_shp__dim = 1;

   
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45013__pinl_14682__icc_7809_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45013__pinl_14682__icc_7809_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45012__pinl_14689__icc_7814_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45012__pinl_14689__icc_7814_pred = SAC_all; }
    { { if (!((1 == SACp_emal_45011__pinl_14679__flat_456__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45011__pinl_14679__flat_456"); }; { if ((((6 + (SACp_emal_45011__pinl_14679__flat_456__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45011__pinl_14679__flat_456__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45011__pinl_14679__flat_456__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45011__pinl_14679__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45011__pinl_14679__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45011__pinl_14679__flat_456__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45011__pinl_14679__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45011__pinl_14679__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45011__pinl_14679__flat_456__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45011__pinl_14679__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45011__pinl_14679__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45011__pinl_14679__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45011__pinl_14679__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45011__pinl_14679__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45011__pinl_14679__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45011__pinl_14679__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45011__pinl_14679__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45011__pinl_14679__flat_456__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45011__pinl_14679__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45011__pinl_14679__flat_456__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45011__pinl_14679__flat_456__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45011__pinl_14679__flat_456__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45011__pinl_14679__flat_456__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_shp__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45011__pinl_14679__flat_456__desc) & (-1 ^ (3))))[4]) = SACp_emal_45011__pinl_14679__flat_456__sz = SAC_size * SACl_shp__sz;
      if (!((SACp_emal_45011__pinl_14679__flat_456__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 30727 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 30727 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30727 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 30727 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30727 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 30727 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 30727 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 30727, __extension__ __PRETTY_FUNCTION__); }))
# 30727 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45011__pinl_14679__flat_456 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45011__pinl_14679__flat_456__sz * sizeof (*SACp_emal_45011__pinl_14679__flat_456)); break; case SAC_HM_multi_threaded: SACp_emal_45011__pinl_14679__flat_456 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45011__pinl_14679__flat_456__sz * sizeof (*SACp_emal_45011__pinl_14679__flat_456), 0); break; case SAC_HM_any_threaded: SACp_emal_45011__pinl_14679__flat_456 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45011__pinl_14679__flat_456__sz * sizeof (*SACp_emal_45011__pinl_14679__flat_456), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45011__pinl_14679__flat_456__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45011__pinl_14679__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45011__pinl_14679__flat_456__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45011__pinl_14679__flat_456__sz; SAC_i++) { { SACp_emal_45011__pinl_14679__flat_456[SAC_i] = (0) * (( SACl_shp[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45011__pinl_14679__flat_456__sz; SAC_i++) { if (( SACp_emal_45011__pinl_14679__flat_456[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACp_emal_45011__pinl_14679__flat_456"); } { SACp_emal_45010__pinl_14694__icc_7808_pred = ( SACp_emal_45011__pinl_14679__flat_456[SAC_i]); }; } SACp_emal_45010__pinl_14694__icc_7808_pred = SAC_all; }
        if (SACp_emal_45011__pinl_14679__flat_456__dim != SACl_shp__dim) {
      SACp_emal_45009__pinl_14696__icc_7810_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_emal_45011__pinl_14679__flat_456""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_45011__pinl_14679__flat_456__desc), SAC_PrintShape (SACl_shp__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_45011__pinl_14679__flat_456__shp0 != SACl_shp__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_emal_45011__pinl_14679__flat_456""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_45011__pinl_14679__flat_456__desc), SAC_PrintShape (SACl_shp__desc));
      }
      SACp_emal_45009__pinl_14696__icc_7810_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45011__pinl_14679__flat_456__sz && SAC_i < SACl_shp__sz; SAC_i++) { if (( SACp_emal_45011__pinl_14679__flat_456[SAC_i]) > ( SACl_shp[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Vector constraint `" "SACp_emal_45011__pinl_14679__flat_456" " < " "SACl_shp" "' violated"); } } SACp_emal_45008__pinl_14699__icc_7811_pred = SAC_all; }
    if (!SACp_emal_45012__pinl_14689__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45008__pinl_14699__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45009__pinl_14696__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45013__pinl_14682__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45010__pinl_14694__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45007__icc_7539_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45007__icc_7539_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45006__icc_7544_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45006__icc_7544_pred = SAC_all; }
    { { if (!((1 == SACp_emal_45005__flat_384__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45005__flat_384"); }; { if ((((6 + (SACp_emal_45005__flat_384__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45005__flat_384__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45005__flat_384__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45005__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45005__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45005__flat_384__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45005__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45005__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45005__flat_384__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45005__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45005__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45005__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45005__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45005__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45005__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45005__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45005__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45005__flat_384__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45005__flat_384__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45005__flat_384__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45005__flat_384__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45005__flat_384__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45005__flat_384__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_shp__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45005__flat_384__desc) & (-1 ^ (3))))[4]) = SACp_emal_45005__flat_384__sz = SAC_size * SACl_shp__sz;
      if (!((SACp_emal_45005__flat_384__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 30766 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 30766 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30766 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 30766 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30766 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 30766 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 30766 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 30766, __extension__ __PRETTY_FUNCTION__); }))
# 30766 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45005__flat_384 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45005__flat_384__sz * sizeof (*SACp_emal_45005__flat_384)); break; case SAC_HM_multi_threaded: SACp_emal_45005__flat_384 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45005__flat_384__sz * sizeof (*SACp_emal_45005__flat_384), 0); break; case SAC_HM_any_threaded: SACp_emal_45005__flat_384 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45005__flat_384__sz * sizeof (*SACp_emal_45005__flat_384), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45005__flat_384__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45005__flat_384__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45005__flat_384__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45005__flat_384__sz; SAC_i++) { { SACp_emal_45005__flat_384[SAC_i] = (( SACl_shp[SAC_i])) * (0); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45005__flat_384__sz; SAC_i++) { if (( SACp_emal_45005__flat_384[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_45005__flat_384"); } { SACp_emal_45004__icc_7538_pred = ( SACp_emal_45005__flat_384[SAC_i]); }; } SACp_emal_45004__icc_7538_pred = SAC_all; }
        if (SACp_emal_45005__flat_384__dim != SACl_shp__dim) {
      SACp_emal_45003__icc_7540_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Arrays `" "SACp_emal_45005__flat_384""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_45005__flat_384__desc), SAC_PrintShape (SACl_shp__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_45005__flat_384__shp0 != SACl_shp__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Arrays `" "SACp_emal_45005__flat_384""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_45005__flat_384__desc), SAC_PrintShape (SACl_shp__desc));
      }
      SACp_emal_45003__icc_7540_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45005__flat_384__sz && SAC_i < SACl_shp__sz; SAC_i++) { if (( SACp_emal_45005__flat_384[SAC_i]) > ( SACl_shp[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Vector constraint `" "SACp_emal_45005__flat_384" " < " "SACl_shp" "' violated"); } } SACp_emal_45002__icc_7541_pred = SAC_all; }
    { { free (SACp_emal_45005__flat_384); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45005__flat_384__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_45006__icc_7544_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45002__icc_7541_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45003__icc_7540_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45007__icc_7539_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45004__icc_7538_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45006__icc_7544_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45002__icc_7541_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45003__icc_7540_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45007__icc_7539_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45004__icc_7538_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { if (!(((SACl_shp__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_44996__pinl_14755__icc_7820"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 30800 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 30800 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30800 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 30800 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30800 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 30800 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 30800 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 30800, __extension__ __PRETTY_FUNCTION__); }))
# 30800 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44996__pinl_14755__icc_7820__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_44996__pinl_14755__icc_7820__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_44996__pinl_14755__icc_7820__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[3]) = SACp_emal_44996__pinl_14755__icc_7820__dim = (SACl_shp__sz) + (0); }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_44996__pinl_14755__icc_7820__dim == SACl_shp__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACl_shp[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[4]) = SACp_emal_44996__pinl_14755__icc_7820__sz = SAC_size;
      if (!((SACp_emal_44996__pinl_14755__icc_7820__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 30820 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 30820 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30820 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 30820 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30820 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 30820 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 30820 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 30820, __extension__ __PRETTY_FUNCTION__); }))
# 30820 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_44996__pinl_14755__icc_7820 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_44996__pinl_14755__icc_7820__sz * sizeof (*SACp_emal_44996__pinl_14755__icc_7820)); break; case SAC_HM_multi_threaded: SACp_emal_44996__pinl_14755__icc_7820 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_44996__pinl_14755__icc_7820__sz * sizeof (*SACp_emal_44996__pinl_14755__icc_7820), 0); break; case SAC_HM_any_threaded: SACp_emal_44996__pinl_14755__icc_7820 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_44996__pinl_14755__icc_7820__sz * sizeof (*SACp_emal_44996__pinl_14755__icc_7820), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_14758_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_14758_iv"); }; { if ((((6 + (SACp_pinl_14758_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_14758_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_14758_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_14758_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_14758_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_14758_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_14758_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_14758_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_14758_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_14758_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_14758_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_14758_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_14758_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_14758_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_14758_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_14758_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_14758_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14758_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14758_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14758_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_14758_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_14758_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14758_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45011__pinl_14679__flat_456__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14758_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_14758_iv__sz = SAC_size * SACp_emal_45011__pinl_14679__flat_456__sz;
      if (!((SACp_pinl_14758_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 30835 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 30835 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30835 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 30835 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 30835 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 30835 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 30835 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 30835, __extension__ __PRETTY_FUNCTION__); }))
# 30835 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_14758_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_14758_iv__sz * sizeof (*SACp_pinl_14758_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_14758_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_14758_iv__sz * sizeof (*SACp_pinl_14758_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_14758_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_14758_iv__sz * sizeof (*SACp_pinl_14758_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14758_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14758_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14758_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_14758_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_14758_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_44996__pinl_14755__icc_7820__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_44996__pinl_14755__icc_7820_shpfac0; SAC_d = SACp_emal_44996__pinl_14755__icc_7820__dim - 1; SACp_wlidx_42374__pinl_14755__icc_7820 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_44996__pinl_14755__icc_7820_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_45011__pinl_14679__flat_456[SAC_d]) <= ( SACp_pinl_14758_iv[SAC_d])) && (( SACp_pinl_14758_iv[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_44996__pinl_14755__icc_7820__dim - SACp_pinl_14758_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44996__pinl_14755__icc_7820_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
    { SACp_emal_44996__pinl_14755__icc_7820[SACp_wlidx_42374__pinl_14755__icc_7820] = SACl_data; };

    } else {



    if (!((0 == (SACp_emal_44996__pinl_14755__icc_7820__dim - SACp_pinl_14758_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_44996__pinl_14755__icc_7820_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal size found!"); };
    { SACp_emal_44996__pinl_14755__icc_7820[SACp_wlidx_42374__pinl_14755__icc_7820] = SACl_data; };

    }
    SACp_wlidx_42374__pinl_14755__icc_7820 = SACp_wlidx_42374__pinl_14755__icc_7820 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_14758_iv[SAC_d] = ( SACp_pinl_14758_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_14758_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_14758_iv[SAC_d] = 0; SAC_d--; SACp_pinl_14758_iv[SAC_d] = ( SACp_pinl_14758_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_14758_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_44996__pinl_14755__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_shp); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))); } } } } else { } }
    { { free (SACp_emal_45011__pinl_14679__flat_456); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45011__pinl_14679__flat_456__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_pinl_14758_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14758_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    ;
    if (!SACp_emal_45012__pinl_14689__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45008__pinl_14699__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45009__pinl_14696__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45013__pinl_14682__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45010__pinl_14694__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_44996__pinl_14755__icc_7820; *SAC_arg_1__desc__p = SACp_emal_44996__pinl_14755__icc_7820__desc; }
    return;
   
  }



}
}
# 30906 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_18_impl_carretplus__i__i_2_3 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_a, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48511_SACp_emal_45044__isaa_34743_b;
    SAC_array_descriptor_t _tcp_48511_SACp_emal_45044__isaa_34743_b__desc = 
# 30916 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30916 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48511_SACp_emal_45044__isaa_34743_b__shp0;
    int _tcp_48511_SACp_emal_45044__isaa_34743_b__sz;
    const int _tcp_48511_SACp_emal_45044__isaa_34743_b__dim = 1;




    
# 30924 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30924 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48464__emal_45049__hce_41__SSA0_1;
   
   




    
# 30931 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30931 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48462__emal_45051__hce_42__SSA0_1;
   
   




    
# 30938 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30938 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48461__emal_45050__hce_42;
   
   




    
# 30945 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30945 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48458__emal_45052__hce_39__SSA0_1;
   
   




    
# 30952 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30952 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48456__emal_45054__hce_40__SSA0_1;
   
   




    
# 30959 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30959 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48455__emal_45053__hce_40;
   
   




    
# 30966 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30966 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48452__emal_45045__hce_46__SSA0_1;
   
   




    
# 30973 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30973 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48450__emal_45046__hce_47__SSA0_1;
   
   




    
# 30980 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30980 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48448__emal_45048__hce_49__SSA0_1;
   
   




    
# 30987 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 30987 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48447__emal_45047__hce_49;
   
   




    int * SACp_emal_45044__isaa_34743_b;
    SAC_array_descriptor_t SACp_emal_45044__isaa_34743_b__desc = 
# 30995 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 30995 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45044__isaa_34743_b__shp0 = 2;
    const int SACp_emal_45044__isaa_34743_b__sz = 2;
    const int SACp_emal_45044__isaa_34743_b__dim = 1;

    const int SACp_emal_45043__isaa_34745_a = 0;



    int SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res;
   
   




    int * SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res;
    SAC_array_descriptor_t SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc = 
# 31012 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31012 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__shp0;
    int SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__sz;
    const int SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim = 1;




    int SACp_emal_45040__esd_25444;
   
   




    
# 31027 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31027 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45039__pinl_24783__flat_356;
   
   




    int * SACp_emal_45038__pinl_24792__flat_365;
    SAC_array_descriptor_t SACp_emal_45038__pinl_24792__flat_365__desc = 
# 31035 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31035 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45038__pinl_24792__flat_365__shp0 = 2;
    const int SACp_emal_45038__pinl_24792__flat_365__sz = 2;
    const int SACp_emal_45038__pinl_24792__flat_365__dim = 1;




    int SACp_emal_45037__uprf_29798;
   
   

    const int SACp_emal_45036__ivesplit_34813 = 1;



    int SACp_emal_45035__uprf_29803;
   
   




    
# 31058 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31058 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45033__uprf_29791;
   
   




    
# 31065 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31065 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45031__uprf_29794;
   
   




    
# 31072 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31072 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_45030__pinl_24778__icc_5082;
    SAC_array_descriptor_t SACp_emal_45030__pinl_24778__icc_5082__desc = 
# 31073 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31073 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45030__pinl_24778__icc_5082__shp0 = 2;
    const int SACp_emal_45030__pinl_24778__icc_5082__sz = 2;
    const int SACp_emal_45030__pinl_24778__icc_5082__dim = 1;




    
# 31081 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31081 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45029__pinl_24790__flat_363;
   
   




    int * SACp_emal_45028__pinl_24741__flat_161;
    SAC_array_descriptor_t SACp_emal_45028__pinl_24741__flat_161__desc = 
# 31089 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31089 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45028__pinl_24741__flat_161__shp0;
    int SACp_emal_45028__pinl_24741__flat_161__sz;
    const int SACp_emal_45028__pinl_24741__flat_161__dim = 1;




    
# 31097 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31097 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45027__pinl_24747__icc_4911_pred;
   
   




    int * SACp_emal_45026__esd_36170;
    SAC_array_descriptor_t SACp_emal_45026__esd_36170__desc = 
# 31105 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31105 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45026__esd_36170__shp0;
    int SACp_emal_45026__esd_36170__sz;
    const int SACp_emal_45026__esd_36170__dim = 1;




    
# 31113 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31113 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_45025__pinl_24735__icc_4914;
    SAC_array_descriptor_t SACp_emal_45025__pinl_24735__icc_4914__desc = 
# 31114 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31114 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45025__pinl_24735__icc_4914__shp0;
    int SACp_emal_45025__pinl_24735__icc_4914__sz;
    const int SACp_emal_45025__pinl_24735__icc_4914__dim = 1;




    
# 31122 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31122 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45024__pinl_24739__flat_159;
   
   




    int SACp_emal_45023__isaa_34785__pinl_24712__rtpf_10_res;
   
   




    int * SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res;
    SAC_array_descriptor_t SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc = 
# 31137 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31137 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__shp0;
    int SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__sz;
    const int SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim = 1;




    
# 31145 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31145 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45020__pinl_24720__flat_164;
   
   




    int * SACp_emal_45019__pinl_24724__flat_168;
    SAC_array_descriptor_t SACp_emal_45019__pinl_24724__flat_168__desc = 
# 31153 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31153 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45019__pinl_24724__flat_168__shp0;
    int SACp_emal_45019__pinl_24724__flat_168__sz;
    const int SACp_emal_45019__pinl_24724__flat_168__dim = 1;




    
# 31161 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31161 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45018__pinl_24730__icc_4917_pred;
   
   




    int * SACp_emal_45017__esd_36166;
    SAC_array_descriptor_t SACp_emal_45017__esd_36166__desc = 
# 31169 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31169 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45017__esd_36166__shp0;
    int SACp_emal_45017__esd_36166__sz;
    const int SACp_emal_45017__esd_36166__dim = 1;




    
# 31177 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31177 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_45016__pinl_24718__icc_4920;
    SAC_array_descriptor_t SACp_emal_45016__pinl_24718__icc_4920__desc = 
# 31178 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31178 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45016__pinl_24718__icc_4920__shp0;
    int SACp_emal_45016__pinl_24718__icc_4920__sz;
    const int SACp_emal_45016__pinl_24718__icc_4920__dim = 1;




    
# 31186 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31186 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45015__pinl_24722__flat_166;
   
   




    
# 31193 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31193 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_24803__hce_46;
   
   




    
# 31200 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31200 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_24802__hce_47;
   
   




    
# 31207 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31207 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_24800__hce_49;
   
   




    int * SACp_pinl_24764__rtpf_27_res;
    SAC_array_descriptor_t SACp_pinl_24764__rtpf_27_res__desc = 
# 31215 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31215 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_24764__rtpf_27_res__sz = 0;
    int SACp_pinl_24764__rtpf_27_res__dim = 0;




    
# 31222 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31222 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_24746__hce_39;
   
   




    
# 31229 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31229 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_24745__hce_40;
   
   




    
# 31236 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31236 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_24729__hce_41;
   
   




    
# 31243 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31243 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_24728__hce_42;
   
   




    int * SACp_pinl_24714_b__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_24714_b__SSA0_1__desc = 
# 31251 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31251 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_24714_b__SSA0_1__sz = 0;
    int SACp_pinl_24714_b__SSA0_1__dim = 0;




    int * SACp_pinl_24712__rtpf_10_res;
    SAC_array_descriptor_t SACp_pinl_24712__rtpf_10_res__desc = 
# 31259 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31259 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_24712__rtpf_10_res__sz = 0;
    int SACp_pinl_24712__rtpf_10_res__dim = 0;





    const int SACl_b__shp0 = 2;
    const int SACl_b__shp1 = 3;
    const int SACl_b__sz = 6;
    const int SACl_b__dim = 2;




   

   
    { { if (!((1 == SACp_emal_45044__isaa_34743_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45044__isaa_34743_b"); }; { { if ((((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b)) + ((6 + (SACp_emal_45044__isaa_34743_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b)) + ((6 + (SACp_emal_45044__isaa_34743_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b)) + ((6 + (SACp_emal_45044__isaa_34743_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45044__isaa_34743_b = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45044__isaa_34743_b = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b)) + ((6 + (SACp_emal_45044__isaa_34743_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45044__isaa_34743_b = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45044__isaa_34743_b = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b)) + ((6 + (SACp_emal_45044__isaa_34743_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b)) + ((6 + (SACp_emal_45044__isaa_34743_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b)) + ((6 + (SACp_emal_45044__isaa_34743_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b)) + ((6 + (SACp_emal_45044__isaa_34743_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b)) + ((6 + (SACp_emal_45044__isaa_34743_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45044__isaa_34743_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45044__isaa_34743_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45044__isaa_34743_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45044__isaa_34743_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45044__isaa_34743_b__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b, SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b), ((6 + (SACp_emal_45044__isaa_34743_b__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45044__isaa_34743_b__desc) & (-1 ^ (3))))[0]) = 2; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45044__isaa_34743_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45044__isaa_34743_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45044__isaa_34743_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45044__isaa_34743_b__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45044__isaa_34743_b[0] = 2; }
    { SACp_emal_45044__isaa_34743_b[1] = 3; }




    if (!((_tcp_48511_SACp_emal_45044__isaa_34743_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    _tcp_48511_SACp_emal_45044__isaa_34743_b__desc = SACp_emal_45044__isaa_34743_b__desc;
    _tcp_48511_SACp_emal_45044__isaa_34743_b__shp0 = SACp_emal_45044__isaa_34743_b__shp0;
    _tcp_48511_SACp_emal_45044__isaa_34743_b__sz = SACp_emal_45044__isaa_34743_b__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48511_SACp_emal_45044__isaa_34743_b__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45044__isaa_34743_b__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48511_SACp_emal_45044__isaa_34743_b__desc) & (-1 ^ (3))))[4]) = SACp_emal_45044__isaa_34743_b__sz;
    { _tcp_48511_SACp_emal_45044__isaa_34743_b = SACp_emal_45044__isaa_34743_b; }




    SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i (&SACp_pinl_24764__rtpf_27_res, &SACp_pinl_24764__rtpf_27_res__desc, _tcp_48511_SACp_emal_45044__isaa_34743_b, _tcp_48511_SACp_emal_45044__isaa_34743_b__desc, SACl_a);




    SACp_pinl_24764__rtpf_27_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_24764__rtpf_27_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))[3]);

    { { SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res = SACp_pinl_24764__rtpf_27_res__dim; }; }
    { { if (!((1 == SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res"); }; { if ((((6 + (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_24764__rtpf_27_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__sz = SAC_size;
      if (!((SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 31331 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 31331 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31331 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 31331 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31331 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 31331 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 31331 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 31331, __extension__ __PRETTY_FUNCTION__); }))
# 31331 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__sz * sizeof (*SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res)); break; case SAC_HM_multi_threaded: SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__sz * sizeof (*SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res), 0); break; case SAC_HM_any_threaded: SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__sz * sizeof (*SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_24764__rtpf_27_res__dim; SAC_i++) {
      { SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; ; { SACp_emal_45040__esd_25444 = (2) - (SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res); };
    ; ; { SACp_emal_45039__pinl_24783__flat_356 = (SACp_emal_45040__esd_25444) == (0); };
    { ; ; }
    if (SACp_emal_45039__pinl_24783__flat_356)
    {
      { { SACp_pinl_48447__emal_45047__hce_49 = 
# 31345 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 31345 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24800__hce_49 = SACp_pinl_48447__emal_45047__hce_49; }

    }
    else
    {
      SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `v:vshp' in return value does not match feature `v' in data"); SACp_pinl_48448__emal_45048__hce_49__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24800__hce_49 = SACp_pinl_48448__emal_45048__hce_49__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_45038__pinl_24792__flat_365__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45038__pinl_24792__flat_365"); }; { { if ((((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365)) + ((6 + (SACp_emal_45038__pinl_24792__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365)) + ((6 + (SACp_emal_45038__pinl_24792__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365)) + ((6 + (SACp_emal_45038__pinl_24792__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45038__pinl_24792__flat_365 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45038__pinl_24792__flat_365 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365)) + ((6 + (SACp_emal_45038__pinl_24792__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45038__pinl_24792__flat_365 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45038__pinl_24792__flat_365 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365)) + ((6 + (SACp_emal_45038__pinl_24792__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365)) + ((6 + (SACp_emal_45038__pinl_24792__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365)) + ((6 + (SACp_emal_45038__pinl_24792__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365)) + ((6 + (SACp_emal_45038__pinl_24792__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365)) + ((6 + (SACp_emal_45038__pinl_24792__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45038__pinl_24792__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45038__pinl_24792__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45038__pinl_24792__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45038__pinl_24792__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45038__pinl_24792__flat_365__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365, SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365), ((6 + (SACp_emal_45038__pinl_24792__flat_365__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45038__pinl_24792__flat_365__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45038__pinl_24792__flat_365__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45038__pinl_24792__flat_365__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45038__pinl_24792__flat_365__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45038__pinl_24792__flat_365__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 31384 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 31384 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45038__pinl_24792__flat_365[SAC_i] = ( SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res[SAC_off + SAC_i]); };
      }
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45037__uprf_29798 = ( SACp_emal_45038__pinl_24792__flat_365[SACp_emal_45043__isaa_34745_a]); }

    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45035__uprf_29803 = ( SACp_emal_45038__pinl_24792__flat_365[SACp_emal_45036__ivesplit_34813]); }

    { { { if (((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365, ((((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365) - 1)->data1.arena)); } else { if (SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365, ((((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365, ((((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365) - 1)->data1.arena)); } } else { if (((((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365, ((((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365) - 1)->data1.arena)); } else { if (((((SACp_emal_45038__pinl_24792__flat_365__sz * sizeof (*SACp_emal_45038__pinl_24792__flat_365))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365, ((((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45038__pinl_24792__flat_365); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45038__pinl_24792__flat_365__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    ; ; { SACp_emal_45037__uprf_29798 = (-2) + (SACp_emal_45037__uprf_29798); };
    ; ; { SACp_emal_45033__uprf_29791 = (SACp_emal_45037__uprf_29798) == (0); };
    { ; ; }
    ; ; { SACp_emal_45035__uprf_29803 = (-3) + (SACp_emal_45035__uprf_29803); };
    ; ; { SACp_emal_45031__uprf_29794 = (SACp_emal_45035__uprf_29803) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_45030__pinl_24778__icc_5082__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45030__pinl_24778__icc_5082"); }; { { if ((((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082)) + ((6 + (SACp_emal_45030__pinl_24778__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082)) + ((6 + (SACp_emal_45030__pinl_24778__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082)) + ((6 + (SACp_emal_45030__pinl_24778__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45030__pinl_24778__icc_5082 = (
# 31439 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31439 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45030__pinl_24778__icc_5082 = (
# 31439 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31439 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082)) + ((6 + (SACp_emal_45030__pinl_24778__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45030__pinl_24778__icc_5082 = (
# 31439 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31439 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45030__pinl_24778__icc_5082 = (
# 31439 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31439 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082)) + ((6 + (SACp_emal_45030__pinl_24778__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082)) + ((6 + (SACp_emal_45030__pinl_24778__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082)) + ((6 + (SACp_emal_45030__pinl_24778__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082)) + ((6 + (SACp_emal_45030__pinl_24778__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082)) + ((6 + (SACp_emal_45030__pinl_24778__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45030__pinl_24778__icc_5082 = (
# 31439 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31439 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45030__pinl_24778__icc_5082 = (
# 31439 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31439 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45030__pinl_24778__icc_5082 = (
# 31439 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31439 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45030__pinl_24778__icc_5082 = (
# 31439 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31439 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45030__pinl_24778__icc_5082__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082, SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082), ((6 + (SACp_emal_45030__pinl_24778__icc_5082__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45030__pinl_24778__icc_5082__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45030__pinl_24778__icc_5082__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45030__pinl_24778__icc_5082__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45030__pinl_24778__icc_5082__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45030__pinl_24778__icc_5082__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45030__pinl_24778__icc_5082[0] = SACp_emal_45033__uprf_29791; }
    { SACp_emal_45030__pinl_24778__icc_5082[1] = SACp_emal_45031__uprf_29794; }

    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45030__pinl_24778__icc_5082__sz; SAC_i++) { if (( SACp_emal_45030__pinl_24778__icc_5082[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_45029__pinl_24790__flat_363 = SAC_all; }
    { { { if (((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082) - 1)->data1.arena)); } else { if (SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082) - 1)->data1.arena)); } } else { if (((((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082) - 1)->data1.arena)); } else { if (((((SACp_emal_45030__pinl_24778__icc_5082__sz * sizeof (*SACp_emal_45030__pinl_24778__icc_5082))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45030__pinl_24778__icc_5082); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45030__pinl_24778__icc_5082__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_45029__pinl_24790__flat_363)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24802__hce_47 = SACp_pinl_24800__hce_49; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `d:shp' in return value does not match argument shp"); SACp_pinl_48450__emal_45046__hce_47__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24802__hce_47 = SACp_pinl_48450__emal_45046__hce_47__SSA0_1; }

    }
    if (SACp_emal_45039__pinl_24783__flat_356)
    {



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24803__hce_46 = SACp_pinl_24802__hce_47; }

    }
    else
    {
      ;
      SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `d:shp' in return value does not match feature `d' in shp"); SACp_pinl_48452__emal_45045__hce_46__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24803__hce_46 = SACp_pinl_48452__emal_45045__hce_46__SSA0_1; }

    }
    if (!SACp_pinl_24803__hce_46) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Type pattern post-condition of genarrayI failed"); }
    ;
    if (SACp_emal_45039__pinl_24783__flat_356)
    {
      { ; ; }
      { { SACp_pinl_48455__emal_45053__hce_40 = 
# 31517 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 31517 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24745__hce_40 = SACp_pinl_48455__emal_45053__hce_40; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `d' in a"); SACp_pinl_48456__emal_45054__hce_40__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24745__hce_40 = SACp_pinl_48456__emal_45054__hce_40__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_45028__pinl_24741__flat_161__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45028__pinl_24741__flat_161"); }; { if ((((6 + (SACp_emal_45028__pinl_24741__flat_161__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45028__pinl_24741__flat_161__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45028__pinl_24741__flat_161__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45028__pinl_24741__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45028__pinl_24741__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45028__pinl_24741__flat_161__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45028__pinl_24741__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45028__pinl_24741__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45028__pinl_24741__flat_161__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45028__pinl_24741__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45028__pinl_24741__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45028__pinl_24741__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45028__pinl_24741__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45028__pinl_24741__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45028__pinl_24741__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45028__pinl_24741__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45028__pinl_24741__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45028__pinl_24741__flat_161__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45028__pinl_24741__flat_161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45028__pinl_24741__flat_161__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_45044__isaa_34743_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_45028__pinl_24741__flat_161__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45028__pinl_24741__flat_161__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45028__pinl_24741__flat_161__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res) < 0) ? (-(SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res)) : (SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45028__pinl_24741__flat_161__desc) & (-1 ^ (3))))[4]) = SACp_emal_45028__pinl_24741__flat_161__sz = SAC_size;
      if (!((SACp_emal_45028__pinl_24741__flat_161__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 31560 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 31560 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31560 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 31560 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31560 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 31560 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 31560 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 31560, __extension__ __PRETTY_FUNCTION__); }))
# 31560 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45028__pinl_24741__flat_161 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45028__pinl_24741__flat_161__sz * sizeof (*SACp_emal_45028__pinl_24741__flat_161)); break; case SAC_HM_multi_threaded: SACp_emal_45028__pinl_24741__flat_161 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45028__pinl_24741__flat_161__sz * sizeof (*SACp_emal_45028__pinl_24741__flat_161), 0); break; case SAC_HM_any_threaded: SACp_emal_45028__pinl_24741__flat_161 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45028__pinl_24741__flat_161__sz * sizeof (*SACp_emal_45028__pinl_24741__flat_161), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45028__pinl_24741__flat_161__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45028__pinl_24741__flat_161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45028__pinl_24741__flat_161__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 31567 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 31567 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res;
      SAC_cond = (SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_45044__isaa_34743_b__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_45044__isaa_34743_b__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 39, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45028__pinl_24741__flat_161[SAC_i] = ( SACp_emal_45044__isaa_34743_b[SAC_off + SAC_i]); };
      }
    }

    { { { if (((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b, ((((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b) - 1)->data1.arena)); } else { if (SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b, ((((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b, ((((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b) - 1)->data1.arena)); } } else { if (((((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b, ((((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b) - 1)->data1.arena)); } else { if (((((SACp_emal_45044__isaa_34743_b__sz * sizeof (*SACp_emal_45044__isaa_34743_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b, ((((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45044__isaa_34743_b); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45044__isaa_34743_b__desc) & (-1 ^ (3))))); } } }
        if (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim != SACp_emal_45028__pinl_24741__flat_161__dim) {
      SACp_emal_45027__pinl_24747__icc_4911_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res""' with shape %s ""And `" "SACp_emal_45028__pinl_24741__flat_161""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc), SAC_PrintShape (SACp_emal_45028__pinl_24741__flat_161__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__shp0 != SACp_emal_45028__pinl_24741__flat_161__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res""' with shape %s ""And `" "SACp_emal_45028__pinl_24741__flat_161""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc), SAC_PrintShape (SACp_emal_45028__pinl_24741__flat_161__desc));
      }
      SACp_emal_45027__pinl_24747__icc_4911_pred = SAC_all;
    }

    if (!SACp_emal_45027__pinl_24747__icc_4911_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { { if (!((1 == SACp_emal_45026__esd_36170__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45026__esd_36170"); }; { if ((((6 + (SACp_emal_45026__esd_36170__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45026__esd_36170__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45026__esd_36170__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45026__esd_36170__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45026__esd_36170__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45026__esd_36170__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45026__esd_36170__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45026__esd_36170__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45026__esd_36170__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45026__esd_36170__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45026__esd_36170__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45026__esd_36170__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45026__esd_36170__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45026__esd_36170__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45026__esd_36170__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45026__esd_36170__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45026__esd_36170__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45026__esd_36170__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45026__esd_36170__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45026__esd_36170__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45026__esd_36170__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45026__esd_36170__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45026__esd_36170__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45026__esd_36170__desc) & (-1 ^ (3))))[4]) = SACp_emal_45026__esd_36170__sz = SAC_size * SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__sz;
      if (!((SACp_emal_45026__esd_36170__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 31613 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 31613 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31613 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 31613 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31613 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 31613 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 31613 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 31613, __extension__ __PRETTY_FUNCTION__); }))
# 31613 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45026__esd_36170 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45026__esd_36170__sz * sizeof (*SACp_emal_45026__esd_36170)); break; case SAC_HM_multi_threaded: SACp_emal_45026__esd_36170 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45026__esd_36170__sz * sizeof (*SACp_emal_45026__esd_36170), 0); break; case SAC_HM_any_threaded: SACp_emal_45026__esd_36170 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45026__esd_36170__sz * sizeof (*SACp_emal_45026__esd_36170), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45026__esd_36170__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45026__esd_36170__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45026__esd_36170__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45026__esd_36170__sz; SAC_i++) { { SACp_emal_45026__esd_36170[SAC_i] = (( SACp_emal_45028__pinl_24741__flat_161[SAC_i])) - (( SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res[SAC_i])); }; } }
    { { free (SACp_emal_45028__pinl_24741__flat_161); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45028__pinl_24741__flat_161__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_45025__pinl_24735__icc_4914__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45025__pinl_24735__icc_4914"); }; { if ((((6 + (SACp_emal_45025__pinl_24735__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45025__pinl_24735__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45025__pinl_24735__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45025__pinl_24735__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45025__pinl_24735__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45025__pinl_24735__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45025__pinl_24735__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45025__pinl_24735__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45025__pinl_24735__icc_4914__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45025__pinl_24735__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45025__pinl_24735__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45025__pinl_24735__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45025__pinl_24735__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45025__pinl_24735__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45025__pinl_24735__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45025__pinl_24735__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45025__pinl_24735__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45025__pinl_24735__icc_4914__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45025__pinl_24735__icc_4914__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45025__pinl_24735__icc_4914__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45025__pinl_24735__icc_4914__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45025__pinl_24735__icc_4914__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45025__pinl_24735__icc_4914__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45026__esd_36170__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45025__pinl_24735__icc_4914__desc) & (-1 ^ (3))))[4]) = SACp_emal_45025__pinl_24735__icc_4914__sz = SAC_size * SACp_emal_45026__esd_36170__sz;
      if (!((SACp_emal_45025__pinl_24735__icc_4914__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 31630 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 31630 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31630 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 31630 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31630 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 31630 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 31630 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 31630, __extension__ __PRETTY_FUNCTION__); }))
# 31630 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45025__pinl_24735__icc_4914 = (
# 31630 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31630 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_45025__pinl_24735__icc_4914__sz * sizeof (*SACp_emal_45025__pinl_24735__icc_4914)); break; case SAC_HM_multi_threaded: SACp_emal_45025__pinl_24735__icc_4914 = (
# 31630 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31630 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45025__pinl_24735__icc_4914__sz * sizeof (*SACp_emal_45025__pinl_24735__icc_4914), 0); break; case SAC_HM_any_threaded: SACp_emal_45025__pinl_24735__icc_4914 = (
# 31630 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31630 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_45025__pinl_24735__icc_4914__sz * sizeof (*SACp_emal_45025__pinl_24735__icc_4914), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45025__pinl_24735__icc_4914__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45025__pinl_24735__icc_4914__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45025__pinl_24735__icc_4914__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45025__pinl_24735__icc_4914__sz; SAC_i++) { { SACp_emal_45025__pinl_24735__icc_4914[SAC_i] = (( SACp_emal_45026__esd_36170[SAC_i])) == (0); }; } }
    { { free (SACp_emal_45026__esd_36170); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45026__esd_36170__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_45027__pinl_24747__icc_4911_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45025__pinl_24735__icc_4914__sz; SAC_i++) { if (( SACp_emal_45025__pinl_24735__icc_4914[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_45024__pinl_24739__flat_159 = SAC_all; }
    { { free (SACp_emal_45025__pinl_24735__icc_4914); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45025__pinl_24735__icc_4914__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_45024__pinl_24739__flat_159)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24746__hce_39 = SACp_pinl_24745__hce_40; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `shp' in a"); SACp_pinl_48458__emal_45052__hce_39__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24746__hce_39 = SACp_pinl_48458__emal_45052__hce_39__SSA0_1; }

    }
    if (!SACp_pinl_24746__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failedType pattern pre-condition of + failed"); }



    SACp_pinl_24714_b__SSA0_1__desc = SACl_b__desc;
    SACp_pinl_24714_b__SSA0_1__sz = SACl_b__sz;
    SACp_pinl_24714_b__SSA0_1__dim = SACl_b__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_24714_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_24714_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (1))]) = SACl_b__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_24714_b__SSA0_1__desc) & (-1 ^ (3))))[4]) = SACl_b__sz;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_24714_b__SSA0_1__desc) & (-1 ^ (3))))[3]) = SACl_b__dim;
    { SACp_pinl_24714_b__SSA0_1 = SACl_b; }




    SACwf__MAIN___rtpf_8_impl__i_S__i_S (&SACp_pinl_24712__rtpf_10_res, &SACp_pinl_24712__rtpf_10_res__desc, SACp_pinl_24764__rtpf_27_res, SACp_pinl_24764__rtpf_27_res__desc, SACp_pinl_24714_b__SSA0_1, SACp_pinl_24714_b__SSA0_1__desc);




    SACp_pinl_24712__rtpf_10_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_24712__rtpf_10_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45023__isaa_34785__pinl_24712__rtpf_10_res = SACp_pinl_24712__rtpf_10_res__dim; }; }
    { { if (!((1 == SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res"); }; { if ((((6 + (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_24712__rtpf_10_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__sz = SAC_size;
      if (!((SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 31713 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 31713 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31713 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 31713 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31713 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 31713 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 31713 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 31713, __extension__ __PRETTY_FUNCTION__); }))
# 31713 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__sz * sizeof (*SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res)); break; case SAC_HM_multi_threaded: SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__sz * sizeof (*SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res), 0); break; case SAC_HM_any_threaded: SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__sz * sizeof (*SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_24712__rtpf_10_res__dim; SAC_i++) {
      { SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    if (!SACp_pinl_24746__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failed"); }
    ;
    ; ; { SACp_emal_45023__isaa_34785__pinl_24712__rtpf_10_res = (SACp_emal_45023__isaa_34785__pinl_24712__rtpf_10_res) - (SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res); };
    ; ; { SACp_emal_45020__pinl_24720__flat_164 = (SACp_emal_45023__isaa_34785__pinl_24712__rtpf_10_res) == (0); };
    { ; ; }
    if (SACp_emal_45020__pinl_24720__flat_164)
    {
      { ; ; }
      { { SACp_pinl_48461__emal_45050__hce_42 = 
# 31730 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 31730 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24728__hce_42 = SACp_pinl_48461__emal_45050__hce_42; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `d' in a"); SACp_pinl_48462__emal_45051__hce_42__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24728__hce_42 = SACp_pinl_48462__emal_45051__hce_42__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_45019__pinl_24724__flat_168__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45019__pinl_24724__flat_168"); }; { if ((((6 + (SACp_emal_45019__pinl_24724__flat_168__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45019__pinl_24724__flat_168__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45019__pinl_24724__flat_168__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45019__pinl_24724__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45019__pinl_24724__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45019__pinl_24724__flat_168__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45019__pinl_24724__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45019__pinl_24724__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45019__pinl_24724__flat_168__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45019__pinl_24724__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45019__pinl_24724__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45019__pinl_24724__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45019__pinl_24724__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45019__pinl_24724__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45019__pinl_24724__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45019__pinl_24724__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45019__pinl_24724__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45019__pinl_24724__flat_168__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45019__pinl_24724__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45019__pinl_24724__flat_168__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_45019__pinl_24724__flat_168__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45019__pinl_24724__flat_168__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45019__pinl_24724__flat_168__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res) < 0) ? (-(SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res)) : (SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45019__pinl_24724__flat_168__desc) & (-1 ^ (3))))[4]) = SACp_emal_45019__pinl_24724__flat_168__sz = SAC_size;
      if (!((SACp_emal_45019__pinl_24724__flat_168__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 31773 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 31773 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31773 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 31773 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31773 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 31773 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 31773 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 31773, __extension__ __PRETTY_FUNCTION__); }))
# 31773 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45019__pinl_24724__flat_168 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45019__pinl_24724__flat_168__sz * sizeof (*SACp_emal_45019__pinl_24724__flat_168)); break; case SAC_HM_multi_threaded: SACp_emal_45019__pinl_24724__flat_168 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45019__pinl_24724__flat_168__sz * sizeof (*SACp_emal_45019__pinl_24724__flat_168), 0); break; case SAC_HM_any_threaded: SACp_emal_45019__pinl_24724__flat_168 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45019__pinl_24724__flat_168__sz * sizeof (*SACp_emal_45019__pinl_24724__flat_168), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45019__pinl_24724__flat_168__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45019__pinl_24724__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45019__pinl_24724__flat_168__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 31780 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 31780 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res;
      SAC_cond = (SACp_emal_45042__isaa_34748__pinl_24764__rtpf_27_res < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45019__pinl_24724__flat_168[SAC_i] = ( SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45022__isaa_34786__pinl_24712__rtpf_10_res__desc) & (-1 ^ (3))))); } } }
    { ; ; }
        if (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__dim != SACp_emal_45019__pinl_24724__flat_168__dim) {
      SACp_emal_45018__pinl_24730__icc_4917_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res""' with shape %s ""And `" "SACp_emal_45019__pinl_24724__flat_168""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc), SAC_PrintShape (SACp_emal_45019__pinl_24724__flat_168__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__shp0 != SACp_emal_45019__pinl_24724__flat_168__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res""' with shape %s ""And `" "SACp_emal_45019__pinl_24724__flat_168""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc), SAC_PrintShape (SACp_emal_45019__pinl_24724__flat_168__desc));
      }
      SACp_emal_45018__pinl_24730__icc_4917_pred = SAC_all;
    }

    if (!SACp_emal_45018__pinl_24730__icc_4917_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { { if (!((1 == SACp_emal_45017__esd_36166__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45017__esd_36166"); }; { if ((((6 + (SACp_emal_45017__esd_36166__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45017__esd_36166__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45017__esd_36166__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45017__esd_36166__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45017__esd_36166__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45017__esd_36166__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45017__esd_36166__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45017__esd_36166__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45017__esd_36166__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45017__esd_36166__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45017__esd_36166__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45017__esd_36166__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45017__esd_36166__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45017__esd_36166__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45017__esd_36166__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45017__esd_36166__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45017__esd_36166__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45017__esd_36166__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45017__esd_36166__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45017__esd_36166__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45017__esd_36166__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45017__esd_36166__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45017__esd_36166__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45017__esd_36166__desc) & (-1 ^ (3))))[4]) = SACp_emal_45017__esd_36166__sz = SAC_size * SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__sz;
      if (!((SACp_emal_45017__esd_36166__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 31827 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 31827 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31827 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 31827 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31827 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 31827 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 31827 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 31827, __extension__ __PRETTY_FUNCTION__); }))
# 31827 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45017__esd_36166 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45017__esd_36166__sz * sizeof (*SACp_emal_45017__esd_36166)); break; case SAC_HM_multi_threaded: SACp_emal_45017__esd_36166 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45017__esd_36166__sz * sizeof (*SACp_emal_45017__esd_36166), 0); break; case SAC_HM_any_threaded: SACp_emal_45017__esd_36166 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45017__esd_36166__sz * sizeof (*SACp_emal_45017__esd_36166), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45017__esd_36166__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45017__esd_36166__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45017__esd_36166__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45017__esd_36166__sz; SAC_i++) { { SACp_emal_45017__esd_36166[SAC_i] = (( SACp_emal_45019__pinl_24724__flat_168[SAC_i])) - (( SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res[SAC_i])); }; } }
    { { free (SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45041__isaa_34749__pinl_24764__rtpf_27_res__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_45019__pinl_24724__flat_168); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45019__pinl_24724__flat_168__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_45016__pinl_24718__icc_4920__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45016__pinl_24718__icc_4920"); }; { if ((((6 + (SACp_emal_45016__pinl_24718__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45016__pinl_24718__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45016__pinl_24718__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45016__pinl_24718__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45016__pinl_24718__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45016__pinl_24718__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45016__pinl_24718__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45016__pinl_24718__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45016__pinl_24718__icc_4920__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45016__pinl_24718__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45016__pinl_24718__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45016__pinl_24718__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45016__pinl_24718__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45016__pinl_24718__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45016__pinl_24718__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45016__pinl_24718__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45016__pinl_24718__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45016__pinl_24718__icc_4920__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45016__pinl_24718__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45016__pinl_24718__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45016__pinl_24718__icc_4920__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45016__pinl_24718__icc_4920__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45016__pinl_24718__icc_4920__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45017__esd_36166__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45016__pinl_24718__icc_4920__desc) & (-1 ^ (3))))[4]) = SACp_emal_45016__pinl_24718__icc_4920__sz = SAC_size * SACp_emal_45017__esd_36166__sz;
      if (!((SACp_emal_45016__pinl_24718__icc_4920__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 31845 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 31845 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31845 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 31845 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 31845 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 31845 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 31845 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 31845, __extension__ __PRETTY_FUNCTION__); }))
# 31845 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45016__pinl_24718__icc_4920 = (
# 31845 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31845 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_45016__pinl_24718__icc_4920__sz * sizeof (*SACp_emal_45016__pinl_24718__icc_4920)); break; case SAC_HM_multi_threaded: SACp_emal_45016__pinl_24718__icc_4920 = (
# 31845 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31845 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45016__pinl_24718__icc_4920__sz * sizeof (*SACp_emal_45016__pinl_24718__icc_4920), 0); break; case SAC_HM_any_threaded: SACp_emal_45016__pinl_24718__icc_4920 = (
# 31845 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31845 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_45016__pinl_24718__icc_4920__sz * sizeof (*SACp_emal_45016__pinl_24718__icc_4920), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45016__pinl_24718__icc_4920__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45016__pinl_24718__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45016__pinl_24718__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45016__pinl_24718__icc_4920__sz; SAC_i++) { { SACp_emal_45016__pinl_24718__icc_4920[SAC_i] = (( SACp_emal_45017__esd_36166[SAC_i])) == (0); }; } }
    { { free (SACp_emal_45017__esd_36166); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45017__esd_36166__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_45018__pinl_24730__icc_4917_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45016__pinl_24718__icc_4920__sz; SAC_i++) { if (( SACp_emal_45016__pinl_24718__icc_4920[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_45015__pinl_24722__flat_166 = SAC_all; }
    { { free (SACp_emal_45016__pinl_24718__icc_4920); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45016__pinl_24718__icc_4920__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_45015__pinl_24722__flat_166)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24729__hce_41 = SACp_pinl_24728__hce_42; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `shp' in a"); SACp_pinl_48464__emal_45049__hce_41__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_24729__hce_41 = SACp_pinl_48464__emal_45049__hce_41__SSA0_1; }

    }
    if (!SACp_pinl_24729__hce_41) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failed"); }
    ;



    { *SAC_arg_1__p = SACp_pinl_24712__rtpf_10_res; *SAC_arg_1__desc__p = SACp_pinl_24712__rtpf_10_res__desc; }
    return;
   
  }



}
}
# 31903 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_18_impl_carretplus__i_2_3__i_2 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1;
    SAC_array_descriptor_t _tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__desc = 
# 31913 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 31913 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__shp0;
    int _tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz;
    const int _tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim = 1;




    
# 31921 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31921 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48486__emal_45102__hce_41__SSA0_1;
   
   




    
# 31928 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31928 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48484__emal_45104__hce_42__SSA0_1;
   
   




    
# 31935 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31935 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48483__emal_45103__hce_42;
   
   




    
# 31942 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31942 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48480__emal_45105__hce_39__SSA0_1;
   
   




    
# 31949 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31949 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48478__emal_45107__hce_40__SSA0_1;
   
   




    
# 31956 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31956 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48477__emal_45106__hce_40;
   
   




    
# 31963 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31963 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48474__emal_45097__hce_46__SSA0_1;
   
   




    
# 31970 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31970 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48472__emal_45098__hce_47__SSA0_1;
   
   




    
# 31977 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31977 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48470__emal_45099__hce_48__SSA0_1;
   
   




    
# 31984 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31984 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48468__emal_45101__hce_49__SSA0_1;
   
   




    
# 31991 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 31991 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48467__emal_45100__hce_49;
   
   

    const int SACp_emal_45096__isaa_34835_b = 1;
    const int SACp_emal_45095__pinl_26167__flat_1140 = 0;



    int * SACp_emal_45094__pinl_26166__icc_7995__SSA25_1;
    SAC_array_descriptor_t SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__desc = 
# 32001 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32001 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__shp0 = 1;
    const int SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz = 1;
    const int SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim = 1;




    int SACp_emal_45093__isaa_34841__pinl_25942__rtpf_27_res;
   
   




    int * SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res;
    SAC_array_descriptor_t SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc = 
# 32017 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32017 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__shp0;
    int SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz;
    const int SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim = 1;




    
# 32025 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32025 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45090__pinl_25961__flat_356;
   
   




    int * SACp_emal_45089__pinl_25966__flat_361;
    SAC_array_descriptor_t SACp_emal_45089__pinl_25966__flat_361__desc = 
# 32033 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32033 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45089__pinl_25966__flat_361__shp0 = 1;
    const int SACp_emal_45089__pinl_25966__flat_361__sz = 1;
    const int SACp_emal_45089__pinl_25966__flat_361__dim = 1;




    int SACp_emal_45088__uprf_29833;
   
   




    
# 32048 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32048 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45086__uprf_29829;
   
   




    
# 32055 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32055 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_45085__pinl_25953__icc_5078;
    SAC_array_descriptor_t SACp_emal_45085__pinl_25953__icc_5078__desc = 
# 32056 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32056 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45085__pinl_25953__icc_5078__shp0 = 1;
    const int SACp_emal_45085__pinl_25953__icc_5078__sz = 1;
    const int SACp_emal_45085__pinl_25953__icc_5078__dim = 1;




    
# 32064 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32064 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45084__pinl_25964__flat_359;
   
   




    int * SACp_emal_45083__pinl_25971__flat_366;
    SAC_array_descriptor_t SACp_emal_45083__pinl_25971__flat_366__desc = 
# 32072 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32072 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45083__pinl_25971__flat_366__shp0;
    int SACp_emal_45083__pinl_25971__flat_366__sz;
    const int SACp_emal_45083__pinl_25971__flat_366__dim = 1;




    int * SACp_emal_45082__pinl_25970__flat_365;
    SAC_array_descriptor_t SACp_emal_45082__pinl_25970__flat_365__desc = 
# 32081 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32081 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45082__pinl_25970__flat_365__shp0 = 1;
    const int SACp_emal_45082__pinl_25970__flat_365__sz = 1;
    const int SACp_emal_45082__pinl_25970__flat_365__dim = 1;




    int SACp_emal_45081__uprf_29825;
   
   




    
# 32096 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32096 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45079__uprf_29821;
   
   




    
# 32103 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32103 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_45078__pinl_25956__icc_5082;
    SAC_array_descriptor_t SACp_emal_45078__pinl_25956__icc_5082__desc = 
# 32104 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32104 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45078__pinl_25956__icc_5082__shp0 = 1;
    const int SACp_emal_45078__pinl_25956__icc_5082__sz = 1;
    const int SACp_emal_45078__pinl_25956__icc_5082__dim = 1;




    
# 32112 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32112 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45077__pinl_25968__flat_363;
   
   




    int * SACp_emal_45076__pinl_25919__flat_161;
    SAC_array_descriptor_t SACp_emal_45076__pinl_25919__flat_161__desc = 
# 32120 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32120 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45076__pinl_25919__flat_161__shp0 = 2;
    const int SACp_emal_45076__pinl_25919__flat_161__sz = 2;
    const int SACp_emal_45076__pinl_25919__flat_161__dim = 1;




    int SACp_emal_45075__uprf_29243;
   
   




    int SACp_emal_45074__uprf_29248;
   
   




    
# 32142 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32142 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45072__uprf_29236;
   
   




    
# 32149 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32149 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45070__uprf_29239;
   
   




    
# 32156 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32156 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_45069__pinl_25913__icc_4914;
    SAC_array_descriptor_t SACp_emal_45069__pinl_25913__icc_4914__desc = 
# 32157 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32157 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45069__pinl_25913__icc_4914__shp0 = 2;
    const int SACp_emal_45069__pinl_25913__icc_4914__sz = 2;
    const int SACp_emal_45069__pinl_25913__icc_4914__dim = 1;




    
# 32165 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32165 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45068__pinl_25917__flat_159;
   
   




    int SACp_emal_45067__isaa_34873__pinl_25890__rtpf_10_res;
   
   




    int * SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res;
    SAC_array_descriptor_t SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc = 
# 32180 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32180 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__shp0;
    int SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__sz;
    const int SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim = 1;




    
# 32188 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32188 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45064__pinl_25898__flat_164;
   
   




    int * SACp_emal_45063__pinl_25902__flat_168;
    SAC_array_descriptor_t SACp_emal_45063__pinl_25902__flat_168__desc = 
# 32196 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32196 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45063__pinl_25902__flat_168__shp0 = 2;
    const int SACp_emal_45063__pinl_25902__flat_168__sz = 2;
    const int SACp_emal_45063__pinl_25902__flat_168__dim = 1;




    int SACp_emal_45062__uprf_37033;
   
   




    int SACp_emal_45061__uprf_37038;
   
   




    
# 32218 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32218 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45059__uprf_37026;
   
   




    
# 32225 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32225 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45057__uprf_37029;
   
   




    
# 32232 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32232 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_45056__pinl_25896__icc_4920;
    SAC_array_descriptor_t SACp_emal_45056__pinl_25896__icc_4920__desc = 
# 32233 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32233 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45056__pinl_25896__icc_4920__shp0 = 2;
    const int SACp_emal_45056__pinl_25896__icc_4920__sz = 2;
    const int SACp_emal_45056__pinl_25896__icc_4920__dim = 1;




    
# 32241 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32241 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45055__pinl_25900__flat_166;
   
   




    
# 32248 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32248 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_25981__hce_46;
   
   




    
# 32255 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32255 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_25980__hce_47;
   
   




    
# 32262 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32262 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_25979__hce_48;
   
   




    
# 32269 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32269 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_25978__hce_49;
   
   




    int * SACp_pinl_25942__rtpf_27_res;
    SAC_array_descriptor_t SACp_pinl_25942__rtpf_27_res__desc = 
# 32277 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32277 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_25942__rtpf_27_res__sz = 0;
    int SACp_pinl_25942__rtpf_27_res__dim = 0;




    int * SACp_pinl_25940_b__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_25940_b__SSA0_1__desc = 
# 32285 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32285 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_25940_b__SSA0_1__sz = 0;
    int SACp_pinl_25940_b__SSA0_1__dim = 0;




    
# 32292 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32292 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_25924__hce_39;
   
   




    
# 32299 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32299 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_25923__hce_40;
   
   




    
# 32306 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32306 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_25907__hce_41;
   
   




    
# 32313 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32313 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_25906__hce_42;
   
   




    int * SACp_pinl_25891_a__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_25891_a__SSA0_1__desc = 
# 32321 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32321 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_25891_a__SSA0_1__sz = 0;
    int SACp_pinl_25891_a__SSA0_1__dim = 0;




    int * SACp_pinl_25890__rtpf_10_res;
    SAC_array_descriptor_t SACp_pinl_25890__rtpf_10_res__desc = 
# 32329 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 32329 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_25890__rtpf_10_res__sz = 0;
    int SACp_pinl_25890__rtpf_10_res__dim = 0;





    const int SACl_b__shp0 = 2;
    const int SACl_b__sz = 2;
    const int SACl_b__dim = 1;




    const int SACl_a__shp0 = 2;
    const int SACl_a__shp1 = 3;
    const int SACl_a__sz = 6;
    const int SACl_a__dim = 2;

   
    { { if (!((1 == SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45094__pinl_26166__icc_7995__SSA25_1"); }; { { if ((((SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz * sizeof (*SACp_emal_45094__pinl_26166__icc_7995__SSA25_1)) + ((6 + (SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz * sizeof (*SACp_emal_45094__pinl_26166__icc_7995__SSA25_1)) + ((6 + (SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz * sizeof (*SACp_emal_45094__pinl_26166__icc_7995__SSA25_1)) + ((6 + (SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45094__pinl_26166__icc_7995__SSA25_1 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45094__pinl_26166__icc_7995__SSA25_1 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz * sizeof (*SACp_emal_45094__pinl_26166__icc_7995__SSA25_1)) + ((6 + (SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45094__pinl_26166__icc_7995__SSA25_1 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45094__pinl_26166__icc_7995__SSA25_1 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz * sizeof (*SACp_emal_45094__pinl_26166__icc_7995__SSA25_1)) + ((6 + (SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz * sizeof (*SACp_emal_45094__pinl_26166__icc_7995__SSA25_1)) + ((6 + (SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz * sizeof (*SACp_emal_45094__pinl_26166__icc_7995__SSA25_1)) + ((6 + (SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz * sizeof (*SACp_emal_45094__pinl_26166__icc_7995__SSA25_1)) + ((6 + (SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz * sizeof (*SACp_emal_45094__pinl_26166__icc_7995__SSA25_1)) + ((6 + (SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45094__pinl_26166__icc_7995__SSA25_1 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45094__pinl_26166__icc_7995__SSA25_1 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45094__pinl_26166__icc_7995__SSA25_1 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45094__pinl_26166__icc_7995__SSA25_1 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45094__pinl_26166__icc_7995__SSA25_1, SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz * sizeof (*SACp_emal_45094__pinl_26166__icc_7995__SSA25_1), ((6 + (SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45094__pinl_26166__icc_7995__SSA25_1[0] = 3; }




    if (!((_tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    _tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__desc = SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__desc;
    _tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__shp0 = SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__shp0;
    _tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz = SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__sz;
    { _tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1 = SACp_emal_45094__pinl_26166__icc_7995__SSA25_1; }




    SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_2 (&SACp_pinl_25942__rtpf_27_res, &SACp_pinl_25942__rtpf_27_res__desc, _tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1, _tcp_48510_SACp_emal_45094__pinl_26166__icc_7995__SSA25_1__desc, SACl_b, SACl_b__desc);




    SACp_pinl_25942__rtpf_27_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_25942__rtpf_27_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45093__isaa_34841__pinl_25942__rtpf_27_res = SACp_pinl_25942__rtpf_27_res__dim; }; }
    { { if (!((1 == SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res"); }; { if ((((6 + (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_25942__rtpf_27_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz = SAC_size;
      if (!((SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 32410 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 32410 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 32410 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 32410 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 32410 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 32410 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 32410 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 32410, __extension__ __PRETTY_FUNCTION__); }))
# 32410 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz * sizeof (*SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res)); break; case SAC_HM_multi_threaded: SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz * sizeof (*SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res), 0); break; case SAC_HM_any_threaded: SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz * sizeof (*SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_25942__rtpf_27_res__dim; SAC_i++) {
      { SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; ; { SACp_emal_45093__isaa_34841__pinl_25942__rtpf_27_res = (2) - (SACp_emal_45093__isaa_34841__pinl_25942__rtpf_27_res); };
    ; ; { SACp_emal_45090__pinl_25961__flat_356 = (SACp_emal_45093__isaa_34841__pinl_25942__rtpf_27_res) == (0); };
    { ; ; }
    if (SACp_emal_45090__pinl_25961__flat_356)
    {
      { { SACp_pinl_48467__emal_45100__hce_49 = 
# 32424 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 32424 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25978__hce_49 = SACp_pinl_48467__emal_45100__hce_49; }

    }
    else
    {
      SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `v:vshp' in return value does not match feature `v' in data"); SACp_pinl_48468__emal_45101__hce_49__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25978__hce_49 = SACp_pinl_48468__emal_45101__hce_49__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_45089__pinl_25966__flat_361__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45089__pinl_25966__flat_361"); }; { { if ((((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361)) + ((6 + (SACp_emal_45089__pinl_25966__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361)) + ((6 + (SACp_emal_45089__pinl_25966__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361)) + ((6 + (SACp_emal_45089__pinl_25966__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45089__pinl_25966__flat_361 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45089__pinl_25966__flat_361 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361)) + ((6 + (SACp_emal_45089__pinl_25966__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45089__pinl_25966__flat_361 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45089__pinl_25966__flat_361 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361)) + ((6 + (SACp_emal_45089__pinl_25966__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361)) + ((6 + (SACp_emal_45089__pinl_25966__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361)) + ((6 + (SACp_emal_45089__pinl_25966__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361)) + ((6 + (SACp_emal_45089__pinl_25966__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361)) + ((6 + (SACp_emal_45089__pinl_25966__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45089__pinl_25966__flat_361 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45089__pinl_25966__flat_361 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45089__pinl_25966__flat_361 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45089__pinl_25966__flat_361 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45089__pinl_25966__flat_361__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361, SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361), ((6 + (SACp_emal_45089__pinl_25966__flat_361__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45089__pinl_25966__flat_361__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45089__pinl_25966__flat_361__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45089__pinl_25966__flat_361__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45089__pinl_25966__flat_361__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45089__pinl_25966__flat_361__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 32463 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 32463 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45089__pinl_25966__flat_361[SAC_i] = ( SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res[SAC_off + SAC_i]); };
      }
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45088__uprf_29833 = ( SACp_emal_45089__pinl_25966__flat_361[SACp_emal_45095__pinl_26167__flat_1140]); }

    { { { if (((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361, ((((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361) - 1)->data1.arena)); } else { if (SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361, ((((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361, ((((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361) - 1)->data1.arena)); } } else { if (((((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361, ((((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361) - 1)->data1.arena)); } else { if (((((SACp_emal_45089__pinl_25966__flat_361__sz * sizeof (*SACp_emal_45089__pinl_25966__flat_361))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361, ((((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45089__pinl_25966__flat_361); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45089__pinl_25966__flat_361__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_45088__uprf_29833 = (-2) + (SACp_emal_45088__uprf_29833); };
    ; ; { SACp_emal_45086__uprf_29829 = (SACp_emal_45088__uprf_29833) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_45085__pinl_25953__icc_5078__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45085__pinl_25953__icc_5078"); }; { { if ((((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078)) + ((6 + (SACp_emal_45085__pinl_25953__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078)) + ((6 + (SACp_emal_45085__pinl_25953__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078)) + ((6 + (SACp_emal_45085__pinl_25953__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45085__pinl_25953__icc_5078 = (
# 32498 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32498 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45085__pinl_25953__icc_5078 = (
# 32498 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32498 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078)) + ((6 + (SACp_emal_45085__pinl_25953__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45085__pinl_25953__icc_5078 = (
# 32498 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32498 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45085__pinl_25953__icc_5078 = (
# 32498 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32498 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078)) + ((6 + (SACp_emal_45085__pinl_25953__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078)) + ((6 + (SACp_emal_45085__pinl_25953__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078)) + ((6 + (SACp_emal_45085__pinl_25953__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078)) + ((6 + (SACp_emal_45085__pinl_25953__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078)) + ((6 + (SACp_emal_45085__pinl_25953__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45085__pinl_25953__icc_5078 = (
# 32498 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32498 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45085__pinl_25953__icc_5078 = (
# 32498 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32498 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45085__pinl_25953__icc_5078 = (
# 32498 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32498 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45085__pinl_25953__icc_5078 = (
# 32498 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32498 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45085__pinl_25953__icc_5078__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078, SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078), ((6 + (SACp_emal_45085__pinl_25953__icc_5078__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45085__pinl_25953__icc_5078__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45085__pinl_25953__icc_5078__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45085__pinl_25953__icc_5078__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45085__pinl_25953__icc_5078__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45085__pinl_25953__icc_5078__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45085__pinl_25953__icc_5078[0] = SACp_emal_45086__uprf_29829; }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45085__pinl_25953__icc_5078__sz; SAC_i++) { if (( SACp_emal_45085__pinl_25953__icc_5078[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_45084__pinl_25964__flat_359 = SAC_all; }
    { { { if (((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078, ((((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078) - 1)->data1.arena)); } else { if (SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078, ((((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078, ((((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078) - 1)->data1.arena)); } } else { if (((((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078, ((((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078) - 1)->data1.arena)); } else { if (((((SACp_emal_45085__pinl_25953__icc_5078__sz * sizeof (*SACp_emal_45085__pinl_25953__icc_5078))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078, ((((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45085__pinl_25953__icc_5078); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45085__pinl_25953__icc_5078__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_45084__pinl_25964__flat_359)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25979__hce_48 = SACp_pinl_25978__hce_49; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `v:vshp' in return value does not match feature `vshp' in data"); SACp_pinl_48470__emal_45099__hce_48__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25979__hce_48 = SACp_pinl_48470__emal_45099__hce_48__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_45083__pinl_25971__flat_366__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45083__pinl_25971__flat_366"); }; { if ((((6 + (SACp_emal_45083__pinl_25971__flat_366__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45083__pinl_25971__flat_366__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45083__pinl_25971__flat_366__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45083__pinl_25971__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45083__pinl_25971__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45083__pinl_25971__flat_366__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45083__pinl_25971__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45083__pinl_25971__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45083__pinl_25971__flat_366__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45083__pinl_25971__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45083__pinl_25971__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45083__pinl_25971__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45083__pinl_25971__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45083__pinl_25971__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45083__pinl_25971__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45083__pinl_25971__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45083__pinl_25971__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45083__pinl_25971__flat_366__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45083__pinl_25971__flat_366__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45083__pinl_25971__flat_366__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_45083__pinl_25971__flat_366__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45083__pinl_25971__flat_366__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45083__pinl_25971__flat_366__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz - (((1) < 0) ? (-(1)) : (1));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45083__pinl_25971__flat_366__desc) & (-1 ^ (3))))[4]) = SACp_emal_45083__pinl_25971__flat_366__sz = SAC_size;
      if (!((SACp_emal_45083__pinl_25971__flat_366__sz >= 0))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 32560 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 32560 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 32560 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 32560 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 32560 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 32560 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 32560 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 32560, __extension__ __PRETTY_FUNCTION__); }))
# 32560 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45083__pinl_25971__flat_366 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45083__pinl_25971__flat_366__sz * sizeof (*SACp_emal_45083__pinl_25971__flat_366)); break; case SAC_HM_multi_threaded: SACp_emal_45083__pinl_25971__flat_366 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45083__pinl_25971__flat_366__sz * sizeof (*SACp_emal_45083__pinl_25971__flat_366), 0); break; case SAC_HM_any_threaded: SACp_emal_45083__pinl_25971__flat_366 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45083__pinl_25971__flat_366__sz * sizeof (*SACp_emal_45083__pinl_25971__flat_366), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45083__pinl_25971__flat_366__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45083__pinl_25971__flat_366__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45083__pinl_25971__flat_366__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 32567 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 32567 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45083__pinl_25971__flat_366[SAC_i] = ( SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res[SAC_off + SAC_i]); };
      }
    }

    { { if (!((1 == SACp_emal_45082__pinl_25970__flat_365__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45082__pinl_25970__flat_365"); }; { { if ((((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365)) + ((6 + (SACp_emal_45082__pinl_25970__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365)) + ((6 + (SACp_emal_45082__pinl_25970__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365)) + ((6 + (SACp_emal_45082__pinl_25970__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45082__pinl_25970__flat_365 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45082__pinl_25970__flat_365 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365)) + ((6 + (SACp_emal_45082__pinl_25970__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45082__pinl_25970__flat_365 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45082__pinl_25970__flat_365 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365)) + ((6 + (SACp_emal_45082__pinl_25970__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365)) + ((6 + (SACp_emal_45082__pinl_25970__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365)) + ((6 + (SACp_emal_45082__pinl_25970__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365)) + ((6 + (SACp_emal_45082__pinl_25970__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365)) + ((6 + (SACp_emal_45082__pinl_25970__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45082__pinl_25970__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45082__pinl_25970__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45082__pinl_25970__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45082__pinl_25970__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45082__pinl_25970__flat_365__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365, SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365), ((6 + (SACp_emal_45082__pinl_25970__flat_365__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45082__pinl_25970__flat_365__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45082__pinl_25970__flat_365__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45082__pinl_25970__flat_365__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45082__pinl_25970__flat_365__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45082__pinl_25970__flat_365__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 32599 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 32599 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_45083__pinl_25971__flat_366__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_45083__pinl_25971__flat_366__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45082__pinl_25970__flat_365[SAC_i] = ( SACp_emal_45083__pinl_25971__flat_366[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_45083__pinl_25971__flat_366); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45083__pinl_25971__flat_366__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45081__uprf_29825 = ( SACp_emal_45082__pinl_25970__flat_365[SACp_emal_45095__pinl_26167__flat_1140]); }

    { { { if (((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365, ((((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365) - 1)->data1.arena)); } else { if (SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365, ((((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365, ((((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365) - 1)->data1.arena)); } } else { if (((((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365, ((((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365) - 1)->data1.arena)); } else { if (((((SACp_emal_45082__pinl_25970__flat_365__sz * sizeof (*SACp_emal_45082__pinl_25970__flat_365))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365, ((((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45082__pinl_25970__flat_365); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45082__pinl_25970__flat_365__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_45081__uprf_29825 = (-3) + (SACp_emal_45081__uprf_29825); };
    ; ; { SACp_emal_45079__uprf_29821 = (SACp_emal_45081__uprf_29825) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_45078__pinl_25956__icc_5082__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45078__pinl_25956__icc_5082"); }; { { if ((((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082)) + ((6 + (SACp_emal_45078__pinl_25956__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082)) + ((6 + (SACp_emal_45078__pinl_25956__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082)) + ((6 + (SACp_emal_45078__pinl_25956__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45078__pinl_25956__icc_5082 = (
# 32635 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32635 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45078__pinl_25956__icc_5082 = (
# 32635 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32635 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082)) + ((6 + (SACp_emal_45078__pinl_25956__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45078__pinl_25956__icc_5082 = (
# 32635 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32635 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45078__pinl_25956__icc_5082 = (
# 32635 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32635 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082)) + ((6 + (SACp_emal_45078__pinl_25956__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082)) + ((6 + (SACp_emal_45078__pinl_25956__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082)) + ((6 + (SACp_emal_45078__pinl_25956__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082)) + ((6 + (SACp_emal_45078__pinl_25956__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082)) + ((6 + (SACp_emal_45078__pinl_25956__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45078__pinl_25956__icc_5082 = (
# 32635 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32635 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45078__pinl_25956__icc_5082 = (
# 32635 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32635 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45078__pinl_25956__icc_5082 = (
# 32635 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32635 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45078__pinl_25956__icc_5082 = (
# 32635 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32635 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45078__pinl_25956__icc_5082__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082, SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082), ((6 + (SACp_emal_45078__pinl_25956__icc_5082__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45078__pinl_25956__icc_5082__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45078__pinl_25956__icc_5082__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45078__pinl_25956__icc_5082__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45078__pinl_25956__icc_5082__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45078__pinl_25956__icc_5082__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45078__pinl_25956__icc_5082[0] = SACp_emal_45079__uprf_29821; }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45078__pinl_25956__icc_5082__sz; SAC_i++) { if (( SACp_emal_45078__pinl_25956__icc_5082[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_45077__pinl_25968__flat_363 = SAC_all; }
    { { { if (((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082) - 1)->data1.arena)); } else { if (SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082) - 1)->data1.arena)); } } else { if (((((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082) - 1)->data1.arena)); } else { if (((((SACp_emal_45078__pinl_25956__icc_5082__sz * sizeof (*SACp_emal_45078__pinl_25956__icc_5082))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45078__pinl_25956__icc_5082); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45078__pinl_25956__icc_5082__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_45077__pinl_25968__flat_363)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25980__hce_47 = SACp_pinl_25979__hce_48; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `d:shp' in return value does not match argument shp"); SACp_pinl_48472__emal_45098__hce_47__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25980__hce_47 = SACp_pinl_48472__emal_45098__hce_47__SSA0_1; }

    }
    if (SACp_emal_45090__pinl_25961__flat_356)
    {



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25981__hce_46 = SACp_pinl_25980__hce_47; }

    }
    else
    {
      ;
      SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `d:shp' in return value does not match feature `d' in shp"); SACp_pinl_48474__emal_45097__hce_46__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25981__hce_46 = SACp_pinl_48474__emal_45097__hce_46__SSA0_1; }

    }
    if (!SACp_pinl_25981__hce_46) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Type pattern post-condition of genarrayI failed"); }
    ;



    SACp_pinl_25940_b__SSA0_1__desc = SACp_pinl_25942__rtpf_27_res__desc;
    SACp_pinl_25940_b__SSA0_1__sz = SACp_pinl_25942__rtpf_27_res__sz;
    SACp_pinl_25940_b__SSA0_1__dim = SACp_pinl_25942__rtpf_27_res__dim;
    ;
    { SACp_pinl_25940_b__SSA0_1 = SACp_pinl_25942__rtpf_27_res; }

    if (SACp_emal_45090__pinl_25961__flat_356)
    {
      { ; ; }
      { { SACp_pinl_48477__emal_45106__hce_40 = 
# 32720 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 32720 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25923__hce_40 = SACp_pinl_48477__emal_45106__hce_40; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `d' in a"); SACp_pinl_48478__emal_45107__hce_40__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25923__hce_40 = SACp_pinl_48478__emal_45107__hce_40__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_45076__pinl_25919__flat_161__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45076__pinl_25919__flat_161"); }; { { if ((((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161)) + ((6 + (SACp_emal_45076__pinl_25919__flat_161__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161)) + ((6 + (SACp_emal_45076__pinl_25919__flat_161__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161)) + ((6 + (SACp_emal_45076__pinl_25919__flat_161__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45076__pinl_25919__flat_161 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45076__pinl_25919__flat_161 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161)) + ((6 + (SACp_emal_45076__pinl_25919__flat_161__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45076__pinl_25919__flat_161 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45076__pinl_25919__flat_161 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161)) + ((6 + (SACp_emal_45076__pinl_25919__flat_161__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161)) + ((6 + (SACp_emal_45076__pinl_25919__flat_161__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161)) + ((6 + (SACp_emal_45076__pinl_25919__flat_161__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161)) + ((6 + (SACp_emal_45076__pinl_25919__flat_161__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161)) + ((6 + (SACp_emal_45076__pinl_25919__flat_161__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45076__pinl_25919__flat_161 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45076__pinl_25919__flat_161 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45076__pinl_25919__flat_161 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45076__pinl_25919__flat_161 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45076__pinl_25919__flat_161__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161, SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161), ((6 + (SACp_emal_45076__pinl_25919__flat_161__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45076__pinl_25919__flat_161__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45076__pinl_25919__flat_161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45076__pinl_25919__flat_161__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45076__pinl_25919__flat_161__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45076__pinl_25919__flat_161__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 32760 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 32760 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 39, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45076__pinl_25919__flat_161[SAC_i] = ( SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45092__isaa_34842__pinl_25942__rtpf_27_res__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45075__uprf_29243 = ( SACp_emal_45076__pinl_25919__flat_161[SACp_emal_45095__pinl_26167__flat_1140]); }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45074__uprf_29248 = ( SACp_emal_45076__pinl_25919__flat_161[SACp_emal_45096__isaa_34835_b]); }

    { { { if (((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161, ((((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161) - 1)->data1.arena)); } else { if (SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161, ((((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161, ((((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161) - 1)->data1.arena)); } } else { if (((((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161, ((((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161) - 1)->data1.arena)); } else { if (((((SACp_emal_45076__pinl_25919__flat_161__sz * sizeof (*SACp_emal_45076__pinl_25919__flat_161))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161, ((((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45076__pinl_25919__flat_161); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45076__pinl_25919__flat_161__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_45075__uprf_29243 = (-2) + (SACp_emal_45075__uprf_29243); };
    ; ; { SACp_emal_45072__uprf_29236 = (SACp_emal_45075__uprf_29243) == (0); };
    { ; ; }
    ; ; { SACp_emal_45074__uprf_29248 = (-3) + (SACp_emal_45074__uprf_29248); };
    ; ; { SACp_emal_45070__uprf_29239 = (SACp_emal_45074__uprf_29248) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_45069__pinl_25913__icc_4914__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45069__pinl_25913__icc_4914"); }; { { if ((((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914)) + ((6 + (SACp_emal_45069__pinl_25913__icc_4914__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914)) + ((6 + (SACp_emal_45069__pinl_25913__icc_4914__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914)) + ((6 + (SACp_emal_45069__pinl_25913__icc_4914__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45069__pinl_25913__icc_4914 = (
# 32814 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32814 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45069__pinl_25913__icc_4914 = (
# 32814 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32814 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914)) + ((6 + (SACp_emal_45069__pinl_25913__icc_4914__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45069__pinl_25913__icc_4914 = (
# 32814 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32814 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45069__pinl_25913__icc_4914 = (
# 32814 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32814 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914)) + ((6 + (SACp_emal_45069__pinl_25913__icc_4914__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914)) + ((6 + (SACp_emal_45069__pinl_25913__icc_4914__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914)) + ((6 + (SACp_emal_45069__pinl_25913__icc_4914__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914)) + ((6 + (SACp_emal_45069__pinl_25913__icc_4914__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914)) + ((6 + (SACp_emal_45069__pinl_25913__icc_4914__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45069__pinl_25913__icc_4914 = (
# 32814 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32814 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45069__pinl_25913__icc_4914 = (
# 32814 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32814 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45069__pinl_25913__icc_4914 = (
# 32814 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32814 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45069__pinl_25913__icc_4914 = (
# 32814 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 32814 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45069__pinl_25913__icc_4914__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914, SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914), ((6 + (SACp_emal_45069__pinl_25913__icc_4914__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45069__pinl_25913__icc_4914__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45069__pinl_25913__icc_4914__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45069__pinl_25913__icc_4914__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45069__pinl_25913__icc_4914__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45069__pinl_25913__icc_4914__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45069__pinl_25913__icc_4914[0] = SACp_emal_45072__uprf_29236; }
    { SACp_emal_45069__pinl_25913__icc_4914[1] = SACp_emal_45070__uprf_29239; }

    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45069__pinl_25913__icc_4914__sz; SAC_i++) { if (( SACp_emal_45069__pinl_25913__icc_4914[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_45068__pinl_25917__flat_159 = SAC_all; }
    { { { if (((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914, ((((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914) - 1)->data1.arena)); } else { if (SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914, ((((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914, ((((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914) - 1)->data1.arena)); } } else { if (((((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914, ((((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914) - 1)->data1.arena)); } else { if (((((SACp_emal_45069__pinl_25913__icc_4914__sz * sizeof (*SACp_emal_45069__pinl_25913__icc_4914))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914, ((((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45069__pinl_25913__icc_4914); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45069__pinl_25913__icc_4914__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_45068__pinl_25917__flat_159)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25924__hce_39 = SACp_pinl_25923__hce_40; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `shp' in a"); SACp_pinl_48480__emal_45105__hce_39__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25924__hce_39 = SACp_pinl_48480__emal_45105__hce_39__SSA0_1; }

    }
    if (!SACp_pinl_25924__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failedType pattern pre-condition of + failed"); }



    SACp_pinl_25891_a__SSA0_1__desc = SACl_a__desc;
    SACp_pinl_25891_a__SSA0_1__sz = SACl_a__sz;
    SACp_pinl_25891_a__SSA0_1__dim = SACl_a__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_25891_a__SSA0_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_25891_a__SSA0_1__desc) & (-1 ^ (3))))[(6 + (1))]) = SACl_a__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_25891_a__SSA0_1__desc) & (-1 ^ (3))))[4]) = SACl_a__sz;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_25891_a__SSA0_1__desc) & (-1 ^ (3))))[3]) = SACl_a__dim;
    { SACp_pinl_25891_a__SSA0_1 = SACl_a; }




    SACwf__MAIN___rtpf_8_impl__i_S__i_S (&SACp_pinl_25890__rtpf_10_res, &SACp_pinl_25890__rtpf_10_res__desc, SACp_pinl_25891_a__SSA0_1, SACp_pinl_25891_a__SSA0_1__desc, SACp_pinl_25940_b__SSA0_1, SACp_pinl_25940_b__SSA0_1__desc);




    SACp_pinl_25890__rtpf_10_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_25890__rtpf_10_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45067__isaa_34873__pinl_25890__rtpf_10_res = SACp_pinl_25890__rtpf_10_res__dim; }; }
    { { if (!((1 == SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res"); }; { if ((((6 + (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_25890__rtpf_10_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__sz = SAC_size;
      if (!((SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 32909 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 32909 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 32909 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 32909 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 32909 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 32909 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 32909 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 32909, __extension__ __PRETTY_FUNCTION__); }))
# 32909 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__sz * sizeof (*SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res)); break; case SAC_HM_multi_threaded: SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__sz * sizeof (*SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res), 0); break; case SAC_HM_any_threaded: SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__sz * sizeof (*SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_25890__rtpf_10_res__dim; SAC_i++) {
      { SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    if (!SACp_pinl_25924__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failed"); }
    ;
    ; ; { SACp_emal_45067__isaa_34873__pinl_25890__rtpf_10_res = (2) - (SACp_emal_45067__isaa_34873__pinl_25890__rtpf_10_res); };
    ; ; { SACp_emal_45064__pinl_25898__flat_164 = (SACp_emal_45067__isaa_34873__pinl_25890__rtpf_10_res) == (0); };
    { ; ; }
    if (SACp_emal_45064__pinl_25898__flat_164)
    {
      { ; ; }
      { { SACp_pinl_48483__emal_45103__hce_42 = 
# 32926 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 32926 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25906__hce_42 = SACp_pinl_48483__emal_45103__hce_42; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `d' in a"); SACp_pinl_48484__emal_45104__hce_42__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25906__hce_42 = SACp_pinl_48484__emal_45104__hce_42__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_45063__pinl_25902__flat_168__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45063__pinl_25902__flat_168"); }; { { if ((((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168)) + ((6 + (SACp_emal_45063__pinl_25902__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168)) + ((6 + (SACp_emal_45063__pinl_25902__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168)) + ((6 + (SACp_emal_45063__pinl_25902__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45063__pinl_25902__flat_168 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45063__pinl_25902__flat_168 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168)) + ((6 + (SACp_emal_45063__pinl_25902__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45063__pinl_25902__flat_168 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45063__pinl_25902__flat_168 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168)) + ((6 + (SACp_emal_45063__pinl_25902__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168)) + ((6 + (SACp_emal_45063__pinl_25902__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168)) + ((6 + (SACp_emal_45063__pinl_25902__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168)) + ((6 + (SACp_emal_45063__pinl_25902__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168)) + ((6 + (SACp_emal_45063__pinl_25902__flat_168__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45063__pinl_25902__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45063__pinl_25902__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45063__pinl_25902__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45063__pinl_25902__flat_168 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45063__pinl_25902__flat_168__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168, SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168), ((6 + (SACp_emal_45063__pinl_25902__flat_168__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45063__pinl_25902__flat_168__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45063__pinl_25902__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45063__pinl_25902__flat_168__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45063__pinl_25902__flat_168__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45063__pinl_25902__flat_168__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 32966 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 32966 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45063__pinl_25902__flat_168[SAC_i] = ( SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45066__isaa_34874__pinl_25890__rtpf_10_res__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45062__uprf_37033 = ( SACp_emal_45063__pinl_25902__flat_168[SACp_emal_45095__pinl_26167__flat_1140]); }

    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45061__uprf_37038 = ( SACp_emal_45063__pinl_25902__flat_168[SACp_emal_45096__isaa_34835_b]); }

    { { { if (((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168, ((((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168) - 1)->data1.arena)); } else { if (SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168, ((((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168, ((((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168) - 1)->data1.arena)); } } else { if (((((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168, ((((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168) - 1)->data1.arena)); } else { if (((((SACp_emal_45063__pinl_25902__flat_168__sz * sizeof (*SACp_emal_45063__pinl_25902__flat_168))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168, ((((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45063__pinl_25902__flat_168); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45063__pinl_25902__flat_168__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    ; ; { SACp_emal_45062__uprf_37033 = (-2) + (SACp_emal_45062__uprf_37033); };
    ; ; { SACp_emal_45059__uprf_37026 = (SACp_emal_45062__uprf_37033) == (0); };
    { ; ; }
    ; ; { SACp_emal_45061__uprf_37038 = (-3) + (SACp_emal_45061__uprf_37038); };
    ; ; { SACp_emal_45057__uprf_37029 = (SACp_emal_45061__uprf_37038) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_45056__pinl_25896__icc_4920__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45056__pinl_25896__icc_4920"); }; { { if ((((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920)) + ((6 + (SACp_emal_45056__pinl_25896__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920)) + ((6 + (SACp_emal_45056__pinl_25896__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920)) + ((6 + (SACp_emal_45056__pinl_25896__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45056__pinl_25896__icc_4920 = (
# 33022 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33022 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45056__pinl_25896__icc_4920 = (
# 33022 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33022 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920)) + ((6 + (SACp_emal_45056__pinl_25896__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45056__pinl_25896__icc_4920 = (
# 33022 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33022 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45056__pinl_25896__icc_4920 = (
# 33022 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33022 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920)) + ((6 + (SACp_emal_45056__pinl_25896__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920)) + ((6 + (SACp_emal_45056__pinl_25896__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920)) + ((6 + (SACp_emal_45056__pinl_25896__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920)) + ((6 + (SACp_emal_45056__pinl_25896__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920)) + ((6 + (SACp_emal_45056__pinl_25896__icc_4920__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45056__pinl_25896__icc_4920 = (
# 33022 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33022 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45056__pinl_25896__icc_4920 = (
# 33022 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33022 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45056__pinl_25896__icc_4920 = (
# 33022 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33022 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45056__pinl_25896__icc_4920 = (
# 33022 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33022 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45056__pinl_25896__icc_4920__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920, SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920), ((6 + (SACp_emal_45056__pinl_25896__icc_4920__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45056__pinl_25896__icc_4920__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45056__pinl_25896__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45056__pinl_25896__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45056__pinl_25896__icc_4920__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45056__pinl_25896__icc_4920__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45056__pinl_25896__icc_4920[0] = SACp_emal_45059__uprf_37026; }
    { SACp_emal_45056__pinl_25896__icc_4920[1] = SACp_emal_45057__uprf_37029; }

    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45056__pinl_25896__icc_4920__sz; SAC_i++) { if (( SACp_emal_45056__pinl_25896__icc_4920[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_45055__pinl_25900__flat_166 = SAC_all; }
    { { { if (((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920, ((((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920) - 1)->data1.arena)); } else { if (SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920, ((((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920, ((((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920) - 1)->data1.arena)); } } else { if (((((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920, ((((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920) - 1)->data1.arena)); } else { if (((((SACp_emal_45056__pinl_25896__icc_4920__sz * sizeof (*SACp_emal_45056__pinl_25896__icc_4920))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920, ((((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45056__pinl_25896__icc_4920); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45056__pinl_25896__icc_4920__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_45055__pinl_25900__flat_166)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25907__hce_41 = SACp_pinl_25906__hce_42; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `shp' in a"); SACp_pinl_48486__emal_45102__hce_41__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_25907__hce_41 = SACp_pinl_48486__emal_45102__hce_41__SSA0_1; }

    }
    if (!SACp_pinl_25907__hce_41) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failed"); }
    ;



    { *SAC_arg_1__p = SACp_pinl_25890__rtpf_10_res; *SAC_arg_1__desc__p = SACp_pinl_25890__rtpf_10_res__desc; }
    return;
   
  }



}
}
# 33092 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_2_3 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc, int * SACl_data, SAC_array_descriptor_t SACl_data__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
    const int SACp_emal_45191__isaa_34941_data = 2;



    int * SACp_emal_45190__isaa_34942_data;
    SAC_array_descriptor_t SACp_emal_45190__isaa_34942_data__desc = 
# 33103 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33103 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45190__isaa_34942_data__shp0 = 2;
    const int SACp_emal_45190__isaa_34942_data__sz = 2;
    const int SACp_emal_45190__isaa_34942_data__dim = 1;

    const int SACp_emal_45189__isaa_34944_shp = 1;



    int SACp_emal_45188__flat_374;
   
   




    int SACp_emal_45187__pinl_16821__icc_7670;
   
   




    
# 33126 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33126 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45186__pinl_16874__icc_7809_pred;
   
   




    
# 33133 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33133 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45185__pinl_16881__icc_7814_pred;
   
   




    int * SACp_emal_45184__pinl_16871__flat_456;
    SAC_array_descriptor_t SACp_emal_45184__pinl_16871__flat_456__desc = 
# 33141 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33141 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45184__pinl_16871__flat_456__shp0;
    int SACp_emal_45184__pinl_16871__flat_456__sz;
    const int SACp_emal_45184__pinl_16871__flat_456__dim = 1;




    
# 33149 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33149 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45183__pinl_16886__icc_7808_pred;
   
   




    
# 33156 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33156 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45182__pinl_16888__icc_7810_pred;
   
   




    
# 33163 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33163 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45181__pinl_16891__icc_7811_pred;
   
   




    
# 33170 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33170 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45180__icc_7695_pred;
   
   




    
# 33177 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33177 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45179__icc_7700_pred;
   
   




    int * SACp_emal_45178__flat_384;
    SAC_array_descriptor_t SACp_emal_45178__flat_384__desc = 
# 33185 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33185 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45178__flat_384__shp0;
    int SACp_emal_45178__flat_384__sz;
    const int SACp_emal_45178__flat_384__dim = 1;




    
# 33193 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33193 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45177__icc_7694_pred;
   
   




    
# 33200 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33200 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45176__icc_7696_pred;
   
   




    
# 33207 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 33207 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45175__icc_7697_pred;
   
   




    int * SACp_emal_45172__icc_7706;
    SAC_array_descriptor_t SACp_emal_45172__icc_7706__desc = 
# 33215 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33215 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45172__icc_7706__sz = 0;
    int SACp_emal_45172__icc_7706__dim = 0;




    int * SACp_emal_45171__isaa_34984__wlur_26769;
    SAC_array_descriptor_t SACp_emal_45171__isaa_34984__wlur_26769__desc = 
# 33223 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33223 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45171__isaa_34984__wlur_26769__shp0;
    int SACp_emal_45171__isaa_34984__wlur_26769__sz;
    const int SACp_emal_45171__isaa_34984__wlur_26769__dim = 1;




    int * SACp_emal_45170__wlur_26769;
    SAC_array_descriptor_t SACp_emal_45170__wlur_26769__desc = 
# 33232 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33232 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45170__wlur_26769__sz = 0;
    int SACp_emal_45170__wlur_26769__dim = 0;




    int * SACp_emal_45167__pinl_16947__icc_7820;
    SAC_array_descriptor_t SACp_emal_45167__pinl_16947__icc_7820__desc = 
# 33240 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33240 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45167__pinl_16947__icc_7820__sz = 0;
    int SACp_emal_45167__pinl_16947__icc_7820__dim = 0;




    int SACp_emal_45165__iveras_43038;
   
   

    const int SACp_emal_45164__iveras_43039 = 0;



    int SACp_emal_45160__pinl_16898__icc_7670__SSA11_1;
   
   




    int * SACp_emal_45157__pinl_16947__icc_7820__SSA11_1;
    SAC_array_descriptor_t SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc = 
# 33263 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33263 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__sz = 0;
    int SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__dim = 0;




    int SACp_emal_45155__iveras_43040;
   
   

    const int SACp_emal_45154__iveras_43041 = 1;



    int SACp_emal_45150__pinl_16898__icc_7670__SSA11_2;
   
   




    int * SACp_emal_45147__pinl_16947__icc_7820__SSA11_2;
    SAC_array_descriptor_t SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc = 
# 33286 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33286 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__sz = 0;
    int SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__dim = 0;




    int SACp_emal_45145__iveras_43042;
   
   

    const int SACp_emal_45144__iveras_43043 = 2;
    const int SACp_emal_45140__ivesplit_35090 = 3;



    int SACp_emal_45139__pinl_16898__icc_7670__SSA11_3;
   
   




    int * SACp_emal_45136__pinl_16947__icc_7820__SSA11_3;
    SAC_array_descriptor_t SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc = 
# 33310 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33310 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__sz = 0;
    int SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__dim = 0;




    int SACp_emal_45134__iveras_43044;
   
   

    const int SACp_emal_45133__iveras_43045 = 0;
    const int SACp_emal_45129__ivesplit_35092 = 4;



    int SACp_emal_45128__pinl_16898__icc_7670__SSA11_4;
   
   




    int * SACp_emal_45125__pinl_16947__icc_7820__SSA11_4;
    SAC_array_descriptor_t SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc = 
# 33334 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33334 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__sz = 0;
    int SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__dim = 0;




    int SACp_emal_45123__iveras_43046;
   
   

    const int SACp_emal_45122__iveras_43047 = 1;
    const int SACp_emal_45118__ivesplit_35094 = 5;



    int SACp_emal_45117__pinl_16898__icc_7670__SSA11_5;
   
   




    int * SACp_emal_45114__pinl_16947__icc_7820__SSA11_5;
    SAC_array_descriptor_t SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc = 
# 33358 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33358 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__sz = 0;
    int SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__dim = 0;




    int SACp_emal_45112__iveras_43048;
   
   

    const int SACp_emal_45111__iveras_43049 = 2;



    int SACp_wlidx_42381__pinl_16947__icc_7820__SSA11_5;
   
   




    int SACp_wlidx_42380__pinl_16947__icc_7820__SSA11_4;
   
   




    int SACp_wlidx_42379__pinl_16947__icc_7820__SSA11_3;
   
   




    int SACp_wlidx_42378__pinl_16947__icc_7820__SSA11_2;
   
   




    int SACp_wlidx_42377__pinl_16947__icc_7820__SSA11_1;
   
   




    int SACp_wlidx_42376__pinl_16947__icc_7820;
   
   




    int SACp_wlidx_42375__icc_7706;
   
   




    int * SACp_pinl_16950_iv__SSA11_5;
    SAC_array_descriptor_t SACp_pinl_16950_iv__SSA11_5__desc = 
# 33423 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33423 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_16950_iv__SSA11_5__shp0;
    int SACp_pinl_16950_iv__SSA11_5__sz;
    const int SACp_pinl_16950_iv__SSA11_5__dim = 1;




    int * SACp_pinl_16950_iv__SSA11_4;
    SAC_array_descriptor_t SACp_pinl_16950_iv__SSA11_4__desc = 
# 33432 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33432 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_16950_iv__SSA11_4__shp0;
    int SACp_pinl_16950_iv__SSA11_4__sz;
    const int SACp_pinl_16950_iv__SSA11_4__dim = 1;




    int * SACp_pinl_16950_iv__SSA11_3;
    SAC_array_descriptor_t SACp_pinl_16950_iv__SSA11_3__desc = 
# 33441 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33441 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_16950_iv__SSA11_3__shp0;
    int SACp_pinl_16950_iv__SSA11_3__sz;
    const int SACp_pinl_16950_iv__SSA11_3__dim = 1;




    int * SACp_pinl_16950_iv__SSA11_2;
    SAC_array_descriptor_t SACp_pinl_16950_iv__SSA11_2__desc = 
# 33450 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33450 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_16950_iv__SSA11_2__shp0;
    int SACp_pinl_16950_iv__SSA11_2__sz;
    const int SACp_pinl_16950_iv__SSA11_2__dim = 1;




    int * SACp_pinl_16950_iv__SSA11_1;
    SAC_array_descriptor_t SACp_pinl_16950_iv__SSA11_1__desc = 
# 33459 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33459 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_16950_iv__SSA11_1__shp0;
    int SACp_pinl_16950_iv__SSA11_1__sz;
    const int SACp_pinl_16950_iv__SSA11_1__dim = 1;




    int * SACp_pinl_16950_iv;
    SAC_array_descriptor_t SACp_pinl_16950_iv__desc = 
# 33468 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33468 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_16950_iv__shp0;
    int SACp_pinl_16950_iv__sz;
    const int SACp_pinl_16950_iv__dim = 1;




    int * SACp_hse_38;
    SAC_array_descriptor_t SACp_hse_38__desc = 
# 33477 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 33477 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_hse_38__shp0;
    int SACp_hse_38__sz;
    const int SACp_hse_38__dim = 1;





    const int SACl_data__shp0 = 2;
    const int SACl_data__shp1 = 3;
    const int SACl_data__sz = 6;
    const int SACl_data__dim = 2;




    int SACl_shp__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_shp__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[4]);
    const int SACl_shp__dim = 1;

   
    { { if (!((1 == SACp_emal_45190__isaa_34942_data__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45190__isaa_34942_data"); }; { { if ((((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data)) + ((6 + (SACp_emal_45190__isaa_34942_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data)) + ((6 + (SACp_emal_45190__isaa_34942_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data)) + ((6 + (SACp_emal_45190__isaa_34942_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45190__isaa_34942_data = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45190__isaa_34942_data = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data)) + ((6 + (SACp_emal_45190__isaa_34942_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45190__isaa_34942_data = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45190__isaa_34942_data = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data)) + ((6 + (SACp_emal_45190__isaa_34942_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data)) + ((6 + (SACp_emal_45190__isaa_34942_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data)) + ((6 + (SACp_emal_45190__isaa_34942_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data)) + ((6 + (SACp_emal_45190__isaa_34942_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data)) + ((6 + (SACp_emal_45190__isaa_34942_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45190__isaa_34942_data = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45190__isaa_34942_data = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45190__isaa_34942_data = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45190__isaa_34942_data = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45190__isaa_34942_data__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data, SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data), ((6 + (SACp_emal_45190__isaa_34942_data__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45190__isaa_34942_data__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45190__isaa_34942_data__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45190__isaa_34942_data__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45190__isaa_34942_data__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45190__isaa_34942_data__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45190__isaa_34942_data[0] = 2; }
    { SACp_emal_45190__isaa_34942_data[1] = 3; }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 37, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45188__flat_374 = 0; }; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45187__pinl_16821__icc_7670 = ( SACl_data[SACp_emal_45188__flat_374]); }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45186__pinl_16874__icc_7809_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45186__pinl_16874__icc_7809_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45185__pinl_16881__icc_7814_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45185__pinl_16881__icc_7814_pred = SAC_all; }
    { { if (!((1 == SACp_emal_45184__pinl_16871__flat_456__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45184__pinl_16871__flat_456"); }; { if ((((6 + (SACp_emal_45184__pinl_16871__flat_456__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45184__pinl_16871__flat_456__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45184__pinl_16871__flat_456__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45184__pinl_16871__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45184__pinl_16871__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45184__pinl_16871__flat_456__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45184__pinl_16871__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45184__pinl_16871__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45184__pinl_16871__flat_456__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45184__pinl_16871__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45184__pinl_16871__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45184__pinl_16871__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45184__pinl_16871__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45184__pinl_16871__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45184__pinl_16871__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45184__pinl_16871__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45184__pinl_16871__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45184__pinl_16871__flat_456__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45184__pinl_16871__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45184__pinl_16871__flat_456__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45184__pinl_16871__flat_456__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45184__pinl_16871__flat_456__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45184__pinl_16871__flat_456__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_shp__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45184__pinl_16871__flat_456__desc) & (-1 ^ (3))))[4]) = SACp_emal_45184__pinl_16871__flat_456__sz = SAC_size * SACl_shp__sz;
      if (!((SACp_emal_45184__pinl_16871__flat_456__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33554 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33554 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33554 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33554 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33554 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33554 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33554 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33554, __extension__ __PRETTY_FUNCTION__); }))
# 33554 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45184__pinl_16871__flat_456 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45184__pinl_16871__flat_456__sz * sizeof (*SACp_emal_45184__pinl_16871__flat_456)); break; case SAC_HM_multi_threaded: SACp_emal_45184__pinl_16871__flat_456 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45184__pinl_16871__flat_456__sz * sizeof (*SACp_emal_45184__pinl_16871__flat_456), 0); break; case SAC_HM_any_threaded: SACp_emal_45184__pinl_16871__flat_456 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45184__pinl_16871__flat_456__sz * sizeof (*SACp_emal_45184__pinl_16871__flat_456), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45184__pinl_16871__flat_456__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45184__pinl_16871__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45184__pinl_16871__flat_456__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45184__pinl_16871__flat_456__sz; SAC_i++) { { SACp_emal_45184__pinl_16871__flat_456[SAC_i] = (0) * (( SACl_shp[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45184__pinl_16871__flat_456__sz; SAC_i++) { if (( SACp_emal_45184__pinl_16871__flat_456[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACp_emal_45184__pinl_16871__flat_456"); } { SACp_emal_45183__pinl_16886__icc_7808_pred = ( SACp_emal_45184__pinl_16871__flat_456[SAC_i]); }; } SACp_emal_45183__pinl_16886__icc_7808_pred = SAC_all; }
        if (SACp_emal_45184__pinl_16871__flat_456__dim != SACl_shp__dim) {
      SACp_emal_45182__pinl_16888__icc_7810_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_emal_45184__pinl_16871__flat_456""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_45184__pinl_16871__flat_456__desc), SAC_PrintShape (SACl_shp__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_45184__pinl_16871__flat_456__shp0 != SACl_shp__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_emal_45184__pinl_16871__flat_456""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_45184__pinl_16871__flat_456__desc), SAC_PrintShape (SACl_shp__desc));
      }
      SACp_emal_45182__pinl_16888__icc_7810_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45184__pinl_16871__flat_456__sz && SAC_i < SACl_shp__sz; SAC_i++) { if (( SACp_emal_45184__pinl_16871__flat_456[SAC_i]) > ( SACl_shp[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Vector constraint `" "SACp_emal_45184__pinl_16871__flat_456" " < " "SACl_shp" "' violated"); } } SACp_emal_45181__pinl_16891__icc_7811_pred = SAC_all; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45180__icc_7695_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45180__icc_7695_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45179__icc_7700_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45179__icc_7700_pred = SAC_all; }
    { { if (!((1 == SACp_emal_45178__flat_384__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45178__flat_384"); }; { if ((((6 + (SACp_emal_45178__flat_384__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45178__flat_384__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45178__flat_384__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45178__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45178__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45178__flat_384__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45178__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45178__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45178__flat_384__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45178__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45178__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45178__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45178__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45178__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45178__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45178__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45178__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45178__flat_384__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45178__flat_384__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45178__flat_384__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45178__flat_384__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45178__flat_384__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45178__flat_384__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_shp__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45178__flat_384__desc) & (-1 ^ (3))))[4]) = SACp_emal_45178__flat_384__sz = SAC_size * SACl_shp__sz;
      if (!((SACp_emal_45178__flat_384__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33593 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33593 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33593 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33593 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33593 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33593 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33593 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33593, __extension__ __PRETTY_FUNCTION__); }))
# 33593 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45178__flat_384 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45178__flat_384__sz * sizeof (*SACp_emal_45178__flat_384)); break; case SAC_HM_multi_threaded: SACp_emal_45178__flat_384 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45178__flat_384__sz * sizeof (*SACp_emal_45178__flat_384), 0); break; case SAC_HM_any_threaded: SACp_emal_45178__flat_384 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45178__flat_384__sz * sizeof (*SACp_emal_45178__flat_384), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45178__flat_384__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45178__flat_384__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45178__flat_384__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45178__flat_384__sz; SAC_i++) { { SACp_emal_45178__flat_384[SAC_i] = (0) * (( SACl_shp[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45178__flat_384__sz; SAC_i++) { if (( SACp_emal_45178__flat_384[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_45178__flat_384"); } { SACp_emal_45177__icc_7694_pred = ( SACp_emal_45178__flat_384[SAC_i]); }; } SACp_emal_45177__icc_7694_pred = SAC_all; }
        if (SACp_emal_45178__flat_384__dim != SACl_shp__dim) {
      SACp_emal_45176__icc_7696_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Arrays `" "SACp_emal_45178__flat_384""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_45178__flat_384__desc), SAC_PrintShape (SACl_shp__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_45178__flat_384__shp0 != SACl_shp__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Arrays `" "SACp_emal_45178__flat_384""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_45178__flat_384__desc), SAC_PrintShape (SACl_shp__desc));
      }
      SACp_emal_45176__icc_7696_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45178__flat_384__sz && SAC_i < SACl_shp__sz; SAC_i++) { if (( SACp_emal_45178__flat_384[SAC_i]) > ( SACl_shp[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Vector constraint `" "SACp_emal_45178__flat_384" " < " "SACl_shp" "' violated"); } } SACp_emal_45175__icc_7697_pred = SAC_all; }
    if (!SACp_emal_45179__icc_7700_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45175__icc_7697_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45176__icc_7696_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45180__icc_7695_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45177__icc_7694_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    { { if (!(((SACl_shp__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45172__icc_7706"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33616 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33616 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33616 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33616 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33616 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33616 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33616 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33616, __extension__ __PRETTY_FUNCTION__); }))
# 33616 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45172__icc_7706__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45172__icc_7706__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45172__icc_7706__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[3]) = SACp_emal_45172__icc_7706__dim = (SACl_shp__sz) + (0); }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_45172__icc_7706__dim == SACl_shp__sz + (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACl_shp[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[4]) = SACp_emal_45172__icc_7706__sz = SAC_size;
      if (!((SACp_emal_45172__icc_7706__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33636 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33636 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33636 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33636 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33636 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33636 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33636 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33636, __extension__ __PRETTY_FUNCTION__); }))
# 33636 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45172__icc_7706 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45172__icc_7706__sz * sizeof (*SACp_emal_45172__icc_7706)); break; case SAC_HM_multi_threaded: SACp_emal_45172__icc_7706 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45172__icc_7706__sz * sizeof (*SACp_emal_45172__icc_7706), 0); break; case SAC_HM_any_threaded: SACp_emal_45172__icc_7706 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45172__icc_7706__sz * sizeof (*SACp_emal_45172__icc_7706), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_hse_38__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_hse_38"); }; { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_hse_38__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_hse_38__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45178__flat_384__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[4]) = SACp_hse_38__sz = SAC_size * SACp_emal_45178__flat_384__sz;
      if (!((SACp_hse_38__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33651 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33651 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33651 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33651 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33651 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33651 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33651 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33651, __extension__ __PRETTY_FUNCTION__); }))
# 33651 "/home/rubenhensen/sac/a.out.c"
   ; SACp_hse_38 = (int *)SAC_HM_MallocAnyChunk_st (SACp_hse_38__sz * sizeof (*SACp_hse_38)); break; case SAC_HM_multi_threaded: SACp_hse_38 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_hse_38__sz * sizeof (*SACp_hse_38), 0); break; case SAC_HM_any_threaded: SACp_hse_38 = (int *)SAC_HM_MallocAnyChunk_at (SACp_hse_38__sz * sizeof (*SACp_hse_38), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_hse_38__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_hse_38[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_45172__icc_7706__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_45172__icc_7706_shpfac0; SAC_d = SACp_emal_45172__icc_7706__dim - 1; SACp_wlidx_42375__icc_7706 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_45172__icc_7706_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_45178__flat_384[SAC_d]) <= ( SACp_hse_38[SAC_d])) && (( SACp_hse_38[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_45172__icc_7706__dim - SACp_hse_38__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45172__icc_7706_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal size found!"); };
    { SACp_emal_45172__icc_7706[SACp_wlidx_42375__icc_7706] = SACp_emal_45188__flat_374; };

    } else {



    if (!((0 == (SACp_emal_45172__icc_7706__dim - SACp_hse_38__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45172__icc_7706_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal size found!"); };
    { SACp_emal_45172__icc_7706[SACp_wlidx_42375__icc_7706] = SACp_emal_45188__flat_374; };

    }
    SACp_wlidx_42375__icc_7706 = SACp_wlidx_42375__icc_7706 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_hse_38[SAC_d] = ( SACp_hse_38[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_hse_38[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_hse_38[SAC_d] = 0; SAC_d--; SACp_hse_38[SAC_d] = ( SACp_hse_38[SAC_d]) + 1; } SAC_within_bounds = ( SACp_hse_38[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_emal_45178__flat_384); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45178__flat_384__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_hse_38); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_45179__icc_7700_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45175__icc_7697_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45176__icc_7696_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45180__icc_7695_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45177__icc_7694_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { if (!((1 == SACp_emal_45171__isaa_34984__wlur_26769__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45171__isaa_34984__wlur_26769"); }; { if ((((6 + (SACp_emal_45171__isaa_34984__wlur_26769__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45171__isaa_34984__wlur_26769__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45171__isaa_34984__wlur_26769__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45171__isaa_34984__wlur_26769__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45171__isaa_34984__wlur_26769__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45171__isaa_34984__wlur_26769__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45171__isaa_34984__wlur_26769__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45171__isaa_34984__wlur_26769__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45171__isaa_34984__wlur_26769__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45171__isaa_34984__wlur_26769__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45171__isaa_34984__wlur_26769__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45171__isaa_34984__wlur_26769__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45171__isaa_34984__wlur_26769__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45171__isaa_34984__wlur_26769__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45171__isaa_34984__wlur_26769__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45171__isaa_34984__wlur_26769__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45171__isaa_34984__wlur_26769__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45171__isaa_34984__wlur_26769__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45171__isaa_34984__wlur_26769__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45171__isaa_34984__wlur_26769__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_emal_45190__isaa_34942_data__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_45171__isaa_34984__wlur_26769__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45171__isaa_34984__wlur_26769__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45171__isaa_34984__wlur_26769__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45190__isaa_34942_data__sz + SACl_shp__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45171__isaa_34984__wlur_26769__desc) & (-1 ^ (3))))[4]) = SACp_emal_45171__isaa_34984__wlur_26769__sz = SAC_size;
      if (!((SACp_emal_45171__isaa_34984__wlur_26769__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33718 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33718 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33718 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33718 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33718 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33718 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33718 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33718, __extension__ __PRETTY_FUNCTION__); }))
# 33718 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45171__isaa_34984__wlur_26769 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45171__isaa_34984__wlur_26769__sz * sizeof (*SACp_emal_45171__isaa_34984__wlur_26769)); break; case SAC_HM_multi_threaded: SACp_emal_45171__isaa_34984__wlur_26769 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45171__isaa_34984__wlur_26769__sz * sizeof (*SACp_emal_45171__isaa_34984__wlur_26769), 0); break; case SAC_HM_any_threaded: SACp_emal_45171__isaa_34984__wlur_26769 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45171__isaa_34984__wlur_26769__sz * sizeof (*SACp_emal_45171__isaa_34984__wlur_26769), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45171__isaa_34984__wlur_26769__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45171__isaa_34984__wlur_26769__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45171__isaa_34984__wlur_26769__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACp_emal_45190__isaa_34942_data__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_45171__isaa_34984__wlur_26769[SAC_i] = ( SACp_emal_45190__isaa_34942_data[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { { SACp_emal_45171__isaa_34984__wlur_26769[SAC_off + SAC_i] = ( SACl_shp[SAC_i]); }; } }
    { { { if (((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data, ((((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data) - 1)->data1.arena)); } else { if (SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data, ((((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data, ((((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data) - 1)->data1.arena)); } } else { if (((((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data, ((((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data) - 1)->data1.arena)); } else { if (((((SACp_emal_45190__isaa_34942_data__sz * sizeof (*SACp_emal_45190__isaa_34942_data))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data, ((((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45190__isaa_34942_data); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45190__isaa_34942_data__desc) & (-1 ^ (3))))); } } }
    { { if (!(((2) + (SACp_emal_45172__icc_7706__dim) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45170__wlur_26769"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33721 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33721 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33721 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33721 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33721 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33721 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33721 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33721, __extension__ __PRETTY_FUNCTION__); }))
# 33721 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45170__wlur_26769__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((2) + (SACp_emal_45172__icc_7706__dim))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45170__wlur_26769__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((2) + (SACp_emal_45172__icc_7706__dim))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45170__wlur_26769__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((2) + (SACp_emal_45172__icc_7706__dim))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45170__wlur_26769__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45170__wlur_26769__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45170__wlur_26769__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45170__wlur_26769__desc) & (-1 ^ (3))))[3]) = SACp_emal_45170__wlur_26769__dim = (2) + (SACp_emal_45172__icc_7706__dim); }



    if (!((SACp_emal_45172__icc_7706__dim == SACp_emal_45172__icc_7706__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 1 have different dimension!"); };
    if (!((SACp_emal_45172__icc_7706__sz == SACp_emal_45172__icc_7706__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 1 have different size!"); };
    for (int SAC_d = 0; SAC_d < SACp_emal_45172__icc_7706__dim; SAC_d++) {
      if (!(((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 1 have different shape!"); };
    }
    if (!((SACp_emal_45172__icc_7706__dim == SACp_emal_45172__icc_7706__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 2 have different dimension!"); };
    if (!((SACp_emal_45172__icc_7706__sz == SACp_emal_45172__icc_7706__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 2 have different size!"); };
    for (int SAC_d = 0; SAC_d < SACp_emal_45172__icc_7706__dim; SAC_d++) {
      if (!(((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 2 have different shape!"); };
    }
    if (!((SACp_emal_45172__icc_7706__dim == SACp_emal_45172__icc_7706__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 3 have different dimension!"); };
    if (!((SACp_emal_45172__icc_7706__sz == SACp_emal_45172__icc_7706__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 3 have different size!"); };
    for (int SAC_d = 0; SAC_d < SACp_emal_45172__icc_7706__dim; SAC_d++) {
      if (!(((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 3 have different shape!"); };
    }
    if (!((SACp_emal_45172__icc_7706__dim == SACp_emal_45172__icc_7706__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 4 have different dimension!"); };
    if (!((SACp_emal_45172__icc_7706__sz == SACp_emal_45172__icc_7706__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 4 have different size!"); };
    for (int SAC_d = 0; SAC_d < SACp_emal_45172__icc_7706__dim; SAC_d++) {
      if (!(((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 4 have different shape!"); };
    }
    if (!((SACp_emal_45172__icc_7706__dim == SACp_emal_45172__icc_7706__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 5 have different dimension!"); };
    if (!((SACp_emal_45172__icc_7706__sz == SACp_emal_45172__icc_7706__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 5 have different size!"); };
    for (int SAC_d = 0; SAC_d < SACp_emal_45172__icc_7706__dim; SAC_d++) {
      if (!(((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_d))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 5 have different shape!"); };
    }
    if (!((SACp_emal_45170__wlur_26769__dim == (2) + SACp_emal_45172__icc_7706__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_j;
      int SAC_size = 1;
SAC_size *=
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45170__wlur_26769__desc) & (-1 ^ (3))))[(6 + (0))]) = 2;
SAC_size *=
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45170__wlur_26769__desc) & (-1 ^ (3))))[(6 + (1))]) = 3;
SAC_i = 2; for (SAC_j = 0; SAC_i < SACp_emal_45170__wlur_26769__dim; SAC_i++, SAC_j++) {
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45170__wlur_26769__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))[(6 + (SAC_j))]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45170__wlur_26769__desc) & (-1 ^ (3))))[4]) = SACp_emal_45170__wlur_26769__sz = SAC_size * SACp_emal_45172__icc_7706__sz;
      if (!((SACp_emal_45170__wlur_26769__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33766 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33766 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33766 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33766 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33766 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33766 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33766 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33766, __extension__ __PRETTY_FUNCTION__); }))
# 33766 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45170__wlur_26769 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45170__wlur_26769__sz * sizeof (*SACp_emal_45170__wlur_26769)); break; case SAC_HM_multi_threaded: SACp_emal_45170__wlur_26769 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45170__wlur_26769__sz * sizeof (*SACp_emal_45170__wlur_26769), 0); break; case SAC_HM_any_threaded: SACp_emal_45170__wlur_26769 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45170__wlur_26769__sz * sizeof (*SACp_emal_45170__wlur_26769), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45170__wlur_26769__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45170__wlur_26769__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45170__wlur_26769__desc) & (-1 ^ (3))))[1]) = 0; } }



    {
      int SAC_j, SAC_i = 0;
      for (SAC_j = 0; SAC_j < SACp_emal_45172__icc_7706__sz; SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45172__icc_7706[SAC_j]); }
        SAC_i++;
      }
      if (!((SACp_emal_45172__icc_7706__sz == SACp_emal_45172__icc_7706__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 1 have different size!"); };
      for (SAC_j = 0; SAC_j < SACp_emal_45172__icc_7706__sz; SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45172__icc_7706[SAC_j]); }
        SAC_i++;
      }
      if (!((SACp_emal_45172__icc_7706__sz == SACp_emal_45172__icc_7706__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 2 have different size!"); };
      for (SAC_j = 0; SAC_j < SACp_emal_45172__icc_7706__sz; SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45172__icc_7706[SAC_j]); }
        SAC_i++;
      }
      if (!((SACp_emal_45172__icc_7706__sz == SACp_emal_45172__icc_7706__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 3 have different size!"); };
      for (SAC_j = 0; SAC_j < SACp_emal_45172__icc_7706__sz; SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45172__icc_7706[SAC_j]); }
        SAC_i++;
      }
      if (!((SACp_emal_45172__icc_7706__sz == SACp_emal_45172__icc_7706__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 4 have different size!"); };
      for (SAC_j = 0; SAC_j < SACp_emal_45172__icc_7706__sz; SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45172__icc_7706[SAC_j]); }
        SAC_i++;
      }
      if (!((SACp_emal_45172__icc_7706__sz == SACp_emal_45172__icc_7706__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 5 have different size!"); };
      for (SAC_j = 0; SAC_j < SACp_emal_45172__icc_7706__sz; SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45172__icc_7706[SAC_j]); }
        SAC_i++;
      }
      if (!((SACp_emal_45170__wlur_26769__sz == SAC_i))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found!"); };
    }

    { { free (SACp_emal_45172__icc_7706); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45172__icc_7706__desc) & (-1 ^ (3))))); } } }
    { { if (!(((SACl_shp__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45167__pinl_16947__icc_7820"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33805 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33805 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33805 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33805 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33805 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33805 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33805 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33805, __extension__ __PRETTY_FUNCTION__); }))
# 33805 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45167__pinl_16947__icc_7820__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45167__pinl_16947__icc_7820__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45167__pinl_16947__icc_7820__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[3]) = SACp_emal_45167__pinl_16947__icc_7820__dim = (SACl_shp__sz) + (0); }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_45167__pinl_16947__icc_7820__dim == SACl_shp__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACl_shp[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[4]) = SACp_emal_45167__pinl_16947__icc_7820__sz = SAC_size;
      if (!((SACp_emal_45167__pinl_16947__icc_7820__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33825 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33825 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33825 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33825 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33825 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33825 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33825 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33825, __extension__ __PRETTY_FUNCTION__); }))
# 33825 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45167__pinl_16947__icc_7820 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45167__pinl_16947__icc_7820__sz * sizeof (*SACp_emal_45167__pinl_16947__icc_7820)); break; case SAC_HM_multi_threaded: SACp_emal_45167__pinl_16947__icc_7820 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45167__pinl_16947__icc_7820__sz * sizeof (*SACp_emal_45167__pinl_16947__icc_7820), 0); break; case SAC_HM_any_threaded: SACp_emal_45167__pinl_16947__icc_7820 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45167__pinl_16947__icc_7820__sz * sizeof (*SACp_emal_45167__pinl_16947__icc_7820), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_16950_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_16950_iv"); }; { if ((((6 + (SACp_pinl_16950_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_16950_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_16950_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_16950_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_16950_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_16950_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_16950_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_16950_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_16950_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_16950_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_16950_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_16950_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_16950_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_16950_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_16950_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45184__pinl_16871__flat_456__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_16950_iv__sz = SAC_size * SACp_emal_45184__pinl_16871__flat_456__sz;
      if (!((SACp_pinl_16950_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33840 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33840 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33840 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33840 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33840 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33840 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33840 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33840, __extension__ __PRETTY_FUNCTION__); }))
# 33840 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_16950_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_16950_iv__sz * sizeof (*SACp_pinl_16950_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_16950_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_16950_iv__sz * sizeof (*SACp_pinl_16950_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_16950_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_16950_iv__sz * sizeof (*SACp_pinl_16950_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_16950_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_16950_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_45167__pinl_16947__icc_7820__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_45167__pinl_16947__icc_7820_shpfac0; SAC_d = SACp_emal_45167__pinl_16947__icc_7820__dim - 1; SACp_wlidx_42376__pinl_16947__icc_7820 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_45167__pinl_16947__icc_7820_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_45184__pinl_16871__flat_456[SAC_d]) <= ( SACp_pinl_16950_iv[SAC_d])) && (( SACp_pinl_16950_iv[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_45167__pinl_16947__icc_7820__dim - SACp_pinl_16950_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45167__pinl_16947__icc_7820_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
    { SACp_emal_45167__pinl_16947__icc_7820[SACp_wlidx_42376__pinl_16947__icc_7820] = SACp_emal_45187__pinl_16821__icc_7670; };

    } else {



    if (!((0 == (SACp_emal_45167__pinl_16947__icc_7820__dim - SACp_pinl_16950_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45167__pinl_16947__icc_7820_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal size found!"); };
    { SACp_emal_45167__pinl_16947__icc_7820[SACp_wlidx_42376__pinl_16947__icc_7820] = SACp_emal_45187__pinl_16821__icc_7670; };

    }
    SACp_wlidx_42376__pinl_16947__icc_7820 = SACp_wlidx_42376__pinl_16947__icc_7820 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_16950_iv[SAC_d] = ( SACp_pinl_16950_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_16950_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_16950_iv[SAC_d] = 0; SAC_d--; SACp_pinl_16950_iv[SAC_d] = ( SACp_pinl_16950_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_16950_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_16950_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45165__iveras_43038 = 0; }; }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      SAC_l = ( ( SACp_emal_45171__isaa_34984__wlur_26769[1]) * SACp_emal_45165__iveras_43038 + SACp_emal_45164__iveras_43039 );
      for (SAC_i = (2); SAC_i < SACp_emal_45171__isaa_34984__wlur_26769__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_45171__isaa_34984__wlur_26769[SAC_i]);
      }
      SACp_emal_45165__iveras_43038 = SAC_l;
    }

    { ; ; }
    ;



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "2nd argument of _idx_modarray_AxSxA_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_45165__iveras_43038;
      for (int SAC_i = SAC_idx, SAC_j = 0; SAC_j < SACp_emal_45167__pinl_16947__icc_7820__sz; SAC_i++, SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45167__pinl_16947__icc_7820[SAC_j]); }
      }
    }

    { { free (SACp_emal_45167__pinl_16947__icc_7820); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45167__pinl_16947__icc_7820__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45160__pinl_16898__icc_7670__SSA11_1 = ( SACl_data[SACp_emal_45189__isaa_34944_shp]); }

    { ; ; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { { if (!(((SACl_shp__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45157__pinl_16947__icc_7820__SSA11_1"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33945 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33945 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33945 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33945 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33945 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33945 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33945 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33945, __extension__ __PRETTY_FUNCTION__); }))
# 33945 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[3]) = SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__dim = (SACl_shp__sz) + (0); }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__dim == SACl_shp__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACl_shp[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__sz = SAC_size;
      if (!((SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33965 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33965 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33965 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33965 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33965 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33965 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33965 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33965, __extension__ __PRETTY_FUNCTION__); }))
# 33965 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45157__pinl_16947__icc_7820__SSA11_1 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__sz * sizeof (*SACp_emal_45157__pinl_16947__icc_7820__SSA11_1)); break; case SAC_HM_multi_threaded: SACp_emal_45157__pinl_16947__icc_7820__SSA11_1 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__sz * sizeof (*SACp_emal_45157__pinl_16947__icc_7820__SSA11_1), 0); break; case SAC_HM_any_threaded: SACp_emal_45157__pinl_16947__icc_7820__SSA11_1 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__sz * sizeof (*SACp_emal_45157__pinl_16947__icc_7820__SSA11_1), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_16950_iv__SSA11_1__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_16950_iv__SSA11_1"); }; { if ((((6 + (SACp_pinl_16950_iv__SSA11_1__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__SSA11_1__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__SSA11_1__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__SSA11_1__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_16950_iv__SSA11_1__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_16950_iv__SSA11_1__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__SSA11_1__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_16950_iv__SSA11_1__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_16950_iv__SSA11_1__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_16950_iv__SSA11_1__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_16950_iv__SSA11_1__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_16950_iv__SSA11_1__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_16950_iv__SSA11_1__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_16950_iv__SSA11_1__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_16950_iv__SSA11_1__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_16950_iv__SSA11_1__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_16950_iv__SSA11_1__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_1__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_1__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_16950_iv__SSA11_1__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_16950_iv__SSA11_1__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45184__pinl_16871__flat_456__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_1__desc) & (-1 ^ (3))))[4]) = SACp_pinl_16950_iv__SSA11_1__sz = SAC_size * SACp_emal_45184__pinl_16871__flat_456__sz;
      if (!((SACp_pinl_16950_iv__SSA11_1__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 33980 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 33980 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33980 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 33980 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 33980 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 33980 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 33980 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 33980, __extension__ __PRETTY_FUNCTION__); }))
# 33980 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_16950_iv__SSA11_1 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_16950_iv__SSA11_1__sz * sizeof (*SACp_pinl_16950_iv__SSA11_1)); break; case SAC_HM_multi_threaded: SACp_pinl_16950_iv__SSA11_1 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_16950_iv__SSA11_1__sz * sizeof (*SACp_pinl_16950_iv__SSA11_1), 0); break; case SAC_HM_any_threaded: SACp_pinl_16950_iv__SSA11_1 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_16950_iv__SSA11_1__sz * sizeof (*SACp_pinl_16950_iv__SSA11_1), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_1__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_1__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_16950_iv__SSA11_1__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_16950_iv__SSA11_1[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_45157__pinl_16947__icc_7820__SSA11_1_shpfac0; SAC_d = SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__dim - 1; SACp_wlidx_42377__pinl_16947__icc_7820__SSA11_1 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_45157__pinl_16947__icc_7820__SSA11_1_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_45184__pinl_16871__flat_456[SAC_d]) <= ( SACp_pinl_16950_iv__SSA11_1[SAC_d])) && (( SACp_pinl_16950_iv__SSA11_1[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__dim - SACp_pinl_16950_iv__SSA11_1__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45157__pinl_16947__icc_7820__SSA11_1_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
    { SACp_emal_45157__pinl_16947__icc_7820__SSA11_1[SACp_wlidx_42377__pinl_16947__icc_7820__SSA11_1] = SACp_emal_45160__pinl_16898__icc_7670__SSA11_1; };

    } else {



    if (!((0 == (SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__dim - SACp_pinl_16950_iv__SSA11_1__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45157__pinl_16947__icc_7820__SSA11_1_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal size found!"); };
    { SACp_emal_45157__pinl_16947__icc_7820__SSA11_1[SACp_wlidx_42377__pinl_16947__icc_7820__SSA11_1] = SACp_emal_45160__pinl_16898__icc_7670__SSA11_1; };

    }
    SACp_wlidx_42377__pinl_16947__icc_7820__SSA11_1 = SACp_wlidx_42377__pinl_16947__icc_7820__SSA11_1 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_16950_iv__SSA11_1[SAC_d] = ( SACp_pinl_16950_iv__SSA11_1[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_16950_iv__SSA11_1[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_16950_iv__SSA11_1[SAC_d] = 0; SAC_d--; SACp_pinl_16950_iv__SSA11_1[SAC_d] = ( SACp_pinl_16950_iv__SSA11_1[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_16950_iv__SSA11_1[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_16950_iv__SSA11_1); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_1__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45155__iveras_43040 = 0; }; }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      SAC_l = ( ( SACp_emal_45171__isaa_34984__wlur_26769[1]) * SACp_emal_45155__iveras_43040 + SACp_emal_45154__iveras_43041 );
      for (SAC_i = (2); SAC_i < SACp_emal_45171__isaa_34984__wlur_26769__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_45171__isaa_34984__wlur_26769[SAC_i]);
      }
      SACp_emal_45155__iveras_43040 = SAC_l;
    }

    { ; ; }
    ;



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "2nd argument of _idx_modarray_AxSxA_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_45155__iveras_43040;
      for (int SAC_i = SAC_idx, SAC_j = 0; SAC_j < SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__sz; SAC_i++, SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45157__pinl_16947__icc_7820__SSA11_1[SAC_j]); }
      }
    }

    { { free (SACp_emal_45157__pinl_16947__icc_7820__SSA11_1); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45157__pinl_16947__icc_7820__SSA11_1__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45150__pinl_16898__icc_7670__SSA11_2 = ( SACl_data[SACp_emal_45191__isaa_34941_data]); }

    { ; ; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { { if (!(((SACl_shp__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45147__pinl_16947__icc_7820__SSA11_2"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34085 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34085 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34085 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34085 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34085 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34085 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34085 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34085, __extension__ __PRETTY_FUNCTION__); }))
# 34085 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[3]) = SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__dim = (SACl_shp__sz) + (0); }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__dim == SACl_shp__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACl_shp[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[4]) = SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__sz = SAC_size;
      if (!((SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34105 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34105 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34105 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34105 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34105 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34105 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34105 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34105, __extension__ __PRETTY_FUNCTION__); }))
# 34105 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45147__pinl_16947__icc_7820__SSA11_2 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__sz * sizeof (*SACp_emal_45147__pinl_16947__icc_7820__SSA11_2)); break; case SAC_HM_multi_threaded: SACp_emal_45147__pinl_16947__icc_7820__SSA11_2 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__sz * sizeof (*SACp_emal_45147__pinl_16947__icc_7820__SSA11_2), 0); break; case SAC_HM_any_threaded: SACp_emal_45147__pinl_16947__icc_7820__SSA11_2 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__sz * sizeof (*SACp_emal_45147__pinl_16947__icc_7820__SSA11_2), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_16950_iv__SSA11_2__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_16950_iv__SSA11_2"); }; { if ((((6 + (SACp_pinl_16950_iv__SSA11_2__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__SSA11_2__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__SSA11_2__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__SSA11_2__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_16950_iv__SSA11_2__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_16950_iv__SSA11_2__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__SSA11_2__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_16950_iv__SSA11_2__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_16950_iv__SSA11_2__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_16950_iv__SSA11_2__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_16950_iv__SSA11_2__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_16950_iv__SSA11_2__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_16950_iv__SSA11_2__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_16950_iv__SSA11_2__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_16950_iv__SSA11_2__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_16950_iv__SSA11_2__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_16950_iv__SSA11_2__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_2__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_2__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_2__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_16950_iv__SSA11_2__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_16950_iv__SSA11_2__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_2__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45184__pinl_16871__flat_456__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_2__desc) & (-1 ^ (3))))[4]) = SACp_pinl_16950_iv__SSA11_2__sz = SAC_size * SACp_emal_45184__pinl_16871__flat_456__sz;
      if (!((SACp_pinl_16950_iv__SSA11_2__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34120 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34120 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34120 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34120 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34120 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34120 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34120 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34120, __extension__ __PRETTY_FUNCTION__); }))
# 34120 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_16950_iv__SSA11_2 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_16950_iv__SSA11_2__sz * sizeof (*SACp_pinl_16950_iv__SSA11_2)); break; case SAC_HM_multi_threaded: SACp_pinl_16950_iv__SSA11_2 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_16950_iv__SSA11_2__sz * sizeof (*SACp_pinl_16950_iv__SSA11_2), 0); break; case SAC_HM_any_threaded: SACp_pinl_16950_iv__SSA11_2 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_16950_iv__SSA11_2__sz * sizeof (*SACp_pinl_16950_iv__SSA11_2), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_2__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_2__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_2__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_16950_iv__SSA11_2__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_16950_iv__SSA11_2[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_45147__pinl_16947__icc_7820__SSA11_2_shpfac0; SAC_d = SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__dim - 1; SACp_wlidx_42378__pinl_16947__icc_7820__SSA11_2 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_45147__pinl_16947__icc_7820__SSA11_2_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_45184__pinl_16871__flat_456[SAC_d]) <= ( SACp_pinl_16950_iv__SSA11_2[SAC_d])) && (( SACp_pinl_16950_iv__SSA11_2[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__dim - SACp_pinl_16950_iv__SSA11_2__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45147__pinl_16947__icc_7820__SSA11_2_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
    { SACp_emal_45147__pinl_16947__icc_7820__SSA11_2[SACp_wlidx_42378__pinl_16947__icc_7820__SSA11_2] = SACp_emal_45150__pinl_16898__icc_7670__SSA11_2; };

    } else {



    if (!((0 == (SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__dim - SACp_pinl_16950_iv__SSA11_2__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45147__pinl_16947__icc_7820__SSA11_2_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal size found!"); };
    { SACp_emal_45147__pinl_16947__icc_7820__SSA11_2[SACp_wlidx_42378__pinl_16947__icc_7820__SSA11_2] = SACp_emal_45150__pinl_16898__icc_7670__SSA11_2; };

    }
    SACp_wlidx_42378__pinl_16947__icc_7820__SSA11_2 = SACp_wlidx_42378__pinl_16947__icc_7820__SSA11_2 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_16950_iv__SSA11_2[SAC_d] = ( SACp_pinl_16950_iv__SSA11_2[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_16950_iv__SSA11_2[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_16950_iv__SSA11_2[SAC_d] = 0; SAC_d--; SACp_pinl_16950_iv__SSA11_2[SAC_d] = ( SACp_pinl_16950_iv__SSA11_2[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_16950_iv__SSA11_2[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_16950_iv__SSA11_2); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_2__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45145__iveras_43042 = 0; }; }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      SAC_l = ( ( SACp_emal_45171__isaa_34984__wlur_26769[1]) * SACp_emal_45145__iveras_43042 + SACp_emal_45144__iveras_43043 );
      for (SAC_i = (2); SAC_i < SACp_emal_45171__isaa_34984__wlur_26769__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_45171__isaa_34984__wlur_26769[SAC_i]);
      }
      SACp_emal_45145__iveras_43042 = SAC_l;
    }

    { ; ; }
    ;



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "2nd argument of _idx_modarray_AxSxA_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_45145__iveras_43042;
      for (int SAC_i = SAC_idx, SAC_j = 0; SAC_j < SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__sz; SAC_i++, SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45147__pinl_16947__icc_7820__SSA11_2[SAC_j]); }
      }
    }

    { { free (SACp_emal_45147__pinl_16947__icc_7820__SSA11_2); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45147__pinl_16947__icc_7820__SSA11_2__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45139__pinl_16898__icc_7670__SSA11_3 = ( SACl_data[SACp_emal_45140__ivesplit_35090]); }

    { ; ; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { { if (!(((SACl_shp__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45136__pinl_16947__icc_7820__SSA11_3"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34225 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34225 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34225 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34225 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34225 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34225 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34225 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34225, __extension__ __PRETTY_FUNCTION__); }))
# 34225 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[3]) = SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__dim = (SACl_shp__sz) + (0); }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__dim == SACl_shp__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACl_shp[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[4]) = SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__sz = SAC_size;
      if (!((SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34245 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34245 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34245 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34245 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34245 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34245 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34245 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34245, __extension__ __PRETTY_FUNCTION__); }))
# 34245 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45136__pinl_16947__icc_7820__SSA11_3 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__sz * sizeof (*SACp_emal_45136__pinl_16947__icc_7820__SSA11_3)); break; case SAC_HM_multi_threaded: SACp_emal_45136__pinl_16947__icc_7820__SSA11_3 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__sz * sizeof (*SACp_emal_45136__pinl_16947__icc_7820__SSA11_3), 0); break; case SAC_HM_any_threaded: SACp_emal_45136__pinl_16947__icc_7820__SSA11_3 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__sz * sizeof (*SACp_emal_45136__pinl_16947__icc_7820__SSA11_3), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_16950_iv__SSA11_3__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_16950_iv__SSA11_3"); }; { if ((((6 + (SACp_pinl_16950_iv__SSA11_3__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__SSA11_3__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__SSA11_3__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__SSA11_3__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_16950_iv__SSA11_3__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_16950_iv__SSA11_3__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__SSA11_3__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_16950_iv__SSA11_3__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_16950_iv__SSA11_3__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_16950_iv__SSA11_3__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_16950_iv__SSA11_3__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_16950_iv__SSA11_3__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_16950_iv__SSA11_3__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_16950_iv__SSA11_3__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_16950_iv__SSA11_3__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_16950_iv__SSA11_3__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_16950_iv__SSA11_3__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_3__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_3__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_3__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_16950_iv__SSA11_3__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_16950_iv__SSA11_3__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_3__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45184__pinl_16871__flat_456__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_3__desc) & (-1 ^ (3))))[4]) = SACp_pinl_16950_iv__SSA11_3__sz = SAC_size * SACp_emal_45184__pinl_16871__flat_456__sz;
      if (!((SACp_pinl_16950_iv__SSA11_3__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34260 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34260 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34260 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34260 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34260 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34260 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34260 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34260, __extension__ __PRETTY_FUNCTION__); }))
# 34260 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_16950_iv__SSA11_3 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_16950_iv__SSA11_3__sz * sizeof (*SACp_pinl_16950_iv__SSA11_3)); break; case SAC_HM_multi_threaded: SACp_pinl_16950_iv__SSA11_3 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_16950_iv__SSA11_3__sz * sizeof (*SACp_pinl_16950_iv__SSA11_3), 0); break; case SAC_HM_any_threaded: SACp_pinl_16950_iv__SSA11_3 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_16950_iv__SSA11_3__sz * sizeof (*SACp_pinl_16950_iv__SSA11_3), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_3__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_3__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_3__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_16950_iv__SSA11_3__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_16950_iv__SSA11_3[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_45136__pinl_16947__icc_7820__SSA11_3_shpfac0; SAC_d = SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__dim - 1; SACp_wlidx_42379__pinl_16947__icc_7820__SSA11_3 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_45136__pinl_16947__icc_7820__SSA11_3_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_45184__pinl_16871__flat_456[SAC_d]) <= ( SACp_pinl_16950_iv__SSA11_3[SAC_d])) && (( SACp_pinl_16950_iv__SSA11_3[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__dim - SACp_pinl_16950_iv__SSA11_3__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45136__pinl_16947__icc_7820__SSA11_3_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
    { SACp_emal_45136__pinl_16947__icc_7820__SSA11_3[SACp_wlidx_42379__pinl_16947__icc_7820__SSA11_3] = SACp_emal_45139__pinl_16898__icc_7670__SSA11_3; };

    } else {



    if (!((0 == (SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__dim - SACp_pinl_16950_iv__SSA11_3__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45136__pinl_16947__icc_7820__SSA11_3_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal size found!"); };
    { SACp_emal_45136__pinl_16947__icc_7820__SSA11_3[SACp_wlidx_42379__pinl_16947__icc_7820__SSA11_3] = SACp_emal_45139__pinl_16898__icc_7670__SSA11_3; };

    }
    SACp_wlidx_42379__pinl_16947__icc_7820__SSA11_3 = SACp_wlidx_42379__pinl_16947__icc_7820__SSA11_3 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_16950_iv__SSA11_3[SAC_d] = ( SACp_pinl_16950_iv__SSA11_3[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_16950_iv__SSA11_3[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_16950_iv__SSA11_3[SAC_d] = 0; SAC_d--; SACp_pinl_16950_iv__SSA11_3[SAC_d] = ( SACp_pinl_16950_iv__SSA11_3[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_16950_iv__SSA11_3[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_16950_iv__SSA11_3); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_3__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45134__iveras_43044 = 1; }; }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      SAC_l = ( ( SACp_emal_45171__isaa_34984__wlur_26769[1]) * SACp_emal_45134__iveras_43044 + SACp_emal_45133__iveras_43045 );
      for (SAC_i = (2); SAC_i < SACp_emal_45171__isaa_34984__wlur_26769__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_45171__isaa_34984__wlur_26769[SAC_i]);
      }
      SACp_emal_45134__iveras_43044 = SAC_l;
    }

    { ; ; }
    ;



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "2nd argument of _idx_modarray_AxSxA_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_45134__iveras_43044;
      for (int SAC_i = SAC_idx, SAC_j = 0; SAC_j < SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__sz; SAC_i++, SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45136__pinl_16947__icc_7820__SSA11_3[SAC_j]); }
      }
    }

    { { free (SACp_emal_45136__pinl_16947__icc_7820__SSA11_3); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45136__pinl_16947__icc_7820__SSA11_3__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45128__pinl_16898__icc_7670__SSA11_4 = ( SACl_data[SACp_emal_45129__ivesplit_35092]); }

    { ; ; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { { if (!(((SACl_shp__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45125__pinl_16947__icc_7820__SSA11_4"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34365 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34365 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34365 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34365 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34365 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34365 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34365 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34365, __extension__ __PRETTY_FUNCTION__); }))
# 34365 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[3]) = SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__dim = (SACl_shp__sz) + (0); }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__dim == SACl_shp__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACl_shp[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[4]) = SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__sz = SAC_size;
      if (!((SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34385 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34385 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34385 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34385 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34385 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34385 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34385 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34385, __extension__ __PRETTY_FUNCTION__); }))
# 34385 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45125__pinl_16947__icc_7820__SSA11_4 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__sz * sizeof (*SACp_emal_45125__pinl_16947__icc_7820__SSA11_4)); break; case SAC_HM_multi_threaded: SACp_emal_45125__pinl_16947__icc_7820__SSA11_4 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__sz * sizeof (*SACp_emal_45125__pinl_16947__icc_7820__SSA11_4), 0); break; case SAC_HM_any_threaded: SACp_emal_45125__pinl_16947__icc_7820__SSA11_4 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__sz * sizeof (*SACp_emal_45125__pinl_16947__icc_7820__SSA11_4), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_16950_iv__SSA11_4__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_16950_iv__SSA11_4"); }; { if ((((6 + (SACp_pinl_16950_iv__SSA11_4__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__SSA11_4__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__SSA11_4__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__SSA11_4__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_16950_iv__SSA11_4__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_16950_iv__SSA11_4__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__SSA11_4__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_16950_iv__SSA11_4__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_16950_iv__SSA11_4__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_16950_iv__SSA11_4__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_16950_iv__SSA11_4__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_16950_iv__SSA11_4__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_16950_iv__SSA11_4__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_16950_iv__SSA11_4__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_16950_iv__SSA11_4__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_16950_iv__SSA11_4__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_16950_iv__SSA11_4__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_4__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_4__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_4__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_16950_iv__SSA11_4__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_16950_iv__SSA11_4__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_4__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45184__pinl_16871__flat_456__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_4__desc) & (-1 ^ (3))))[4]) = SACp_pinl_16950_iv__SSA11_4__sz = SAC_size * SACp_emal_45184__pinl_16871__flat_456__sz;
      if (!((SACp_pinl_16950_iv__SSA11_4__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34400 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34400 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34400 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34400 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34400 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34400 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34400 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34400, __extension__ __PRETTY_FUNCTION__); }))
# 34400 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_16950_iv__SSA11_4 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_16950_iv__SSA11_4__sz * sizeof (*SACp_pinl_16950_iv__SSA11_4)); break; case SAC_HM_multi_threaded: SACp_pinl_16950_iv__SSA11_4 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_16950_iv__SSA11_4__sz * sizeof (*SACp_pinl_16950_iv__SSA11_4), 0); break; case SAC_HM_any_threaded: SACp_pinl_16950_iv__SSA11_4 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_16950_iv__SSA11_4__sz * sizeof (*SACp_pinl_16950_iv__SSA11_4), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_4__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_4__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_4__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_16950_iv__SSA11_4__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_16950_iv__SSA11_4[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_45125__pinl_16947__icc_7820__SSA11_4_shpfac0; SAC_d = SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__dim - 1; SACp_wlidx_42380__pinl_16947__icc_7820__SSA11_4 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_45125__pinl_16947__icc_7820__SSA11_4_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_45184__pinl_16871__flat_456[SAC_d]) <= ( SACp_pinl_16950_iv__SSA11_4[SAC_d])) && (( SACp_pinl_16950_iv__SSA11_4[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__dim - SACp_pinl_16950_iv__SSA11_4__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45125__pinl_16947__icc_7820__SSA11_4_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
    { SACp_emal_45125__pinl_16947__icc_7820__SSA11_4[SACp_wlidx_42380__pinl_16947__icc_7820__SSA11_4] = SACp_emal_45128__pinl_16898__icc_7670__SSA11_4; };

    } else {



    if (!((0 == (SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__dim - SACp_pinl_16950_iv__SSA11_4__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45125__pinl_16947__icc_7820__SSA11_4_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal size found!"); };
    { SACp_emal_45125__pinl_16947__icc_7820__SSA11_4[SACp_wlidx_42380__pinl_16947__icc_7820__SSA11_4] = SACp_emal_45128__pinl_16898__icc_7670__SSA11_4; };

    }
    SACp_wlidx_42380__pinl_16947__icc_7820__SSA11_4 = SACp_wlidx_42380__pinl_16947__icc_7820__SSA11_4 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_16950_iv__SSA11_4[SAC_d] = ( SACp_pinl_16950_iv__SSA11_4[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_16950_iv__SSA11_4[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_16950_iv__SSA11_4[SAC_d] = 0; SAC_d--; SACp_pinl_16950_iv__SSA11_4[SAC_d] = ( SACp_pinl_16950_iv__SSA11_4[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_16950_iv__SSA11_4[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_16950_iv__SSA11_4); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_4__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45123__iveras_43046 = 1; }; }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      SAC_l = ( ( SACp_emal_45171__isaa_34984__wlur_26769[1]) * SACp_emal_45123__iveras_43046 + SACp_emal_45122__iveras_43047 );
      for (SAC_i = (2); SAC_i < SACp_emal_45171__isaa_34984__wlur_26769__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_45171__isaa_34984__wlur_26769[SAC_i]);
      }
      SACp_emal_45123__iveras_43046 = SAC_l;
    }

    { ; ; }
    ;



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "2nd argument of _idx_modarray_AxSxA_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_45123__iveras_43046;
      for (int SAC_i = SAC_idx, SAC_j = 0; SAC_j < SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__sz; SAC_i++, SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45125__pinl_16947__icc_7820__SSA11_4[SAC_j]); }
      }
    }

    { { free (SACp_emal_45125__pinl_16947__icc_7820__SSA11_4); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45125__pinl_16947__icc_7820__SSA11_4__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45117__pinl_16898__icc_7670__SSA11_5 = ( SACl_data[SACp_emal_45118__ivesplit_35094]); }

    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACl_data__sz * sizeof (*SACl_data)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_data, ((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)); } else { if (SACl_data__sz * sizeof (*SACl_data) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_data, ((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_data, ((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)); } } else { if (((((SACl_data__sz * sizeof (*SACl_data))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_data, ((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)); } else { if (((((SACl_data__sz * sizeof (*SACl_data))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_data, ((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_data, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_data); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_data); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_data, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_data); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_data); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))); } } } } else { } }
    { ; ; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { { if (!(((SACl_shp__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45114__pinl_16947__icc_7820__SSA11_5"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34506 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34506 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34506 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34506 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34506 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34506 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34506 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34506, __extension__ __PRETTY_FUNCTION__); }))
# 34506 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[3]) = SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__dim = (SACl_shp__sz) + (0); }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__dim == SACl_shp__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACl_shp[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[4]) = SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__sz = SAC_size;
      if (!((SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34526 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34526 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34526 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34526 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34526 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34526 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34526 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34526, __extension__ __PRETTY_FUNCTION__); }))
# 34526 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45114__pinl_16947__icc_7820__SSA11_5 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__sz * sizeof (*SACp_emal_45114__pinl_16947__icc_7820__SSA11_5)); break; case SAC_HM_multi_threaded: SACp_emal_45114__pinl_16947__icc_7820__SSA11_5 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__sz * sizeof (*SACp_emal_45114__pinl_16947__icc_7820__SSA11_5), 0); break; case SAC_HM_any_threaded: SACp_emal_45114__pinl_16947__icc_7820__SSA11_5 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__sz * sizeof (*SACp_emal_45114__pinl_16947__icc_7820__SSA11_5), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_16950_iv__SSA11_5__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_16950_iv__SSA11_5"); }; { if ((((6 + (SACp_pinl_16950_iv__SSA11_5__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__SSA11_5__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_16950_iv__SSA11_5__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__SSA11_5__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_16950_iv__SSA11_5__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_16950_iv__SSA11_5__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_16950_iv__SSA11_5__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_16950_iv__SSA11_5__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_16950_iv__SSA11_5__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_16950_iv__SSA11_5__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_16950_iv__SSA11_5__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_16950_iv__SSA11_5__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_16950_iv__SSA11_5__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_16950_iv__SSA11_5__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_16950_iv__SSA11_5__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_16950_iv__SSA11_5__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_16950_iv__SSA11_5__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_5__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_5__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_5__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_16950_iv__SSA11_5__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_16950_iv__SSA11_5__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_5__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45184__pinl_16871__flat_456__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_5__desc) & (-1 ^ (3))))[4]) = SACp_pinl_16950_iv__SSA11_5__sz = SAC_size * SACp_emal_45184__pinl_16871__flat_456__sz;
      if (!((SACp_pinl_16950_iv__SSA11_5__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34541 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34541 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34541 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34541 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34541 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34541 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34541 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34541, __extension__ __PRETTY_FUNCTION__); }))
# 34541 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_16950_iv__SSA11_5 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_16950_iv__SSA11_5__sz * sizeof (*SACp_pinl_16950_iv__SSA11_5)); break; case SAC_HM_multi_threaded: SACp_pinl_16950_iv__SSA11_5 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_16950_iv__SSA11_5__sz * sizeof (*SACp_pinl_16950_iv__SSA11_5), 0); break; case SAC_HM_any_threaded: SACp_pinl_16950_iv__SSA11_5 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_16950_iv__SSA11_5__sz * sizeof (*SACp_pinl_16950_iv__SSA11_5), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_5__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_5__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_5__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_16950_iv__SSA11_5__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_16950_iv__SSA11_5[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_45114__pinl_16947__icc_7820__SSA11_5_shpfac0; SAC_d = SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__dim - 1; SACp_wlidx_42381__pinl_16947__icc_7820__SSA11_5 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_45114__pinl_16947__icc_7820__SSA11_5_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_45184__pinl_16871__flat_456[SAC_d]) <= ( SACp_pinl_16950_iv__SSA11_5[SAC_d])) && (( SACp_pinl_16950_iv__SSA11_5[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__dim - SACp_pinl_16950_iv__SSA11_5__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45114__pinl_16947__icc_7820__SSA11_5_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
    { SACp_emal_45114__pinl_16947__icc_7820__SSA11_5[SACp_wlidx_42381__pinl_16947__icc_7820__SSA11_5] = SACp_emal_45117__pinl_16898__icc_7670__SSA11_5; };

    } else {



    if (!((0 == (SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__dim - SACp_pinl_16950_iv__SSA11_5__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45114__pinl_16947__icc_7820__SSA11_5_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal size found!"); };
    { SACp_emal_45114__pinl_16947__icc_7820__SSA11_5[SACp_wlidx_42381__pinl_16947__icc_7820__SSA11_5] = SACp_emal_45117__pinl_16898__icc_7670__SSA11_5; };

    }
    SACp_wlidx_42381__pinl_16947__icc_7820__SSA11_5 = SACp_wlidx_42381__pinl_16947__icc_7820__SSA11_5 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_16950_iv__SSA11_5[SAC_d] = ( SACp_pinl_16950_iv__SSA11_5[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_16950_iv__SSA11_5[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_16950_iv__SSA11_5[SAC_d] = 0; SAC_d--; SACp_pinl_16950_iv__SSA11_5[SAC_d] = ( SACp_pinl_16950_iv__SSA11_5[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_16950_iv__SSA11_5[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_shp); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))); } } } } else { } }
    { { free (SACp_emal_45184__pinl_16871__flat_456); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45184__pinl_16871__flat_456__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_pinl_16950_iv__SSA11_5); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16950_iv__SSA11_5__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_45185__pinl_16881__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45181__pinl_16891__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45182__pinl_16888__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45186__pinl_16874__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45183__pinl_16886__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45112__iveras_43048 = 1; }; }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      SAC_l = ( ( SACp_emal_45171__isaa_34984__wlur_26769[1]) * SACp_emal_45112__iveras_43048 + SACp_emal_45111__iveras_43049 );
      for (SAC_i = (2); SAC_i < SACp_emal_45171__isaa_34984__wlur_26769__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_45171__isaa_34984__wlur_26769[SAC_i]);
      }
      SACp_emal_45112__iveras_43048 = SAC_l;
    }

    { ; ; }
    { { free (SACp_emal_45171__isaa_34984__wlur_26769); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45171__isaa_34984__wlur_26769__desc) & (-1 ^ (3))))); } } }
    ;



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "2nd argument of _idx_modarray_AxSxA_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_45112__iveras_43048;
      for (int SAC_i = SAC_idx, SAC_j = 0; SAC_j < SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__sz; SAC_i++, SAC_j++) {
        { SACp_emal_45170__wlur_26769[SAC_i] = ( SACp_emal_45114__pinl_16947__icc_7820__SSA11_5[SAC_j]); }
      }
    }

    { { free (SACp_emal_45114__pinl_16947__icc_7820__SSA11_5); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45114__pinl_16947__icc_7820__SSA11_5__desc) & (-1 ^ (3))))); } } }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_45170__wlur_26769; *SAC_arg_1__desc__p = SACp_emal_45170__wlur_26769__desc; }
    return;
   
  }



}
}
# 34654 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_2 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc, int * SACl_data, SAC_array_descriptor_t SACl_data__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
    const int SACp_emal_45229__isaa_35135_data = 1;



    int * SACp_emal_45228__isaa_35136_data;
    SAC_array_descriptor_t SACp_emal_45228__isaa_35136_data__desc = 
# 34665 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 34665 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45228__isaa_35136_data__shp0 = 1;
    const int SACp_emal_45228__isaa_35136_data__sz = 1;
    const int SACp_emal_45228__isaa_35136_data__dim = 1;




    int SACp_emal_45227__flat_374;
   
   




    int SACp_emal_45226__pinl_16975__icc_7850;
   
   




    
# 34687 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 34687 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45225__pinl_17028__icc_7809_pred;
   
   




    
# 34694 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 34694 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45224__pinl_17035__icc_7814_pred;
   
   




    int * SACp_emal_45223__pinl_17025__flat_456;
    SAC_array_descriptor_t SACp_emal_45223__pinl_17025__flat_456__desc = 
# 34702 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 34702 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45223__pinl_17025__flat_456__shp0;
    int SACp_emal_45223__pinl_17025__flat_456__sz;
    const int SACp_emal_45223__pinl_17025__flat_456__dim = 1;




    
# 34710 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 34710 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45222__pinl_17040__icc_7808_pred;
   
   




    
# 34717 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 34717 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45221__pinl_17042__icc_7810_pred;
   
   




    
# 34724 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 34724 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45220__pinl_17045__icc_7811_pred;
   
   




    
# 34731 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 34731 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45219__icc_7908_pred;
   
   




    
# 34738 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 34738 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45218__icc_7913_pred;
   
   




    int * SACp_emal_45217__flat_384;
    SAC_array_descriptor_t SACp_emal_45217__flat_384__desc = 
# 34746 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 34746 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45217__flat_384__shp0;
    int SACp_emal_45217__flat_384__sz;
    const int SACp_emal_45217__flat_384__dim = 1;




    
# 34754 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 34754 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45216__icc_7907_pred;
   
   




    
# 34761 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 34761 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45215__icc_7909_pred;
   
   




    
# 34768 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 34768 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45214__icc_7910_pred;
   
   




    int * SACp_emal_45211__icc_7919;
    SAC_array_descriptor_t SACp_emal_45211__icc_7919__desc = 
# 34776 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 34776 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45211__icc_7919__sz = 0;
    int SACp_emal_45211__icc_7919__dim = 0;




    int * SACp_emal_45210__isaa_35178__wlur_26790;
    SAC_array_descriptor_t SACp_emal_45210__isaa_35178__wlur_26790__desc = 
# 34784 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 34784 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45210__isaa_35178__wlur_26790__shp0;
    int SACp_emal_45210__isaa_35178__wlur_26790__sz;
    const int SACp_emal_45210__isaa_35178__wlur_26790__dim = 1;




    int * SACp_emal_45209__wlur_26790;
    SAC_array_descriptor_t SACp_emal_45209__wlur_26790__desc = 
# 34793 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 34793 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45209__wlur_26790__sz = 0;
    int SACp_emal_45209__wlur_26790__dim = 0;




    int * SACp_emal_45206__pinl_17101__icc_7820;
    SAC_array_descriptor_t SACp_emal_45206__pinl_17101__icc_7820__desc = 
# 34801 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 34801 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45206__pinl_17101__icc_7820__sz = 0;
    int SACp_emal_45206__pinl_17101__icc_7820__dim = 0;




    int SACp_emal_45204__iveras_43050;
   
   




    int SACp_emal_45200__pinl_17052__icc_7850__SSA12_1;
   
   




    int * SACp_emal_45197__pinl_17101__icc_7820__SSA12_1;
    SAC_array_descriptor_t SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc = 
# 34823 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 34823 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__sz = 0;
    int SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__dim = 0;




    int SACp_emal_45195__iveras_43051;
   
   




    int SACp_wlidx_42384__pinl_17101__icc_7820__SSA12_1;
   
   




    int SACp_wlidx_42383__pinl_17101__icc_7820;
   
   




    int SACp_wlidx_42382__icc_7919;
   
   




    int * SACp_pinl_17104_iv__SSA12_1;
    SAC_array_descriptor_t SACp_pinl_17104_iv__SSA12_1__desc = 
# 34859 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 34859 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_17104_iv__SSA12_1__shp0;
    int SACp_pinl_17104_iv__SSA12_1__sz;
    const int SACp_pinl_17104_iv__SSA12_1__dim = 1;




    int * SACp_pinl_17104_iv;
    SAC_array_descriptor_t SACp_pinl_17104_iv__desc = 
# 34868 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 34868 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_17104_iv__shp0;
    int SACp_pinl_17104_iv__sz;
    const int SACp_pinl_17104_iv__dim = 1;




    int * SACp_hse_38;
    SAC_array_descriptor_t SACp_hse_38__desc = 
# 34877 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 34877 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_hse_38__shp0;
    int SACp_hse_38__sz;
    const int SACp_hse_38__dim = 1;





    const int SACl_data__shp0 = 2;
    const int SACl_data__sz = 2;
    const int SACl_data__dim = 1;




    int SACl_shp__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_shp__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[4]);
    const int SACl_shp__dim = 1;

   
    { { if (!((1 == SACp_emal_45228__isaa_35136_data__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45228__isaa_35136_data"); }; { { if ((((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data)) + ((6 + (SACp_emal_45228__isaa_35136_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data)) + ((6 + (SACp_emal_45228__isaa_35136_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data)) + ((6 + (SACp_emal_45228__isaa_35136_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45228__isaa_35136_data = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45228__isaa_35136_data = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data)) + ((6 + (SACp_emal_45228__isaa_35136_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45228__isaa_35136_data = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45228__isaa_35136_data = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data)) + ((6 + (SACp_emal_45228__isaa_35136_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data)) + ((6 + (SACp_emal_45228__isaa_35136_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data)) + ((6 + (SACp_emal_45228__isaa_35136_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data)) + ((6 + (SACp_emal_45228__isaa_35136_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data)) + ((6 + (SACp_emal_45228__isaa_35136_data__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45228__isaa_35136_data = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45228__isaa_35136_data = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45228__isaa_35136_data = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45228__isaa_35136_data = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45228__isaa_35136_data__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data, SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data), ((6 + (SACp_emal_45228__isaa_35136_data__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45228__isaa_35136_data__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45228__isaa_35136_data__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45228__isaa_35136_data__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45228__isaa_35136_data__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45228__isaa_35136_data__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45228__isaa_35136_data[0] = 2; }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 37, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45227__flat_374 = 0; }; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45226__pinl_16975__icc_7850 = ( SACl_data[SACp_emal_45227__flat_374]); }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45225__pinl_17028__icc_7809_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45225__pinl_17028__icc_7809_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45224__pinl_17035__icc_7814_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45224__pinl_17035__icc_7814_pred = SAC_all; }
    { { if (!((1 == SACp_emal_45223__pinl_17025__flat_456__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45223__pinl_17025__flat_456"); }; { if ((((6 + (SACp_emal_45223__pinl_17025__flat_456__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45223__pinl_17025__flat_456__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45223__pinl_17025__flat_456__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45223__pinl_17025__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45223__pinl_17025__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45223__pinl_17025__flat_456__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45223__pinl_17025__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45223__pinl_17025__flat_456__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45223__pinl_17025__flat_456__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45223__pinl_17025__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45223__pinl_17025__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45223__pinl_17025__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45223__pinl_17025__flat_456__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45223__pinl_17025__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45223__pinl_17025__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45223__pinl_17025__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45223__pinl_17025__flat_456__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45223__pinl_17025__flat_456__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45223__pinl_17025__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45223__pinl_17025__flat_456__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45223__pinl_17025__flat_456__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45223__pinl_17025__flat_456__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45223__pinl_17025__flat_456__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_shp__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45223__pinl_17025__flat_456__desc) & (-1 ^ (3))))[4]) = SACp_emal_45223__pinl_17025__flat_456__sz = SAC_size * SACl_shp__sz;
      if (!((SACp_emal_45223__pinl_17025__flat_456__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34952 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34952 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34952 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34952 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34952 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34952 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34952 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34952, __extension__ __PRETTY_FUNCTION__); }))
# 34952 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45223__pinl_17025__flat_456 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45223__pinl_17025__flat_456__sz * sizeof (*SACp_emal_45223__pinl_17025__flat_456)); break; case SAC_HM_multi_threaded: SACp_emal_45223__pinl_17025__flat_456 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45223__pinl_17025__flat_456__sz * sizeof (*SACp_emal_45223__pinl_17025__flat_456), 0); break; case SAC_HM_any_threaded: SACp_emal_45223__pinl_17025__flat_456 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45223__pinl_17025__flat_456__sz * sizeof (*SACp_emal_45223__pinl_17025__flat_456), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45223__pinl_17025__flat_456__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45223__pinl_17025__flat_456__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45223__pinl_17025__flat_456__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45223__pinl_17025__flat_456__sz; SAC_i++) { { SACp_emal_45223__pinl_17025__flat_456[SAC_i] = (0) * (( SACl_shp[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45223__pinl_17025__flat_456__sz; SAC_i++) { if (( SACp_emal_45223__pinl_17025__flat_456[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "Non-negativity constraint violated " "for vector " "SACp_emal_45223__pinl_17025__flat_456"); } { SACp_emal_45222__pinl_17040__icc_7808_pred = ( SACp_emal_45223__pinl_17025__flat_456[SAC_i]); }; } SACp_emal_45222__pinl_17040__icc_7808_pred = SAC_all; }
        if (SACp_emal_45223__pinl_17025__flat_456__dim != SACl_shp__dim) {
      SACp_emal_45221__pinl_17042__icc_7810_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_emal_45223__pinl_17025__flat_456""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_45223__pinl_17025__flat_456__desc), SAC_PrintShape (SACl_shp__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_45223__pinl_17025__flat_456__shp0 != SACl_shp__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Arrays `" "SACp_emal_45223__pinl_17025__flat_456""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_45223__pinl_17025__flat_456__desc), SAC_PrintShape (SACl_shp__desc));
      }
      SACp_emal_45221__pinl_17042__icc_7810_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45223__pinl_17025__flat_456__sz && SAC_i < SACl_shp__sz; SAC_i++) { if (( SACp_emal_45223__pinl_17025__flat_456[SAC_i]) > ( SACl_shp[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 356, "Vector constraint `" "SACp_emal_45223__pinl_17025__flat_456" " < " "SACl_shp" "' violated"); } } SACp_emal_45220__pinl_17045__icc_7811_pred = SAC_all; }
    if (!SACp_emal_45224__pinl_17035__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45220__pinl_17045__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45221__pinl_17042__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45225__pinl_17028__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45222__pinl_17040__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45219__icc_7908_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45219__icc_7908_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { if (( SACl_shp[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACl_shp"); } { SACp_emal_45218__icc_7913_pred = ( SACl_shp[SAC_i]); }; } SACp_emal_45218__icc_7913_pred = SAC_all; }
    { { if (!((1 == SACp_emal_45217__flat_384__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45217__flat_384"); }; { if ((((6 + (SACp_emal_45217__flat_384__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45217__flat_384__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45217__flat_384__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45217__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45217__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45217__flat_384__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45217__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45217__flat_384__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45217__flat_384__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45217__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45217__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45217__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45217__flat_384__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45217__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45217__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45217__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45217__flat_384__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45217__flat_384__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45217__flat_384__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45217__flat_384__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45217__flat_384__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45217__flat_384__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45217__flat_384__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_shp__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45217__flat_384__desc) & (-1 ^ (3))))[4]) = SACp_emal_45217__flat_384__sz = SAC_size * SACl_shp__sz;
      if (!((SACp_emal_45217__flat_384__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 34991 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 34991 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34991 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 34991 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 34991 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 34991 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 34991 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 34991, __extension__ __PRETTY_FUNCTION__); }))
# 34991 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45217__flat_384 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45217__flat_384__sz * sizeof (*SACp_emal_45217__flat_384)); break; case SAC_HM_multi_threaded: SACp_emal_45217__flat_384 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45217__flat_384__sz * sizeof (*SACp_emal_45217__flat_384), 0); break; case SAC_HM_any_threaded: SACp_emal_45217__flat_384 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45217__flat_384__sz * sizeof (*SACp_emal_45217__flat_384), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45217__flat_384__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45217__flat_384__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45217__flat_384__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45217__flat_384__sz; SAC_i++) { { SACp_emal_45217__flat_384[SAC_i] = (0) * (( SACl_shp[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45217__flat_384__sz; SAC_i++) { if (( SACp_emal_45217__flat_384[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_45217__flat_384"); } { SACp_emal_45216__icc_7907_pred = ( SACp_emal_45217__flat_384[SAC_i]); }; } SACp_emal_45216__icc_7907_pred = SAC_all; }
        if (SACp_emal_45217__flat_384__dim != SACl_shp__dim) {
      SACp_emal_45215__icc_7909_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Arrays `" "SACp_emal_45217__flat_384""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_45217__flat_384__desc), SAC_PrintShape (SACl_shp__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_45217__flat_384__shp0 != SACl_shp__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Arrays `" "SACp_emal_45217__flat_384""' with shape %s ""And `" "SACl_shp""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_45217__flat_384__desc), SAC_PrintShape (SACl_shp__desc));
      }
      SACp_emal_45215__icc_7909_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45217__flat_384__sz && SAC_i < SACl_shp__sz; SAC_i++) { if (( SACp_emal_45217__flat_384[SAC_i]) > ( SACl_shp[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Vector constraint `" "SACp_emal_45217__flat_384" " < " "SACl_shp" "' violated"); } } SACp_emal_45214__icc_7910_pred = SAC_all; }
    if (!SACp_emal_45218__icc_7913_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45214__icc_7910_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45215__icc_7909_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45219__icc_7908_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45216__icc_7907_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    { { if (!(((SACl_shp__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45211__icc_7919"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35014 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35014 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35014 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35014 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35014 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35014 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35014 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35014, __extension__ __PRETTY_FUNCTION__); }))
# 35014 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45211__icc_7919__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45211__icc_7919__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45211__icc_7919__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[3]) = SACp_emal_45211__icc_7919__dim = (SACl_shp__sz) + (0); }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_45211__icc_7919__dim == SACl_shp__sz + (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACl_shp[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[4]) = SACp_emal_45211__icc_7919__sz = SAC_size;
      if (!((SACp_emal_45211__icc_7919__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35034 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35034 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35034 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35034 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35034 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35034 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35034 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35034, __extension__ __PRETTY_FUNCTION__); }))
# 35034 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45211__icc_7919 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45211__icc_7919__sz * sizeof (*SACp_emal_45211__icc_7919)); break; case SAC_HM_multi_threaded: SACp_emal_45211__icc_7919 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45211__icc_7919__sz * sizeof (*SACp_emal_45211__icc_7919), 0); break; case SAC_HM_any_threaded: SACp_emal_45211__icc_7919 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45211__icc_7919__sz * sizeof (*SACp_emal_45211__icc_7919), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_hse_38__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_hse_38"); }; { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_hse_38__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_hse_38__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_hse_38__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_hse_38__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45217__flat_384__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[4]) = SACp_hse_38__sz = SAC_size * SACp_emal_45217__flat_384__sz;
      if (!((SACp_hse_38__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35049 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35049 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35049 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35049 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35049 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35049 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35049 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35049, __extension__ __PRETTY_FUNCTION__); }))
# 35049 "/home/rubenhensen/sac/a.out.c"
   ; SACp_hse_38 = (int *)SAC_HM_MallocAnyChunk_st (SACp_hse_38__sz * sizeof (*SACp_hse_38)); break; case SAC_HM_multi_threaded: SACp_hse_38 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_hse_38__sz * sizeof (*SACp_hse_38), 0); break; case SAC_HM_any_threaded: SACp_hse_38 = (int *)SAC_HM_MallocAnyChunk_at (SACp_hse_38__sz * sizeof (*SACp_hse_38), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_hse_38__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_hse_38[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_45211__icc_7919__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_45211__icc_7919_shpfac0; SAC_d = SACp_emal_45211__icc_7919__dim - 1; SACp_wlidx_42382__icc_7919 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_45211__icc_7919_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_45217__flat_384[SAC_d]) <= ( SACp_hse_38[SAC_d])) && (( SACp_hse_38[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_45211__icc_7919__dim - SACp_hse_38__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45211__icc_7919_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal size found!"); };
    { SACp_emal_45211__icc_7919[SACp_wlidx_42382__icc_7919] = SACp_emal_45227__flat_374; };

    } else {



    if (!((0 == (SACp_emal_45211__icc_7919__dim - SACp_hse_38__sz)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45211__icc_7919_shpfac0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "WL expression with illegal size found!"); };
    { SACp_emal_45211__icc_7919[SACp_wlidx_42382__icc_7919] = SACp_emal_45227__flat_374; };

    }
    SACp_wlidx_42382__icc_7919 = SACp_wlidx_42382__icc_7919 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_hse_38[SAC_d] = ( SACp_hse_38[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_hse_38[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_hse_38[SAC_d] = 0; SAC_d--; SACp_hse_38[SAC_d] = ( SACp_hse_38[SAC_d]) + 1; } SAC_within_bounds = ( SACp_hse_38[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_emal_45217__flat_384); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45217__flat_384__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_hse_38); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_hse_38__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_45218__icc_7913_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45214__icc_7910_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45215__icc_7909_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45219__icc_7908_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    if (!SACp_emal_45216__icc_7907_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 70, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { if (!((1 == SACp_emal_45210__isaa_35178__wlur_26790__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45210__isaa_35178__wlur_26790"); }; { if ((((6 + (SACp_emal_45210__isaa_35178__wlur_26790__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45210__isaa_35178__wlur_26790__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45210__isaa_35178__wlur_26790__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45210__isaa_35178__wlur_26790__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45210__isaa_35178__wlur_26790__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45210__isaa_35178__wlur_26790__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45210__isaa_35178__wlur_26790__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45210__isaa_35178__wlur_26790__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45210__isaa_35178__wlur_26790__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45210__isaa_35178__wlur_26790__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45210__isaa_35178__wlur_26790__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45210__isaa_35178__wlur_26790__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45210__isaa_35178__wlur_26790__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45210__isaa_35178__wlur_26790__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45210__isaa_35178__wlur_26790__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45210__isaa_35178__wlur_26790__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45210__isaa_35178__wlur_26790__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45210__isaa_35178__wlur_26790__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45210__isaa_35178__wlur_26790__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45210__isaa_35178__wlur_26790__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_emal_45228__isaa_35136_data__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_45210__isaa_35178__wlur_26790__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45210__isaa_35178__wlur_26790__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45210__isaa_35178__wlur_26790__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45228__isaa_35136_data__sz + SACl_shp__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45210__isaa_35178__wlur_26790__desc) & (-1 ^ (3))))[4]) = SACp_emal_45210__isaa_35178__wlur_26790__sz = SAC_size;
      if (!((SACp_emal_45210__isaa_35178__wlur_26790__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35116 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35116 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35116 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35116 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35116 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35116 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35116 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35116, __extension__ __PRETTY_FUNCTION__); }))
# 35116 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45210__isaa_35178__wlur_26790 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45210__isaa_35178__wlur_26790__sz * sizeof (*SACp_emal_45210__isaa_35178__wlur_26790)); break; case SAC_HM_multi_threaded: SACp_emal_45210__isaa_35178__wlur_26790 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45210__isaa_35178__wlur_26790__sz * sizeof (*SACp_emal_45210__isaa_35178__wlur_26790), 0); break; case SAC_HM_any_threaded: SACp_emal_45210__isaa_35178__wlur_26790 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45210__isaa_35178__wlur_26790__sz * sizeof (*SACp_emal_45210__isaa_35178__wlur_26790), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45210__isaa_35178__wlur_26790__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45210__isaa_35178__wlur_26790__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45210__isaa_35178__wlur_26790__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACp_emal_45228__isaa_35136_data__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_45210__isaa_35178__wlur_26790[SAC_i] = ( SACp_emal_45228__isaa_35136_data[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++) { { SACp_emal_45210__isaa_35178__wlur_26790[SAC_off + SAC_i] = ( SACl_shp[SAC_i]); }; } }
    { { { if (((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data, ((((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data) - 1)->data1.arena)); } else { if (SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data, ((((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data, ((((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data) - 1)->data1.arena)); } } else { if (((((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data, ((((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data) - 1)->data1.arena)); } else { if (((((SACp_emal_45228__isaa_35136_data__sz * sizeof (*SACp_emal_45228__isaa_35136_data))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data, ((((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45228__isaa_35136_data); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45228__isaa_35136_data__desc) & (-1 ^ (3))))); } } }
    { { if (!(((1) + (SACp_emal_45211__icc_7919__dim) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45209__wlur_26790"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35119 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35119 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35119 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35119 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35119 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35119 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35119 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35119, __extension__ __PRETTY_FUNCTION__); }))
# 35119 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45209__wlur_26790__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((1) + (SACp_emal_45211__icc_7919__dim))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45209__wlur_26790__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((1) + (SACp_emal_45211__icc_7919__dim))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45209__wlur_26790__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((1) + (SACp_emal_45211__icc_7919__dim))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45209__wlur_26790__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45209__wlur_26790__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45209__wlur_26790__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45209__wlur_26790__desc) & (-1 ^ (3))))[3]) = SACp_emal_45209__wlur_26790__dim = (1) + (SACp_emal_45211__icc_7919__dim); }



    if (!((SACp_emal_45211__icc_7919__dim == SACp_emal_45211__icc_7919__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 1 have different dimension!"); };
    if (!((SACp_emal_45211__icc_7919__sz == SACp_emal_45211__icc_7919__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 1 have different size!"); };
    for (int SAC_d = 0; SAC_d < SACp_emal_45211__icc_7919__dim; SAC_d++) {
      if (!(((((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[(6 + (SAC_d))]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[(6 + (SAC_d))])))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 1 have different shape!"); };
    }
    if (!((SACp_emal_45209__wlur_26790__dim == (1) + SACp_emal_45211__icc_7919__dim))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_j;
      int SAC_size = 1;
SAC_size *=
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45209__wlur_26790__desc) & (-1 ^ (3))))[(6 + (0))]) = 2;
SAC_i = 1; for (SAC_j = 0; SAC_i < SACp_emal_45209__wlur_26790__dim; SAC_i++, SAC_j++) {
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45209__wlur_26790__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))[(6 + (SAC_j))]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45209__wlur_26790__desc) & (-1 ^ (3))))[4]) = SACp_emal_45209__wlur_26790__sz = SAC_size * SACp_emal_45211__icc_7919__sz;
      if (!((SACp_emal_45209__wlur_26790__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35142 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35142 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35142 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35142 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35142 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35142 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35142 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35142, __extension__ __PRETTY_FUNCTION__); }))
# 35142 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45209__wlur_26790 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45209__wlur_26790__sz * sizeof (*SACp_emal_45209__wlur_26790)); break; case SAC_HM_multi_threaded: SACp_emal_45209__wlur_26790 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45209__wlur_26790__sz * sizeof (*SACp_emal_45209__wlur_26790), 0); break; case SAC_HM_any_threaded: SACp_emal_45209__wlur_26790 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45209__wlur_26790__sz * sizeof (*SACp_emal_45209__wlur_26790), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45209__wlur_26790__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45209__wlur_26790__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45209__wlur_26790__desc) & (-1 ^ (3))))[1]) = 0; } }



    {
      int SAC_j, SAC_i = 0;
      for (SAC_j = 0; SAC_j < SACp_emal_45211__icc_7919__sz; SAC_j++) {
        { SACp_emal_45209__wlur_26790[SAC_i] = ( SACp_emal_45211__icc_7919[SAC_j]); }
        SAC_i++;
      }
      if (!((SACp_emal_45211__icc_7919__sz == SACp_emal_45211__icc_7919__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Inconsistent vector found: First entry and entry at position 1 have different size!"); };
      for (SAC_j = 0; SAC_j < SACp_emal_45211__icc_7919__sz; SAC_j++) {
        { SACp_emal_45209__wlur_26790[SAC_i] = ( SACp_emal_45211__icc_7919[SAC_j]); }
        SAC_i++;
      }
      if (!((SACp_emal_45209__wlur_26790__sz == SAC_i))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found!"); };
    }

    { { free (SACp_emal_45211__icc_7919); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45211__icc_7919__desc) & (-1 ^ (3))))); } } }
    { { if (!(((SACl_shp__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45206__pinl_17101__icc_7820"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35161 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35161 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35161 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35161 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35161 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35161 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35161 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35161, __extension__ __PRETTY_FUNCTION__); }))
# 35161 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45206__pinl_17101__icc_7820__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45206__pinl_17101__icc_7820__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45206__pinl_17101__icc_7820__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[3]) = SACp_emal_45206__pinl_17101__icc_7820__dim = (SACl_shp__sz) + (0); }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_45206__pinl_17101__icc_7820__dim == SACl_shp__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACl_shp[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[4]) = SACp_emal_45206__pinl_17101__icc_7820__sz = SAC_size;
      if (!((SACp_emal_45206__pinl_17101__icc_7820__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35181 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35181 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35181 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35181 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35181 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35181 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35181 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35181, __extension__ __PRETTY_FUNCTION__); }))
# 35181 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45206__pinl_17101__icc_7820 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45206__pinl_17101__icc_7820__sz * sizeof (*SACp_emal_45206__pinl_17101__icc_7820)); break; case SAC_HM_multi_threaded: SACp_emal_45206__pinl_17101__icc_7820 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45206__pinl_17101__icc_7820__sz * sizeof (*SACp_emal_45206__pinl_17101__icc_7820), 0); break; case SAC_HM_any_threaded: SACp_emal_45206__pinl_17101__icc_7820 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45206__pinl_17101__icc_7820__sz * sizeof (*SACp_emal_45206__pinl_17101__icc_7820), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_17104_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_17104_iv"); }; { if ((((6 + (SACp_pinl_17104_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_17104_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_17104_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_17104_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_17104_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_17104_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_17104_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_17104_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_17104_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_17104_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_17104_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_17104_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_17104_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_17104_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_17104_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_17104_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_17104_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_17104_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_17104_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45223__pinl_17025__flat_456__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_17104_iv__sz = SAC_size * SACp_emal_45223__pinl_17025__flat_456__sz;
      if (!((SACp_pinl_17104_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35196 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35196 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35196 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35196 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35196 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35196 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35196 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35196, __extension__ __PRETTY_FUNCTION__); }))
# 35196 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_17104_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_17104_iv__sz * sizeof (*SACp_pinl_17104_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_17104_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_17104_iv__sz * sizeof (*SACp_pinl_17104_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_17104_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_17104_iv__sz * sizeof (*SACp_pinl_17104_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_17104_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_17104_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_45206__pinl_17101__icc_7820__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_45206__pinl_17101__icc_7820_shpfac0; SAC_d = SACp_emal_45206__pinl_17101__icc_7820__dim - 1; SACp_wlidx_42383__pinl_17101__icc_7820 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_45206__pinl_17101__icc_7820_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_45223__pinl_17025__flat_456[SAC_d]) <= ( SACp_pinl_17104_iv[SAC_d])) && (( SACp_pinl_17104_iv[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_45206__pinl_17101__icc_7820__dim - SACp_pinl_17104_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45206__pinl_17101__icc_7820_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
    { SACp_emal_45206__pinl_17101__icc_7820[SACp_wlidx_42383__pinl_17101__icc_7820] = SACp_emal_45226__pinl_16975__icc_7850; };

    } else {



    if (!((0 == (SACp_emal_45206__pinl_17101__icc_7820__dim - SACp_pinl_17104_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45206__pinl_17101__icc_7820_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal size found!"); };
    { SACp_emal_45206__pinl_17101__icc_7820[SACp_wlidx_42383__pinl_17101__icc_7820] = SACp_emal_45226__pinl_16975__icc_7850; };

    }
    SACp_wlidx_42383__pinl_17101__icc_7820 = SACp_wlidx_42383__pinl_17101__icc_7820 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_17104_iv[SAC_d] = ( SACp_pinl_17104_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_17104_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_17104_iv[SAC_d] = 0; SAC_d--; SACp_pinl_17104_iv[SAC_d] = ( SACp_pinl_17104_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_17104_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_17104_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_45224__pinl_17035__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45220__pinl_17045__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45221__pinl_17042__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45225__pinl_17028__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45222__pinl_17040__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45204__iveras_43050 = 0; }; }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      SAC_l = SACp_emal_45204__iveras_43050;
      for (SAC_i = (1); SAC_i < SACp_emal_45210__isaa_35178__wlur_26790__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_45210__isaa_35178__wlur_26790[SAC_i]);
      }
      SACp_emal_45204__iveras_43050 = SAC_l;
    }

    ;



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "2nd argument of _idx_modarray_AxSxA_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_45204__iveras_43050;
      for (int SAC_i = SAC_idx, SAC_j = 0; SAC_j < SACp_emal_45206__pinl_17101__icc_7820__sz; SAC_i++, SAC_j++) {
        { SACp_emal_45209__wlur_26790[SAC_i] = ( SACp_emal_45206__pinl_17101__icc_7820[SAC_j]); }
      }
    }

    { { free (SACp_emal_45206__pinl_17101__icc_7820); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45206__pinl_17101__icc_7820__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45200__pinl_17052__icc_7850__SSA12_1 = ( SACl_data[SACp_emal_45229__isaa_35135_data]); }

    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACl_data__sz * sizeof (*SACl_data)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_data, ((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)); } else { if (SACl_data__sz * sizeof (*SACl_data) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_data, ((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_data, ((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)); } } else { if (((((SACl_data__sz * sizeof (*SACl_data))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_data, ((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)); } else { if (((((SACl_data__sz * sizeof (*SACl_data))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_data, ((((SAC_HM_header_t *)SACl_data) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_data, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_data); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_data); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_data, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_data); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_data); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_data__desc) & (-1 ^ (3))))); } } } } else { } }
    { ; ; }
    if (!SACp_emal_45224__pinl_17035__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45220__pinl_17045__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45221__pinl_17042__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45225__pinl_17028__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45222__pinl_17040__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { { if (!(((SACl_shp__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_45197__pinl_17101__icc_7820__SSA12_1"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35301 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35301 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35301 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35301 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35301 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35301 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35301 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35301, __extension__ __PRETTY_FUNCTION__); }))
# 35301 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACl_shp__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[3]) = SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__dim = (SACl_shp__sz) + (0); }



   
    if (!((SACl_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__dim == SACl_shp__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACl_shp__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACl_shp[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__sz = SAC_size;
      if (!((SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35321 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35321 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35321 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35321 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35321 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35321 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35321 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35321, __extension__ __PRETTY_FUNCTION__); }))
# 35321 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45197__pinl_17101__icc_7820__SSA12_1 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__sz * sizeof (*SACp_emal_45197__pinl_17101__icc_7820__SSA12_1)); break; case SAC_HM_multi_threaded: SACp_emal_45197__pinl_17101__icc_7820__SSA12_1 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__sz * sizeof (*SACp_emal_45197__pinl_17101__icc_7820__SSA12_1), 0); break; case SAC_HM_any_threaded: SACp_emal_45197__pinl_17101__icc_7820__SSA12_1 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__sz * sizeof (*SACp_emal_45197__pinl_17101__icc_7820__SSA12_1), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_17104_iv__SSA12_1__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_17104_iv__SSA12_1"); }; { if ((((6 + (SACp_pinl_17104_iv__SSA12_1__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_17104_iv__SSA12_1__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_17104_iv__SSA12_1__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_17104_iv__SSA12_1__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_17104_iv__SSA12_1__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_17104_iv__SSA12_1__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_17104_iv__SSA12_1__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_17104_iv__SSA12_1__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_17104_iv__SSA12_1__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_17104_iv__SSA12_1__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_17104_iv__SSA12_1__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_17104_iv__SSA12_1__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_17104_iv__SSA12_1__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_17104_iv__SSA12_1__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_17104_iv__SSA12_1__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_17104_iv__SSA12_1__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_17104_iv__SSA12_1__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__SSA12_1__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__SSA12_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__SSA12_1__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_17104_iv__SSA12_1__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_17104_iv__SSA12_1__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__SSA12_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45223__pinl_17025__flat_456__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__SSA12_1__desc) & (-1 ^ (3))))[4]) = SACp_pinl_17104_iv__SSA12_1__sz = SAC_size * SACp_emal_45223__pinl_17025__flat_456__sz;
      if (!((SACp_pinl_17104_iv__SSA12_1__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35336 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35336 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35336 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35336 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35336 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35336 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35336 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35336, __extension__ __PRETTY_FUNCTION__); }))
# 35336 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_17104_iv__SSA12_1 = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_17104_iv__SSA12_1__sz * sizeof (*SACp_pinl_17104_iv__SSA12_1)); break; case SAC_HM_multi_threaded: SACp_pinl_17104_iv__SSA12_1 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_17104_iv__SSA12_1__sz * sizeof (*SACp_pinl_17104_iv__SSA12_1), 0); break; case SAC_HM_any_threaded: SACp_pinl_17104_iv__SSA12_1 = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_17104_iv__SSA12_1__sz * sizeof (*SACp_pinl_17104_iv__SSA12_1), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__SSA12_1__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__SSA12_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__SSA12_1__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 315, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_17104_iv__SSA12_1__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_17104_iv__SSA12_1[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_45197__pinl_17101__icc_7820__SSA12_1_shpfac0; SAC_d = SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__dim - 1; SACp_wlidx_42384__pinl_17101__icc_7820__SSA12_1 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_45197__pinl_17101__icc_7820__SSA12_1_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_45223__pinl_17025__flat_456[SAC_d]) <= ( SACp_pinl_17104_iv__SSA12_1[SAC_d])) && (( SACp_pinl_17104_iv__SSA12_1[SAC_d]) < ( SACl_shp[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {



    if (!((0 == (SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__dim - SACp_pinl_17104_iv__SSA12_1__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45197__pinl_17101__icc_7820__SSA12_1_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
    { SACp_emal_45197__pinl_17101__icc_7820__SSA12_1[SACp_wlidx_42384__pinl_17101__icc_7820__SSA12_1] = SACp_emal_45200__pinl_17052__icc_7850__SSA12_1; };

    } else {



    if (!((0 == (SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__dim - SACp_pinl_17104_iv__SSA12_1__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_45197__pinl_17101__icc_7820__SSA12_1_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 330, "WL expression with illegal size found!"); };
    { SACp_emal_45197__pinl_17101__icc_7820__SSA12_1[SACp_wlidx_42384__pinl_17101__icc_7820__SSA12_1] = SACp_emal_45200__pinl_17052__icc_7850__SSA12_1; };

    }
    SACp_wlidx_42384__pinl_17101__icc_7820__SSA12_1 = SACp_wlidx_42384__pinl_17101__icc_7820__SSA12_1 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_17104_iv__SSA12_1[SAC_d] = ( SACp_pinl_17104_iv__SSA12_1[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_17104_iv__SSA12_1[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_17104_iv__SSA12_1[SAC_d] = 0; SAC_d--; SACp_pinl_17104_iv__SSA12_1[SAC_d] = ( SACp_pinl_17104_iv__SSA12_1[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_17104_iv__SSA12_1[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_shp); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_shp__desc) & (-1 ^ (3))))); } } } } else { } }
    { { free (SACp_emal_45223__pinl_17025__flat_456); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45223__pinl_17025__flat_456__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_pinl_17104_iv__SSA12_1); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17104_iv__SSA12_1__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_45224__pinl_17035__icc_7814_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45220__pinl_17045__icc_7811_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45221__pinl_17042__icc_7810_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45225__pinl_17028__icc_7809_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    if (!SACp_emal_45222__pinl_17040__icc_7808_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 222, 321, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45195__iveras_43051 = 1; }; }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      SAC_l = SACp_emal_45195__iveras_43051;
      for (SAC_i = (1); SAC_i < SACp_emal_45210__isaa_35178__wlur_26790__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_45210__isaa_35178__wlur_26790[SAC_i]);
      }
      SACp_emal_45195__iveras_43051 = SAC_l;
    }

    { { free (SACp_emal_45210__isaa_35178__wlur_26790); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45210__isaa_35178__wlur_26790__desc) & (-1 ^ (3))))); } } }
    ;



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 70, 12, "2nd argument of _idx_modarray_AxSxA_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_45195__iveras_43051;
      for (int SAC_i = SAC_idx, SAC_j = 0; SAC_j < SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__sz; SAC_i++, SAC_j++) {
        { SACp_emal_45209__wlur_26790[SAC_i] = ( SACp_emal_45197__pinl_17101__icc_7820__SSA12_1[SAC_j]); }
      }
    }

    { { free (SACp_emal_45197__pinl_17101__icc_7820__SSA12_1); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45197__pinl_17101__icc_7820__SSA12_1__desc) & (-1 ^ (3))))); } } }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_45209__wlur_26790; *SAC_arg_1__desc__p = SACp_emal_45209__wlur_26790__desc; }
    return;
   
  }



}
}
# 35448 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_18_impl_carretplus__i_2__i_2_3 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1;
    SAC_array_descriptor_t _tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__desc = 
# 35458 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35458 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__shp0;
    int _tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz;
    const int _tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim = 1;




    
# 35466 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35466 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48508__emal_45271__hce_41__SSA0_1;
   
   




    
# 35473 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35473 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48506__emal_45273__hce_42__SSA0_1;
   
   




    
# 35480 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35480 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48505__emal_45272__hce_42;
   
   




    
# 35487 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35487 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48502__emal_45274__hce_39__SSA0_1;
   
   




    
# 35494 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35494 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48500__emal_45276__hce_40__SSA0_1;
   
   




    
# 35501 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35501 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48499__emal_45275__hce_40;
   
   




    
# 35508 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35508 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48496__emal_45266__hce_46__SSA0_1;
   
   




    
# 35515 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35515 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48494__emal_45267__hce_47__SSA0_1;
   
   




    
# 35522 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35522 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48492__emal_45268__hce_48__SSA0_1;
   
   




    
# 35529 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35529 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48490__emal_45270__hce_49__SSA0_1;
   
   




    
# 35536 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35536 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_48489__emal_45269__hce_49;
   
   




    int * SACp_emal_45265__isaa_35229_b;
    SAC_array_descriptor_t SACp_emal_45265__isaa_35229_b__desc = 
# 35544 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35544 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45265__isaa_35229_b__shp0 = 2;
    const int SACp_emal_45265__isaa_35229_b__sz = 2;
    const int SACp_emal_45265__isaa_35229_b__dim = 1;

    const int SACp_emal_45264__pinl_27402__flat_1140 = 0;



    int * SACp_emal_45263__pinl_27401__icc_7995__SSA26_1;
    SAC_array_descriptor_t SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__desc = 
# 35554 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35554 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__shp0 = 1;
    const int SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz = 1;
    const int SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim = 1;




    int SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res;
   
   




    int * SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res;
    SAC_array_descriptor_t SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc = 
# 35570 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35570 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__shp0;
    int SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__sz;
    const int SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim = 1;




    int SACp_emal_45260__dl_29920;
   
   




    
# 35585 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35585 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45259__pinl_27196__flat_356;
   
   




    int * SACp_emal_45258__pinl_27201__flat_361;
    SAC_array_descriptor_t SACp_emal_45258__pinl_27201__flat_361__desc = 
# 35593 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35593 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45258__pinl_27201__flat_361__shp0 = 1;
    const int SACp_emal_45258__pinl_27201__flat_361__sz = 1;
    const int SACp_emal_45258__pinl_27201__flat_361__dim = 1;




    int SACp_emal_45257__uprf_29889;
   
   




    
# 35608 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35608 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45255__uprf_29885;
   
   




    
# 35615 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35615 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_45254__pinl_27188__icc_5078;
    SAC_array_descriptor_t SACp_emal_45254__pinl_27188__icc_5078__desc = 
# 35616 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35616 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45254__pinl_27188__icc_5078__shp0 = 1;
    const int SACp_emal_45254__pinl_27188__icc_5078__sz = 1;
    const int SACp_emal_45254__pinl_27188__icc_5078__dim = 1;




    
# 35624 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35624 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45253__pinl_27199__flat_359;
   
   




    int * SACp_emal_45252__pinl_27206__flat_366;
    SAC_array_descriptor_t SACp_emal_45252__pinl_27206__flat_366__desc = 
# 35632 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35632 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45252__pinl_27206__flat_366__shp0;
    int SACp_emal_45252__pinl_27206__flat_366__sz;
    const int SACp_emal_45252__pinl_27206__flat_366__dim = 1;




    int * SACp_emal_45251__pinl_27205__flat_365;
    SAC_array_descriptor_t SACp_emal_45251__pinl_27205__flat_365__desc = 
# 35641 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35641 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45251__pinl_27205__flat_365__shp0 = 1;
    const int SACp_emal_45251__pinl_27205__flat_365__sz = 1;
    const int SACp_emal_45251__pinl_27205__flat_365__dim = 1;




    int SACp_emal_45250__uprf_29881;
   
   




    
# 35656 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35656 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45248__uprf_29877;
   
   




    
# 35663 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35663 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_45247__pinl_27191__icc_5082;
    SAC_array_descriptor_t SACp_emal_45247__pinl_27191__icc_5082__desc = 
# 35664 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35664 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_45247__pinl_27191__icc_5082__shp0 = 1;
    const int SACp_emal_45247__pinl_27191__icc_5082__sz = 1;
    const int SACp_emal_45247__pinl_27191__icc_5082__dim = 1;




    
# 35672 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35672 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45246__pinl_27203__flat_363;
   
   




    int SACp_emal_45245__pinl_27167__ctz_22897;
   
   




    
# 35686 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35686 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45244__pinl_27150__flat_157;
   
   




    int * SACp_emal_45243__pinl_27154__flat_161;
    SAC_array_descriptor_t SACp_emal_45243__pinl_27154__flat_161__desc = 
# 35694 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35694 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45243__pinl_27154__flat_161__shp0;
    int SACp_emal_45243__pinl_27154__flat_161__sz;
    const int SACp_emal_45243__pinl_27154__flat_161__dim = 1;




    
# 35702 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35702 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45242__pinl_27160__icc_4911_pred;
   
   




    int * SACp_emal_45241__pinl_27165__ctz_22895;
    SAC_array_descriptor_t SACp_emal_45241__pinl_27165__ctz_22895__desc = 
# 35710 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35710 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45241__pinl_27165__ctz_22895__shp0;
    int SACp_emal_45241__pinl_27165__ctz_22895__sz;
    const int SACp_emal_45241__pinl_27165__ctz_22895__dim = 1;




    
# 35718 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35718 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_45240__pinl_27148__icc_4914;
    SAC_array_descriptor_t SACp_emal_45240__pinl_27148__icc_4914__desc = 
# 35719 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35719 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45240__pinl_27148__icc_4914__shp0;
    int SACp_emal_45240__pinl_27148__icc_4914__sz;
    const int SACp_emal_45240__pinl_27148__icc_4914__dim = 1;




    
# 35727 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35727 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45239__pinl_27152__flat_159;
   
   




    int SACp_emal_45238__isaa_35277__pinl_27125__rtpf_10_res;
   
   




    int * SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res;
    SAC_array_descriptor_t SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc = 
# 35742 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35742 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__shp0;
    int SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__sz;
    const int SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim = 1;




    
# 35750 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35750 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45235__pinl_27133__flat_164;
   
   




    int * SACp_emal_45234__pinl_27137__flat_168;
    SAC_array_descriptor_t SACp_emal_45234__pinl_27137__flat_168__desc = 
# 35758 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35758 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45234__pinl_27137__flat_168__shp0;
    int SACp_emal_45234__pinl_27137__flat_168__sz;
    const int SACp_emal_45234__pinl_27137__flat_168__dim = 1;




    
# 35766 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35766 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45233__pinl_27143__icc_4917_pred;
   
   




    int * SACp_emal_45232__pinl_27163__ctz_22891;
    SAC_array_descriptor_t SACp_emal_45232__pinl_27163__ctz_22891__desc = 
# 35774 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35774 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45232__pinl_27163__ctz_22891__shp0;
    int SACp_emal_45232__pinl_27163__ctz_22891__sz;
    const int SACp_emal_45232__pinl_27163__ctz_22891__dim = 1;




    
# 35782 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35782 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_45231__pinl_27131__icc_4920;
    SAC_array_descriptor_t SACp_emal_45231__pinl_27131__icc_4920__desc = 
# 35783 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35783 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_45231__pinl_27131__icc_4920__shp0;
    int SACp_emal_45231__pinl_27131__icc_4920__sz;
    const int SACp_emal_45231__pinl_27131__icc_4920__dim = 1;




    
# 35791 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35791 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45230__pinl_27135__flat_166;
   
   




    
# 35798 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35798 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_27216__hce_46;
   
   




    
# 35805 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35805 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_27215__hce_47;
   
   




    
# 35812 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35812 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_27214__hce_48;
   
   




    
# 35819 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35819 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_27213__hce_49;
   
   




    int * SACp_pinl_27177__rtpf_27_res;
    SAC_array_descriptor_t SACp_pinl_27177__rtpf_27_res__desc = 
# 35827 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35827 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_27177__rtpf_27_res__sz = 0;
    int SACp_pinl_27177__rtpf_27_res__dim = 0;




    int * SACp_pinl_27175_a__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_27175_a__SSA0_1__desc = 
# 35835 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35835 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_27175_a__SSA0_1__sz = 0;
    int SACp_pinl_27175_a__SSA0_1__dim = 0;




    
# 35842 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35842 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_27159__hce_39;
   
   




    
# 35849 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35849 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_27158__hce_40;
   
   




    
# 35856 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35856 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_27142__hce_41;
   
   




    
# 35863 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 35863 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_27141__hce_42;
   
   




    int * SACp_pinl_27127_b__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_27127_b__SSA0_1__desc = 
# 35871 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35871 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_27127_b__SSA0_1__sz = 0;
    int SACp_pinl_27127_b__SSA0_1__dim = 0;




    int * SACp_pinl_27125__rtpf_10_res;
    SAC_array_descriptor_t SACp_pinl_27125__rtpf_10_res__desc = 
# 35879 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 35879 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_27125__rtpf_10_res__sz = 0;
    int SACp_pinl_27125__rtpf_10_res__dim = 0;





    const int SACl_b__shp0 = 2;
    const int SACl_b__shp1 = 3;
    const int SACl_b__sz = 6;
    const int SACl_b__dim = 2;




    const int SACl_a__shp0 = 2;
    const int SACl_a__sz = 2;
    const int SACl_a__dim = 1;

   
    { { if (!((1 == SACp_emal_45265__isaa_35229_b__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45265__isaa_35229_b"); }; { { if ((((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b)) + ((6 + (SACp_emal_45265__isaa_35229_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b)) + ((6 + (SACp_emal_45265__isaa_35229_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b)) + ((6 + (SACp_emal_45265__isaa_35229_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45265__isaa_35229_b = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45265__isaa_35229_b = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b)) + ((6 + (SACp_emal_45265__isaa_35229_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45265__isaa_35229_b = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45265__isaa_35229_b = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b)) + ((6 + (SACp_emal_45265__isaa_35229_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b)) + ((6 + (SACp_emal_45265__isaa_35229_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b)) + ((6 + (SACp_emal_45265__isaa_35229_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b)) + ((6 + (SACp_emal_45265__isaa_35229_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b)) + ((6 + (SACp_emal_45265__isaa_35229_b__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45265__isaa_35229_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45265__isaa_35229_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45265__isaa_35229_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45265__isaa_35229_b = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45265__isaa_35229_b__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b, SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b), ((6 + (SACp_emal_45265__isaa_35229_b__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45265__isaa_35229_b__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45265__isaa_35229_b__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45265__isaa_35229_b__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45265__isaa_35229_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45265__isaa_35229_b__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week2.sac", 56, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45265__isaa_35229_b[0] = 2; }
    { SACp_emal_45265__isaa_35229_b[1] = 3; }

    { { if (!((1 == SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45263__pinl_27401__icc_7995__SSA26_1"); }; { { if ((((SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz * sizeof (*SACp_emal_45263__pinl_27401__icc_7995__SSA26_1)) + ((6 + (SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz * sizeof (*SACp_emal_45263__pinl_27401__icc_7995__SSA26_1)) + ((6 + (SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz * sizeof (*SACp_emal_45263__pinl_27401__icc_7995__SSA26_1)) + ((6 + (SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45263__pinl_27401__icc_7995__SSA26_1 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45263__pinl_27401__icc_7995__SSA26_1 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz * sizeof (*SACp_emal_45263__pinl_27401__icc_7995__SSA26_1)) + ((6 + (SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45263__pinl_27401__icc_7995__SSA26_1 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45263__pinl_27401__icc_7995__SSA26_1 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz * sizeof (*SACp_emal_45263__pinl_27401__icc_7995__SSA26_1)) + ((6 + (SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz * sizeof (*SACp_emal_45263__pinl_27401__icc_7995__SSA26_1)) + ((6 + (SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz * sizeof (*SACp_emal_45263__pinl_27401__icc_7995__SSA26_1)) + ((6 + (SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz * sizeof (*SACp_emal_45263__pinl_27401__icc_7995__SSA26_1)) + ((6 + (SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz * sizeof (*SACp_emal_45263__pinl_27401__icc_7995__SSA26_1)) + ((6 + (SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45263__pinl_27401__icc_7995__SSA26_1 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45263__pinl_27401__icc_7995__SSA26_1 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45263__pinl_27401__icc_7995__SSA26_1 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45263__pinl_27401__icc_7995__SSA26_1 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45263__pinl_27401__icc_7995__SSA26_1, SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz * sizeof (*SACp_emal_45263__pinl_27401__icc_7995__SSA26_1), ((6 + (SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 134, 2352, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45263__pinl_27401__icc_7995__SSA26_1[0] = 3; }




    if (!((_tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    _tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__desc = SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__desc;
    _tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__shp0 = SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__shp0;
    _tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz = SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__desc) & (-1 ^ (3))))[4]) = SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__sz;
    { _tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1 = SACp_emal_45263__pinl_27401__icc_7995__SSA26_1; }




    SACf__MAIN___rtpf_25_impl_genarrayI__i_X__i_2 (&SACp_pinl_27177__rtpf_27_res, &SACp_pinl_27177__rtpf_27_res__desc, _tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1, _tcp_48509_SACp_emal_45263__pinl_27401__icc_7995__SSA26_1__desc, SACl_a, SACl_a__desc);




    SACp_pinl_27177__rtpf_27_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_27177__rtpf_27_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))[3]);

    { { SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res = SACp_pinl_27177__rtpf_27_res__dim; }; }
    { { if (!((1 == SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res"); }; { if ((((6 + (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_27177__rtpf_27_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__sz = SAC_size;
      if (!((SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 35967 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 35967 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35967 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 35967 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 35967 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 35967 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 35967 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 35967, __extension__ __PRETTY_FUNCTION__); }))
# 35967 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__sz * sizeof (*SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res)); break; case SAC_HM_multi_threaded: SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__sz * sizeof (*SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res), 0); break; case SAC_HM_any_threaded: SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__sz * sizeof (*SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_27177__rtpf_27_res__dim; SAC_i++) {
      { SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; ; { SACp_emal_45260__dl_29920 = (2) - (SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res); };
    ; ; { SACp_emal_45259__pinl_27196__flat_356 = (SACp_emal_45260__dl_29920) == (0); };
    { ; ; }
    if (SACp_emal_45259__pinl_27196__flat_356)
    {
      { { SACp_pinl_48489__emal_45269__hce_49 = 
# 35981 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 35981 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27213__hce_49 = SACp_pinl_48489__emal_45269__hce_49; }

    }
    else
    {
      SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `v:vshp' in return value does not match feature `v' in data"); SACp_pinl_48490__emal_45270__hce_49__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27213__hce_49 = SACp_pinl_48490__emal_45270__hce_49__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_45258__pinl_27201__flat_361__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45258__pinl_27201__flat_361"); }; { { if ((((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361)) + ((6 + (SACp_emal_45258__pinl_27201__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361)) + ((6 + (SACp_emal_45258__pinl_27201__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361)) + ((6 + (SACp_emal_45258__pinl_27201__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45258__pinl_27201__flat_361 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45258__pinl_27201__flat_361 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361)) + ((6 + (SACp_emal_45258__pinl_27201__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45258__pinl_27201__flat_361 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45258__pinl_27201__flat_361 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361)) + ((6 + (SACp_emal_45258__pinl_27201__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361)) + ((6 + (SACp_emal_45258__pinl_27201__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361)) + ((6 + (SACp_emal_45258__pinl_27201__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361)) + ((6 + (SACp_emal_45258__pinl_27201__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361)) + ((6 + (SACp_emal_45258__pinl_27201__flat_361__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45258__pinl_27201__flat_361 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45258__pinl_27201__flat_361 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45258__pinl_27201__flat_361 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45258__pinl_27201__flat_361 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45258__pinl_27201__flat_361__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361, SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361), ((6 + (SACp_emal_45258__pinl_27201__flat_361__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45258__pinl_27201__flat_361__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45258__pinl_27201__flat_361__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45258__pinl_27201__flat_361__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45258__pinl_27201__flat_361__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45258__pinl_27201__flat_361__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 36020 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 36020 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45258__pinl_27201__flat_361[SAC_i] = ( SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res[SAC_off + SAC_i]); };
      }
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45257__uprf_29889 = ( SACp_emal_45258__pinl_27201__flat_361[SACp_emal_45264__pinl_27402__flat_1140]); }

    { { { if (((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361, ((((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361) - 1)->data1.arena)); } else { if (SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361, ((((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361, ((((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361) - 1)->data1.arena)); } } else { if (((((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361, ((((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361) - 1)->data1.arena)); } else { if (((((SACp_emal_45258__pinl_27201__flat_361__sz * sizeof (*SACp_emal_45258__pinl_27201__flat_361))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361, ((((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45258__pinl_27201__flat_361); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45258__pinl_27201__flat_361__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_45257__uprf_29889 = (-2) + (SACp_emal_45257__uprf_29889); };
    ; ; { SACp_emal_45255__uprf_29885 = (SACp_emal_45257__uprf_29889) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_45254__pinl_27188__icc_5078__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45254__pinl_27188__icc_5078"); }; { { if ((((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078)) + ((6 + (SACp_emal_45254__pinl_27188__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078)) + ((6 + (SACp_emal_45254__pinl_27188__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078)) + ((6 + (SACp_emal_45254__pinl_27188__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45254__pinl_27188__icc_5078 = (
# 36055 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36055 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45254__pinl_27188__icc_5078 = (
# 36055 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36055 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078)) + ((6 + (SACp_emal_45254__pinl_27188__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45254__pinl_27188__icc_5078 = (
# 36055 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36055 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45254__pinl_27188__icc_5078 = (
# 36055 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36055 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078)) + ((6 + (SACp_emal_45254__pinl_27188__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078)) + ((6 + (SACp_emal_45254__pinl_27188__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078)) + ((6 + (SACp_emal_45254__pinl_27188__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078)) + ((6 + (SACp_emal_45254__pinl_27188__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078)) + ((6 + (SACp_emal_45254__pinl_27188__icc_5078__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45254__pinl_27188__icc_5078 = (
# 36055 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36055 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45254__pinl_27188__icc_5078 = (
# 36055 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36055 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45254__pinl_27188__icc_5078 = (
# 36055 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36055 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45254__pinl_27188__icc_5078 = (
# 36055 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36055 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45254__pinl_27188__icc_5078__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078, SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078), ((6 + (SACp_emal_45254__pinl_27188__icc_5078__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45254__pinl_27188__icc_5078__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45254__pinl_27188__icc_5078__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45254__pinl_27188__icc_5078__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45254__pinl_27188__icc_5078__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45254__pinl_27188__icc_5078__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45254__pinl_27188__icc_5078[0] = SACp_emal_45255__uprf_29885; }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45254__pinl_27188__icc_5078__sz; SAC_i++) { if (( SACp_emal_45254__pinl_27188__icc_5078[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_45253__pinl_27199__flat_359 = SAC_all; }
    { { { if (((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078, ((((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078) - 1)->data1.arena)); } else { if (SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078, ((((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078, ((((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078) - 1)->data1.arena)); } } else { if (((((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078, ((((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078) - 1)->data1.arena)); } else { if (((((SACp_emal_45254__pinl_27188__icc_5078__sz * sizeof (*SACp_emal_45254__pinl_27188__icc_5078))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078, ((((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45254__pinl_27188__icc_5078); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45254__pinl_27188__icc_5078__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_45253__pinl_27199__flat_359)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27214__hce_48 = SACp_pinl_27213__hce_49; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `v:vshp' in return value does not match feature `vshp' in data"); SACp_pinl_48492__emal_45268__hce_48__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27214__hce_48 = SACp_pinl_48492__emal_45268__hce_48__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_45252__pinl_27206__flat_366__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45252__pinl_27206__flat_366"); }; { if ((((6 + (SACp_emal_45252__pinl_27206__flat_366__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45252__pinl_27206__flat_366__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45252__pinl_27206__flat_366__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45252__pinl_27206__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45252__pinl_27206__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45252__pinl_27206__flat_366__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45252__pinl_27206__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45252__pinl_27206__flat_366__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45252__pinl_27206__flat_366__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45252__pinl_27206__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45252__pinl_27206__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45252__pinl_27206__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45252__pinl_27206__flat_366__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45252__pinl_27206__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45252__pinl_27206__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45252__pinl_27206__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45252__pinl_27206__flat_366__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45252__pinl_27206__flat_366__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45252__pinl_27206__flat_366__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45252__pinl_27206__flat_366__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_45252__pinl_27206__flat_366__dim == (1)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45252__pinl_27206__flat_366__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45252__pinl_27206__flat_366__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__sz - (((1) < 0) ? (-(1)) : (1));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45252__pinl_27206__flat_366__desc) & (-1 ^ (3))))[4]) = SACp_emal_45252__pinl_27206__flat_366__sz = SAC_size;
      if (!((SACp_emal_45252__pinl_27206__flat_366__sz >= 0))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 36117 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 36117 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36117 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 36117 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36117 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 36117 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 36117 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 36117, __extension__ __PRETTY_FUNCTION__); }))
# 36117 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45252__pinl_27206__flat_366 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45252__pinl_27206__flat_366__sz * sizeof (*SACp_emal_45252__pinl_27206__flat_366)); break; case SAC_HM_multi_threaded: SACp_emal_45252__pinl_27206__flat_366 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45252__pinl_27206__flat_366__sz * sizeof (*SACp_emal_45252__pinl_27206__flat_366), 0); break; case SAC_HM_any_threaded: SACp_emal_45252__pinl_27206__flat_366 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45252__pinl_27206__flat_366__sz * sizeof (*SACp_emal_45252__pinl_27206__flat_366), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45252__pinl_27206__flat_366__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45252__pinl_27206__flat_366__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45252__pinl_27206__flat_366__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 36124 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 36124 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45252__pinl_27206__flat_366[SAC_i] = ( SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res[SAC_off + SAC_i]); };
      }
    }

    { { if (!((1 == SACp_emal_45251__pinl_27205__flat_365__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45251__pinl_27205__flat_365"); }; { { if ((((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365)) + ((6 + (SACp_emal_45251__pinl_27205__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365)) + ((6 + (SACp_emal_45251__pinl_27205__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365)) + ((6 + (SACp_emal_45251__pinl_27205__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45251__pinl_27205__flat_365 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45251__pinl_27205__flat_365 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365)) + ((6 + (SACp_emal_45251__pinl_27205__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45251__pinl_27205__flat_365 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45251__pinl_27205__flat_365 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365)) + ((6 + (SACp_emal_45251__pinl_27205__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365)) + ((6 + (SACp_emal_45251__pinl_27205__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365)) + ((6 + (SACp_emal_45251__pinl_27205__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365)) + ((6 + (SACp_emal_45251__pinl_27205__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365)) + ((6 + (SACp_emal_45251__pinl_27205__flat_365__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45251__pinl_27205__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45251__pinl_27205__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45251__pinl_27205__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45251__pinl_27205__flat_365 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45251__pinl_27205__flat_365__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365, SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365), ((6 + (SACp_emal_45251__pinl_27205__flat_365__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45251__pinl_27205__flat_365__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45251__pinl_27205__flat_365__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45251__pinl_27205__flat_365__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45251__pinl_27205__flat_365__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45251__pinl_27205__flat_365__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 36156 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 36156 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_45252__pinl_27206__flat_366__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_45252__pinl_27206__flat_366__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45251__pinl_27205__flat_365[SAC_i] = ( SACp_emal_45252__pinl_27206__flat_366[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_45252__pinl_27206__flat_366); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45252__pinl_27206__flat_366__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45250__uprf_29881 = ( SACp_emal_45251__pinl_27205__flat_365[SACp_emal_45264__pinl_27402__flat_1140]); }

    { { { if (((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365, ((((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365) - 1)->data1.arena)); } else { if (SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365, ((((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365, ((((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365) - 1)->data1.arena)); } } else { if (((((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365, ((((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365) - 1)->data1.arena)); } else { if (((((SACp_emal_45251__pinl_27205__flat_365__sz * sizeof (*SACp_emal_45251__pinl_27205__flat_365))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365, ((((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45251__pinl_27205__flat_365); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45251__pinl_27205__flat_365__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    ; ; { SACp_emal_45250__uprf_29881 = (-3) + (SACp_emal_45250__uprf_29881); };
    ; ; { SACp_emal_45248__uprf_29877 = (SACp_emal_45250__uprf_29881) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_45247__pinl_27191__icc_5082__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45247__pinl_27191__icc_5082"); }; { { if ((((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082)) + ((6 + (SACp_emal_45247__pinl_27191__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082)) + ((6 + (SACp_emal_45247__pinl_27191__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082)) + ((6 + (SACp_emal_45247__pinl_27191__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45247__pinl_27191__icc_5082 = (
# 36193 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36193 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45247__pinl_27191__icc_5082 = (
# 36193 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36193 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082)) + ((6 + (SACp_emal_45247__pinl_27191__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45247__pinl_27191__icc_5082 = (
# 36193 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36193 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45247__pinl_27191__icc_5082 = (
# 36193 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36193 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082)) + ((6 + (SACp_emal_45247__pinl_27191__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082)) + ((6 + (SACp_emal_45247__pinl_27191__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082)) + ((6 + (SACp_emal_45247__pinl_27191__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082)) + ((6 + (SACp_emal_45247__pinl_27191__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082)) + ((6 + (SACp_emal_45247__pinl_27191__icc_5082__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45247__pinl_27191__icc_5082 = (
# 36193 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36193 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45247__pinl_27191__icc_5082 = (
# 36193 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36193 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45247__pinl_27191__icc_5082 = (
# 36193 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36193 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45247__pinl_27191__icc_5082 = (
# 36193 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36193 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_45247__pinl_27191__icc_5082__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082, SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082), ((6 + (SACp_emal_45247__pinl_27191__icc_5082__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45247__pinl_27191__icc_5082__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45247__pinl_27191__icc_5082__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45247__pinl_27191__icc_5082__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45247__pinl_27191__icc_5082__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_45247__pinl_27191__icc_5082__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_45247__pinl_27191__icc_5082[0] = SACp_emal_45248__uprf_29877; }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45247__pinl_27191__icc_5082__sz; SAC_i++) { if (( SACp_emal_45247__pinl_27191__icc_5082[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_45246__pinl_27203__flat_363 = SAC_all; }
    { { { if (((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082) - 1)->data1.arena)); } else { if (SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082) - 1)->data1.arena)); } } else { if (((((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082) - 1)->data1.arena)); } else { if (((((SACp_emal_45247__pinl_27191__icc_5082__sz * sizeof (*SACp_emal_45247__pinl_27191__icc_5082))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082, ((((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45247__pinl_27191__icc_5082); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45247__pinl_27191__icc_5082__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_45246__pinl_27203__flat_363)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27215__hce_47 = SACp_pinl_27214__hce_48; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `d:shp' in return value does not match argument shp"); SACp_pinl_48494__emal_45267__hce_47__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27215__hce_47 = SACp_pinl_48494__emal_45267__hce_47__SSA0_1; }

    }
    if (SACp_emal_45259__pinl_27196__flat_356)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27216__hce_46 = SACp_pinl_27215__hce_47; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Type pattern error in application of genarrayI: feature `d:shp' in return value does not match feature `d' in shp"); SACp_pinl_48496__emal_45266__hce_46__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 68, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27216__hce_46 = SACp_pinl_48496__emal_45266__hce_46__SSA0_1; }

    }
    if (!SACp_pinl_27216__hce_46) { SAC_RuntimeErrorLoc ("./week2.sac", 68, 1, "Type pattern post-condition of genarrayI failed"); }
    ;



    SACp_pinl_27175_a__SSA0_1__desc = SACp_pinl_27177__rtpf_27_res__desc;
    SACp_pinl_27175_a__SSA0_1__sz = SACp_pinl_27177__rtpf_27_res__sz;
    SACp_pinl_27175_a__SSA0_1__dim = SACp_pinl_27177__rtpf_27_res__dim;
    ;
    { SACp_pinl_27175_a__SSA0_1 = SACp_pinl_27177__rtpf_27_res; }

    ; ; { SACp_emal_45245__pinl_27167__ctz_22897 = (-2) + (SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res); };
    ; ; { SACp_emal_45244__pinl_27150__flat_157 = (SACp_emal_45245__pinl_27167__ctz_22897) == (0); };
    { ; ; }
    if (SACp_emal_45244__pinl_27150__flat_157)
    {
      { ; ; }
      { { SACp_pinl_48499__emal_45275__hce_40 = 
# 36283 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 36283 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27158__hce_40 = SACp_pinl_48499__emal_45275__hce_40; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `d' in a"); SACp_pinl_48500__emal_45276__hce_40__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27158__hce_40 = SACp_pinl_48500__emal_45276__hce_40__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_45243__pinl_27154__flat_161__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45243__pinl_27154__flat_161"); }; { if ((((6 + (SACp_emal_45243__pinl_27154__flat_161__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45243__pinl_27154__flat_161__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45243__pinl_27154__flat_161__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45243__pinl_27154__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45243__pinl_27154__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45243__pinl_27154__flat_161__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45243__pinl_27154__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45243__pinl_27154__flat_161__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45243__pinl_27154__flat_161__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45243__pinl_27154__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45243__pinl_27154__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45243__pinl_27154__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45243__pinl_27154__flat_161__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45243__pinl_27154__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45243__pinl_27154__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45243__pinl_27154__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45243__pinl_27154__flat_161__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45243__pinl_27154__flat_161__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45243__pinl_27154__flat_161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45243__pinl_27154__flat_161__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_45265__isaa_35229_b__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_45243__pinl_27154__flat_161__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45243__pinl_27154__flat_161__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45243__pinl_27154__flat_161__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res) < 0) ? (-(SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res)) : (SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45243__pinl_27154__flat_161__desc) & (-1 ^ (3))))[4]) = SACp_emal_45243__pinl_27154__flat_161__sz = SAC_size;
      if (!((SACp_emal_45243__pinl_27154__flat_161__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 36326 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 36326 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36326 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 36326 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36326 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 36326 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 36326 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 36326, __extension__ __PRETTY_FUNCTION__); }))
# 36326 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45243__pinl_27154__flat_161 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45243__pinl_27154__flat_161__sz * sizeof (*SACp_emal_45243__pinl_27154__flat_161)); break; case SAC_HM_multi_threaded: SACp_emal_45243__pinl_27154__flat_161 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45243__pinl_27154__flat_161__sz * sizeof (*SACp_emal_45243__pinl_27154__flat_161), 0); break; case SAC_HM_any_threaded: SACp_emal_45243__pinl_27154__flat_161 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45243__pinl_27154__flat_161__sz * sizeof (*SACp_emal_45243__pinl_27154__flat_161), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45243__pinl_27154__flat_161__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45243__pinl_27154__flat_161__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45243__pinl_27154__flat_161__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 36333 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 36333 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res;
      SAC_cond = (SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_45265__isaa_35229_b__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_45265__isaa_35229_b__sz))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 39, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45243__pinl_27154__flat_161[SAC_i] = ( SACp_emal_45265__isaa_35229_b[SAC_off + SAC_i]); };
      }
    }

    { { { if (((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b, ((((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b) - 1)->data1.arena)); } else { if (SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b, ((((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b, ((((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b) - 1)->data1.arena)); } } else { if (((((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b, ((((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b) - 1)->data1.arena)); } else { if (((((SACp_emal_45265__isaa_35229_b__sz * sizeof (*SACp_emal_45265__isaa_35229_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b, ((((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_45265__isaa_35229_b); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45265__isaa_35229_b__desc) & (-1 ^ (3))))); } } }
        if (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim != SACp_emal_45243__pinl_27154__flat_161__dim) {
      SACp_emal_45242__pinl_27160__icc_4911_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res""' with shape %s ""And `" "SACp_emal_45243__pinl_27154__flat_161""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc), SAC_PrintShape (SACp_emal_45243__pinl_27154__flat_161__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__shp0 != SACp_emal_45243__pinl_27154__flat_161__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res""' with shape %s ""And `" "SACp_emal_45243__pinl_27154__flat_161""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc), SAC_PrintShape (SACp_emal_45243__pinl_27154__flat_161__desc));
      }
      SACp_emal_45242__pinl_27160__icc_4911_pred = SAC_all;
    }

    if (!SACp_emal_45242__pinl_27160__icc_4911_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { { if (!((1 == SACp_emal_45241__pinl_27165__ctz_22895__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45241__pinl_27165__ctz_22895"); }; { if ((((6 + (SACp_emal_45241__pinl_27165__ctz_22895__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45241__pinl_27165__ctz_22895__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45241__pinl_27165__ctz_22895__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45241__pinl_27165__ctz_22895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45241__pinl_27165__ctz_22895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45241__pinl_27165__ctz_22895__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45241__pinl_27165__ctz_22895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45241__pinl_27165__ctz_22895__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45241__pinl_27165__ctz_22895__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45241__pinl_27165__ctz_22895__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45241__pinl_27165__ctz_22895__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45241__pinl_27165__ctz_22895__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45241__pinl_27165__ctz_22895__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45241__pinl_27165__ctz_22895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45241__pinl_27165__ctz_22895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45241__pinl_27165__ctz_22895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45241__pinl_27165__ctz_22895__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45241__pinl_27165__ctz_22895__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45241__pinl_27165__ctz_22895__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45241__pinl_27165__ctz_22895__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45241__pinl_27165__ctz_22895__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45241__pinl_27165__ctz_22895__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45241__pinl_27165__ctz_22895__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45243__pinl_27154__flat_161__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45241__pinl_27165__ctz_22895__desc) & (-1 ^ (3))))[4]) = SACp_emal_45241__pinl_27165__ctz_22895__sz = SAC_size * SACp_emal_45243__pinl_27154__flat_161__sz;
      if (!((SACp_emal_45241__pinl_27165__ctz_22895__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 36379 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 36379 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36379 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 36379 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36379 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 36379 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 36379 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 36379, __extension__ __PRETTY_FUNCTION__); }))
# 36379 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45241__pinl_27165__ctz_22895 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45241__pinl_27165__ctz_22895__sz * sizeof (*SACp_emal_45241__pinl_27165__ctz_22895)); break; case SAC_HM_multi_threaded: SACp_emal_45241__pinl_27165__ctz_22895 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45241__pinl_27165__ctz_22895__sz * sizeof (*SACp_emal_45241__pinl_27165__ctz_22895), 0); break; case SAC_HM_any_threaded: SACp_emal_45241__pinl_27165__ctz_22895 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45241__pinl_27165__ctz_22895__sz * sizeof (*SACp_emal_45241__pinl_27165__ctz_22895), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45241__pinl_27165__ctz_22895__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45241__pinl_27165__ctz_22895__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45241__pinl_27165__ctz_22895__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45241__pinl_27165__ctz_22895__sz; SAC_i++) { { SACp_emal_45241__pinl_27165__ctz_22895[SAC_i] = (( SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res[SAC_i])) - (( SACp_emal_45243__pinl_27154__flat_161[SAC_i])); }; } }
    { { free (SACp_emal_45243__pinl_27154__flat_161); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45243__pinl_27154__flat_161__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_45240__pinl_27148__icc_4914__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45240__pinl_27148__icc_4914"); }; { if ((((6 + (SACp_emal_45240__pinl_27148__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45240__pinl_27148__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45240__pinl_27148__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45240__pinl_27148__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45240__pinl_27148__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45240__pinl_27148__icc_4914__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45240__pinl_27148__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45240__pinl_27148__icc_4914__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45240__pinl_27148__icc_4914__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45240__pinl_27148__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45240__pinl_27148__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45240__pinl_27148__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45240__pinl_27148__icc_4914__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45240__pinl_27148__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45240__pinl_27148__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45240__pinl_27148__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45240__pinl_27148__icc_4914__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45240__pinl_27148__icc_4914__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45240__pinl_27148__icc_4914__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45240__pinl_27148__icc_4914__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45240__pinl_27148__icc_4914__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45240__pinl_27148__icc_4914__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45240__pinl_27148__icc_4914__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45241__pinl_27165__ctz_22895__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45240__pinl_27148__icc_4914__desc) & (-1 ^ (3))))[4]) = SACp_emal_45240__pinl_27148__icc_4914__sz = SAC_size * SACp_emal_45241__pinl_27165__ctz_22895__sz;
      if (!((SACp_emal_45240__pinl_27148__icc_4914__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 36396 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 36396 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36396 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 36396 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36396 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 36396 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 36396 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 36396, __extension__ __PRETTY_FUNCTION__); }))
# 36396 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45240__pinl_27148__icc_4914 = (
# 36396 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36396 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_45240__pinl_27148__icc_4914__sz * sizeof (*SACp_emal_45240__pinl_27148__icc_4914)); break; case SAC_HM_multi_threaded: SACp_emal_45240__pinl_27148__icc_4914 = (
# 36396 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36396 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45240__pinl_27148__icc_4914__sz * sizeof (*SACp_emal_45240__pinl_27148__icc_4914), 0); break; case SAC_HM_any_threaded: SACp_emal_45240__pinl_27148__icc_4914 = (
# 36396 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36396 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_45240__pinl_27148__icc_4914__sz * sizeof (*SACp_emal_45240__pinl_27148__icc_4914), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45240__pinl_27148__icc_4914__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45240__pinl_27148__icc_4914__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45240__pinl_27148__icc_4914__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45240__pinl_27148__icc_4914__sz; SAC_i++) { { SACp_emal_45240__pinl_27148__icc_4914[SAC_i] = (( SACp_emal_45241__pinl_27165__ctz_22895[SAC_i])) == (0); }; } }
    { { free (SACp_emal_45241__pinl_27165__ctz_22895); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45241__pinl_27165__ctz_22895__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_45242__pinl_27160__icc_4911_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45240__pinl_27148__icc_4914__sz; SAC_i++) { if (( SACp_emal_45240__pinl_27148__icc_4914[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_45239__pinl_27152__flat_159 = SAC_all; }
    { { free (SACp_emal_45240__pinl_27148__icc_4914); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45240__pinl_27148__icc_4914__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_45239__pinl_27152__flat_159)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27159__hce_39 = SACp_pinl_27158__hce_40; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in b does not match feature `shp' in a"); SACp_pinl_48502__emal_45274__hce_39__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27159__hce_39 = SACp_pinl_48502__emal_45274__hce_39__SSA0_1; }

    }
    if (!SACp_pinl_27159__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failedType pattern pre-condition of + failed"); }



    SACp_pinl_27127_b__SSA0_1__desc = SACl_b__desc;
    SACp_pinl_27127_b__SSA0_1__sz = SACl_b__sz;
    SACp_pinl_27127_b__SSA0_1__dim = SACl_b__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27127_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_b__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27127_b__SSA0_1__desc) & (-1 ^ (3))))[(6 + (1))]) = SACl_b__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27127_b__SSA0_1__desc) & (-1 ^ (3))))[4]) = SACl_b__sz;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27127_b__SSA0_1__desc) & (-1 ^ (3))))[3]) = SACl_b__dim;
    { SACp_pinl_27127_b__SSA0_1 = SACl_b; }




    SACwf__MAIN___rtpf_8_impl__i_S__i_S (&SACp_pinl_27125__rtpf_10_res, &SACp_pinl_27125__rtpf_10_res__desc, SACp_pinl_27175_a__SSA0_1, SACp_pinl_27175_a__SSA0_1__desc, SACp_pinl_27127_b__SSA0_1, SACp_pinl_27127_b__SSA0_1__desc);




    SACp_pinl_27125__rtpf_10_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_27125__rtpf_10_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_45238__isaa_35277__pinl_27125__rtpf_10_res = SACp_pinl_27125__rtpf_10_res__dim; }; }
    { { if (!((1 == SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res"); }; { if ((((6 + (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_27125__rtpf_10_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__sz = SAC_size;
      if (!((SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 36479 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 36479 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36479 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 36479 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36479 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 36479 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 36479 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 36479, __extension__ __PRETTY_FUNCTION__); }))
# 36479 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__sz * sizeof (*SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res)); break; case SAC_HM_multi_threaded: SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__sz * sizeof (*SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res), 0); break; case SAC_HM_any_threaded: SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__sz * sizeof (*SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_27125__rtpf_10_res__dim; SAC_i++) {
      { SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    if (!SACp_pinl_27159__hce_39) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failedType pattern pre-condition of + failed"); }
    ;
    ; ; { SACp_emal_45238__isaa_35277__pinl_27125__rtpf_10_res = (SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res) - (SACp_emal_45238__isaa_35277__pinl_27125__rtpf_10_res); };
    ; ; { SACp_emal_45235__pinl_27133__flat_164 = (SACp_emal_45238__isaa_35277__pinl_27125__rtpf_10_res) == (0); };
    { ; ; }
    if (SACp_emal_45235__pinl_27133__flat_164)
    {
      { ; ; }
      { { SACp_pinl_48505__emal_45272__hce_42 = 
# 36496 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 36496 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27141__hce_42 = SACp_pinl_48505__emal_45272__hce_42; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `d' in a"); SACp_pinl_48506__emal_45273__hce_42__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27141__hce_42 = SACp_pinl_48506__emal_45273__hce_42__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_45234__pinl_27137__flat_168__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45234__pinl_27137__flat_168"); }; { if ((((6 + (SACp_emal_45234__pinl_27137__flat_168__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45234__pinl_27137__flat_168__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45234__pinl_27137__flat_168__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45234__pinl_27137__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45234__pinl_27137__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45234__pinl_27137__flat_168__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45234__pinl_27137__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45234__pinl_27137__flat_168__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45234__pinl_27137__flat_168__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45234__pinl_27137__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45234__pinl_27137__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45234__pinl_27137__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45234__pinl_27137__flat_168__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45234__pinl_27137__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45234__pinl_27137__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45234__pinl_27137__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45234__pinl_27137__flat_168__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45234__pinl_27137__flat_168__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45234__pinl_27137__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45234__pinl_27137__flat_168__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_45234__pinl_27137__flat_168__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_45234__pinl_27137__flat_168__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45234__pinl_27137__flat_168__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res) < 0) ? (-(SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res)) : (SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45234__pinl_27137__flat_168__desc) & (-1 ^ (3))))[4]) = SACp_emal_45234__pinl_27137__flat_168__sz = SAC_size;
      if (!((SACp_emal_45234__pinl_27137__flat_168__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 36539 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 36539 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36539 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 36539 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36539 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 36539 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 36539 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 36539, __extension__ __PRETTY_FUNCTION__); }))
# 36539 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45234__pinl_27137__flat_168 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45234__pinl_27137__flat_168__sz * sizeof (*SACp_emal_45234__pinl_27137__flat_168)); break; case SAC_HM_multi_threaded: SACp_emal_45234__pinl_27137__flat_168 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45234__pinl_27137__flat_168__sz * sizeof (*SACp_emal_45234__pinl_27137__flat_168), 0); break; case SAC_HM_any_threaded: SACp_emal_45234__pinl_27137__flat_168 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45234__pinl_27137__flat_168__sz * sizeof (*SACp_emal_45234__pinl_27137__flat_168), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45234__pinl_27137__flat_168__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45234__pinl_27137__flat_168__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45234__pinl_27137__flat_168__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 36546 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 36546 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res;
      SAC_cond = (SACp_emal_45262__isaa_35234__pinl_27177__rtpf_27_res < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__sz))) { SAC_RuntimeWarningLoc ("week2.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_45234__pinl_27137__flat_168[SAC_i] = ( SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45237__isaa_35278__pinl_27125__rtpf_10_res__desc) & (-1 ^ (3))))); } } }
    { ; ; }
        if (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__dim != SACp_emal_45234__pinl_27137__flat_168__dim) {
      SACp_emal_45233__pinl_27143__icc_4917_pred = 0;
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res""' with shape %s ""And `" "SACp_emal_45234__pinl_27137__flat_168""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc), SAC_PrintShape (SACp_emal_45234__pinl_27137__flat_168__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__shp0 != SACp_emal_45234__pinl_27137__flat_168__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Arrays `" "SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res""' with shape %s ""And `" "SACp_emal_45234__pinl_27137__flat_168""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc), SAC_PrintShape (SACp_emal_45234__pinl_27137__flat_168__desc));
      }
      SACp_emal_45233__pinl_27143__icc_4917_pred = SAC_all;
    }

    if (!SACp_emal_45233__pinl_27143__icc_4917_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { { if (!((1 == SACp_emal_45232__pinl_27163__ctz_22891__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45232__pinl_27163__ctz_22891"); }; { if ((((6 + (SACp_emal_45232__pinl_27163__ctz_22891__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45232__pinl_27163__ctz_22891__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45232__pinl_27163__ctz_22891__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45232__pinl_27163__ctz_22891__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45232__pinl_27163__ctz_22891__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45232__pinl_27163__ctz_22891__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45232__pinl_27163__ctz_22891__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45232__pinl_27163__ctz_22891__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45232__pinl_27163__ctz_22891__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45232__pinl_27163__ctz_22891__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45232__pinl_27163__ctz_22891__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45232__pinl_27163__ctz_22891__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45232__pinl_27163__ctz_22891__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45232__pinl_27163__ctz_22891__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45232__pinl_27163__ctz_22891__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45232__pinl_27163__ctz_22891__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45232__pinl_27163__ctz_22891__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45232__pinl_27163__ctz_22891__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45232__pinl_27163__ctz_22891__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45232__pinl_27163__ctz_22891__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45232__pinl_27163__ctz_22891__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45232__pinl_27163__ctz_22891__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45232__pinl_27163__ctz_22891__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45234__pinl_27137__flat_168__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45232__pinl_27163__ctz_22891__desc) & (-1 ^ (3))))[4]) = SACp_emal_45232__pinl_27163__ctz_22891__sz = SAC_size * SACp_emal_45234__pinl_27137__flat_168__sz;
      if (!((SACp_emal_45232__pinl_27163__ctz_22891__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 36593 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 36593 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36593 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 36593 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36593 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 36593 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 36593 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 36593, __extension__ __PRETTY_FUNCTION__); }))
# 36593 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45232__pinl_27163__ctz_22891 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_45232__pinl_27163__ctz_22891__sz * sizeof (*SACp_emal_45232__pinl_27163__ctz_22891)); break; case SAC_HM_multi_threaded: SACp_emal_45232__pinl_27163__ctz_22891 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45232__pinl_27163__ctz_22891__sz * sizeof (*SACp_emal_45232__pinl_27163__ctz_22891), 0); break; case SAC_HM_any_threaded: SACp_emal_45232__pinl_27163__ctz_22891 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_45232__pinl_27163__ctz_22891__sz * sizeof (*SACp_emal_45232__pinl_27163__ctz_22891), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45232__pinl_27163__ctz_22891__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45232__pinl_27163__ctz_22891__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45232__pinl_27163__ctz_22891__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45232__pinl_27163__ctz_22891__sz; SAC_i++) { { SACp_emal_45232__pinl_27163__ctz_22891[SAC_i] = (( SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res[SAC_i])) - (( SACp_emal_45234__pinl_27137__flat_168[SAC_i])); }; } }
    { { free (SACp_emal_45234__pinl_27137__flat_168); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45234__pinl_27137__flat_168__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45261__isaa_35235__pinl_27177__rtpf_27_res__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_45231__pinl_27131__icc_4920__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_45231__pinl_27131__icc_4920"); }; { if ((((6 + (SACp_emal_45231__pinl_27131__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45231__pinl_27131__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_45231__pinl_27131__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45231__pinl_27131__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_45231__pinl_27131__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_45231__pinl_27131__icc_4920__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_45231__pinl_27131__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_45231__pinl_27131__icc_4920__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_45231__pinl_27131__icc_4920__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_45231__pinl_27131__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_45231__pinl_27131__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_45231__pinl_27131__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_45231__pinl_27131__icc_4920__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_45231__pinl_27131__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_45231__pinl_27131__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_45231__pinl_27131__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_45231__pinl_27131__icc_4920__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45231__pinl_27131__icc_4920__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45231__pinl_27131__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45231__pinl_27131__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_45231__pinl_27131__icc_4920__dim == (1)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_45231__pinl_27131__icc_4920__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45231__pinl_27131__icc_4920__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_45232__pinl_27163__ctz_22891__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45231__pinl_27131__icc_4920__desc) & (-1 ^ (3))))[4]) = SACp_emal_45231__pinl_27131__icc_4920__sz = SAC_size * SACp_emal_45232__pinl_27163__ctz_22891__sz;
      if (!((SACp_emal_45231__pinl_27131__icc_4920__sz >= 0))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 36611 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 36611 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36611 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 36611 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 36611 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 36611 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 36611 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 36611, __extension__ __PRETTY_FUNCTION__); }))
# 36611 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_45231__pinl_27131__icc_4920 = (
# 36611 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36611 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_45231__pinl_27131__icc_4920__sz * sizeof (*SACp_emal_45231__pinl_27131__icc_4920)); break; case SAC_HM_multi_threaded: SACp_emal_45231__pinl_27131__icc_4920 = (
# 36611 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36611 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_45231__pinl_27131__icc_4920__sz * sizeof (*SACp_emal_45231__pinl_27131__icc_4920), 0); break; case SAC_HM_any_threaded: SACp_emal_45231__pinl_27131__icc_4920 = (
# 36611 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36611 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_45231__pinl_27131__icc_4920__sz * sizeof (*SACp_emal_45231__pinl_27131__icc_4920), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45231__pinl_27131__icc_4920__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45231__pinl_27131__icc_4920__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45231__pinl_27131__icc_4920__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_45231__pinl_27131__icc_4920__sz; SAC_i++) { { SACp_emal_45231__pinl_27131__icc_4920[SAC_i] = (( SACp_emal_45232__pinl_27163__ctz_22891[SAC_i])) == (0); }; } }
    { { free (SACp_emal_45232__pinl_27163__ctz_22891); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45232__pinl_27163__ctz_22891__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_45233__pinl_27143__icc_4917_pred) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Primitive function _eq_VxV_ guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_45231__pinl_27131__icc_4920__sz; SAC_i++) { if (( SACp_emal_45231__pinl_27131__icc_4920[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_45230__pinl_27135__flat_166 = SAC_all; }
    { { free (SACp_emal_45231__pinl_27131__icc_4920); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_45231__pinl_27131__icc_4920__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_45230__pinl_27135__flat_166)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27142__hce_41 = SACp_pinl_27141__hce_42; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Type pattern error in application of +: feature `d:shp' in return value does not match feature `shp' in a"); SACp_pinl_48508__emal_45271__hce_41__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week2.sac", 30, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_27142__hce_41 = SACp_pinl_48508__emal_45271__hce_41__SSA0_1; }

    }
    if (!SACp_pinl_27142__hce_41) { SAC_RuntimeErrorLoc ("./week2.sac", 30, 1, "Type pattern post-condition of + failed"); }
    ;



    { *SAC_arg_1__p = SACp_pinl_27125__rtpf_10_res; *SAC_arg_1__desc__p = SACp_pinl_27125__rtpf_10_res__desc; }
    return;
   
  }



}
}
# 36669 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN__commonPostfix__i_3__i_2 (
# 36669 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 36669 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_b, SAC_array_descriptor_t SACl_b__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
    const int SACp_emal_45288__isaa_35331_b = 1;
    const int SACp_emal_45287__icc_8372 = 2;
    const int SACp_emal_45286__pinl_18091__flat_3926 = 0;



    int SACp_emal_45285__pinl_18137__icc_8321;
   
   




    int SACp_emal_45284__pinl_18137__icc_8321__SSA18_1;
   
   




    int SACp_emal_45283__pinl_18237__icc_8263;
   
   




    int SACp_emal_45282__pinl_18237__icc_8263__SSA18_1;
   
   




    
# 36709 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36709 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45280__pinl_28299__flat_3875;
   
   




    
# 36716 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 36716 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_45278__pinl_28299__flat_3875__SSA14_2;
   
   





    const int SACl_b__shp0 = 2;
    const int SACl_b__sz = 2;
    const int SACl_b__dim = 1;




    const int SACl_a__shp0 = 3;
    const int SACl_a__sz = 3;
    const int SACl_a__dim = 1;

   
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45285__pinl_18137__icc_8321 = ( SACl_a[SACp_emal_45287__icc_8372]); }

    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45284__pinl_18137__icc_8321__SSA18_1 = ( SACl_a[SACp_emal_45288__isaa_35331_b]); }

    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACl_a__sz * sizeof (*SACl_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_a, ((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)); } else { if (SACl_a__sz * sizeof (*SACl_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_a, ((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_a, ((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)); } } else { if (((((SACl_a__sz * sizeof (*SACl_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_a, ((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)); } else { if (((((SACl_a__sz * sizeof (*SACl_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_a, ((((SAC_HM_header_t *)SACl_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45283__pinl_18237__icc_8263 = ( SACl_b[SACp_emal_45288__isaa_35331_b]); }

    { ; ; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_45282__pinl_18237__icc_8263__SSA18_1 = ( SACl_b[SACp_emal_45286__pinl_18091__flat_3926]); }

    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACl_b__sz * sizeof (*SACl_b)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_b, ((((SAC_HM_header_t *)SACl_b) - 1)->data1.arena)); } else { if (SACl_b__sz * sizeof (*SACl_b) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACl_b) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_b, ((((SAC_HM_header_t *)SACl_b) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_b, ((((SAC_HM_header_t *)SACl_b) - 1)->data1.arena)); } } else { if (((((SACl_b__sz * sizeof (*SACl_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_b, ((((SAC_HM_header_t *)SACl_b) - 1)->data1.arena)); } else { if (((((SACl_b__sz * sizeof (*SACl_b))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACl_b) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_b, ((((SAC_HM_header_t *)SACl_b) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_b, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_b); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_b, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_b); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_b); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_b__desc) & (-1 ^ (3))))); } } } } else { } }
    { ; ; }
    ; ; { SACp_emal_45285__pinl_18137__icc_8321 = (SACp_emal_45285__pinl_18137__icc_8321) - (SACp_emal_45283__pinl_18237__icc_8263); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
    ;

    }
    ; ; { SACp_emal_45280__pinl_28299__flat_3875 = (SACp_emal_45285__pinl_18137__icc_8321) == (0); };
    { ; ; }
    ; ; { SACp_emal_45284__pinl_18137__icc_8321__SSA18_1 = (SACp_emal_45284__pinl_18137__icc_8321__SSA18_1) - (SACp_emal_45282__pinl_18237__icc_8263__SSA18_1); };
    { ; ; }
    ; ; { SACp_emal_45278__pinl_28299__flat_3875__SSA14_2 = (SACp_emal_45284__pinl_18137__icc_8321__SSA18_1) == (0); };
    { ; ; }
    ; ; { SACp_emal_45280__pinl_28299__flat_3875 = (SACp_emal_45280__pinl_28299__flat_3875) & (SACp_emal_45278__pinl_28299__flat_3875__SSA14_2); };
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_45280__pinl_28299__flat_3875; }
    return;
   
  }



}
}




extern void SACARGfreeDataUdt( int, void *);
extern void *SACARGcopyDataUdt( int, int, void *);
void SACARGfreeDataUdt( int size, void *data) {}
void *SACARGcopyDataUdt( int type, int size, void *data) { return ((void *) 0x0); }

int main( int __argc, char *__argv[])
{
  int SAC_res;
 
 
  ;
  ;
  ;
  ;
  { SAC_HM_Setup (1 + SAC_RTSPEC_controller_threads); };
  ;
  ;
  ;
  SAC_commandline_argc = __argc; SAC_commandline_argv = __argv;;

  SACf__MAIN__main (&SAC_res);

  ;
  ;
  ;
  ;
  ;
  ;

  ;

  return( SAC_res);
}
