use Array : all;
use StdIO : all;
use CNT: all;



int main() {
    print( pos (iota (40) - 15) );
    print( pos ([]) );
    print( flatten ( iota(10)) );
    print( iota( [5,2,3]) );
    print( flatten (iota( [5,2,3])) );
    print( flatten (42) );
    print( flatten (reshape ([2,0,4], [])) );
    
    cnt = initCounter();
    print( getCounterVal (cnt) );
    incCounter( cnt );
    print( getCounterVal (cnt) );
    print( GCval() );
    incGC();
    print( GCval() );

    print( posCA (iota(200)-33) );
    print( GCval() );
    print( posCN (iota(200)-33) );
    print( GCval() );
    return 0;
}

int[.] pos (int[.] a) {
    c = with {
        ([0] < iv < shape(a)) :  isPos(a[iv]);
    } : fold(++, []);

    return c;
}

int[.] isPos (int a) {
    ans = [];
    if (a  >= 0) ans = [a]; 
            
    return ans;
}

int[.] posCA (int[.] a) {
    c = with {
        ([0] < iv < shape(a)) {
            ans = [];
            if (a[iv]  >= 0) {
                ans = [a[iv]];
                incGC();
            }
        }:  ans;
    } : fold(++, []);

    return c;
}

int[.] posCN (int[.] a) {
    c = with {
        ([0] < iv < shape(a)) {
            ans = [];
            if (a[iv]  >= 0) {
                ans = [a[iv]];
            } else {
                incGC();
            }
        }:  ans;
    } : fold(++, []);

    return c;
}

int[.] flatten(int[*] a)
{
    if (dim(a) == 1)
    {
        ans = a;
    }
    else if (dim(a) == 0) {
        ans = [a];
    }
    else
    {
        shp = shape(a);
        xs = drop([2], shp);
        newD = shp[0] * shp[1];
        // ++ does not respect order? newD++xs and xs++newD both result in the same vector;
        newShp = newD++ xs;
        ans = reshape(newShp, a);

        if (dim(ans) > 1 ) {
            ans = flatten(ans);
        }
    } 

    return ans;
}
