use StdIO: all;
use Array: all;
use BlasLevel1: all;
use BlasLevel2: all;
use Helper: all;
// use Openblas: all;

int main() {
    compare(10, tof(reshape([10],iota(10))), 1, tof(reshape([10],iota(10))), 1, [-1.0f, 4.2f, 4.2f, 4.2f, 4.2f]);
    compare(10, tof(reshape([10],iota(10))), 1, tof(reshape([10],iota(10))), 1, [0.0f, 1.0f, 4.2f, 1.0f, 4.2f]);
    compare(10, tof(reshape([10],iota(10))), 1, tof(reshape([10],iota(10))), 1, [1.0f, 4.2f, 1.0f, -1.0f, 4.2f]);
    compare(10, tof(reshape([10],iota(10))), 1, tof(reshape([10],iota(10))), 1, [-2.0f, 1.0f, 0.0f, 0.0f, 1.0f]);
    compare(3, tof(reshape([5],iota(5))), 2, tof(reshape([5],iota(5))), 2, [0.0f, 1.0f, 4.2f, 1.0f, 4.2f]);
    compare(3, tof(reshape([6],iota(6))), 2, tof(reshape([6],iota(6))), 2, [1.0f, 4.2f, 1.0f, -1.0f, 4.2f]);
    compare(3, tof(reshape([7],iota(7))), 2, tof(reshape([7],iota(7))), 2, [-2.0f, 1.0f, 0.0f, 0.0f, 1.0f]);
    return 0;
}

void compare(int n, float[.] x, int incx, float[.] y, int incy, float[5] param)
{
    x1, y1 = Openblas::srotm(n, x, incx, y, incy, param);
    x2, y2 = srotm(n, x, incx, y, incy, param);

    if(!(eq(x1,x2) && eq(y1,y2)))
    {
        printf("Error in srotm. n:%d, incx:%d, incy:%d\nx:\n", n, incx, incy); 
        print(param);
        print(x1);
        print(x2);
        print(y1);
        print(y2);
        printf("\n");
    }
}
