# 0 "/home/rubenhensen/sac/hw/a.out.c"
# 1 "/home/rubenhensen/sac/hw//"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 0 "<command-line>" 2
# 1 "/home/rubenhensen/sac/hw/a.out.c"
# 278 "/home/rubenhensen/sac/hw/a.out.c"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 1



# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl_gen.h" 1
# 5 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std_gen.h" 1
# 6 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 14 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/nested_h/nested_gen.h" 1
# 15 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/nested_h/nested.h" 1
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 30 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 1
# 26 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h"
# 1 "/usr/include/stdlib.h" 1 3 4
# 26 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 392 "/usr/include/features.h" 3 4
# 1 "/usr/include/features-time64.h" 1 3 4
# 20 "/usr/include/features-time64.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 21 "/usr/include/features-time64.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 2 3 4
# 22 "/usr/include/features-time64.h" 2 3 4
# 393 "/usr/include/features.h" 2 3 4
# 486 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 559 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 560 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 561 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 487 "/usr/include/features.h" 2 3 4
# 510 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 511 "/usr/include/features.h" 2 3 4
# 34 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 2 3 4
# 27 "/usr/include/stdlib.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 209 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4

# 209 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 321 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4







# 1 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 1 3 4
# 41 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 1 3 4
# 42 "/usr/include/stdlib.h" 2 3 4
# 56 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 1 3 4
# 119 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 2 3 4
# 120 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 2 3 4
# 57 "/usr/include/stdlib.h" 2 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;





__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 98 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));



extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 177 "/usr/include/stdlib.h" 3 4
extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 361 "/usr/include/stdlib.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}


__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}
# 386 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern long int a64l (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));




# 1 "/usr/include/x86_64-linux-gnu/sys/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 2 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;






typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;



typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 142 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/time64.h" 1 3 4
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;
typedef long int __suseconds64_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 30 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;


typedef __loff_t loff_t;




typedef __ino_t ino_t;
# 59 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;
# 97 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;




# 1 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 1 3 4






typedef __clock_t clock_t;
# 127 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 1 3 4






typedef __clockid_t clockid_t;
# 129 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 3 4
typedef __time_t time_t;
# 130 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 1 3 4






typedef __timer_t timer_t;
# 131 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 144 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 145 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;




# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 156 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


typedef __uint8_t u_int8_t;
typedef __uint16_t u_int16_t;
typedef __uint32_t u_int32_t;
typedef __uint64_t u_int64_t;


typedef int register_t __attribute__ ((__mode__ (__word__)));
# 176 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 24 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endian.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endianness.h" 1 3 4
# 36 "/usr/include/x86_64-linux-gnu/bits/endian.h" 2 3 4
# 25 "/usr/include/endian.h" 2 3 4
# 35 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline __uint16_t
__bswap_16 (__uint16_t __bsx)
{

  return __builtin_bswap16 (__bsx);



}






static __inline __uint32_t
__bswap_32 (__uint32_t __bsx)
{

  return __builtin_bswap32 (__bsx);



}
# 69 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
__extension__ static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{

  return __builtin_bswap64 (__bsx);



}
# 36 "/usr/include/endian.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 1 3 4
# 32 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3 4
static __inline __uint16_t
__uint16_identity (__uint16_t __x)
{
  return __x;
}

static __inline __uint32_t
__uint32_identity (__uint32_t __x)
{
  return __x;
}

static __inline __uint64_t
__uint64_identity (__uint64_t __x)
{
  return __x;
}
# 37 "/usr/include/endian.h" 2 3 4
# 177 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/sys/select.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select.h" 1 3 4
# 31 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 1 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 1 3 4




typedef struct
{
  unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
} __sigset_t;
# 5 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 2 3 4


typedef __sigset_t sigset_t;
# 34 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 1 3 4







struct timeval
{




  __time_t tv_sec;
  __suseconds_t tv_usec;

};
# 38 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
struct timespec
{



  __time_t tv_sec;




  __syscall_slong_t tv_nsec;
# 31 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
};
# 40 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



typedef __suseconds_t suseconds_t;





typedef long int __fd_mask;
# 59 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 91 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4

# 102 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 127 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 150 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select2.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3 4
extern long int __fdelt_chk (long int __d);
extern long int __fdelt_warn (long int __d)
  __attribute__((__warning__ ("bit outside of fd_set selected")));
# 151 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 180 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 227 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 1 3 4
# 44 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 1 3 4
# 21 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 2 3 4
# 45 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3 4
typedef union
{
  __extension__ unsigned long long int __value64;
  struct
  {
    unsigned int __low;
    unsigned int __high;
  } __value32;
} __atomic_wide_counter;
# 47 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;

typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;
# 76 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
struct __pthread_mutex_s
{
  int __lock;
  unsigned int __count;
  int __owner;

  unsigned int __nusers;



  int __kind;

  short __spins;
  short __elision;
  __pthread_list_t __list;
# 53 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
};
# 77 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4
# 89 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
struct __pthread_rwlock_arch_t
{
  unsigned int __readers;
  unsigned int __writers;
  unsigned int __wrphase_futex;
  unsigned int __writers_futex;
  unsigned int __pad3;
  unsigned int __pad4;

  int __cur_writer;
  int __shared;
  signed char __rwelision;




  unsigned char __pad1[7];


  unsigned long int __pad2;


  unsigned int __flags;
# 55 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
};
# 90 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




struct __pthread_cond_s
{
  __atomic_wide_counter __wseq;
  __atomic_wide_counter __g1_start;
  unsigned int __g_refs[2] ;
  unsigned int __g_size[2];
  unsigned int __g1_orig_size;
  unsigned int __wrefs;
  unsigned int __g_signals[2];
};

typedef unsigned int __tss_t;
typedef unsigned long int __thrd_t;

typedef struct
{
  int __data ;
} __once_flag;
# 24 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 2 3 4



typedef unsigned long int pthread_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;




typedef union
{
  struct __pthread_mutex_s __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;


typedef union
{
  struct __pthread_cond_s __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;





typedef union
{
  struct __pthread_rwlock_arch_t __data;
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 228 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



# 396 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));



extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));







extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) __attribute__ ((__warn_unused_result__));

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (1, 2))) __attribute__ ((__warn_unused_result__));






extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__)) __attribute__ ((__alloc_size__ (2)));


extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));







extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__))
     __attribute__ ((__alloc_size__ (2, 3)))
    __attribute__ ((__malloc__ (__builtin_free, 1)));


extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__ (reallocarray, 1)));



# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));






# 575 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) __attribute__ ((__warn_unused_result__));




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 598 "/usr/include/stdlib.h" 3 4
extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 617 "/usr/include/stdlib.h" 3 4
extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
# 636 "/usr/include/stdlib.h" 3 4
extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 654 "/usr/include/stdlib.h" 3 4
extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
# 682 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 695 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 717 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 738 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 791 "/usr/include/stdlib.h" 3 4
extern int system (const char *__command) __attribute__ ((__warn_unused_result__));
# 808 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));






typedef int (*__compar_fn_t) (const void *, const void *);
# 828 "/usr/include/stdlib.h" 3 4
extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) __attribute__ ((__warn_unused_result__));


# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) void *
bsearch (const void *__key, const void *__base, size_t __nmemb, size_t __size,
  __compar_fn_t __compar)
{
  size_t __l, __u, __idx;
  const void *__p;
  int __comparison;

  __l = 0;
  __u = __nmemb;
  while (__l < __u)
    {
      __idx = (__l + __u) / 2;
      __p = (const void *) (((const char *) __base) + (__idx * __size));
      __comparison = (*__compar) (__key, __p);
      if (__comparison < 0)
 __u = __idx;
      else if (__comparison > 0)
 __l = __idx + 1;
      else
 {

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wcast-qual"

   return (void *) __p;

#pragma GCC diagnostic pop

 }
    }

  return ((void *)0);
}
# 834 "/usr/include/stdlib.h" 2 3 4




extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 848 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));


__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));






extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));


__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
# 880 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));





extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__));



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__))
    __attribute__ ((__access__ (__read_only__, 2)));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__access__ (__write_only__, 1, 3)))
  __attribute__ ((__access__ (__read_only__, 2)));






extern int rpmatch (const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 967 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) __attribute__ ((__warn_unused_result__));
# 1013 "/usr/include/stdlib.h" 3 4
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1023 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}
# 1024 "/usr/include/stdlib.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3 4
extern char *__realpath_chk (const char *__restrict __name,
        char *__restrict __resolved,
        size_t __resolvedlen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern char *__realpath_alias (const char *__restrict __name, char *__restrict __resolved) __asm__ ("" "realpath") __attribute__ ((__nothrow__ , __leaf__))

                                                 __attribute__ ((__warn_unused_result__));
extern char *__realpath_chk_warn (const char *__restrict __name, char *__restrict __resolved, size_t __resolvedlen) __asm__ ("" "__realpath_chk") __attribute__ ((__nothrow__ , __leaf__))


                                                __attribute__ ((__warn_unused_result__))
     __attribute__((__warning__ ("second argument of realpath must be either NULL or at " "least PATH_MAX bytes long buffer")))
                                      ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
__attribute__ ((__nothrow__ , __leaf__)) realpath (const char *__restrict __name, char *__restrict __resolved)
{
  size_t sz = __builtin_object_size (__resolved, 2 > 1);

  if (sz == (size_t) -1)
    return __realpath_alias (__name, __resolved);





  return __realpath_chk (__name, __resolved, sz);
}


extern int __ptsname_r_chk (int __fd, char *__buf, size_t __buflen,
       size_t __nreal) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)))
    __attribute__ ((__access__ (__write_only__, 2, 3)));
extern int __ptsname_r_alias (int __fd, char *__buf, size_t __buflen) __asm__ ("" "ptsname_r") __attribute__ ((__nothrow__ , __leaf__))

     __attribute__ ((__nonnull__ (2))) __attribute__ ((__access__ (__write_only__, 2, 3)));
extern int __ptsname_r_chk_warn (int __fd, char *__buf, size_t __buflen, size_t __nreal) __asm__ ("" "__ptsname_r_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__nonnull__ (2))) __attribute__((__warning__ ("ptsname_r called with buflen bigger than " "size of buf")))
                   ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) ptsname_r (int __fd, char *__buf, size_t __buflen)
{
  return ((((__typeof (__buflen)) 0 < (__typeof (__buflen)) -1 || (__builtin_constant_p (__buflen) && (__buflen) > 0)) && __builtin_constant_p ((((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) && (((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) ? __ptsname_r_alias (__fd, __buf, __buflen) : ((((__typeof (__buflen)) 0 < (__typeof (__buflen)) -1 || (__builtin_constant_p (__buflen) && (__buflen) > 0)) && __builtin_constant_p ((((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) && !(((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) ? __ptsname_r_chk_warn (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1)) : __ptsname_r_chk (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1))))

                           ;
}


extern int __wctomb_chk (char *__s, wchar_t __wchar, size_t __buflen)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int __wctomb_alias (char *__s, wchar_t __wchar) __asm__ ("" "wctomb") __attribute__ ((__nothrow__ , __leaf__))
              __attribute__ ((__warn_unused_result__));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) int
__attribute__ ((__nothrow__ , __leaf__)) wctomb (char *__s, wchar_t __wchar)
{







  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1
      && 16 > __builtin_object_size (__s, 2 > 1))
    return __wctomb_chk (__s, __wchar, __builtin_object_size (__s, 2 > 1));
  return __wctomb_alias (__s, __wchar);
}


extern size_t __mbstowcs_chk (wchar_t *__restrict __dst,
         const char *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__))
    __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __mbstowcs_alias (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len) __asm__ ("" "mbstowcs") __attribute__ ((__nothrow__ , __leaf__))



    __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __mbstowcs_chk_warn (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__mbstowcs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("mbstowcs called with dst buffer smaller than len " "* sizeof (wchar_t)")))
                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) mbstowcs (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len)

{
  return ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) && (((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) ? __mbstowcs_alias (__dst, __src, __len) : ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) && !(((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) ? __mbstowcs_chk_warn (__dst, __src, __len, (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t))) : __mbstowcs_chk (__dst, __src, __len, (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))))

                           ;
}


extern size_t __wcstombs_chk (char *__restrict __dst,
         const wchar_t *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __wcstombs_alias (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len) __asm__ ("" "wcstombs") __attribute__ ((__nothrow__ , __leaf__))



  __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __wcstombs_chk_warn (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__wcstombs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("wcstombs called with dst buffer smaller than len")));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) wcstombs (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len)

{
  return ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) && (((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) ? __wcstombs_alias (__dst, __src, __len) : ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) && !(((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) ? __wcstombs_chk_warn (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1)) : __wcstombs_chk (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1))))

                         ;
}
# 1028 "/usr/include/stdlib.h" 2 3 4








# 27 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2
# 1 "/usr/include/inttypes.h" 1 3 4
# 27 "/usr/include/inttypes.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 1 3 4
# 9 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 26 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/stdint.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/wchar.h" 1 3 4
# 29 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 30 "/usr/include/stdint.h" 2 3 4







# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3 4
typedef __uint8_t uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
# 38 "/usr/include/stdint.h" 2 3 4





typedef __int_least8_t int_least8_t;
typedef __int_least16_t int_least16_t;
typedef __int_least32_t int_least32_t;
typedef __int_least64_t int_least64_t;


typedef __uint_least8_t uint_least8_t;
typedef __uint_least16_t uint_least16_t;
typedef __uint_least32_t uint_least32_t;
typedef __uint_least64_t uint_least64_t;





typedef signed char int_fast8_t;

typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
# 71 "/usr/include/stdint.h" 3 4
typedef unsigned char uint_fast8_t;

typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
# 87 "/usr/include/stdint.h" 3 4
typedef long int intptr_t;


typedef unsigned long int uintptr_t;
# 101 "/usr/include/stdint.h" 3 4
typedef __intmax_t intmax_t;
typedef __uintmax_t uintmax_t;
# 10 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 2 3 4
# 28 "/usr/include/inttypes.h" 2 3 4






typedef int __gwchar_t;
# 266 "/usr/include/inttypes.h" 3 4





typedef struct
  {
    long int quot;
    long int rem;
  } imaxdiv_t;
# 290 "/usr/include/inttypes.h" 3 4
extern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern intmax_t strtoimax (const char *__restrict __nptr,
      char **__restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t strtoumax (const char *__restrict __nptr,
       char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern intmax_t wcstoimax (const __gwchar_t *__restrict __nptr,
      __gwchar_t **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t wcstoumax (const __gwchar_t *__restrict __nptr,
       __gwchar_t ** __restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));


# 28 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h" 1
# 35 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h"

# 35 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h"
typedef int bool;
# 29 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_misc.h" 1
# 30 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2



extern size_t SAC_DISTMEM_rank;




extern int SAC_DISTMEM_trace_profile_rank;
# 55 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h"
void SAC_DISTMEM_Abort (int exit_code);
# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2





# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/audwl.h" 1
# 37 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h" 1
# 38 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/errors.h" 1
# 39 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/icm.h" 1
# 40 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/idx.h" 1
# 41 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/prf.h" 1
# 42 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl.h" 1
# 10 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_methods.h" 1
# 11 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl.h" 2
# 43 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_methods.h" 1
# 44 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_stubs.h" 1
# 45 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rcm_local_async_norc_ptr.h" 1
# 46 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rcm_local_pasync.h" 1
# 47 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rcm_local_pasync_norc_desc.h" 1
# 48 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_commandline.h" 1
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_commandline.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/commandline.h" 1
# 20 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/commandline.h"
extern char **SAC_commandline_argv;
extern int SAC_commandline_argc;
# 17 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_commandline.h" 2
# 49 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_misc.h" 1
# 50 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 1
# 20 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 1 3 4
# 203 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 195 "/usr/include/limits.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 161 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 1 3 4
# 38 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 2 3 4
# 81 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 1 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 2 3 4
# 82 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 2 3 4
# 162 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 196 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/posix2_lim.h" 1 3 4
# 200 "/usr/include/limits.h" 2 3 4
# 204 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-linux-gnu/11/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 2 3 4
# 21 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2






# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/icm.h" 1
# 28 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/cuda_transfer_methods.h" 1
# 29 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/runtimecheck.h" 1
# 30 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 1
# 15 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
# 1 "/usr/include/assert.h" 1 3 4
# 66 "/usr/include/assert.h" 3 4




# 69 "/usr/include/assert.h" 3 4
extern void __assert_fail (const char *__assertion, const char *__file,
      unsigned int __line, const char *__function)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));


extern void __assert_perror_fail (int __errnum, const char *__file,
      unsigned int __line, const char *__function)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern void __assert (const char *__assertion, const char *__file, int __line)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 2






# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/mt_h/rt_mt.h" 1
# 128 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/mt_h/rt_mt.h"

# 128 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/mt_h/rt_mt.h"
extern unsigned int SAC_MT_globally_single;


extern unsigned int SAC_RTSPEC_controller_threads;
# 23 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/cuda_transfer_methods.h" 1
# 24 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 2
# 33 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef unsigned long int SAC_HM_size_byte_t;
typedef long int SAC_HM_size_unit_t;
# 59 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
extern void *malloc (size_t size);
extern void free (void *addr);
# 97 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef union header_t {
    struct header_data1_t {
        SAC_HM_size_unit_t size;
        struct arena_t *arena;
    } data1;
    struct header_data2_t {
        union header_t *prevfree;
        union header_t *nextfree;
    } data2;
    struct header_data3_t {
        SAC_HM_size_unit_t prevsize;
        SAC_HM_size_unit_t diag;
    } data3;
    char align[(((((((sizeof (struct header_data1_t)) > (sizeof (struct header_data2_t)) ? (sizeof (struct header_data1_t)) : (sizeof (struct header_data2_t)))) > (sizeof (struct header_data3_t)) ? (((sizeof (struct header_data1_t)) > (sizeof (struct header_data2_t)) ? (sizeof (struct header_data1_t)) : (sizeof (struct header_data2_t)))) : (sizeof (struct header_data3_t)))


                  - 1)
                 / sizeof (double))
                + 1)
               * sizeof (double)];
} SAC_HM_header_t;
# 148 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef struct arena_t {
    int num;
    SAC_HM_header_t freelist[3];
    SAC_HM_header_t *wilderness;
    SAC_HM_size_unit_t binsize;
    SAC_HM_size_unit_t min_chunk_size;







    volatile SAC_HM_header_t *unused_list;


    unsigned long int size;
    unsigned long int cnt_bins;
    unsigned long int cnt_alloc;
    unsigned long int cnt_alloc_var_size;
    unsigned long int cnt_after_freelist;
    unsigned long int cnt_after_splitting;
    unsigned long int cnt_after_wilderness;
    unsigned long int cnt_after_coalascing;
    unsigned long int cnt_after_coalascing_wilderness;
    unsigned long int cnt_after_extension;
    unsigned long int cnt_free;
    unsigned long int cnt_free_var_size;
    unsigned long int cnt_coalascing;
    unsigned long int cnt_coalascing_wilderness;
} SAC_HM_arena_t;
# 300 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef enum {
    SAC_HM_single_threaded,
    SAC_HM_multi_threaded,
    SAC_HM_any_threaded
} SAC_HM_thread_status_t;
# 313 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"







extern int SAC_HM_not_yet_initialized;
extern unsigned long int SAC_HM_acquire_top_arena_lock;





extern void SAC_HM_Setup (unsigned int threads);

extern void *SAC_HM_MallocSmallChunk (SAC_HM_size_unit_t units,
                                            SAC_HM_arena_t *arena);
extern void *SAC_HM_MallocLargeChunk (SAC_HM_size_unit_t units,
                                            SAC_HM_arena_t *arena);

extern void SAC_HM_FreeSmallChunk (SAC_HM_header_t *addr, SAC_HM_arena_t *arena);
extern void SAC_HM_FreeLargeChunk (SAC_HM_header_t *addr, SAC_HM_arena_t *arena);

extern void *SAC_HM_MallocAnyChunk_at (SAC_HM_size_byte_t size,
                                             unsigned int thread_id);
extern void *SAC_HM_MallocAnyChunk_st (SAC_HM_size_byte_t size);
extern void *SAC_HM_MallocAnyChunk_mt (SAC_HM_size_byte_t size,
                                             unsigned int thread_id);

extern void *SAC_HM_MallocSmallChunk_at (SAC_HM_size_unit_t units, int arena_num);
extern void *SAC_HM_MallocLargeChunk_at (SAC_HM_size_unit_t units, int arena_num);
extern void *SAC_HM_MallocTopArena_at (SAC_HM_size_unit_t units);
extern void *SAC_HM_MallocTopArena_mt (SAC_HM_size_unit_t units);

extern void *SAC_HM_MallocDesc (SAC_HM_header_t *addr, SAC_HM_size_byte_t size,
                                      SAC_HM_size_byte_t desc_size);

extern void SAC_HM_FreeTopArena_mt (SAC_HM_header_t *addr);
extern void SAC_HM_FreeTopArena_at (SAC_HM_header_t *addr);

extern void SAC_HM_FreeDesc (SAC_HM_header_t *addr);

extern void SAC_HM_ShowDiagnostics (void);
extern void SAC_HM_CheckAllocPatternAnyChunk (SAC_HM_header_t *addr);

extern void *SAC_HM_PlaceArray (void *alloc, void *base, long int offset,
                                      long int cache_size);





extern unsigned int SAC_HM_CurrentThreadId (void);
extern int SAC_HM_DiscoversThreads (void);
# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_trace.h" 1
# 32 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h" 1
# 41 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 1







# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 1
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h"
# 1 "/usr/include/x86_64-linux-gnu/sys/time.h" 1 3 4
# 34 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4

# 52 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4

# 52 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
struct timezone
  {
    int tz_minuteswest;
    int tz_dsttime;
  };
# 67 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
extern int gettimeofday (struct timeval *__restrict __tv,
    void *__restrict __tz) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 86 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
extern int settimeofday (const struct timeval *__tv,
    const struct timezone *__tz)
     __attribute__ ((__nothrow__ , __leaf__));





extern int adjtime (const struct timeval *__delta,
      struct timeval *__olddelta) __attribute__ ((__nothrow__ , __leaf__));
# 114 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
enum __itimer_which
  {

    ITIMER_REAL = 0,


    ITIMER_VIRTUAL = 1,



    ITIMER_PROF = 2

  };



struct itimerval
  {

    struct timeval it_interval;

    struct timeval it_value;
  };






typedef int __itimer_which_t;





extern int getitimer (__itimer_which_t __which,
        struct itimerval *__value) __attribute__ ((__nothrow__ , __leaf__));




extern int setitimer (__itimer_which_t __which,
        const struct itimerval *__restrict __new,
        struct itimerval *__restrict __old) __attribute__ ((__nothrow__ , __leaf__));




extern int utimes (const char *__file, const struct timeval __tvp[2])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 189 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
extern int lutimes (const char *__file, const struct timeval __tvp[2])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int futimes (int __fd, const struct timeval __tvp[2]) __attribute__ ((__nothrow__ , __leaf__));
# 258 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4

# 17 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 2




# 1 "/usr/include/x86_64-linux-gnu/sys/resource.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/resource.h" 1 3 4
# 31 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
enum __rlimit_resource
{

  RLIMIT_CPU = 0,



  RLIMIT_FSIZE = 1,



  RLIMIT_DATA = 2,



  RLIMIT_STACK = 3,



  RLIMIT_CORE = 4,






  __RLIMIT_RSS = 5,



  RLIMIT_NOFILE = 7,
  __RLIMIT_OFILE = RLIMIT_NOFILE,




  RLIMIT_AS = 9,



  __RLIMIT_NPROC = 6,



  __RLIMIT_MEMLOCK = 8,



  __RLIMIT_LOCKS = 10,



  __RLIMIT_SIGPENDING = 11,



  __RLIMIT_MSGQUEUE = 12,





  __RLIMIT_NICE = 13,




  __RLIMIT_RTPRIO = 14,





  __RLIMIT_RTTIME = 15,


  __RLIMIT_NLIMITS = 16,
  __RLIM_NLIMITS = __RLIMIT_NLIMITS


};
# 131 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
typedef __rlim_t rlim_t;







struct rlimit
  {

    rlim_t rlim_cur;

    rlim_t rlim_max;
  };
# 158 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
enum __rusage_who
{

  RUSAGE_SELF = 0,



  RUSAGE_CHILDREN = -1
# 176 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
};


# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_rusage.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/types/struct_rusage.h" 3 4
struct rusage
  {

    struct timeval ru_utime;

    struct timeval ru_stime;

    __extension__ union
      {
 long int ru_maxrss;
 __syscall_slong_t __ru_maxrss_word;
      };


    __extension__ union
      {
 long int ru_ixrss;
 __syscall_slong_t __ru_ixrss_word;
      };

    __extension__ union
      {
 long int ru_idrss;
 __syscall_slong_t __ru_idrss_word;
      };

    __extension__ union
      {
 long int ru_isrss;
  __syscall_slong_t __ru_isrss_word;
      };


    __extension__ union
      {
 long int ru_minflt;
 __syscall_slong_t __ru_minflt_word;
      };

    __extension__ union
      {
 long int ru_majflt;
 __syscall_slong_t __ru_majflt_word;
      };

    __extension__ union
      {
 long int ru_nswap;
 __syscall_slong_t __ru_nswap_word;
      };


    __extension__ union
      {
 long int ru_inblock;
 __syscall_slong_t __ru_inblock_word;
      };

    __extension__ union
      {
 long int ru_oublock;
 __syscall_slong_t __ru_oublock_word;
      };

    __extension__ union
      {
 long int ru_msgsnd;
 __syscall_slong_t __ru_msgsnd_word;
      };

    __extension__ union
      {
 long int ru_msgrcv;
 __syscall_slong_t __ru_msgrcv_word;
      };

    __extension__ union
      {
 long int ru_nsignals;
 __syscall_slong_t __ru_nsignals_word;
      };



    __extension__ union
      {
 long int ru_nvcsw;
 __syscall_slong_t __ru_nvcsw_word;
      };


    __extension__ union
      {
 long int ru_nivcsw;
 __syscall_slong_t __ru_nivcsw_word;
      };
  };
# 180 "/usr/include/x86_64-linux-gnu/bits/resource.h" 2 3 4







enum __priority_which
{
  PRIO_PROCESS = 0,

  PRIO_PGRP = 1,

  PRIO_USER = 2

};



# 223 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4

# 25 "/usr/include/x86_64-linux-gnu/sys/resource.h" 2 3 4







# 42 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
typedef int __rlimit_resource_t;
typedef int __rusage_who_t;
typedef int __priority_which_t;





extern int getrlimit (__rlimit_resource_t __resource,
        struct rlimit *__rlimits) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 70 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
extern int setrlimit (__rlimit_resource_t __resource,
        const struct rlimit *__rlimits) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 89 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
extern int getrusage (__rusage_who_t __who, struct rusage *__usage) __attribute__ ((__nothrow__ , __leaf__));
# 105 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
extern int getpriority (__priority_which_t __which, id_t __who) __attribute__ ((__nothrow__ , __leaf__));



extern int setpriority (__priority_which_t __which, id_t __who, int __prio)
     __attribute__ ((__nothrow__ , __leaf__));


# 22 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 2
# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h"

# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h"
typedef struct timeval SAC_PF_TIMER;

typedef enum {
    PF_ow_fun = 0,
    PF_ow_genarray = 1,
    PF_ow_modarray = 2,
    PF_ow_fold = 3,
    PF_iw_fun = 4,
    PF_iw_genarray = 5,
    PF_iw_modarray = 6,
    PF_iw_fold = 7

    ,
    PF_cuda_knl = 8

    ,
    PF_distmem_exec_rep = 9,
    PF_distmem_exec_dist = 10,
    PF_distmem_exec_side_effects = 11,
    PF_distmem_rep_barrier = 12,
    PF_distmem_dist_barrier = 13,
    PF_distmem_side_effects_barrier = 14,
    PF_distmem_comm = 15

} SAC_PF_record_type;

typedef struct profile_record {
    int funno;
    int funapno;
    SAC_PF_record_type record_type;
    struct profile_record *parent;
    int *cycle_tag;
} SAC_PROFILE_RECORD;
# 9 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 2

# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 143 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4

# 143 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 11 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 2
# 54 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h"

# 54 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h"
extern void SAC_PF_MEM_CUDA_PrintStats (void);
extern void SAC_PF_MEM_CUDA_AllocMemcnt (size_t size);
extern void SAC_PF_MEM_CUDA_FreeMemcnt (size_t size);
extern void SAC_PF_MEM_CUDA_AllocDescnt (size_t size);
extern void SAC_PF_MEM_CUDA_FreeDescnt (size_t size);
extern void SAC_PF_MEM_CUDA_AddToMax (size_t size);
# 42 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h" 2
# 33 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_cachesim.h" 1
# 34 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 110 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h"
typedef void *SAC_hidden;






typedef intptr_t SAC_referencecount_t;




typedef intptr_t *SAC_array_descriptor_parent_t;
# 137 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h"
typedef intptr_t *SAC_array_descriptor_t;
# 51 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/tuple.h" 1
# 52 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/types.h" 1
# 33 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/types.h"
typedef struct {
    float a, b, c, d;
} __attribute__ ((packed)) floatvec;






typedef char byte;




typedef long long longlong;




typedef unsigned char ubyte;




typedef unsigned long long ulonglong;




typedef unsigned short ushort;




typedef unsigned int uint;




typedef unsigned long ulong;
# 53 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/wl.h" 1
# 54 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2




# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h" 1
# 59 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2




# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/runtimecheck.h" 1
# 64 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2


# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/hwloc_h/cpubind.h" 1
# 42 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/hwloc_h/cpubind.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cpubind.h" 1



# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/config.h" 1
# 5 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cpubind.h" 2
# 43 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/hwloc_h/cpubind.h" 2
# 67 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 94 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 1
# 95 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2


# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/rtspec_h/rtspec.h" 1
# 98 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2






# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/commandline.h" 1
# 105 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h" 1
# 20 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 1
# 21 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/fun-attrs.h" 1
# 22 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h" 2

extern void (*SAC_MessageExtensionCallback) (void);

extern void SAC_RuntimeWarning (const char *format, ...);
extern void SAC_RuntimeWarningLoc (const char *filename, int line, int col, const char *format, ...);
extern void SAC_RuntimeError (const char *format, ...) __attribute__ ((noreturn));
extern void SAC_RuntimeErrorLoc (const char *filename, int line, int col, const char *format, ...) __attribute__ ((noreturn));
extern void SAC_RuntimeError_Mult (int cnt, ...) __attribute__ ((noreturn));

extern const char *SAC_PrintShape (SAC_array_descriptor_t desc);
extern void SAC_Print (const char *format, ...);
# 106 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/misc.h" 1
# 24 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/misc.h"
extern void SAC_String2Array (unsigned char *array, const char *string);
# 107 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/trace.h" 1
# 27 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/trace.h"
extern void SAC_TR_Print (const char *format, ...);

extern void SAC_TR_IncArrayMemcnt (int size);
extern void SAC_TR_DecArrayMemcnt (int size);
extern void SAC_TR_IncHiddenMemcnt (int size);
extern void SAC_TR_DecHiddenMemcnt (int size);
# 108 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 1
# 109 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_memory.h" 1






# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 8 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_memory.h" 2
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_memory.h"
typedef struct memory_record {
    unsigned long alloc_mem_count;
    unsigned long free_mem_count;
    unsigned long alloc_desc_count;
    unsigned long free_desc_count;
    unsigned long reuse_mem_count;






} SAC_PF_MEMORY_RECORD;

extern void SAC_PF_MEM_PrintStats (void);
extern void SAC_PF_MEM_PrintRecordStats (SAC_PF_MEMORY_RECORD record);
extern void SAC_PF_MEM_PrintFunStats (const char *func_name, unsigned num_ap,
                                            const SAC_PF_MEMORY_RECORD *records);
extern bool SAC_PF_MEM_IsRecordZero (SAC_PF_MEMORY_RECORD record);
extern void SAC_PF_MEM_AllocMemcnt (size_t size);
extern void SAC_PF_MEM_FreeMemcnt (size_t size);
extern void SAC_PF_MEM_AllocDescnt (size_t size);
extern void SAC_PF_MEM_FreeDescnt (size_t size);
extern void SAC_PF_MEM_ReuseMemcnt (void);
extern void SAC_PF_MEM_AddToMax (size_t size);
# 110 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_ops.h" 1
# 23 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_ops.h"
enum pf_ops {
  P_SAC_ND_PRF_ADD,
  P_SAC_ND_PRF_SUB,
  P_SAC_ND_PRF_MUL,
  P_SAC_ND_PRF_DIV,
  P_SAC_ND_PRF_MOD,
  P_SAC_ND_PRF_APLMOD,
  P_SAC_ND_PRF_MIN,
  P_SAC_ND_PRF_MAX,
  P_SAC_ND_PRF_EQ,
  P_SAC_ND_PRF_NE,
  P_SAC_ND_PRF_LE,
  P_SAC_ND_PRF_LT,
  P_SAC_ND_PRF_GE,
  P_SAC_ND_PRF_GT,
  P_SAC_ND_PRF_AND,
  P_SAC_ND_PRF_OR,
  P_undef
} ;
# 56 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_ops.h"
enum pf_types {
  T_int,
  T_float,
  T_double,
  T_ignore,
  T_nothing
} ;







typedef struct ops_record {
    unsigned long type_ops_count[T_nothing][P_undef];
} SAC_PF_OPS_RECORD;

extern void SAC_PF_OPS_PrintStats (void);
extern void SAC_PF_OPS_PrintRecordStats (SAC_PF_OPS_RECORD record);
extern void SAC_PF_OPS_PrintFunStats (const char *func_name, unsigned num_ap,
                                            const SAC_PF_OPS_RECORD *records);
extern void SAC_PF_OPS_PrintOpsStats (unsigned long *p_ops);
extern bool SAC_PF_OPS_IsRecordZero (SAC_PF_OPS_RECORD record);
extern void SAC_PF_OPS_IncPrf (enum pf_types s, enum pf_ops o);
# 111 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_print.h" 1
# 19 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_print.h"
extern void SAC_PF_PrintHeader (const char *title);
extern void SAC_PF_PrintHeaderNode (const char *title, size_t rank);
extern void SAC_PF_PrintSubHeader (const char *title, size_t lineno);
extern void SAC_PF_PrintSection (const char *title);
extern void SAC_PF_PrintTime (const char *title, const char *space, const SAC_PF_TIMER *time);
extern void SAC_PF_PrintCount (const char *title, const char *space, unsigned long count);
extern void SAC_PF_PrintSize (const char *title, const char *space, unsigned long size, const char *unit);
extern void SAC_PF_PrintTimePercentage (const char *title, const char *space,
                                              const SAC_PF_TIMER *time1, const SAC_PF_TIMER *time2);
# 112 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 1
# 113 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cpubind.h" 1
# 114 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 1



# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 5 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 2
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdbool.h" 1 3 4
# 6 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 2
# 18 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h"
extern 
# 18 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 3 4
      _Bool 
# 18 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h"
           SAC_CUDA_HWLOC_init (int cuda_ordinal, char *str, size_t str_size);
# 115 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2




# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/mt/mt_beehive.h" 1
# 184 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/mt/mt_beehive.h"
extern volatile unsigned int SAC_MT_cnt_hives;
extern volatile unsigned int SAC_MT_cnt_worker_bees;
extern volatile unsigned int SAC_MT_cnt_queen_bees;
extern void *SAC_MT_singleton_queen;

extern int SAC_MT_propagate_lock;
extern int SAC_MT_output_lock;
# 120 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 132 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/rtspec/empty.h" 1







extern unsigned int SAC_RTSPEC_controller_threads;
# 133 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 279 "/home/rubenhensen/sac/hw/a.out.c" 2
# 311 "/home/rubenhensen/sac/hw/a.out.c"
typedef SAC_hidden SACt_sacprelude_p__SACarg;

extern SACt_sacprelude_p__SACarg SACARGcopy( SACt_sacprelude_p__SACarg);
extern void SACARGfree( SACt_sacprelude_p__SACarg);

typedef SAC_hidden SACt_World__World;
typedef SAC_hidden SACt_Terminal__Terminal;
typedef SAC_hidden SACt_TermFile__TermFile;
typedef double * SACt_ComplexBasics__complex;
typedef double * SACt_Complex__complex;
typedef SAC_hidden SACt_List__list;
extern void SAC_List_free_list( SACt_List__list);

typedef int SACt_Grey__grey;
typedef int * SACt_Color8__color;
typedef SAC_hidden SACt_String__string;

extern SACt_String__string copy_string( SACt_String__string);
extern void free_string( SACt_String__string);

typedef SAC_hidden SACt_Structures__string;






static void SAC_PF_BeginComm (void) { } static void SAC_PF_EndComm (void) { }
SAC_HM_arena_t SAC_HM_arenas[128][9 + 2] = { { { 0, { {{0, &(SAC_HM_arenas[0][0])}}, {{0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/hw/a.out.c"
} } }, SAC_HM_arenas[0][0].freelist, 131072, 1, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, { {{0, &(SAC_HM_arenas[0][1])}}, {{0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/hw/a.out.c"
} } }, SAC_HM_arenas[0][1].freelist, 512, 3 - 1, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 2, { {{0, &(SAC_HM_arenas[0][2])}}, {{0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/hw/a.out.c"
} } }, SAC_HM_arenas[0][2].freelist, 512, 5 - 1, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 3, { {{0, &(SAC_HM_arenas[0][3])}}, {{0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/hw/a.out.c"
} } }, SAC_HM_arenas[0][3].freelist, 256, 9 - 1, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 4, { {{0, &(SAC_HM_arenas[0][4])}}, {{0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/hw/a.out.c"
} } }, SAC_HM_arenas[0][4].freelist, 512, 17 - 1, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 5, { {{-1, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][5])}}, { { 0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/hw/a.out.c"
} } }, SAC_HM_arenas[0][5].freelist, 2048, 17, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 6, { {{-1, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][6])}}, { { 0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/hw/a.out.c"
} } }, SAC_HM_arenas[0][6].freelist, 8196, 129, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 7, { {{-1, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][7])}}, { { 0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/hw/a.out.c"
} } }, SAC_HM_arenas[0][7].freelist, 32768, 1025, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 8, { {{-1, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][8])}}, { { 0, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/hw/a.out.c"
} } }, SAC_HM_arenas[0][8].freelist, 0, 8193, 
# 339 "/home/rubenhensen/sac/hw/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/hw/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } } }; const SAC_HM_size_byte_t SAC_HM_initial_master_arena_of_arenas_size = 1048576; const SAC_HM_size_byte_t SAC_HM_initial_worker_arena_of_arenas_size = 65536; const SAC_HM_size_byte_t SAC_HM_initial_top_arena_size = 0; const unsigned int SAC_HM_max_worker_threads = 128 - 1;






extern



void SACprintf_TF (SAC_hidden SACl_FORMAT, ...);

extern



void to_string (SAC_hidden * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, unsigned char * SACl_A, SAC_array_descriptor_t SACl_A__desc, int SACl_LENGTH);

extern



void ARRAYIO__PrintIntArray (SAC_hidden SACl_stream, int SACl_d, int * SACl_s, int * SACl_a);







extern



void SACwf_sacprelude_p__partitionSlicer__i_S__i_S__i_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * * SAC_arg_4__p, SAC_array_descriptor_t * SAC_arg_4__desc__p, int * SACl_min, SAC_array_descriptor_t SACl_min__desc, int * SACl_max, SAC_array_descriptor_t SACl_max__desc, int * SACl_axis, SAC_array_descriptor_t SACl_axis__desc, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc);

extern



void SACwf_sacprelude_p__partitionIntersectMax__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound1, SAC_array_descriptor_t SACl_PWLbound1__desc, int * SACl_ivmin, SAC_array_descriptor_t SACl_ivmin__desc);

extern



void SACwf_sacprelude_p__isPartitionIntersectNull__i_S__i_S__i_S__i_S (
# 386 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 386 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACwf_sacprelude_p__partitionIntersectMin__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound2, SAC_array_descriptor_t SACl_PWLbound2__desc, int * SACl_ivmax, SAC_array_descriptor_t SACl_ivmax__desc);

extern



void SACwf_sacprelude_p__adjustLacFunParams__bl_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 398 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 398 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc);

extern



void SACwf__MAIN_CLStdIO__print__i_S (int * SACl_n, SAC_array_descriptor_t SACl_n__desc);

extern



void SACwf__MAIN__main (int * SAC_arg_1__p);

extern



void SACwf_sacprelude_p__prod__i_S (int * SAC_arg_1__p, int * SACl_v, SAC_array_descriptor_t SACl_v__desc);

extern



void SACwf_sacprelude_p__adjustLacFunParamsReshape__bl_S__i_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 422 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 422 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc);

extern



void SACwf_sacprelude_p__eq__i_S__i_S (
# 428 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 428 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__f_S__f_S (
# 434 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 434 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, float * SACl_A, SAC_array_descriptor_t SACl_A__desc, float * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__d_S__d_S (
# 440 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 440 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, double * SACl_A, SAC_array_descriptor_t SACl_A__desc, double * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__bl_S__bl_S (
# 446 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 446 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, 
# 446 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 446 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 446 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 446 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__c_S__c_S (
# 452 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 452 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, unsigned char * SACl_A, SAC_array_descriptor_t SACl_A__desc, unsigned char * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__b_S__b_S (
# 458 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 458 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, byte * SACl_A, SAC_array_descriptor_t SACl_A__desc, byte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__s_S__s_S (
# 464 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 464 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, short * SACl_A, SAC_array_descriptor_t SACl_A__desc, short * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__l_S__l_S (
# 470 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 470 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, long * SACl_A, SAC_array_descriptor_t SACl_A__desc, long * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ll_S__ll_S (
# 476 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 476 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, longlong * SACl_A, SAC_array_descriptor_t SACl_A__desc, longlong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ub_S__ub_S (
# 482 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 482 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, ubyte * SACl_A, SAC_array_descriptor_t SACl_A__desc, ubyte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__us_S__us_S (
# 488 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 488 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, ushort * SACl_A, SAC_array_descriptor_t SACl_A__desc, ushort * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ui_S__ui_S (
# 494 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 494 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, uint * SACl_A, SAC_array_descriptor_t SACl_A__desc, uint * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ul_S__ul_S (
# 500 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 500 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, ulong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ull_S__ull_S (
# 506 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 506 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, ulonglong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulonglong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__gridFiller__i_S__i_S__i_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc, int * SACl_wdth, SAC_array_descriptor_t SACl_wdth__desc, int * SACl_dim, SAC_array_descriptor_t SACl_dim__desc, int * SACl_maxwidth, SAC_array_descriptor_t SACl_maxwidth__desc);

extern



void SACwf_sacprelude_p__isPartitionIntersect1Part__i_S__i_S__i_S__i_S (
# 518 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 518 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACwf_sacprelude_p__partitionMax__i_S__i_S (int * SAC_arg_1__p, int * SACl_x, SAC_array_descriptor_t SACl_x__desc, int * SACl_y, SAC_array_descriptor_t SACl_y__desc);

extern



void SACwf_sacprelude_p__partitionMin__i_S__i_S (int * SAC_arg_1__p, int * SACl_x, SAC_array_descriptor_t SACl_x__desc, int * SACl_y, SAC_array_descriptor_t SACl_y__desc);

extern



void SACwf__MAIN_CLArray___EQ_EQ__i_S__i_S (
# 536 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 536 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p___PL_PL__i_S (int * SAC_arg_1__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc);

extern



void SACwf_sacprelude_p__sel__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, int * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__f_S (float * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, float * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__d_S (double * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, double * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__bl_S (
# 566 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 566 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, 
# 566 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 566 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__c_S (unsigned char * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, unsigned char * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__b_S (byte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, byte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__s_S (short * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, short * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__l_S (long * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, long * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ll_S (longlong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, longlong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ub_S (ubyte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ubyte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__us_S (ushort * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ushort * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ui_S (uint * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, uint * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ul_S (ulong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ull_S (ulonglong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulonglong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf__MAIN__main (int * SAC_arg_1__p);

extern



void SACf__MAIN_CL_INIT__init (void);

extern



void SACf__MAIN___rtpf_15_impl_unblock__i_S__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int SACl_od);

extern



void SACf_World_CL_INIT__init_TheWorld__SACt_World__World (SAC_hidden * SACp_OI_object__p, SAC_array_descriptor_t * SACp_OI_object__desc__p);

extern



void SACf_Terminal_CL_INIT__init_TheTerminal__SACt_Terminal__Terminal (SAC_hidden * SACp_OI_object__p, SAC_array_descriptor_t * SACp_OI_object__desc__p);

extern



void SACf_TermFile_CL_INIT__init_stdout__SACt_TermFile__TermFile (SAC_hidden * SACp_OI_object__p, SAC_array_descriptor_t * SACp_OI_object__desc__p);

extern



void SACf_ArrayIO__print__i_P (int * SACl_arr, SAC_array_descriptor_t SACl_arr__desc);

extern



void SACf_ScalarIO__print__i (int SACl_n);

extern



void SACf_ScalarIO__print__bl (
# 680 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 680 "/home/rubenhensen/sac/hw/a.out.c"
SACl_n);

extern



void SACf_ArrayArith___EQ_EQ__i_P__i_P (
# 686 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 686 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_ArrayArith___EQ_EQ__i_P__i (
# 692 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 692 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int SACl_B);

extern



void SACf_ArrayArith___EQ_EQ__i__i_P (
# 698 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 698 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_A, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_ScalarArith___EQ_EQ__i__i (
# 704 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 704 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, int SACl_A, int SACl_B);

extern



void SACf_sacprelude_p__sel__i_X__ull_S (ulonglong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulonglong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ul_S (ulong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ui_S (uint * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, uint * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__us_S (ushort * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ushort * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ub_S (ubyte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ubyte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ll_S (longlong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, longlong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__l_S (long * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, long * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__s_S (short * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, short * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__b_S (byte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, byte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__c_S (unsigned char * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, unsigned char * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__bl_S (
# 770 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 770 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, 
# 770 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 770 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__d_S (double * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, double * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__f_S (float * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, float * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, int * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__eq__ull_S__ull_S (
# 794 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 794 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, ulonglong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulonglong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ul_S__ul_S (
# 800 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 800 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, ulong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ui_S__ui_S (
# 806 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 806 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, uint * SACl_A, SAC_array_descriptor_t SACl_A__desc, uint * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__us_S__us_S (
# 812 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 812 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, ushort * SACl_A, SAC_array_descriptor_t SACl_A__desc, ushort * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ub_S__ub_S (
# 818 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 818 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, ubyte * SACl_A, SAC_array_descriptor_t SACl_A__desc, ubyte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ll_S__ll_S (
# 824 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 824 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, longlong * SACl_A, SAC_array_descriptor_t SACl_A__desc, longlong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__l_S__l_S (
# 830 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 830 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, long * SACl_A, SAC_array_descriptor_t SACl_A__desc, long * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__s_S__s_S (
# 836 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 836 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, short * SACl_A, SAC_array_descriptor_t SACl_A__desc, short * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__b_S__b_S (
# 842 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 842 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, byte * SACl_A, SAC_array_descriptor_t SACl_A__desc, byte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__c_S__c_S (
# 848 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 848 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, unsigned char * SACl_A, SAC_array_descriptor_t SACl_A__desc, unsigned char * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__bl_S__bl_S (
# 854 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 854 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, 
# 854 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 854 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 854 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 854 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__d_S__d_S (
# 860 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 860 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, double * SACl_A, SAC_array_descriptor_t SACl_A__desc, double * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__f_S__f_S (
# 866 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 866 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, float * SACl_A, SAC_array_descriptor_t SACl_A__desc, float * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__i_S__i_S (
# 872 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 872 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__adjustLacFunParams__bl_S__i_S__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 878 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 878 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc);

extern



void SACf_sacprelude_p__adjustLacFunParamsReshape__bl_S__i_S__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 884 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 884 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc);

extern



void SACf_sacprelude_p__isPartitionIntersectNull__i_X__i_X__i_X__i_X (
# 890 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 890 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__isPartitionIntersectNull__i__i__i_X__i_X (
# 896 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 896 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_idxmin, int SACl_idxmax, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__partitionMin__i__i (int * SAC_arg_1__p, int SACl_x, int SACl_y);

extern



void SACf_sacprelude_p__partitionMax__i__i (int * SAC_arg_1__p, int SACl_x, int SACl_y);

extern



void SACf_sacprelude_p__isPartitionIntersect1Part__i_X__i_X__i_X__i_X (
# 914 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 914 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__isPartitionIntersect1Part__i__i__i_X__i_X (
# 920 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 920 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_idxmin, int SACl_idxmax, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__partitionIntersectMax__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound1, SAC_array_descriptor_t SACl_PWLbound1__desc, int * SACl_ivmin, SAC_array_descriptor_t SACl_ivmin__desc);

extern



void SACf_sacprelude_p__partitionIntersectMax__i_X__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound1, SAC_array_descriptor_t SACl_PWLbound1__desc, int SACl_ivmin);

extern



void SACf_sacprelude_p__partitionIntersectMin__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound2, SAC_array_descriptor_t SACl_PWLbound2__desc, int * SACl_ivmax, SAC_array_descriptor_t SACl_ivmax__desc);

extern



void SACf_sacprelude_p__partitionIntersectMin__i_X__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound2, SAC_array_descriptor_t SACl_PWLbound2__desc, int SACl_ivmax);

extern



void SACf_sacprelude_p__prod__i_X (int * SAC_arg_1__p, int * SACl_v, SAC_array_descriptor_t SACl_v__desc);

extern



void SACf_sacprelude_p__partitionSlicer__i_X__i_X__i__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * * SAC_arg_4__p, SAC_array_descriptor_t * SAC_arg_4__desc__p, int * SACl_min, SAC_array_descriptor_t SACl_min__desc, int * SACl_max, SAC_array_descriptor_t SACl_max__desc, int SACl_axis, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc);

extern



void SACf_sacprelude_p__gridFiller__i_X__i_X__i_X__i__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc, int * SACl_wdth, SAC_array_descriptor_t SACl_wdth__desc, int SACl_dim, int * SACl_maxwidth, SAC_array_descriptor_t SACl_maxwidth__desc);

extern



void SACf_sacprelude_p___PL_PL__i (int * SAC_arg_1__p, int SACl_a);

extern



void SACf__MAIN___rtpf_8_impl_block__i_X_X__i_0 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc);

extern



void SACf__MAIN___rtpf_8_impl_block__i_X_X__i_1 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_s, SAC_array_descriptor_t SACl_s__desc);

extern



void SACf__MAIN_CLArray___EQ_EQ__i_X__i_X (
# 986 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 986 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf__MAIN_CLArray___EQ_EQ__i_X__i (
# 992 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 992 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int SACl_B);

extern



void SACf__MAIN___rtpf_8_impl_block__i_X_X__i_2 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_s, SAC_array_descriptor_t SACl_s__desc);

extern



void SACof__MAIN_CLStdIO__print__i_X_X (int * SACl_arr, SAC_array_descriptor_t SACl_arr__desc);

extern



void SACf_ArrayArith___AM__bl_P__bl_P (
# 1010 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1010 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 1010 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1010 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 1010 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1010 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_ArrayArith___AM__bl_P__bl (
# 1016 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1016 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 1016 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1016 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 1016 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1016 "/home/rubenhensen/sac/hw/a.out.c"
SACl_B);

extern



void SACf_ArrayArith___AM__bl__bl_P (
# 1022 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1022 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 1022 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1022 "/home/rubenhensen/sac/hw/a.out.c"
SACl_A, 
# 1022 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1022 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_ScalarArith___AM__bl__bl (
# 1028 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1028 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, 
# 1028 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1028 "/home/rubenhensen/sac/hw/a.out.c"
SACl_A, 
# 1028 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1028 "/home/rubenhensen/sac/hw/a.out.c"
SACl_B);

extern



void SACwf_ArrayArith___AM__bl_S__bl_S (
# 1034 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1034 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 1034 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1034 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 1034 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1034 "/home/rubenhensen/sac/hw/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p___ST__i__i (int * SAC_arg_1__p, int SACl_a, int SACl_b);

extern



void SACf_sacprelude_p__and__bl__bl (
# 1046 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1046 "/home/rubenhensen/sac/hw/a.out.c"
* SAC_arg_1__p, 
# 1046 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1046 "/home/rubenhensen/sac/hw/a.out.c"
SACl_a, 
# 1046 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1046 "/home/rubenhensen/sac/hw/a.out.c"
SACl_b);
# 1057 "/home/rubenhensen/sac/hw/a.out.c"
extern SAC_hidden SACo_World__TheWorld;
extern SAC_array_descriptor_t SACo_World__TheWorld__desc;





extern SAC_hidden SACo_Terminal__TheTerminal;
extern SAC_array_descriptor_t SACo_Terminal__TheTerminal__desc;





extern SAC_hidden SACo_TermFile__stdout;
extern SAC_array_descriptor_t SACo_TermFile__stdout__desc;

# 1090 "/home/rubenhensen/sac/hw/a.out.c"
void SACwf__MAIN_CLStdIO__print__i_S (int * SACl_n, SAC_array_descriptor_t SACl_n__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48022_SACl_n;
    SAC_array_descriptor_t _tcp_48022_SACl_n__desc = 
# 1100 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1100 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48022_SACl_n__shp0;
    int _tcp_48022_SACl_n__shp1;
    int _tcp_48022_SACl_n__sz;
    const int _tcp_48022_SACl_n__dim = 2;




    int SACp_pinl_47793__emal_46314__cwc_593;
   
   




    
# 1116 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1116 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47792__emal_46313__cwc_597;
   
   




    int SACp_pinl_47789__emal_46312__cwc_598;
   
   




    
# 1130 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1130 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47788__emal_46311__cwc_600;
   
   




    int SACp_pinl_47787__emal_46310__asd_46290_n;
   
   




    int SACp_emal_46309__cwc_601;
   
   




    
# 1151 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1151 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46308__cwc_605;
   
   





    int SACl_n__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))[4]);
    int SACl_n__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_46309__cwc_601 = SACl_n__dim; }; }
    ; ; { SACp_emal_46308__cwc_605 = (SACp_emal_46309__cwc_601) == (0); };
    { ; ; }
    if (SACp_emal_46308__cwc_605)
    {
      { ; ; }
      { if (!((SACl_n__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_47787__emal_46310__asd_46290_n = ( SACl_n[0]); } }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_n); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))); } } } } else { } }



      SACf_ScalarIO__print__i (SACp_pinl_47787__emal_46310__asd_46290_n);

    }
    else
    {
      { ; ; }
      { { SACp_pinl_47789__emal_46312__cwc_598 = SACl_n__dim; }; }
      ; ; { SACp_pinl_47788__emal_46311__cwc_600 = (SACp_pinl_47789__emal_46312__cwc_598) > (0); };
      { ; ; }
      if (SACp_pinl_47788__emal_46311__cwc_600)
      {
        { ; ; }
        { { SACp_pinl_47793__emal_46314__cwc_593 = SACl_n__dim; }; }
        ; ; { SACp_pinl_47792__emal_46313__cwc_597 = (SACp_pinl_47793__emal_46314__cwc_593) == (2); };
        { ; ; }
        if (SACp_pinl_47792__emal_46313__cwc_597)
        {
          { ; ; }



          if (!((_tcp_48022_SACl_n__dim == SACl_n__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib/src/stdio/ScalarIO.sac", 281, 1, "Assignment with incompatible types found"); };
          _tcp_48022_SACl_n__desc = SACl_n__desc;
          _tcp_48022_SACl_n__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))[(6 + (0))]);
          _tcp_48022_SACl_n__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))[(6 + (1))]);
          _tcp_48022_SACl_n__sz = SACl_n__sz;
          ;
          { _tcp_48022_SACl_n = SACl_n; }




          SACof__MAIN_CLStdIO__print__i_X_X (_tcp_48022_SACl_n, _tcp_48022_SACl_n__desc);

        }
        else
        {
          { ; ; }



          SACf_ArrayIO__print__i_P (SACl_n, SACl_n__desc);

        }
      }
      else
      {
        { ; ; }



        SAC_RuntimeError_Mult( 5, "No appropriate instance of function found:" "\n***   _MAIN:StdIO::print :: Terminal::Terminal TermFile::TermFile int[*] -> Terminal::Terminal TermFile::TermFile \n*** instances present:\n***   StdIO::print :: Terminal::Terminal TermFile::TermFile int -> Terminal::Terminal TermFile::TermFile \n***   StdIO::print :: Terminal::Terminal TermFile::TermFile int[+] -> Terminal::Terminal TermFile::TermFile \n***   _MAIN:StdIO::print :: Terminal::Terminal TermFile::TermFile int[.,.] -> Terminal::Terminal TermFile::TermFile ", "shapes of arguments:", "  []", "  []", "  %s", SAC_PrintShape( SACl_n__desc));

      }
    }



    return;
   
  }



}
}
# 1250 "/home/rubenhensen/sac/hw/a.out.c"
void SACwf__MAIN__main (int * SAC_arg_1__p) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int SACp_cwc_687;
   
   


   



    SACf__MAIN__main (&SACp_cwc_687);




    ;




    { *SAC_arg_1__p = SACp_cwc_687; }
    return;
   
  }



}
}
# 1297 "/home/rubenhensen/sac/hw/a.out.c"
void SACwf__MAIN_CLArray___EQ_EQ__i_S__i_S (
# 1297 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 1297 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48021_SACl_B;
    SAC_array_descriptor_t _tcp_48021_SACl_B__desc = 
# 1307 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1307 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48021_SACl_B__shp0;
    int _tcp_48021_SACl_B__sz;
    const int _tcp_48021_SACl_B__dim = 1;




    int * _tcp_48020_SACl_A;
    SAC_array_descriptor_t _tcp_48020_SACl_A__desc = 
# 1316 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1316 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48020_SACl_A__shp0;
    int _tcp_48020_SACl_A__sz;
    const int _tcp_48020_SACl_A__dim = 1;




    
# 1324 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1324 "/home/rubenhensen/sac/hw/a.out.c"
   * _tcp_48019_SACp_cwc_932;
    SAC_array_descriptor_t _tcp_48019_SACp_cwc_932__desc = 
# 1325 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1325 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48019_SACp_cwc_932__shp0;
    int _tcp_48019_SACp_cwc_932__sz;
    const int _tcp_48019_SACp_cwc_932__dim = 1;




    int * _tcp_48018_SACl_A;
    SAC_array_descriptor_t _tcp_48018_SACl_A__desc = 
# 1334 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1334 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48018_SACl_A__shp0;
    int _tcp_48018_SACl_A__sz;
    const int _tcp_48018_SACl_A__dim = 1;




    
# 1342 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1342 "/home/rubenhensen/sac/hw/a.out.c"
   * _tcp_48017_SACp_cwc_932;
    SAC_array_descriptor_t _tcp_48017_SACp_cwc_932__desc = 
# 1343 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1343 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48017_SACp_cwc_932__shp0;
    int _tcp_48017_SACp_cwc_932__sz;
    const int _tcp_48017_SACp_cwc_932__dim = 1;




    int SACp_pinl_47949__emal_46331__cwc_934;
   
   




    
# 1358 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1358 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47948__emal_46330__cwc_937;
   
   




    int SACp_pinl_47945__emal_46329__cwc_938;
   
   




    
# 1372 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1372 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47944__emal_46328__cwc_940;
   
   




    int SACp_pinl_47943__emal_46327__asd_46289_B;
   
   




    int SACp_pinl_47939__emal_46336__cwc_947;
   
   




    
# 1393 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1393 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47938__emal_46335__cwc_950;
   
   




    int SACp_pinl_47935__emal_46334__cwc_951;
   
   




    
# 1407 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1407 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47934__emal_46333__cwc_953;
   
   




    int SACp_pinl_47933__emal_46332__asd_46288_B;
   
   




    int SACp_pinl_47929__emal_46326__cwc_941;
   
   




    
# 1428 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1428 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47928__emal_46325__cwc_944;
   
   




    int SACp_pinl_47927__emal_46324__cwc_954;
   
   




    
# 1442 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1442 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47926__emal_46323__cwc_957;
   
   




    int SACp_pinl_47921__emal_46322__cwc_945;
   
   




    
# 1456 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1456 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47920__emal_46321__cwc_959;
   
   




    int SACp_pinl_47917__emal_46342__asd_46284_A;
   
   




    int SACp_pinl_47915__emal_46341__cwc_965;
   
   




    
# 1477 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1477 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47914__emal_46340__cwc_967;
   
   




    int SACp_pinl_47913__emal_46339__asd_46287_B;
   
   




    int SACp_pinl_47912__emal_46338__asd_46286_A;
   
   




    
# 1498 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1498 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_pinl_47911__emal_46337__asd_46285__cwc_969;
    SAC_array_descriptor_t SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc = 
# 1499 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1499 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_47911__emal_46337__asd_46285__cwc_969__sz = 0;
    int SACp_pinl_47911__emal_46337__asd_46285__cwc_969__dim = 0;




    
# 1506 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1506 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47905__cwc_969;
   
   




    int SACp_pinl_47904__emal_46320__cwc_960;
   
   




    
# 1520 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1520 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47903__emal_46319__cwc_962;
   
   




    int SACp_pinl_47902__emal_46318__cwc_968;
   
   




    
# 1534 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1534 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47901__emal_46317__cwc_971;
   
   




    int SACp_emal_46316__cwc_963;
   
   




    
# 1548 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1548 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46315__cwc_973;
   
   




    
# 1555 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1555 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_cwc_932;
    SAC_array_descriptor_t SACp_cwc_932__desc = 
# 1556 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1556 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_cwc_932__sz = 0;
    int SACp_cwc_932__dim = 0;





    int SACl_B__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[4]);
    int SACl_B__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[3]);




    int SACl_A__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[4]);
    int SACl_A__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_46316__cwc_963 = SACl_A__dim; }; }
    ; ; { SACp_emal_46315__cwc_973 = (SACp_emal_46316__cwc_963) == (0); };
    { ; ; }
    if (SACp_emal_46315__cwc_973)
    {
      { ; ; }
      { { SACp_pinl_47902__emal_46318__cwc_968 = SACl_B__dim; }; }
      ; ; { SACp_pinl_47901__emal_46317__cwc_971 = (SACp_pinl_47902__emal_46318__cwc_968) == (0); };
      { ; ; }
      if (SACp_pinl_47901__emal_46317__cwc_971)
      {
        { ; ; }
        { if (!((SACl_B__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_47913__emal_46339__asd_46287_B = ( SACl_B[0]); } }
        { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_B); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))); } } } } else { } }
        { if (!((SACl_A__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_47912__emal_46338__asd_46286_A = ( SACl_A[0]); } }
        { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_A); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))); } } } } else { } }



        SACf_ScalarArith___EQ_EQ__i__i (&SACp_pinl_47905__cwc_969, SACp_pinl_47912__emal_46338__asd_46286_A, SACp_pinl_47913__emal_46339__asd_46287_B);




        ;

        { { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_pinl_47911__emal_46337__asd_46285__cwc_969"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 1600 "/home/rubenhensen/sac/hw/a.out.c" 3 4
       ((void) sizeof ((
# 1600 "/home/rubenhensen/sac/hw/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1600 "/home/rubenhensen/sac/hw/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 1600 "/home/rubenhensen/sac/hw/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1600 "/home/rubenhensen/sac/hw/a.out.c" 3 4
       ) ; else __assert_fail (
# 1600 "/home/rubenhensen/sac/hw/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 1600 "/home/rubenhensen/sac/hw/a.out.c" 3 4
       , "/home/rubenhensen/sac/hw/a.out.c", 1600, __extension__ __PRETTY_FUNCTION__); }))
# 1600 "/home/rubenhensen/sac/hw/a.out.c"
       ; SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc) & (-1 ^ (3))))[3]) = SACp_pinl_47911__emal_46337__asd_46285__cwc_969__dim = 0; }



        if (!((SACp_pinl_47911__emal_46337__asd_46285__cwc_969__dim == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 46753, "Assignment with incompatible types found"); };
        {
          int SAC_i;
          int SAC_size = 1;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc) & (-1 ^ (3))))[4]) = SACp_pinl_47911__emal_46337__asd_46285__cwc_969__sz = SAC_size * 1;
          if (!((SACp_pinl_47911__emal_46337__asd_46285__cwc_969__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 46753, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 1612 "/home/rubenhensen/sac/hw/a.out.c" 3 4
       ((void) sizeof ((
# 1612 "/home/rubenhensen/sac/hw/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1612 "/home/rubenhensen/sac/hw/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 1612 "/home/rubenhensen/sac/hw/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1612 "/home/rubenhensen/sac/hw/a.out.c" 3 4
       ) ; else __assert_fail (
# 1612 "/home/rubenhensen/sac/hw/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 1612 "/home/rubenhensen/sac/hw/a.out.c" 3 4
       , "/home/rubenhensen/sac/hw/a.out.c", 1612, __extension__ __PRETTY_FUNCTION__); }))
# 1612 "/home/rubenhensen/sac/hw/a.out.c"
       ; SACp_pinl_47911__emal_46337__asd_46285__cwc_969 = (
# 1612 "/home/rubenhensen/sac/hw/a.out.c" 3 4
       _Bool 
# 1612 "/home/rubenhensen/sac/hw/a.out.c"
       *)SAC_HM_MallocAnyChunk_st (SACp_pinl_47911__emal_46337__asd_46285__cwc_969__sz * sizeof (*SACp_pinl_47911__emal_46337__asd_46285__cwc_969)); break; case SAC_HM_multi_threaded: SACp_pinl_47911__emal_46337__asd_46285__cwc_969 = (
# 1612 "/home/rubenhensen/sac/hw/a.out.c" 3 4
       _Bool 
# 1612 "/home/rubenhensen/sac/hw/a.out.c"
       *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_47911__emal_46337__asd_46285__cwc_969__sz * sizeof (*SACp_pinl_47911__emal_46337__asd_46285__cwc_969), 0); break; case SAC_HM_any_threaded: SACp_pinl_47911__emal_46337__asd_46285__cwc_969 = (
# 1612 "/home/rubenhensen/sac/hw/a.out.c" 3 4
       _Bool 
# 1612 "/home/rubenhensen/sac/hw/a.out.c"
       *)SAC_HM_MallocAnyChunk_at (SACp_pinl_47911__emal_46337__asd_46285__cwc_969__sz * sizeof (*SACp_pinl_47911__emal_46337__asd_46285__cwc_969), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc) & (-1 ^ (3))))[1]) = 0; } }
        { if (!((SACp_pinl_47911__emal_46337__asd_46285__cwc_969__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_47911__emal_46337__asd_46285__cwc_969[0] = SACp_pinl_47905__cwc_969; } }
        { ; ; }



        SACp_cwc_932__desc = SACp_pinl_47911__emal_46337__asd_46285__cwc_969__desc;
        SACp_cwc_932__sz = SACp_pinl_47911__emal_46337__asd_46285__cwc_969__sz;
        SACp_cwc_932__dim = SACp_pinl_47911__emal_46337__asd_46285__cwc_969__dim;
        ;
        { SACp_cwc_932 = SACp_pinl_47911__emal_46337__asd_46285__cwc_969; }

      }
      else
      {
        { ; ; }
        { { SACp_pinl_47915__emal_46341__cwc_965 = SACl_B__dim; }; }
        ; ; { SACp_pinl_47914__emal_46340__cwc_967 = (SACp_pinl_47915__emal_46341__cwc_965) > (0); };
        { ; ; }
        if (SACp_pinl_47914__emal_46340__cwc_967)
        {
          { ; ; }
          { if (!((SACl_A__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_47917__emal_46342__asd_46284_A = ( SACl_A[0]); } }
          { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_A); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))); } } } } else { } }



          SACf_ArrayArith___EQ_EQ__i__i_P (&SACp_cwc_932, &SACp_cwc_932__desc, SACp_pinl_47917__emal_46342__asd_46284_A, SACl_B, SACl_B__desc);




          SACp_cwc_932__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_932__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[3]);

        }
        else
        {
          { ; ; }



          SAC_RuntimeError_Mult( 4, "No appropriate instance of function found:" "\n***   _MAIN:Array::== :: int[*] int[*] -> bool[*] \n*** instances present:\n***   ArrayArith::== :: int[+] int[+] -> bool[+] \n***   ArrayArith::== :: int[+] int -> bool[+] \n***   ArrayArith::== :: int int[+] -> bool[+] \n***   ScalarArith::== :: int int -> bool \n***   _MAIN:Array::== :: int[.] int -> bool[.] \n***   _MAIN:Array::== :: int[.] int[.] -> bool[.] ", "shapes of arguments:", "  %s", SAC_PrintShape( SACl_A__desc), "  %s", SAC_PrintShape( SACl_B__desc));

        }
      }
    }
    else
    {
      { ; ; }
      { { SACp_pinl_47904__emal_46320__cwc_960 = SACl_A__dim; }; }
      ; ; { SACp_pinl_47903__emal_46319__cwc_962 = (SACp_pinl_47904__emal_46320__cwc_960) > (0); };
      { ; ; }
      if (SACp_pinl_47903__emal_46319__cwc_962)
      {
        { ; ; }
        { { SACp_pinl_47921__emal_46322__cwc_945 = SACl_A__dim; }; }
        ; ; { SACp_pinl_47920__emal_46321__cwc_959 = (SACp_pinl_47921__emal_46322__cwc_945) == (1); };
        { ; ; }
        if (SACp_pinl_47920__emal_46321__cwc_959)
        {
          { ; ; }
          { { SACp_pinl_47927__emal_46324__cwc_954 = SACl_B__dim; }; }
          ; ; { SACp_pinl_47926__emal_46323__cwc_957 = (SACp_pinl_47927__emal_46324__cwc_954) == (0); };
          { ; ; }
          if (SACp_pinl_47926__emal_46323__cwc_957)
          {
            { ; ; }
            { if (!((SACl_B__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_47933__emal_46332__asd_46288_B = ( SACl_B[0]); } }
            { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_B); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))); } } } } else { } }



            if (!((_tcp_48018_SACl_A__dim == SACl_A__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 46753, "Assignment with incompatible types found"); };
            _tcp_48018_SACl_A__desc = SACl_A__desc;
            _tcp_48018_SACl_A__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[(6 + (0))]);
            _tcp_48018_SACl_A__sz = SACl_A__sz;
            ;
            { _tcp_48018_SACl_A = SACl_A; }




            SACf__MAIN_CLArray___EQ_EQ__i_X__i (&_tcp_48017_SACp_cwc_932, &_tcp_48017_SACp_cwc_932__desc, _tcp_48018_SACl_A, _tcp_48018_SACl_A__desc, SACp_pinl_47933__emal_46332__asd_46288_B);




            _tcp_48017_SACp_cwc_932__shp0 = (((SAC_array_descriptor_t) (((intptr_t)_tcp_48017_SACp_cwc_932__desc) & (-1 ^ (3))))[(6 + (0))]);
            _tcp_48017_SACp_cwc_932__sz = (((SAC_array_descriptor_t) (((intptr_t)_tcp_48017_SACp_cwc_932__desc) & (-1 ^ (3))))[4]);




            SACp_cwc_932__desc = _tcp_48017_SACp_cwc_932__desc;
            SACp_cwc_932__sz = _tcp_48017_SACp_cwc_932__sz;
            SACp_cwc_932__dim = _tcp_48017_SACp_cwc_932__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[3]) = _tcp_48017_SACp_cwc_932__dim;
            { SACp_cwc_932 = _tcp_48017_SACp_cwc_932; }

          }
          else
          {
            { ; ; }
            { { SACp_pinl_47935__emal_46334__cwc_951 = SACl_B__dim; }; }
            ; ; { SACp_pinl_47934__emal_46333__cwc_953 = (SACp_pinl_47935__emal_46334__cwc_951) > (0); };
            { ; ; }
            if (SACp_pinl_47934__emal_46333__cwc_953)
            {
              { ; ; }
              { { SACp_pinl_47939__emal_46336__cwc_947 = SACl_B__dim; }; }
              ; ; { SACp_pinl_47938__emal_46335__cwc_950 = (SACp_pinl_47939__emal_46336__cwc_947) == (1); };
              { ; ; }
              if (SACp_pinl_47938__emal_46335__cwc_950)
              {
                { ; ; }



                if (!((_tcp_48021_SACl_B__dim == SACl_B__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 46753, "Assignment with incompatible types found"); };
                _tcp_48021_SACl_B__desc = SACl_B__desc;
                _tcp_48021_SACl_B__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[(6 + (0))]);
                _tcp_48021_SACl_B__sz = SACl_B__sz;
                ;
                { _tcp_48021_SACl_B = SACl_B; }




                if (!((_tcp_48020_SACl_A__dim == SACl_A__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 46753, "Assignment with incompatible types found"); };
                _tcp_48020_SACl_A__desc = SACl_A__desc;
                _tcp_48020_SACl_A__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[(6 + (0))]);
                _tcp_48020_SACl_A__sz = SACl_A__sz;
                ;
                { _tcp_48020_SACl_A = SACl_A; }




                SACf__MAIN_CLArray___EQ_EQ__i_X__i_X (&_tcp_48019_SACp_cwc_932, &_tcp_48019_SACp_cwc_932__desc, _tcp_48020_SACl_A, _tcp_48020_SACl_A__desc, _tcp_48021_SACl_B, _tcp_48021_SACl_B__desc);




                _tcp_48019_SACp_cwc_932__shp0 = (((SAC_array_descriptor_t) (((intptr_t)_tcp_48019_SACp_cwc_932__desc) & (-1 ^ (3))))[(6 + (0))]);
                _tcp_48019_SACp_cwc_932__sz = (((SAC_array_descriptor_t) (((intptr_t)_tcp_48019_SACp_cwc_932__desc) & (-1 ^ (3))))[4]);




                SACp_cwc_932__desc = _tcp_48019_SACp_cwc_932__desc;
                SACp_cwc_932__sz = _tcp_48019_SACp_cwc_932__sz;
                SACp_cwc_932__dim = _tcp_48019_SACp_cwc_932__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[3]) = _tcp_48019_SACp_cwc_932__dim;
                { SACp_cwc_932 = _tcp_48019_SACp_cwc_932; }

              }
              else
              {
                { ; ; }



                SACf_ArrayArith___EQ_EQ__i_P__i_P (&SACp_cwc_932, &SACp_cwc_932__desc, SACl_A, SACl_A__desc, SACl_B, SACl_B__desc);




                SACp_cwc_932__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_932__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[3]);

              }
            }
            else
            {
              { ; ; }



              SAC_RuntimeError_Mult( 4, "No appropriate instance of function found:" "\n***   _MAIN:Array::== :: int[*] int[*] -> bool[*] \n*** instances present:\n***   ArrayArith::== :: int[+] int[+] -> bool[+] \n***   ArrayArith::== :: int[+] int -> bool[+] \n***   ArrayArith::== :: int int[+] -> bool[+] \n***   ScalarArith::== :: int int -> bool \n***   _MAIN:Array::== :: int[.] int -> bool[.] \n***   _MAIN:Array::== :: int[.] int[.] -> bool[.] ", "shapes of arguments:", "  %s", SAC_PrintShape( SACl_A__desc), "  %s", SAC_PrintShape( SACl_B__desc));

            }
          }
        }
        else
        {
          { ; ; }
          { { SACp_pinl_47929__emal_46326__cwc_941 = SACl_B__dim; }; }
          ; ; { SACp_pinl_47928__emal_46325__cwc_944 = (SACp_pinl_47929__emal_46326__cwc_941) == (0); };
          { ; ; }
          if (SACp_pinl_47928__emal_46325__cwc_944)
          {
            { ; ; }
            { if (!((SACl_B__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_47943__emal_46327__asd_46289_B = ( SACl_B[0]); } }
            { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_B); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))); } } } } else { } }



            SACf_ArrayArith___EQ_EQ__i_P__i (&SACp_cwc_932, &SACp_cwc_932__desc, SACl_A, SACl_A__desc, SACp_pinl_47943__emal_46327__asd_46289_B);




            SACp_cwc_932__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_932__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[3]);

          }
          else
          {
            { ; ; }
            { { SACp_pinl_47945__emal_46329__cwc_938 = SACl_B__dim; }; }
            ; ; { SACp_pinl_47944__emal_46328__cwc_940 = (SACp_pinl_47945__emal_46329__cwc_938) > (0); };
            { ; ; }
            if (SACp_pinl_47944__emal_46328__cwc_940)
            {
              { ; ; }
              { { SACp_pinl_47949__emal_46331__cwc_934 = SACl_B__dim; }; }
              ; ; { SACp_pinl_47948__emal_46330__cwc_937 = (SACp_pinl_47949__emal_46331__cwc_934) == (1); };
              { ; ; }
              if (SACp_pinl_47948__emal_46330__cwc_937)
              {
                { ; ; }



                SACf_ArrayArith___EQ_EQ__i_P__i_P (&SACp_cwc_932, &SACp_cwc_932__desc, SACl_A, SACl_A__desc, SACl_B, SACl_B__desc);




                SACp_cwc_932__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_932__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[3]);

              }
              else
              {
                { ; ; }



                SACf_ArrayArith___EQ_EQ__i_P__i_P (&SACp_cwc_932, &SACp_cwc_932__desc, SACl_A, SACl_A__desc, SACl_B, SACl_B__desc);




                SACp_cwc_932__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_932__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_932__desc) & (-1 ^ (3))))[3]);

              }
            }
            else
            {
              { ; ; }



              SAC_RuntimeError_Mult( 4, "No appropriate instance of function found:" "\n***   _MAIN:Array::== :: int[*] int[*] -> bool[*] \n*** instances present:\n***   ArrayArith::== :: int[+] int[+] -> bool[+] \n***   ArrayArith::== :: int[+] int -> bool[+] \n***   ArrayArith::== :: int int[+] -> bool[+] \n***   ScalarArith::== :: int int -> bool \n***   _MAIN:Array::== :: int[.] int -> bool[.] \n***   _MAIN:Array::== :: int[.] int[.] -> bool[.] ", "shapes of arguments:", "  %s", SAC_PrintShape( SACl_A__desc), "  %s", SAC_PrintShape( SACl_B__desc));

            }
          }
        }
      }
      else
      {
        { ; ; }



        SAC_RuntimeError_Mult( 4, "No appropriate instance of function found:" "\n***   _MAIN:Array::== :: int[*] int[*] -> bool[*] \n*** instances present:\n***   ArrayArith::== :: int[+] int[+] -> bool[+] \n***   ArrayArith::== :: int[+] int -> bool[+] \n***   ArrayArith::== :: int int[+] -> bool[+] \n***   ScalarArith::== :: int int -> bool \n***   _MAIN:Array::== :: int[.] int -> bool[.] \n***   _MAIN:Array::== :: int[.] int[.] -> bool[.] ", "shapes of arguments:", "  %s", SAC_PrintShape( SACl_A__desc), "  %s", SAC_PrintShape( SACl_B__desc));

      }
    }



    { *SAC_arg_1__p = SACp_cwc_932; *SAC_arg_1__desc__p = SACp_cwc_932__desc; }
    return;
   
  }



}
}
# 1905 "/home/rubenhensen/sac/hw/a.out.c"
void SACf__MAIN__main (int * SAC_arg_1__p) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613;
    SAC_array_descriptor_t _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__desc = 
# 1915 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1915 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__shp0;
    int _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__shp1;
    int _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__sz;
    const int _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__dim = 2;




    int * _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613;
    SAC_array_descriptor_t _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__desc = 
# 1925 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1925 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__shp0;
    int _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__shp1;
    int _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__sz;
    const int _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__dim = 2;




    int * _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613;
    SAC_array_descriptor_t _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__desc = 
# 1935 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1935 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__shp0;
    int _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__shp1;
    int _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__sz;
    const int _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__dim = 2;




    int * _tcp_48013_SACp_emal_46503__pinl_9546__icc_7613;
    SAC_array_descriptor_t _tcp_48013_SACp_emal_46503__pinl_9546__icc_7613__desc = 
# 1945 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1945 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48013_SACp_emal_46503__pinl_9546__icc_7613__sz = 0;
    int _tcp_48013_SACp_emal_46503__pinl_9546__icc_7613__dim = 0;




    int * _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613;
    SAC_array_descriptor_t _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__desc = 
# 1953 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1953 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__shp0;
    int _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__shp1;
    int _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__sz;
    const int _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__dim = 2;




    int * _tcp_48011_SACp_emal_46503__pinl_9546__icc_7613;
    SAC_array_descriptor_t _tcp_48011_SACp_emal_46503__pinl_9546__icc_7613__desc = 
# 1963 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 1963 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48011_SACp_emal_46503__pinl_9546__icc_7613__sz = 0;
    int _tcp_48011_SACp_emal_46503__pinl_9546__icc_7613__dim = 0;




    
# 1970 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1970 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47991__emal_46509__hce_38__SSA0_1;
   
   




    
# 1977 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1977 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47989__emal_46510__hce_39__SSA0_1;
   
   




    
# 1984 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1984 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47987__emal_46512__hce_40__SSA0_1;
   
   




    
# 1991 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1991 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47986__emal_46511__hce_40;
   
   




    
# 1998 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 1998 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47983__emal_46513__hce_31__SSA0_1;
   
   




    
# 2005 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2005 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47981__emal_46514__hce_36__SSA0_1;
   
   




    
# 2012 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2012 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47979__emal_46515__hce_37__SSA0_1;
   
   




    
# 2019 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2019 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47977__emal_46516__hce_38__SSA0_1;
   
   




    
# 2026 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2026 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47975__emal_46517__hce_39__SSA0_1;
   
   




    
# 2033 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2033 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47973__emal_46519__hce_40__SSA0_1;
   
   




    
# 2040 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2040 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47972__emal_46518__hce_40;
   
   




    
# 2047 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2047 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47969__emal_46520__hce_27__SSA0_1;
   
   




    
# 2054 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2054 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47967__emal_46521__hce_30__SSA0_1;
   
   




    
# 2061 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2061 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47965__emal_46522__hce_31__SSA0_1;
   
   




    
# 2068 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2068 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47963__emal_46523__hce_36__SSA0_1;
   
   




    
# 2075 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2075 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47961__emal_46524__hce_37__SSA0_1;
   
   




    
# 2082 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2082 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47959__emal_46525__hce_38__SSA0_1;
   
   




    
# 2089 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2089 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47957__emal_46527__hce_40__SSA0_1;
   
   




    
# 2096 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2096 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47956__emal_46526__hce_40;
   
   




    
# 2103 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2103 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47953__emal_46528__hce_27__SSA0_1;
   
   




    
# 2110 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2110 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_47951__emal_46529__hce_30__SSA0_1;
   
   




    int SACp_emal_46508__isaa_35265__rso_285_TheWorld;
   
   




    
# 2124 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2124 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46507__pinl_9505__icc_3388_pred;
   
   




    int * SACp_emal_46505__pinl_9492__icc_3396;
    SAC_array_descriptor_t SACp_emal_46505__pinl_9492__icc_3396__desc = 
# 2132 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2132 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46505__pinl_9492__icc_3396__shp0 = 240;
    const int SACp_emal_46505__pinl_9492__icc_3396__sz = 240;
    const int SACp_emal_46505__pinl_9492__icc_3396__dim = 1;




    int * SACp_emal_46503__pinl_9546__icc_7613;
    SAC_array_descriptor_t SACp_emal_46503__pinl_9546__icc_7613__desc = 
# 2141 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2141 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46503__pinl_9546__icc_7613__shp0 = 20;
    const int SACp_emal_46503__pinl_9546__icc_7613__shp1 = 12;
    const int SACp_emal_46503__pinl_9546__icc_7613__sz = 240;
    const int SACp_emal_46503__pinl_9546__icc_7613__dim = 2;

    const int SACp_emal_46502__flat_48 = 2;



    int * SACp_emal_46501__flat_47;
    SAC_array_descriptor_t SACp_emal_46501__flat_47__desc = 
# 2152 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2152 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46501__flat_47__shp0 = 2;
    const int SACp_emal_46501__flat_47__sz = 2;
    const int SACp_emal_46501__flat_47__dim = 1;




    int * SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound;
    SAC_array_descriptor_t SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__desc = 
# 2161 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2161 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__shp0 = 1;
    const int SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__sz = 1;
    const int SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim = 1;




    int SACp_emal_46499__pinl_11445__eat_340__SSA7_1;
   
   




    
# 2176 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2176 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46498__pinl_11272__flat_420;
   
   




    int * SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res;
    SAC_array_descriptor_t SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__desc = 
# 2184 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2184 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__shp0 = 4;
    const int SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz = 4;
    const int SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim = 1;




    int * SACp_emal_46496__pinl_10898_shp;
    SAC_array_descriptor_t SACp_emal_46496__pinl_10898_shp__desc = 
# 2193 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2193 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46496__pinl_10898_shp__shp0 = 2;
    const int SACp_emal_46496__pinl_10898_shp__sz = 2;
    const int SACp_emal_46496__pinl_10898_shp__dim = 1;




    int * SACp_emal_46495__pinl_10886__flat_136;
    SAC_array_descriptor_t SACp_emal_46495__pinl_10886__flat_136__desc = 
# 2202 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2202 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46495__pinl_10886__flat_136__shp0 = 2;
    const int SACp_emal_46495__pinl_10886__flat_136__sz = 2;
    const int SACp_emal_46495__pinl_10886__flat_136__dim = 1;




    int SACp_emal_46494__uprf_34281;
   
   




    int SACp_emal_46493__uprf_34286;
   
   




    int SACp_emal_46492__esd_39574;
   
   




    
# 2231 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2231 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46491__uprf_34274;
   
   




    int SACp_emal_46490__esd_39573;
   
   




    
# 2245 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2245 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46489__uprf_34277;
   
   




    
# 2252 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2252 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_emal_46488__pinl_10865__icc_3190;
    SAC_array_descriptor_t SACp_emal_46488__pinl_10865__icc_3190__desc = 
# 2253 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2253 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46488__pinl_10865__icc_3190__shp0 = 2;
    const int SACp_emal_46488__pinl_10865__icc_3190__sz = 2;
    const int SACp_emal_46488__pinl_10865__icc_3190__dim = 1;




    
# 2261 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2261 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46487__pinl_10883__flat_133;
   
   




    int SACp_emal_46486__pinl_11052__icc_6606;
   
   




    int SACp_emal_46485__ctz_25643;
   
   




    
# 2282 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2282 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46484__pinl_11062__flat_3875;
   
   




    int SACp_emal_46483__pinl_11052__icc_6606__SSA11_1;
   
   




    int SACp_emal_46482__ctz_25643__SSA11_1;
   
   




    
# 2303 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2303 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46481__pinl_11062__flat_3875__SSA11_2;
   
   




    int SACp_emal_46479__isaa_35306__pinl_12536__rtpf_17_res;
   
   




    int * SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res;
    SAC_array_descriptor_t SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc = 
# 2318 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2318 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__shp0;
    int SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__sz;
    const int SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim = 1;




    int * SACp_emal_46477__pinl_12573_shp;
    SAC_array_descriptor_t SACp_emal_46477__pinl_12573_shp__desc = 
# 2327 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2327 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46477__pinl_12573_shp__shp0 = 2;
    const int SACp_emal_46477__pinl_12573_shp__sz = 2;
    const int SACp_emal_46477__pinl_12573_shp__dim = 1;




    
# 2335 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2335 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46475__pinl_12554__flat_248;
   
   




    int SACp_emal_46472__pinl_12914__icc_6600;
   
   




    int SACp_emal_46471__ctz_25633;
   
   




    
# 2356 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2356 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46470__pinl_12927__flat_3875;
   
   




    int SACp_emal_46469__pinl_12914__icc_6600__SSA15_1;
   
   




    int SACp_emal_46468__ctz_25633__SSA15_1;
   
   




    
# 2377 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2377 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46467__pinl_12927__flat_3875__SSA15_2;
   
   




    
# 2384 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2384 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46464__pinl_12726__flat_3875;
   
   




    
# 2391 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2391 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46462__pinl_12726__flat_3875__SSA15_2;
   
   




    int * SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res;
    SAC_array_descriptor_t SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__desc = 
# 2399 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2399 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__shp0 = 3;
    const int SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz = 3;
    const int SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim = 1;




    int * SACp_emal_46459__pinl_13789_shp;
    SAC_array_descriptor_t SACp_emal_46459__pinl_13789_shp__desc = 
# 2408 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2408 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46459__pinl_13789_shp__shp0 = 1;
    const int SACp_emal_46459__pinl_13789_shp__sz = 1;
    const int SACp_emal_46459__pinl_13789_shp__dim = 1;




    int * SACp_emal_46458__pinl_13772__flat_128;
    SAC_array_descriptor_t SACp_emal_46458__pinl_13772__flat_128__desc = 
# 2417 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2417 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46458__pinl_13772__flat_128__shp0 = 1;
    const int SACp_emal_46458__pinl_13772__flat_128__sz = 1;
    const int SACp_emal_46458__pinl_13772__flat_128__dim = 1;




    int SACp_emal_46457__uprf_34270;
   
   




    int SACp_emal_46456__esd_39565;
   
   




    
# 2439 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2439 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46455__uprf_34266;
   
   




    
# 2446 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2446 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_emal_46454__pinl_13753__icc_3186;
    SAC_array_descriptor_t SACp_emal_46454__pinl_13753__icc_3186__desc = 
# 2447 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2447 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46454__pinl_13753__icc_3186__shp0 = 1;
    const int SACp_emal_46454__pinl_13753__icc_3186__sz = 1;
    const int SACp_emal_46454__pinl_13753__icc_3186__dim = 1;




    
# 2455 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2455 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46453__pinl_13769__flat_125;
   
   




    int * SACp_emal_46452__pinl_13777__flat_136;
    SAC_array_descriptor_t SACp_emal_46452__pinl_13777__flat_136__desc = 
# 2463 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2463 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46452__pinl_13777__flat_136__shp0 = 2;
    const int SACp_emal_46452__pinl_13777__flat_136__sz = 2;
    const int SACp_emal_46452__pinl_13777__flat_136__dim = 1;




    int * SACp_emal_46451__pinl_13776__flat_135;
    SAC_array_descriptor_t SACp_emal_46451__pinl_13776__flat_135__desc = 
# 2472 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2472 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46451__pinl_13776__flat_135__shp0 = 1;
    const int SACp_emal_46451__pinl_13776__flat_135__sz = 1;
    const int SACp_emal_46451__pinl_13776__flat_135__dim = 1;




    int SACp_emal_46450__uprf_34262;
   
   




    int SACp_emal_46449__esd_39563;
   
   




    
# 2494 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2494 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46448__uprf_34258;
   
   




    
# 2501 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2501 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_emal_46447__pinl_13756__icc_3190;
    SAC_array_descriptor_t SACp_emal_46447__pinl_13756__icc_3190__desc = 
# 2502 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2502 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46447__pinl_13756__icc_3190__shp0 = 1;
    const int SACp_emal_46447__pinl_13756__icc_3190__sz = 1;
    const int SACp_emal_46447__pinl_13756__icc_3190__dim = 1;




    
# 2510 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2510 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46446__pinl_13774__flat_133;
   
   




    int SACp_emal_46445__pinl_13943__icc_6606;
   
   




    int SACp_emal_46444__ctz_25621;
   
   




    
# 2531 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2531 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46443__pinl_13953__flat_3875;
   
   




    int SACp_emal_46442__isaa_35368__pinl_14401__rtpf_17_res;
   
   




    int * SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res;
    SAC_array_descriptor_t SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc = 
# 2546 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2546 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__shp0;
    int SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__sz;
    const int SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim = 1;




    int * SACp_emal_46440__pinl_14438_shp;
    SAC_array_descriptor_t SACp_emal_46440__pinl_14438_shp__desc = 
# 2555 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2555 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46440__pinl_14438_shp__shp0 = 1;
    const int SACp_emal_46440__pinl_14438_shp__sz = 1;
    const int SACp_emal_46440__pinl_14438_shp__dim = 1;




    
# 2563 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2563 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46438__pinl_14419__flat_248;
   
   




    int * SACp_emal_46437__pinl_14425__flat_254;
    SAC_array_descriptor_t SACp_emal_46437__pinl_14425__flat_254__desc = 
# 2571 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2571 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46437__pinl_14425__flat_254__shp0;
    int SACp_emal_46437__pinl_14425__flat_254__sz;
    const int SACp_emal_46437__pinl_14425__flat_254__dim = 1;




    int * SACp_emal_46436__pinl_14424__flat_253;
    SAC_array_descriptor_t SACp_emal_46436__pinl_14424__flat_253__desc = 
# 2580 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2580 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46436__pinl_14424__flat_253__shp0 = 1;
    const int SACp_emal_46436__pinl_14424__flat_253__sz = 1;
    const int SACp_emal_46436__pinl_14424__flat_253__dim = 1;




    int SACp_emal_46435__uprf_40375;
   
   




    
# 2595 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2595 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46433__uprf_40371;
   
   




    
# 2602 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2602 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_emal_46432__pinl_14409__icc_3350;
    SAC_array_descriptor_t SACp_emal_46432__pinl_14409__icc_3350__desc = 
# 2603 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2603 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46432__pinl_14409__icc_3350__shp0 = 1;
    const int SACp_emal_46432__pinl_14409__icc_3350__sz = 1;
    const int SACp_emal_46432__pinl_14409__icc_3350__dim = 1;




    
# 2611 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2611 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46431__pinl_14422__flat_251;
   
   




    int SACp_emal_46429__pinl_14779__icc_6600;
   
   




    int SACp_emal_46428__ctz_25611;
   
   




    
# 2632 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2632 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46427__pinl_14792__flat_3875;
   
   




    
# 2639 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2639 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46425__pinl_14591__flat_3875;
   
   




    int SACp_emal_46424__isaa_35410__flat_57;
   
   




    int * SACp_emal_46423__isaa_35411__flat_57;
    SAC_array_descriptor_t SACp_emal_46423__isaa_35411__flat_57__desc = 
# 2654 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2654 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46423__isaa_35411__flat_57__shp0;
    int SACp_emal_46423__isaa_35411__flat_57__sz;
    const int SACp_emal_46423__isaa_35411__flat_57__dim = 1;




    int * SACp_emal_46422__isaa_35413__pinl_15209__flat_283;
    SAC_array_descriptor_t SACp_emal_46422__isaa_35413__pinl_15209__flat_283__desc = 
# 2663 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2663 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46422__isaa_35413__pinl_15209__flat_283__shp0 = 1;
    const int SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz = 1;
    const int SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim = 1;




    
# 2671 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2671 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46421__pinl_15084__icc_6059_pred;
   
   




    
# 2678 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2678 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46420__uprf_24749;
   
   




    int SACp_emal_46419__uprf_24748;
   
   




    int * SACp_emal_46418__pinl_15175__idc_7751;
    SAC_array_descriptor_t SACp_emal_46418__pinl_15175__idc_7751__desc = 
# 2693 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2693 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46418__pinl_15175__idc_7751__shp0 = 1;
    const int SACp_emal_46418__pinl_15175__idc_7751__sz = 1;
    const int SACp_emal_46418__pinl_15175__idc_7751__dim = 1;




    int SACp_emal_46417__pinl_23671__icc_5332;
   
   




    int SACp_emal_46416__pinl_23674__icc_5338;
   
   




    int * SACp_emal_46413__pinl_15148__icc_7742;
    SAC_array_descriptor_t SACp_emal_46413__pinl_15148__icc_7742__desc = 
# 2716 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2716 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46413__pinl_15148__icc_7742__shp0;
    int SACp_emal_46413__pinl_15148__icc_7742__sz;
    const int SACp_emal_46413__pinl_15148__icc_7742__dim = 1;




    
# 2724 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2724 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46412__pinl_15086__icc_6058_pred;
   
   




    int * SACp_emal_46411__pinl_15108_new_shape;
    SAC_array_descriptor_t SACp_emal_46411__pinl_15108_new_shape__desc = 
# 2732 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2732 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46411__pinl_15108_new_shape__shp0;
    int SACp_emal_46411__pinl_15108_new_shape__sz;
    const int SACp_emal_46411__pinl_15108_new_shape__dim = 1;




    
# 2740 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2740 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46410__pinl_15117__icc_6023_pred;
   
   




    
# 2747 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2747 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46409__pinl_15124__icc_6028_pred;
   
   




    int * SACp_emal_46408__pinl_15106__flat_421;
    SAC_array_descriptor_t SACp_emal_46408__pinl_15106__flat_421__desc = 
# 2755 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2755 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46408__pinl_15106__flat_421__shp0;
    int SACp_emal_46408__pinl_15106__flat_421__sz;
    const int SACp_emal_46408__pinl_15106__flat_421__dim = 1;




    
# 2763 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2763 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46407__pinl_15126__icc_6022_pred;
   
   




    
# 2770 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2770 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46406__pinl_15128__icc_6024_pred;
   
   




    
# 2777 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2777 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46405__pinl_15131__icc_6025_pred;
   
   




    int * SACp_emal_46402__pinl_15110_new_idx;
    SAC_array_descriptor_t SACp_emal_46402__pinl_15110_new_idx__desc = 
# 2785 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2785 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46402__pinl_15110_new_idx__shp0;
    int SACp_emal_46402__pinl_15110_new_idx__sz;
    const int SACp_emal_46402__pinl_15110_new_idx__dim = 1;




    
# 2793 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2793 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46401__pinl_15133__icc_6029_pred;
   
   




    
# 2800 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2800 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46400__pinl_15135__icc_6030_pred;
   
   




    
# 2807 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2807 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46399__pinl_15137__icc_6031_pred;
   
   




    int SACp_emal_46398__ivesli_45699;
   
   




    
# 2821 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2821 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46397__pinl_15095__icc_6034;
   
   




    
# 2828 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2828 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_emal_46396__pinl_15099__icc_6040;
    SAC_array_descriptor_t SACp_emal_46396__pinl_15099__icc_6040__desc = 
# 2829 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2829 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46396__pinl_15099__icc_6040__sz = 0;
    int SACp_emal_46396__pinl_15099__icc_6040__dim = 0;




    
# 2836 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2836 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46395__flat_56;
   
   




    int * SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res;
    SAC_array_descriptor_t SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__desc = 
# 2844 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2844 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__shp0 = 2;
    const int SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz = 2;
    const int SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim = 1;




    int SACp_emal_46393__uprf_34249;
   
   




    int SACp_emal_46392__uprf_34254;
   
   




    int SACp_emal_46391__esd_39554;
   
   




    
# 2873 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2873 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46390__uprf_34242;
   
   




    int SACp_emal_46389__esd_39553;
   
   




    
# 2887 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2887 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46388__uprf_34245;
   
   




    
# 2894 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2894 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_emal_46387__pinl_15874__icc_3186;
    SAC_array_descriptor_t SACp_emal_46387__pinl_15874__icc_3186__desc = 
# 2895 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2895 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46387__pinl_15874__icc_3186__shp0 = 2;
    const int SACp_emal_46387__pinl_15874__icc_3186__sz = 2;
    const int SACp_emal_46387__pinl_15874__icc_3186__dim = 1;




    
# 2903 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2903 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46386__pinl_15890__flat_125;
   
   




    int SACp_emal_46385__isaa_35477__pinl_16522__rtpf_17_res;
   
   




    int * SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res;
    SAC_array_descriptor_t SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc = 
# 2918 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2918 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__shp0;
    int SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__sz;
    const int SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim = 1;




    
# 2926 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2926 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46382__pinl_16540__flat_248;
   
   




    int * SACp_emal_46381__pinl_16545__flat_253;
    SAC_array_descriptor_t SACp_emal_46381__pinl_16545__flat_253__desc = 
# 2934 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2934 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46381__pinl_16545__flat_253__shp0 = 2;
    const int SACp_emal_46381__pinl_16545__flat_253__sz = 2;
    const int SACp_emal_46381__pinl_16545__flat_253__dim = 1;




    int SACp_emal_46380__uprf_40362;
   
   




    int SACp_emal_46379__uprf_40367;
   
   




    
# 2956 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2956 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46377__uprf_40355;
   
   




    
# 2963 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2963 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46375__uprf_40358;
   
   




    
# 2970 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2970 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_emal_46374__pinl_16530__icc_3350;
    SAC_array_descriptor_t SACp_emal_46374__pinl_16530__icc_3350__desc = 
# 2971 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2971 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46374__pinl_16530__icc_3350__shp0 = 2;
    const int SACp_emal_46374__pinl_16530__icc_3350__sz = 2;
    const int SACp_emal_46374__pinl_16530__icc_3350__dim = 1;




    
# 2979 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 2979 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46373__pinl_16543__flat_251;
   
   




    int SACp_emal_46372__isaa_35504__flat_64;
   
   




    int * SACp_emal_46371__isaa_35505__flat_64;
    SAC_array_descriptor_t SACp_emal_46371__isaa_35505__flat_64__desc = 
# 2994 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 2994 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46371__isaa_35505__flat_64__shp0;
    int SACp_emal_46371__isaa_35505__flat_64__sz;
    const int SACp_emal_46371__isaa_35505__flat_64__dim = 1;




    int * SACp_emal_46370__isaa_35507__pinl_17210__flat_283;
    SAC_array_descriptor_t SACp_emal_46370__isaa_35507__pinl_17210__flat_283__desc = 
# 3003 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3003 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46370__isaa_35507__pinl_17210__flat_283__shp0 = 1;
    const int SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz = 1;
    const int SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim = 1;




    
# 3011 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3011 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46369__pinl_17085__icc_6059_pred;
   
   




    
# 3018 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3018 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46368__uprf_24368;
   
   




    int SACp_emal_46367__uprf_24367;
   
   




    int * SACp_emal_46366__pinl_17176__idc_7751;
    SAC_array_descriptor_t SACp_emal_46366__pinl_17176__idc_7751__desc = 
# 3033 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3033 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46366__pinl_17176__idc_7751__shp0 = 1;
    const int SACp_emal_46366__pinl_17176__idc_7751__sz = 1;
    const int SACp_emal_46366__pinl_17176__idc_7751__dim = 1;




    int SACp_emal_46365__pinl_24159__icc_5332;
   
   




    int SACp_emal_46364__pinl_24162__icc_5338;
   
   




    int * SACp_emal_46361__pinl_17149__icc_7742;
    SAC_array_descriptor_t SACp_emal_46361__pinl_17149__icc_7742__desc = 
# 3056 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3056 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46361__pinl_17149__icc_7742__shp0;
    int SACp_emal_46361__pinl_17149__icc_7742__sz;
    const int SACp_emal_46361__pinl_17149__icc_7742__dim = 1;




    
# 3064 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3064 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46360__pinl_17087__icc_6058_pred;
   
   




    int * SACp_emal_46359__pinl_17109_new_shape;
    SAC_array_descriptor_t SACp_emal_46359__pinl_17109_new_shape__desc = 
# 3072 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3072 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46359__pinl_17109_new_shape__shp0;
    int SACp_emal_46359__pinl_17109_new_shape__sz;
    const int SACp_emal_46359__pinl_17109_new_shape__dim = 1;




    
# 3080 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3080 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46358__pinl_17118__icc_6023_pred;
   
   




    
# 3087 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3087 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46357__pinl_17125__icc_6028_pred;
   
   




    int * SACp_emal_46356__pinl_17107__flat_421;
    SAC_array_descriptor_t SACp_emal_46356__pinl_17107__flat_421__desc = 
# 3095 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3095 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46356__pinl_17107__flat_421__shp0;
    int SACp_emal_46356__pinl_17107__flat_421__sz;
    const int SACp_emal_46356__pinl_17107__flat_421__dim = 1;




    
# 3103 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3103 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46355__pinl_17127__icc_6022_pred;
   
   




    
# 3110 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3110 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46354__pinl_17129__icc_6024_pred;
   
   




    
# 3117 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3117 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46353__pinl_17132__icc_6025_pred;
   
   




    int * SACp_emal_46350__pinl_17111_new_idx;
    SAC_array_descriptor_t SACp_emal_46350__pinl_17111_new_idx__desc = 
# 3125 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3125 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46350__pinl_17111_new_idx__shp0;
    int SACp_emal_46350__pinl_17111_new_idx__sz;
    const int SACp_emal_46350__pinl_17111_new_idx__dim = 1;




    
# 3133 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3133 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46349__pinl_17134__icc_6029_pred;
   
   




    
# 3140 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3140 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46348__pinl_17136__icc_6030_pred;
   
   




    
# 3147 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3147 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46347__pinl_17138__icc_6031_pred;
   
   




    int SACp_emal_46346__ivesli_45698;
   
   




    
# 3161 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3161 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46345__pinl_17096__icc_6034;
   
   




    
# 3168 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3168 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_emal_46344__pinl_17100__icc_6040;
    SAC_array_descriptor_t SACp_emal_46344__pinl_17100__icc_6040__desc = 
# 3169 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3169 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46344__pinl_17100__icc_6040__sz = 0;
    int SACp_emal_46344__pinl_17100__icc_6040__dim = 0;




    
# 3176 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3176 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46343__flat_63;
   
   




    
# 3183 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3183 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601;
    SAC_array_descriptor_t SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601__desc = 
# 3184 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3184 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601__sz = 0;
    int SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601__dim = 0;




    
# 3191 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3191 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601;
    SAC_array_descriptor_t SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601__desc = 
# 3192 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3192 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601__sz = 0;
    int SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601__dim = 0;




    int SACp_wlidx_45662__pinl_17100__icc_6040;
   
   




    int SACp_wlidx_45661__pinl_17149__icc_7742;
   
   




    int SACp_wlidx_45660__pinl_15099__icc_6040;
   
   




    int SACp_wlidx_45659__pinl_15148__icc_7742;
   
   




    int SACp_wlidx_45658__pinl_9492__icc_3396;
   
   




    int SACp_pinl_9499_i;
   
   




    int * SACp_pinl_9498__flat_560;
    SAC_array_descriptor_t SACp_pinl_9498__flat_560__desc = 
# 3242 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3242 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_pinl_9498__flat_560__shp0 = 1;
    const int SACp_pinl_9498__flat_560__sz = 1;
    const int SACp_pinl_9498__flat_560__dim = 1;




    
# 3250 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3250 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_10904__hce_27;
   
   




    
# 3257 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3257 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_10901__hce_30;
   
   




    int * SACp_pinl_10851__rtpf_10_res;
    SAC_array_descriptor_t SACp_pinl_10851__rtpf_10_res__desc = 
# 3265 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3265 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_10851__rtpf_10_res__shp0;
    int SACp_pinl_10851__rtpf_10_res__shp1;
    int SACp_pinl_10851__rtpf_10_res__shp2;
    int SACp_pinl_10851__rtpf_10_res__shp3;
    int SACp_pinl_10851__rtpf_10_res__sz;
    const int SACp_pinl_10851__rtpf_10_res__dim = 4;




    
# 3276 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3276 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_12578__hce_36;
   
   




    
# 3283 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3283 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_12577__hce_37;
   
   




    
# 3290 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3290 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_12576__hce_38;
   
   




    
# 3297 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3297 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_12574__hce_40;
   
   




    int * SACp_pinl_12536__rtpf_17_res;
    SAC_array_descriptor_t SACp_pinl_12536__rtpf_17_res__desc = 
# 3305 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3305 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_12536__rtpf_17_res__sz = 0;
    int SACp_pinl_12536__rtpf_17_res__dim = 0;




    
# 3312 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3312 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_13795__hce_27;
   
   




    
# 3319 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3319 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_13792__hce_30;
   
   




    
# 3326 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3326 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_13791__hce_31;
   
   




    int * SACp_pinl_13742__rtpf_10_res;
    SAC_array_descriptor_t SACp_pinl_13742__rtpf_10_res__desc = 
# 3334 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3334 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_13742__rtpf_10_res__shp0;
    int SACp_pinl_13742__rtpf_10_res__shp1;
    int SACp_pinl_13742__rtpf_10_res__shp2;
    int SACp_pinl_13742__rtpf_10_res__sz;
    const int SACp_pinl_13742__rtpf_10_res__dim = 3;




    
# 3344 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3344 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_14443__hce_36;
   
   




    
# 3351 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3351 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_14442__hce_37;
   
   




    
# 3358 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3358 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_14441__hce_38;
   
   




    
# 3365 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3365 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_14440__hce_39;
   
   




    
# 3372 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3372 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_14439__hce_40;
   
   




    int * SACp_pinl_14401__rtpf_17_res;
    SAC_array_descriptor_t SACp_pinl_14401__rtpf_17_res__desc = 
# 3380 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3380 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_14401__rtpf_17_res__sz = 0;
    int SACp_pinl_14401__rtpf_17_res__dim = 0;




    int SACp_pinl_15159__eat_6625;
   
   




    int * SACp_pinl_15157_iv;
    SAC_array_descriptor_t SACp_pinl_15157_iv__desc = 
# 3395 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3395 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_pinl_15157_iv__shp0 = 1;
    const int SACp_pinl_15157_iv__sz = 1;
    const int SACp_pinl_15157_iv__dim = 1;




    int * SACp_pinl_15109_iv;
    SAC_array_descriptor_t SACp_pinl_15109_iv__desc = 
# 3404 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3404 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_15109_iv__shp0;
    int SACp_pinl_15109_iv__sz;
    const int SACp_pinl_15109_iv__dim = 1;




    
# 3412 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3412 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_pinl_15089__ea_8076__flat_6601;
    SAC_array_descriptor_t SACp_pinl_15089__ea_8076__flat_6601__desc = 
# 3413 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3413 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_15089__ea_8076__flat_6601__sz = 0;
    int SACp_pinl_15089__ea_8076__flat_6601__dim = 0;




    int * SACp_pinl_15082_iv;
    SAC_array_descriptor_t SACp_pinl_15082_iv__desc = 
# 3421 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3421 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_15082_iv__shp0;
    int SACp_pinl_15082_iv__sz;
    const int SACp_pinl_15082_iv__dim = 1;




    
# 3429 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3429 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_pinl_15076__icc_6062;
    SAC_array_descriptor_t SACp_pinl_15076__icc_6062__desc = 
# 3430 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3430 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_15076__icc_6062__sz = 0;
    int SACp_pinl_15076__icc_6062__dim = 0;




    
# 3437 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3437 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_15912__hce_31;
   
   




    int * SACp_pinl_15863__rtpf_10_res;
    SAC_array_descriptor_t SACp_pinl_15863__rtpf_10_res__desc = 
# 3445 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3445 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_15863__rtpf_10_res__shp0;
    int SACp_pinl_15863__rtpf_10_res__shp1;
    int SACp_pinl_15863__rtpf_10_res__sz;
    const int SACp_pinl_15863__rtpf_10_res__dim = 2;




    
# 3454 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3454 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_16562__hce_38;
   
   




    
# 3461 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3461 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_16561__hce_39;
   
   




    
# 3468 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3468 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_pinl_16560__hce_40;
   
   




    int * SACp_pinl_16522__rtpf_17_res;
    SAC_array_descriptor_t SACp_pinl_16522__rtpf_17_res__desc = 
# 3476 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3476 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_16522__rtpf_17_res__sz = 0;
    int SACp_pinl_16522__rtpf_17_res__dim = 0;




    int SACp_pinl_17160__eat_6625;
   
   




    int * SACp_pinl_17158_iv;
    SAC_array_descriptor_t SACp_pinl_17158_iv__desc = 
# 3491 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3491 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_pinl_17158_iv__shp0 = 1;
    const int SACp_pinl_17158_iv__sz = 1;
    const int SACp_pinl_17158_iv__dim = 1;




    int * SACp_pinl_17110_iv;
    SAC_array_descriptor_t SACp_pinl_17110_iv__desc = 
# 3500 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3500 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_17110_iv__shp0;
    int SACp_pinl_17110_iv__sz;
    const int SACp_pinl_17110_iv__dim = 1;




    
# 3508 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3508 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_pinl_17090__ea_8076__flat_6601;
    SAC_array_descriptor_t SACp_pinl_17090__ea_8076__flat_6601__desc = 
# 3509 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3509 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_17090__ea_8076__flat_6601__sz = 0;
    int SACp_pinl_17090__ea_8076__flat_6601__dim = 0;




    int * SACp_pinl_17083_iv;
    SAC_array_descriptor_t SACp_pinl_17083_iv__desc = 
# 3517 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3517 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_17083_iv__shp0;
    int SACp_pinl_17083_iv__sz;
    const int SACp_pinl_17083_iv__dim = 1;




    
# 3525 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3525 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_pinl_17077__icc_6062;
    SAC_array_descriptor_t SACp_pinl_17077__icc_6062__desc = 
# 3526 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3526 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_17077__icc_6062__sz = 0;
    int SACp_pinl_17077__icc_6062__dim = 0;




    int * SACp_flat_66;
    SAC_array_descriptor_t SACp_flat_66__desc = 
# 3534 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3534 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_flat_66__sz = 0;
    int SACp_flat_66__dim = 0;




    
# 3541 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3541 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_flat_64;
    SAC_array_descriptor_t SACp_flat_64__desc = 
# 3542 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3542 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_flat_64__sz = 0;
    int SACp_flat_64__dim = 0;




    int * SACp_flat_59;
    SAC_array_descriptor_t SACp_flat_59__desc = 
# 3550 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3550 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_flat_59__sz = 0;
    int SACp_flat_59__dim = 0;




    
# 3557 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3557 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_flat_57;
    SAC_array_descriptor_t SACp_flat_57__desc = 
# 3558 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3558 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_flat_57__sz = 0;
    int SACp_flat_57__dim = 0;




    int * SACp_flat_46;
    SAC_array_descriptor_t SACp_flat_46__desc = 
# 3566 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 3566 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_flat_46__sz = 0;
    int SACp_flat_46__dim = 0;


   
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 4, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_46508__isaa_35265__rso_285_TheWorld = 0; }; }



    SACf__MAIN_CL_INIT__init ();

    { { SACp_emal_46507__pinl_9505__icc_3388_pred = 
# 3586 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   1
# 3586 "/home/rubenhensen/sac/hw/a.out.c"
   ; }; }
    { { if (!((1 == SACp_emal_46505__pinl_9492__icc_3396__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46505__pinl_9492__icc_3396"); }; { { if ((((SACp_emal_46505__pinl_9492__icc_3396__sz * sizeof (*SACp_emal_46505__pinl_9492__icc_3396)) + ((6 + (SACp_emal_46505__pinl_9492__icc_3396__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46505__pinl_9492__icc_3396__sz * sizeof (*SACp_emal_46505__pinl_9492__icc_3396)) + ((6 + (SACp_emal_46505__pinl_9492__icc_3396__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46505__pinl_9492__icc_3396__sz * sizeof (*SACp_emal_46505__pinl_9492__icc_3396)) + ((6 + (SACp_emal_46505__pinl_9492__icc_3396__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46505__pinl_9492__icc_3396 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46505__pinl_9492__icc_3396 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46505__pinl_9492__icc_3396__sz * sizeof (*SACp_emal_46505__pinl_9492__icc_3396)) + ((6 + (SACp_emal_46505__pinl_9492__icc_3396__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46505__pinl_9492__icc_3396 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46505__pinl_9492__icc_3396 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46505__pinl_9492__icc_3396__sz * sizeof (*SACp_emal_46505__pinl_9492__icc_3396)) + ((6 + (SACp_emal_46505__pinl_9492__icc_3396__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46505__pinl_9492__icc_3396__sz * sizeof (*SACp_emal_46505__pinl_9492__icc_3396)) + ((6 + (SACp_emal_46505__pinl_9492__icc_3396__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46505__pinl_9492__icc_3396__sz * sizeof (*SACp_emal_46505__pinl_9492__icc_3396)) + ((6 + (SACp_emal_46505__pinl_9492__icc_3396__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46505__pinl_9492__icc_3396__sz * sizeof (*SACp_emal_46505__pinl_9492__icc_3396)) + ((6 + (SACp_emal_46505__pinl_9492__icc_3396__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46505__pinl_9492__icc_3396__sz * sizeof (*SACp_emal_46505__pinl_9492__icc_3396)) + ((6 + (SACp_emal_46505__pinl_9492__icc_3396__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46505__pinl_9492__icc_3396 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46505__pinl_9492__icc_3396 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46505__pinl_9492__icc_3396 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46505__pinl_9492__icc_3396 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46505__pinl_9492__icc_3396__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46505__pinl_9492__icc_3396, SACp_emal_46505__pinl_9492__icc_3396__sz * sizeof (*SACp_emal_46505__pinl_9492__icc_3396), ((6 + (SACp_emal_46505__pinl_9492__icc_3396__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46505__pinl_9492__icc_3396__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46505__pinl_9492__icc_3396__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46505__pinl_9492__icc_3396__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46505__pinl_9492__icc_3396__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 237, 3, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46505__pinl_9492__icc_3396__shp0 == 240))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 237, 3, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 237, 3, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_46505__pinl_9492__icc_3396_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_46505__pinl_9492__icc_3396_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = 240;




      SACp_wlidx_45658__pinl_9492__icc_3396
        = SAC_schedule_start0 * SAC_SACp_emal_46505__pinl_9492__icc_3396_shpfac0;

      { int SAC_stop_SACp_pinl_9499_i = 240; for (SACp_pinl_9499_i = 0; SACp_pinl_9499_i < 240;) {
     



      if (!((0 == (SACp_emal_46505__pinl_9492__icc_3396__dim - SACp_pinl_9498__flat_560__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46505__pinl_9492__icc_3396_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_46505__pinl_9492__icc_3396[SACp_wlidx_45658__pinl_9492__icc_3396] = SACp_pinl_9499_i; };

      SACp_wlidx_45658__pinl_9492__icc_3396 = SACp_wlidx_45658__pinl_9492__icc_3396 + 1;
      SACp_pinl_9499_i = SACp_pinl_9499_i + 1;
      } }
# 3657 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48023_SAC_label:;
    { ; ; }
    { ; ; }
    { if (!((2 == SACp_emal_46503__pinl_9546__icc_7613__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46503__pinl_9546__icc_7613"); }; { if ((((6 + (SACp_emal_46503__pinl_9546__icc_7613__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46503__pinl_9546__icc_7613__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46503__pinl_9546__icc_7613__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46503__pinl_9546__icc_7613__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46503__pinl_9546__icc_7613__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46503__pinl_9546__icc_7613__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46503__pinl_9546__icc_7613__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46503__pinl_9546__icc_7613__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46503__pinl_9546__icc_7613__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46503__pinl_9546__icc_7613__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46503__pinl_9546__icc_7613__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46503__pinl_9546__icc_7613__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46503__pinl_9546__icc_7613__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46503__pinl_9546__icc_7613__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46503__pinl_9546__icc_7613__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46503__pinl_9546__icc_7613__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46503__pinl_9546__icc_7613__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[1]) = 0; }
    { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46505__pinl_9492__icc_3396__desc) & (-1 ^ (3))))); } }



    SACp_emal_46505__pinl_9492__icc_3396__desc = SACp_emal_46503__pinl_9546__icc_7613__desc;

    { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[0]) = 6; }



    if (!((SACp_emal_46503__pinl_9546__icc_7613__dim == (2)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46503__pinl_9546__icc_7613__shp0 == 20))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46503__pinl_9546__icc_7613__shp1 == 12))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Assignment with incompatible types found"); };
    ;

    { SACp_emal_46503__pinl_9546__icc_7613 = SACp_emal_46505__pinl_9492__icc_3396; }
    ;



    if (!((_tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__dim == (2)))) { SAC_RuntimeWarningLoc ("./week4.sac", 17, 5, "Assignment with incompatible types found"); };
    _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__desc = SACp_emal_46503__pinl_9546__icc_7613__desc;
    _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__shp0 = SACp_emal_46503__pinl_9546__icc_7613__shp0;
    _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__shp1 = SACp_emal_46503__pinl_9546__icc_7613__shp1;
    _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__sz = SACp_emal_46503__pinl_9546__icc_7613__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46503__pinl_9546__icc_7613__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_46503__pinl_9546__icc_7613__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[4]) = SACp_emal_46503__pinl_9546__icc_7613__sz;
    { _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613 = SACp_emal_46503__pinl_9546__icc_7613; }




    SACof__MAIN_CLStdIO__print__i_X_X (_tcp_48016_SACp_emal_46503__pinl_9546__icc_7613, _tcp_48016_SACp_emal_46503__pinl_9546__icc_7613__desc);

    { { if (!((1 == SACp_emal_46501__flat_47__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46501__flat_47"); }; { { if ((((SACp_emal_46501__flat_47__sz * sizeof (*SACp_emal_46501__flat_47)) + ((6 + (SACp_emal_46501__flat_47__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46501__flat_47__sz * sizeof (*SACp_emal_46501__flat_47)) + ((6 + (SACp_emal_46501__flat_47__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46501__flat_47__sz * sizeof (*SACp_emal_46501__flat_47)) + ((6 + (SACp_emal_46501__flat_47__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46501__flat_47 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46501__flat_47 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46501__flat_47__sz * sizeof (*SACp_emal_46501__flat_47)) + ((6 + (SACp_emal_46501__flat_47__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46501__flat_47 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46501__flat_47 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46501__flat_47__sz * sizeof (*SACp_emal_46501__flat_47)) + ((6 + (SACp_emal_46501__flat_47__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46501__flat_47__sz * sizeof (*SACp_emal_46501__flat_47)) + ((6 + (SACp_emal_46501__flat_47__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46501__flat_47__sz * sizeof (*SACp_emal_46501__flat_47)) + ((6 + (SACp_emal_46501__flat_47__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46501__flat_47__sz * sizeof (*SACp_emal_46501__flat_47)) + ((6 + (SACp_emal_46501__flat_47__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46501__flat_47__sz * sizeof (*SACp_emal_46501__flat_47)) + ((6 + (SACp_emal_46501__flat_47__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46501__flat_47 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46501__flat_47 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46501__flat_47 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46501__flat_47 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46501__flat_47__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46501__flat_47, SACp_emal_46501__flat_47__sz * sizeof (*SACp_emal_46501__flat_47), ((6 + (SACp_emal_46501__flat_47__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46501__flat_47__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46501__flat_47__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46501__flat_47__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46501__flat_47__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 19, 22, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46501__flat_47__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 19, 22, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46501__flat_47[0] = 2; }
    { SACp_emal_46501__flat_47[1] = 3; }

    { { if (!((1 == SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound"); }; { { if ((((SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__sz * sizeof (*SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound)) + ((6 + (SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__sz * sizeof (*SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound)) + ((6 + (SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__sz * sizeof (*SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound)) + ((6 + (SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__sz * sizeof (*SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound)) + ((6 + (SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__sz * sizeof (*SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound)) + ((6 + (SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__sz * sizeof (*SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound)) + ((6 + (SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__sz * sizeof (*SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound)) + ((6 + (SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__sz * sizeof (*SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound)) + ((6 + (SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__sz * sizeof (*SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound)) + ((6 + (SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound, SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__sz * sizeof (*SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound), ((6 + (SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 181, 2597, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 181, 2597, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound[0] = 2; }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 181, 2515, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_46499__pinl_11445__eat_340__SSA7_1 = 1; }; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_46498__pinl_11272__flat_420 = 
# 3745 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   0
# 3745 "/home/rubenhensen/sac/hw/a.out.c"
   ; }; }



    if (!((_tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__dim == (2)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__desc = SACp_emal_46503__pinl_9546__icc_7613__desc;
    _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__shp0 = SACp_emal_46503__pinl_9546__icc_7613__shp0;
    _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__shp1 = SACp_emal_46503__pinl_9546__icc_7613__shp1;
    _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__sz = SACp_emal_46503__pinl_9546__icc_7613__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46503__pinl_9546__icc_7613__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_46503__pinl_9546__icc_7613__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[4]) = SACp_emal_46503__pinl_9546__icc_7613__sz;
    { _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613 = SACp_emal_46503__pinl_9546__icc_7613; }




    SACf__MAIN___rtpf_8_impl_block__i_X_X__i_2 (&SACp_pinl_10851__rtpf_10_res, &SACp_pinl_10851__rtpf_10_res__desc, _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613, _tcp_48015_SACp_emal_46503__pinl_9546__icc_7613__desc, SACp_emal_46501__flat_47, SACp_emal_46501__flat_47__desc);




    SACp_pinl_10851__rtpf_10_res__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10851__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (0))]);
    SACp_pinl_10851__rtpf_10_res__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10851__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (1))]);
    SACp_pinl_10851__rtpf_10_res__shp2 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10851__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (2))]);
    SACp_pinl_10851__rtpf_10_res__shp3 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10851__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (3))]);
    SACp_pinl_10851__rtpf_10_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10851__rtpf_10_res__desc) & (-1 ^ (3))))[4]);

    { { if (!((1 == SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res"); }; { { if ((((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res)) + ((6 + (SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res)) + ((6 + (SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res)) + ((6 + (SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res)) + ((6 + (SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res)) + ((6 + (SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res)) + ((6 + (SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res)) + ((6 + (SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res)) + ((6 + (SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res)) + ((6 + (SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res, SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res), ((6 + (SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__shp0 == 4))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res[0] = SACp_pinl_10851__rtpf_10_res__shp0; };
    { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res[1] = SACp_pinl_10851__rtpf_10_res__shp1; };
    { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res[2] = SACp_pinl_10851__rtpf_10_res__shp2; };
    { SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res[3] = SACp_pinl_10851__rtpf_10_res__shp3; };

    { { if (!((1 == SACp_emal_46496__pinl_10898_shp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46496__pinl_10898_shp"); }; { { if ((((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp)) + ((6 + (SACp_emal_46496__pinl_10898_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp)) + ((6 + (SACp_emal_46496__pinl_10898_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp)) + ((6 + (SACp_emal_46496__pinl_10898_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46496__pinl_10898_shp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46496__pinl_10898_shp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp)) + ((6 + (SACp_emal_46496__pinl_10898_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46496__pinl_10898_shp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46496__pinl_10898_shp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp)) + ((6 + (SACp_emal_46496__pinl_10898_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp)) + ((6 + (SACp_emal_46496__pinl_10898_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp)) + ((6 + (SACp_emal_46496__pinl_10898_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp)) + ((6 + (SACp_emal_46496__pinl_10898_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp)) + ((6 + (SACp_emal_46496__pinl_10898_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46496__pinl_10898_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46496__pinl_10898_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46496__pinl_10898_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46496__pinl_10898_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46496__pinl_10898_shp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp, SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp), ((6 + (SACp_emal_46496__pinl_10898_shp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46496__pinl_10898_shp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46496__pinl_10898_shp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46496__pinl_10898_shp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46496__pinl_10898_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46496__pinl_10898_shp__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 3806 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 3806 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_cnt = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46496__pinl_10898_shp[SAC_i] = ( SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { if (!((1 == SACp_emal_46495__pinl_10886__flat_136__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46495__pinl_10886__flat_136"); }; { { if ((((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136)) + ((6 + (SACp_emal_46495__pinl_10886__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136)) + ((6 + (SACp_emal_46495__pinl_10886__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136)) + ((6 + (SACp_emal_46495__pinl_10886__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46495__pinl_10886__flat_136 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46495__pinl_10886__flat_136 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136)) + ((6 + (SACp_emal_46495__pinl_10886__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46495__pinl_10886__flat_136 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46495__pinl_10886__flat_136 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136)) + ((6 + (SACp_emal_46495__pinl_10886__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136)) + ((6 + (SACp_emal_46495__pinl_10886__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136)) + ((6 + (SACp_emal_46495__pinl_10886__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136)) + ((6 + (SACp_emal_46495__pinl_10886__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136)) + ((6 + (SACp_emal_46495__pinl_10886__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46495__pinl_10886__flat_136 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46495__pinl_10886__flat_136 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46495__pinl_10886__flat_136 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46495__pinl_10886__flat_136 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46495__pinl_10886__flat_136__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136, SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136), ((6 + (SACp_emal_46495__pinl_10886__flat_136__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46495__pinl_10886__flat_136__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46495__pinl_10886__flat_136__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46495__pinl_10886__flat_136__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46495__pinl_10886__flat_136__dim == (1)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46495__pinl_10886__flat_136__shp0 == 2))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 3837 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 3837 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_off = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46495__pinl_10886__flat_136[SAC_i] = ( SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { { if (((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res) - 1)->data1.arena)); } else { if (SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res) - 1)->data1.arena)); } } else { if (((((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res) - 1)->data1.arena)); } else { if (((((SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__sz * sizeof (*SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46497__isaa_35290__pinl_10851__rtpf_10_res__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46494__uprf_34281 = ( SACp_emal_46495__pinl_10886__flat_136[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46493__uprf_34286 = ( SACp_emal_46495__pinl_10886__flat_136[SACp_emal_46499__pinl_11445__eat_340__SSA7_1]); }

    { { { if (((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136, ((((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136) - 1)->data1.arena)); } else { if (SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136, ((((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136, ((((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136) - 1)->data1.arena)); } } else { if (((((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136, ((((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136) - 1)->data1.arena)); } else { if (((((SACp_emal_46495__pinl_10886__flat_136__sz * sizeof (*SACp_emal_46495__pinl_10886__flat_136))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136, ((((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46495__pinl_10886__flat_136); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46495__pinl_10886__flat_136__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46492__esd_39574 = (-2) + (SACp_emal_46494__uprf_34281); };
    ; ; { SACp_emal_46491__uprf_34274 = (SACp_emal_46492__esd_39574) == (0); };
    { ; ; }
    ; ; { SACp_emal_46490__esd_39573 = (-3) + (SACp_emal_46493__uprf_34286); };
    ; ; { SACp_emal_46489__uprf_34277 = (SACp_emal_46490__esd_39573) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_46488__pinl_10865__icc_3190__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46488__pinl_10865__icc_3190"); }; { { if ((((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190)) + ((6 + (SACp_emal_46488__pinl_10865__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190)) + ((6 + (SACp_emal_46488__pinl_10865__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190)) + ((6 + (SACp_emal_46488__pinl_10865__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46488__pinl_10865__icc_3190 = (
# 3876 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46488__pinl_10865__icc_3190 = (
# 3876 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190)) + ((6 + (SACp_emal_46488__pinl_10865__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46488__pinl_10865__icc_3190 = (
# 3876 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46488__pinl_10865__icc_3190 = (
# 3876 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190)) + ((6 + (SACp_emal_46488__pinl_10865__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190)) + ((6 + (SACp_emal_46488__pinl_10865__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190)) + ((6 + (SACp_emal_46488__pinl_10865__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190)) + ((6 + (SACp_emal_46488__pinl_10865__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190)) + ((6 + (SACp_emal_46488__pinl_10865__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46488__pinl_10865__icc_3190 = (
# 3876 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46488__pinl_10865__icc_3190 = (
# 3876 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46488__pinl_10865__icc_3190 = (
# 3876 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46488__pinl_10865__icc_3190 = (
# 3876 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46488__pinl_10865__icc_3190__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190, SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190), ((6 + (SACp_emal_46488__pinl_10865__icc_3190__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46488__pinl_10865__icc_3190__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46488__pinl_10865__icc_3190__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46488__pinl_10865__icc_3190__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46488__pinl_10865__icc_3190__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46488__pinl_10865__icc_3190__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46488__pinl_10865__icc_3190[0] = SACp_emal_46491__uprf_34274; }
    { SACp_emal_46488__pinl_10865__icc_3190[1] = SACp_emal_46489__uprf_34277; }

    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46488__pinl_10865__icc_3190__sz; SAC_i++) { if (( SACp_emal_46488__pinl_10865__icc_3190[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_46487__pinl_10883__flat_133 = SAC_all; }
    { { { if (((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190, ((((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190) - 1)->data1.arena)); } else { if (SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190, ((((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190, ((((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190) - 1)->data1.arena)); } } else { if (((((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190, ((((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190) - 1)->data1.arena)); } else { if (((((SACp_emal_46488__pinl_10865__icc_3190__sz * sizeof (*SACp_emal_46488__pinl_10865__icc_3190))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190, ((((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46488__pinl_10865__icc_3190); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46488__pinl_10865__icc_3190__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_46487__pinl_10883__flat_133)
    {
      ;
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10901__hce_30 = SACp_emal_46507__pinl_9505__icc_3388_pred; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Type pattern error in application of block: feature `od:s' in return value does not match argument s"); SACp_pinl_47951__emal_46529__hce_30__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10901__hce_30 = SACp_pinl_47951__emal_46529__hce_30__SSA0_1; }

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46486__pinl_11052__icc_6606 = ( SACp_emal_46496__pinl_10898_shp[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    ; ; { SACp_emal_46485__ctz_25643 = (-10) + (SACp_emal_46486__pinl_11052__icc_6606); };
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
    ;

    }
    ; ; { SACp_emal_46484__pinl_11062__flat_3875 = (SACp_emal_46485__ctz_25643) == (0); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46483__pinl_11052__icc_6606__SSA11_1 = ( SACp_emal_46496__pinl_10898_shp[SACp_emal_46499__pinl_11445__eat_340__SSA7_1]); }

    { { { if (((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp, ((((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp) - 1)->data1.arena)); } else { if (SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp, ((((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp, ((((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp) - 1)->data1.arena)); } } else { if (((((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp, ((((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp) - 1)->data1.arena)); } else { if (((((SACp_emal_46496__pinl_10898_shp__sz * sizeof (*SACp_emal_46496__pinl_10898_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp, ((((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46496__pinl_10898_shp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46496__pinl_10898_shp__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46482__ctz_25643__SSA11_1 = (-4) + (SACp_emal_46483__pinl_11052__icc_6606__SSA11_1); };
    ; ; { SACp_emal_46481__pinl_11062__flat_3875__SSA11_2 = (SACp_emal_46482__ctz_25643__SSA11_1) == (0); };
    { ; ; }
    ; ; { SACp_emal_46484__pinl_11062__flat_3875 = (SACp_emal_46484__pinl_11062__flat_3875) & (SACp_emal_46481__pinl_11062__flat_3875__SSA11_2); };
    { ; ; }
    if (SACp_emal_46484__pinl_11062__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10904__hce_27 = SACp_pinl_10901__hce_30; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Type pattern post-condition of block failed"); SACp_pinl_47953__emal_46528__hce_27__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_10904__hce_27 = SACp_pinl_47953__emal_46528__hce_27__SSA0_1; }

    }
    if (!SACp_pinl_10904__hce_27) { SAC_RuntimeErrorLoc ("./week4.sac", 36, 1, "Type pattern post-condition of block failed"); }
    ;



    SACp_flat_46__desc = SACp_pinl_10851__rtpf_10_res__desc;
    SACp_flat_46__sz = SACp_pinl_10851__rtpf_10_res__sz;
    SACp_flat_46__dim = SACp_pinl_10851__rtpf_10_res__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_46__desc) & (-1 ^ (3))))[3]) = SACp_pinl_10851__rtpf_10_res__dim;
    { SACp_flat_46 = SACp_pinl_10851__rtpf_10_res; }

    { (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_46__desc) & (-1 ^ (3))))[0]) += 1; }



    SACwf__MAIN_CLStdIO__print__i_S (SACp_flat_46, SACp_flat_46__desc);




    SACf__MAIN___rtpf_15_impl_unblock__i_S__i (&SACp_pinl_12536__rtpf_17_res, &SACp_pinl_12536__rtpf_17_res__desc, SACp_flat_46, SACp_flat_46__desc, SACp_emal_46502__flat_48);




    SACp_pinl_12536__rtpf_17_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_12536__rtpf_17_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_46479__isaa_35306__pinl_12536__rtpf_17_res = SACp_pinl_12536__rtpf_17_res__dim; }; }
    { { if (!((1 == SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res"); }; { if ((((6 + (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_12536__rtpf_17_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__sz = SAC_size;
      if (!((SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 4050 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 4050 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4050 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 4050 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4050 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 4050 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 4050 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 4050, __extension__ __PRETTY_FUNCTION__); }))
# 4050 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__sz * sizeof (*SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res)); break; case SAC_HM_multi_threaded: SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__sz * sizeof (*SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res), 0); break; case SAC_HM_any_threaded: SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__sz * sizeof (*SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_12536__rtpf_17_res__dim; SAC_i++) {
      { SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { if (!((1 == SACp_emal_46477__pinl_12573_shp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46477__pinl_12573_shp"); }; { { if ((((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp)) + ((6 + (SACp_emal_46477__pinl_12573_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp)) + ((6 + (SACp_emal_46477__pinl_12573_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp)) + ((6 + (SACp_emal_46477__pinl_12573_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46477__pinl_12573_shp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46477__pinl_12573_shp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp)) + ((6 + (SACp_emal_46477__pinl_12573_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46477__pinl_12573_shp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46477__pinl_12573_shp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp)) + ((6 + (SACp_emal_46477__pinl_12573_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp)) + ((6 + (SACp_emal_46477__pinl_12573_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp)) + ((6 + (SACp_emal_46477__pinl_12573_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp)) + ((6 + (SACp_emal_46477__pinl_12573_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp)) + ((6 + (SACp_emal_46477__pinl_12573_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46477__pinl_12573_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46477__pinl_12573_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46477__pinl_12573_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46477__pinl_12573_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46477__pinl_12573_shp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp, SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp), ((6 + (SACp_emal_46477__pinl_12573_shp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46477__pinl_12573_shp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46477__pinl_12573_shp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46477__pinl_12573_shp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46477__pinl_12573_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46477__pinl_12573_shp__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4074 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 4074 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_cnt = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46477__pinl_12573_shp[SAC_i] = ( SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46478__isaa_35307__pinl_12536__rtpf_17_res__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46479__isaa_35306__pinl_12536__rtpf_17_res = (2) - (SACp_emal_46479__isaa_35306__pinl_12536__rtpf_17_res); };
    ; ; { SACp_emal_46475__pinl_12554__flat_248 = (SACp_emal_46479__isaa_35306__pinl_12536__rtpf_17_res) == (0); };
    { ; ; }
    if (SACp_emal_46475__pinl_12554__flat_248)
    {
      { { SACp_pinl_47956__emal_46526__hce_40 = 
# 4096 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     1
# 4096 "/home/rubenhensen/sac/hw/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12574__hce_40 = SACp_pinl_47956__emal_46526__hce_40; }

    }
    else
    {
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern error in application of unblock: feature `id:ishp' in return value does not match feature `id' in a"); SACp_pinl_47957__emal_46527__hce_40__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12574__hce_40 = SACp_pinl_47957__emal_46527__hce_40__SSA0_1; }

    }
    if (SACp_emal_46475__pinl_12554__flat_248)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12576__hce_38 = SACp_pinl_12574__hce_40; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern error in application of unblock: feature `od:shp' in return value does not match argument od"); SACp_pinl_47959__emal_46525__hce_38__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12576__hce_38 = SACp_pinl_47959__emal_46525__hce_38__SSA0_1; }

    }
    ; ; { SACp_emal_46486__pinl_11052__icc_6606 = (SACp_emal_46486__pinl_11052__icc_6606) * (SACp_emal_46494__uprf_34281); };
    { ; ; }
    ; ; { SACp_emal_46483__pinl_11052__icc_6606__SSA11_1 = (SACp_emal_46483__pinl_11052__icc_6606__SSA11_1) * (SACp_emal_46493__uprf_34286); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46472__pinl_12914__icc_6600 = ( SACp_emal_46477__pinl_12573_shp[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    ; ; { SACp_emal_46471__ctz_25633 = (SACp_emal_46486__pinl_11052__icc_6606) - (SACp_emal_46472__pinl_12914__icc_6600); };
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
    ;

    }
    ; ; { SACp_emal_46470__pinl_12927__flat_3875 = (SACp_emal_46471__ctz_25633) == (0); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46469__pinl_12914__icc_6600__SSA15_1 = ( SACp_emal_46477__pinl_12573_shp[SACp_emal_46499__pinl_11445__eat_340__SSA7_1]); }

    { { { if (((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp, ((((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp) - 1)->data1.arena)); } else { if (SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp, ((((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp, ((((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp) - 1)->data1.arena)); } } else { if (((((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp, ((((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp) - 1)->data1.arena)); } else { if (((((SACp_emal_46477__pinl_12573_shp__sz * sizeof (*SACp_emal_46477__pinl_12573_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp, ((((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46477__pinl_12573_shp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46477__pinl_12573_shp__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46468__ctz_25633__SSA15_1 = (SACp_emal_46483__pinl_11052__icc_6606__SSA11_1) - (SACp_emal_46469__pinl_12914__icc_6600__SSA15_1); };
    ; ; { SACp_emal_46467__pinl_12927__flat_3875__SSA15_2 = (SACp_emal_46468__ctz_25633__SSA15_1) == (0); };
    { ; ; }
    ; ; { SACp_emal_46470__pinl_12927__flat_3875 = (SACp_emal_46470__pinl_12927__flat_3875) & (SACp_emal_46467__pinl_12927__flat_3875__SSA15_2); };
    { ; ; }
    if (SACp_emal_46470__pinl_12927__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12577__hce_37 = SACp_pinl_12576__hce_38; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern post-condition of unblock failed"); SACp_pinl_47961__emal_46524__hce_37__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12577__hce_37 = SACp_pinl_47961__emal_46524__hce_37__SSA0_1; }

    }
    ; ; { SACp_emal_46472__pinl_12914__icc_6600 = (SACp_emal_46472__pinl_12914__icc_6600) - (SACp_emal_46486__pinl_11052__icc_6606); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
    ;

    }
    ; ; { SACp_emal_46464__pinl_12726__flat_3875 = (SACp_emal_46472__pinl_12914__icc_6600) == (0); };
    { ; ; }
    ; ; { SACp_emal_46469__pinl_12914__icc_6600__SSA15_1 = (SACp_emal_46469__pinl_12914__icc_6600__SSA15_1) - (SACp_emal_46483__pinl_11052__icc_6606__SSA11_1); };
    { ; ; }
    ; ; { SACp_emal_46462__pinl_12726__flat_3875__SSA15_2 = (SACp_emal_46469__pinl_12914__icc_6600__SSA15_1) == (0); };
    { ; ; }
    ; ; { SACp_emal_46464__pinl_12726__flat_3875 = (SACp_emal_46464__pinl_12726__flat_3875) & (SACp_emal_46462__pinl_12726__flat_3875__SSA15_2); };
    { ; ; }
    if (SACp_emal_46464__pinl_12726__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12578__hce_36 = SACp_pinl_12577__hce_37; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern post-condition of unblock failedType pattern post-condition of unblock failed"); SACp_pinl_47963__emal_46523__hce_36__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12578__hce_36 = SACp_pinl_47963__emal_46523__hce_36__SSA0_1; }

    }
    if (!SACp_pinl_12578__hce_36) { SAC_RuntimeErrorLoc ("./week4.sac", 43, 1, "Type pattern post-condition of unblock failed"); }
    ;



    SACwf__MAIN_CLStdIO__print__i_S (SACp_pinl_12536__rtpf_17_res, SACp_pinl_12536__rtpf_17_res__desc);




    if (!((_tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__dim == (2)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__desc = SACp_emal_46503__pinl_9546__icc_7613__desc;
    _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__shp0 = SACp_emal_46503__pinl_9546__icc_7613__shp0;
    _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__shp1 = SACp_emal_46503__pinl_9546__icc_7613__shp1;
    _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__sz = SACp_emal_46503__pinl_9546__icc_7613__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46503__pinl_9546__icc_7613__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_46503__pinl_9546__icc_7613__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[4]) = SACp_emal_46503__pinl_9546__icc_7613__sz;
    { _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613 = SACp_emal_46503__pinl_9546__icc_7613; }




    SACf__MAIN___rtpf_8_impl_block__i_X_X__i_1 (&SACp_pinl_13742__rtpf_10_res, &SACp_pinl_13742__rtpf_10_res__desc, _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613, _tcp_48014_SACp_emal_46503__pinl_9546__icc_7613__desc, SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound, SACp_emal_46500__pinl_11500__wlbsc_9236_sc_bound__desc);




    SACp_pinl_13742__rtpf_10_res__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13742__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (0))]);
    SACp_pinl_13742__rtpf_10_res__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13742__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (1))]);
    SACp_pinl_13742__rtpf_10_res__shp2 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13742__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (2))]);
    SACp_pinl_13742__rtpf_10_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13742__rtpf_10_res__desc) & (-1 ^ (3))))[4]);

    { { if (!((1 == SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res"); }; { { if ((((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res)) + ((6 + (SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res)) + ((6 + (SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res)) + ((6 + (SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res)) + ((6 + (SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res)) + ((6 + (SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res)) + ((6 + (SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res)) + ((6 + (SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res)) + ((6 + (SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res)) + ((6 + (SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res, SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res), ((6 + (SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__shp0 == 3))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res[0] = SACp_pinl_13742__rtpf_10_res__shp0; };
    { SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res[1] = SACp_pinl_13742__rtpf_10_res__shp1; };
    { SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res[2] = SACp_pinl_13742__rtpf_10_res__shp2; };

    { { if (!((1 == SACp_emal_46459__pinl_13789_shp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46459__pinl_13789_shp"); }; { { if ((((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp)) + ((6 + (SACp_emal_46459__pinl_13789_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp)) + ((6 + (SACp_emal_46459__pinl_13789_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp)) + ((6 + (SACp_emal_46459__pinl_13789_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46459__pinl_13789_shp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46459__pinl_13789_shp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp)) + ((6 + (SACp_emal_46459__pinl_13789_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46459__pinl_13789_shp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46459__pinl_13789_shp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp)) + ((6 + (SACp_emal_46459__pinl_13789_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp)) + ((6 + (SACp_emal_46459__pinl_13789_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp)) + ((6 + (SACp_emal_46459__pinl_13789_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp)) + ((6 + (SACp_emal_46459__pinl_13789_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp)) + ((6 + (SACp_emal_46459__pinl_13789_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46459__pinl_13789_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46459__pinl_13789_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46459__pinl_13789_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46459__pinl_13789_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46459__pinl_13789_shp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp, SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp), ((6 + (SACp_emal_46459__pinl_13789_shp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46459__pinl_13789_shp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46459__pinl_13789_shp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46459__pinl_13789_shp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46459__pinl_13789_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46459__pinl_13789_shp__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4338 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 4338 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46459__pinl_13789_shp[SAC_i] = ( SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { if (!((1 == SACp_emal_46458__pinl_13772__flat_128__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46458__pinl_13772__flat_128"); }; { { if ((((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128)) + ((6 + (SACp_emal_46458__pinl_13772__flat_128__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128)) + ((6 + (SACp_emal_46458__pinl_13772__flat_128__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128)) + ((6 + (SACp_emal_46458__pinl_13772__flat_128__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46458__pinl_13772__flat_128 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46458__pinl_13772__flat_128 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128)) + ((6 + (SACp_emal_46458__pinl_13772__flat_128__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46458__pinl_13772__flat_128 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46458__pinl_13772__flat_128 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128)) + ((6 + (SACp_emal_46458__pinl_13772__flat_128__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128)) + ((6 + (SACp_emal_46458__pinl_13772__flat_128__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128)) + ((6 + (SACp_emal_46458__pinl_13772__flat_128__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128)) + ((6 + (SACp_emal_46458__pinl_13772__flat_128__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128)) + ((6 + (SACp_emal_46458__pinl_13772__flat_128__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46458__pinl_13772__flat_128 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46458__pinl_13772__flat_128 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46458__pinl_13772__flat_128 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46458__pinl_13772__flat_128 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46458__pinl_13772__flat_128__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128, SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128), ((6 + (SACp_emal_46458__pinl_13772__flat_128__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46458__pinl_13772__flat_128__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46458__pinl_13772__flat_128__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46458__pinl_13772__flat_128__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46458__pinl_13772__flat_128__dim == (1)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46458__pinl_13772__flat_128__shp0 == 1))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4369 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 4369 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_off = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46458__pinl_13772__flat_128[SAC_i] = ( SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46457__uprf_34270 = ( SACp_emal_46458__pinl_13772__flat_128[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    { { { if (((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128, ((((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128) - 1)->data1.arena)); } else { if (SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128, ((((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128, ((((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128) - 1)->data1.arena)); } } else { if (((((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128, ((((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128) - 1)->data1.arena)); } else { if (((((SACp_emal_46458__pinl_13772__flat_128__sz * sizeof (*SACp_emal_46458__pinl_13772__flat_128))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128, ((((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46458__pinl_13772__flat_128); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46458__pinl_13772__flat_128__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46456__esd_39565 = (-12) + (SACp_emal_46457__uprf_34270); };
    ; ; { SACp_emal_46455__uprf_34266 = (SACp_emal_46456__esd_39565) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_46454__pinl_13753__icc_3186__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46454__pinl_13753__icc_3186"); }; { { if ((((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186)) + ((6 + (SACp_emal_46454__pinl_13753__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186)) + ((6 + (SACp_emal_46454__pinl_13753__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186)) + ((6 + (SACp_emal_46454__pinl_13753__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46454__pinl_13753__icc_3186 = (
# 4397 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46454__pinl_13753__icc_3186 = (
# 4397 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186)) + ((6 + (SACp_emal_46454__pinl_13753__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46454__pinl_13753__icc_3186 = (
# 4397 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46454__pinl_13753__icc_3186 = (
# 4397 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186)) + ((6 + (SACp_emal_46454__pinl_13753__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186)) + ((6 + (SACp_emal_46454__pinl_13753__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186)) + ((6 + (SACp_emal_46454__pinl_13753__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186)) + ((6 + (SACp_emal_46454__pinl_13753__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186)) + ((6 + (SACp_emal_46454__pinl_13753__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46454__pinl_13753__icc_3186 = (
# 4397 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46454__pinl_13753__icc_3186 = (
# 4397 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46454__pinl_13753__icc_3186 = (
# 4397 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46454__pinl_13753__icc_3186 = (
# 4397 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46454__pinl_13753__icc_3186__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186, SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186), ((6 + (SACp_emal_46454__pinl_13753__icc_3186__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46454__pinl_13753__icc_3186__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46454__pinl_13753__icc_3186__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46454__pinl_13753__icc_3186__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46454__pinl_13753__icc_3186__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46454__pinl_13753__icc_3186__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46454__pinl_13753__icc_3186[0] = SACp_emal_46455__uprf_34266; }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46454__pinl_13753__icc_3186__sz; SAC_i++) { if (( SACp_emal_46454__pinl_13753__icc_3186[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_46453__pinl_13769__flat_125 = SAC_all; }
    { { { if (((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186, ((((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186) - 1)->data1.arena)); } else { if (SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186, ((((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186, ((((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186) - 1)->data1.arena)); } } else { if (((((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186, ((((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186) - 1)->data1.arena)); } else { if (((((SACp_emal_46454__pinl_13753__icc_3186__sz * sizeof (*SACp_emal_46454__pinl_13753__icc_3186))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186, ((((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46454__pinl_13753__icc_3186); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46454__pinl_13753__icc_3186__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_46453__pinl_13769__flat_125)
    {
      ;
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13791__hce_31 = SACp_emal_46507__pinl_9505__icc_3388_pred; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Type pattern error in application of block: feature `id:ishp' in return value does not match feature `ishp' in a"); SACp_pinl_47965__emal_46522__hce_31__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13791__hce_31 = SACp_pinl_47965__emal_46522__hce_31__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_46452__pinl_13777__flat_136__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46452__pinl_13777__flat_136"); }; { { if ((((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136)) + ((6 + (SACp_emal_46452__pinl_13777__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136)) + ((6 + (SACp_emal_46452__pinl_13777__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136)) + ((6 + (SACp_emal_46452__pinl_13777__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46452__pinl_13777__flat_136 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46452__pinl_13777__flat_136 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136)) + ((6 + (SACp_emal_46452__pinl_13777__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46452__pinl_13777__flat_136 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46452__pinl_13777__flat_136 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136)) + ((6 + (SACp_emal_46452__pinl_13777__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136)) + ((6 + (SACp_emal_46452__pinl_13777__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136)) + ((6 + (SACp_emal_46452__pinl_13777__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136)) + ((6 + (SACp_emal_46452__pinl_13777__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136)) + ((6 + (SACp_emal_46452__pinl_13777__flat_136__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46452__pinl_13777__flat_136 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46452__pinl_13777__flat_136 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46452__pinl_13777__flat_136 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46452__pinl_13777__flat_136 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46452__pinl_13777__flat_136__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136, SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136), ((6 + (SACp_emal_46452__pinl_13777__flat_136__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46452__pinl_13777__flat_136__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46452__pinl_13777__flat_136__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46452__pinl_13777__flat_136__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46452__pinl_13777__flat_136__dim == (1)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46452__pinl_13777__flat_136__shp0 == 2))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4457 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 4457 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_off = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46452__pinl_13777__flat_136[SAC_i] = ( SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res[SAC_off + SAC_i]); };
      }
    }

    { { { if (((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res) - 1)->data1.arena)); } else { if (SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res) - 1)->data1.arena)); } } else { if (((((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res) - 1)->data1.arena)); } else { if (((((SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__sz * sizeof (*SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46460__isaa_35355__pinl_13742__rtpf_10_res__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_46451__pinl_13776__flat_135__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46451__pinl_13776__flat_135"); }; { { if ((((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135)) + ((6 + (SACp_emal_46451__pinl_13776__flat_135__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135)) + ((6 + (SACp_emal_46451__pinl_13776__flat_135__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135)) + ((6 + (SACp_emal_46451__pinl_13776__flat_135__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46451__pinl_13776__flat_135 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46451__pinl_13776__flat_135 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135)) + ((6 + (SACp_emal_46451__pinl_13776__flat_135__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46451__pinl_13776__flat_135 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46451__pinl_13776__flat_135 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135)) + ((6 + (SACp_emal_46451__pinl_13776__flat_135__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135)) + ((6 + (SACp_emal_46451__pinl_13776__flat_135__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135)) + ((6 + (SACp_emal_46451__pinl_13776__flat_135__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135)) + ((6 + (SACp_emal_46451__pinl_13776__flat_135__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135)) + ((6 + (SACp_emal_46451__pinl_13776__flat_135__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46451__pinl_13776__flat_135 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46451__pinl_13776__flat_135 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46451__pinl_13776__flat_135 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46451__pinl_13776__flat_135 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46451__pinl_13776__flat_135__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135, SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135), ((6 + (SACp_emal_46451__pinl_13776__flat_135__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46451__pinl_13776__flat_135__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46451__pinl_13776__flat_135__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46451__pinl_13776__flat_135__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46451__pinl_13776__flat_135__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46451__pinl_13776__flat_135__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4490 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 4490 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_46452__pinl_13777__flat_136__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_46452__pinl_13777__flat_136__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46451__pinl_13776__flat_135[SAC_i] = ( SACp_emal_46452__pinl_13777__flat_136[SAC_off + SAC_i]); };
      }
    }

    { { { if (((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136, ((((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136) - 1)->data1.arena)); } else { if (SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136, ((((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136, ((((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136) - 1)->data1.arena)); } } else { if (((((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136, ((((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136) - 1)->data1.arena)); } else { if (((((SACp_emal_46452__pinl_13777__flat_136__sz * sizeof (*SACp_emal_46452__pinl_13777__flat_136))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136, ((((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46452__pinl_13777__flat_136); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46452__pinl_13777__flat_136__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46450__uprf_34262 = ( SACp_emal_46451__pinl_13776__flat_135[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    { { { if (((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135, ((((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135) - 1)->data1.arena)); } else { if (SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135, ((((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135, ((((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135) - 1)->data1.arena)); } } else { if (((((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135, ((((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135) - 1)->data1.arena)); } else { if (((((SACp_emal_46451__pinl_13776__flat_135__sz * sizeof (*SACp_emal_46451__pinl_13776__flat_135))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135, ((((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46451__pinl_13776__flat_135); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46451__pinl_13776__flat_135__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46449__esd_39563 = (-2) + (SACp_emal_46450__uprf_34262); };
    ; ; { SACp_emal_46448__uprf_34258 = (SACp_emal_46449__esd_39563) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_46447__pinl_13756__icc_3190__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46447__pinl_13756__icc_3190"); }; { { if ((((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190)) + ((6 + (SACp_emal_46447__pinl_13756__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190)) + ((6 + (SACp_emal_46447__pinl_13756__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190)) + ((6 + (SACp_emal_46447__pinl_13756__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46447__pinl_13756__icc_3190 = (
# 4518 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46447__pinl_13756__icc_3190 = (
# 4518 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190)) + ((6 + (SACp_emal_46447__pinl_13756__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46447__pinl_13756__icc_3190 = (
# 4518 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46447__pinl_13756__icc_3190 = (
# 4518 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190)) + ((6 + (SACp_emal_46447__pinl_13756__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190)) + ((6 + (SACp_emal_46447__pinl_13756__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190)) + ((6 + (SACp_emal_46447__pinl_13756__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190)) + ((6 + (SACp_emal_46447__pinl_13756__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190)) + ((6 + (SACp_emal_46447__pinl_13756__icc_3190__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46447__pinl_13756__icc_3190 = (
# 4518 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46447__pinl_13756__icc_3190 = (
# 4518 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46447__pinl_13756__icc_3190 = (
# 4518 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46447__pinl_13756__icc_3190 = (
# 4518 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46447__pinl_13756__icc_3190__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190, SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190), ((6 + (SACp_emal_46447__pinl_13756__icc_3190__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46447__pinl_13756__icc_3190__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46447__pinl_13756__icc_3190__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46447__pinl_13756__icc_3190__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46447__pinl_13756__icc_3190__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46447__pinl_13756__icc_3190__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46447__pinl_13756__icc_3190[0] = SACp_emal_46448__uprf_34258; }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46447__pinl_13756__icc_3190__sz; SAC_i++) { if (( SACp_emal_46447__pinl_13756__icc_3190[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_46446__pinl_13774__flat_133 = SAC_all; }
    { { { if (((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190, ((((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190) - 1)->data1.arena)); } else { if (SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190, ((((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190, ((((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190) - 1)->data1.arena)); } } else { if (((((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190, ((((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190) - 1)->data1.arena)); } else { if (((((SACp_emal_46447__pinl_13756__icc_3190__sz * sizeof (*SACp_emal_46447__pinl_13756__icc_3190))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190, ((((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46447__pinl_13756__icc_3190); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46447__pinl_13756__icc_3190__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_46446__pinl_13774__flat_133)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13792__hce_30 = SACp_pinl_13791__hce_31; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Type pattern error in application of block: feature `od:s' in return value does not match argument s"); SACp_pinl_47967__emal_46521__hce_30__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13792__hce_30 = SACp_pinl_47967__emal_46521__hce_30__SSA0_1; }

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46445__pinl_13943__icc_6606 = ( SACp_emal_46459__pinl_13789_shp[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    { { { if (((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp, ((((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp) - 1)->data1.arena)); } else { if (SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp, ((((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp, ((((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp) - 1)->data1.arena)); } } else { if (((((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp, ((((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp) - 1)->data1.arena)); } else { if (((((SACp_emal_46459__pinl_13789_shp__sz * sizeof (*SACp_emal_46459__pinl_13789_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp, ((((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46459__pinl_13789_shp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46459__pinl_13789_shp__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46444__ctz_25621 = (-10) + (SACp_emal_46445__pinl_13943__icc_6606); };
    ; ; { SACp_emal_46443__pinl_13953__flat_3875 = (SACp_emal_46444__ctz_25621) == (0); };
    { ; ; }
    if (SACp_emal_46443__pinl_13953__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13795__hce_27 = SACp_pinl_13792__hce_30; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Type pattern post-condition of block failed"); SACp_pinl_47969__emal_46520__hce_27__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_13795__hce_27 = SACp_pinl_47969__emal_46520__hce_27__SSA0_1; }

    }
    if (!SACp_pinl_13795__hce_27) { SAC_RuntimeErrorLoc ("./week4.sac", 36, 1, "Type pattern post-condition of block failed"); }
    ;



    SACp_flat_59__desc = SACp_pinl_13742__rtpf_10_res__desc;
    SACp_flat_59__sz = SACp_pinl_13742__rtpf_10_res__sz;
    SACp_flat_59__dim = SACp_pinl_13742__rtpf_10_res__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_59__desc) & (-1 ^ (3))))[3]) = SACp_pinl_13742__rtpf_10_res__dim;
    { SACp_flat_59 = SACp_pinl_13742__rtpf_10_res; }




    SACf__MAIN___rtpf_15_impl_unblock__i_S__i (&SACp_pinl_14401__rtpf_17_res, &SACp_pinl_14401__rtpf_17_res__desc, SACp_flat_59, SACp_flat_59__desc, SACp_emal_46499__pinl_11445__eat_340__SSA7_1);




    SACp_pinl_14401__rtpf_17_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_14401__rtpf_17_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_46442__isaa_35368__pinl_14401__rtpf_17_res = SACp_pinl_14401__rtpf_17_res__dim; }; }
    { { if (!((1 == SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res"); }; { if ((((6 + (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_14401__rtpf_17_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__sz = SAC_size;
      if (!((SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 4656 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 4656 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4656 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 4656 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4656 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 4656 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 4656 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 4656, __extension__ __PRETTY_FUNCTION__); }))
# 4656 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__sz * sizeof (*SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res)); break; case SAC_HM_multi_threaded: SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__sz * sizeof (*SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res), 0); break; case SAC_HM_any_threaded: SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__sz * sizeof (*SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_14401__rtpf_17_res__dim; SAC_i++) {
      { SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { if (!((1 == SACp_emal_46440__pinl_14438_shp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46440__pinl_14438_shp"); }; { { if ((((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp)) + ((6 + (SACp_emal_46440__pinl_14438_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp)) + ((6 + (SACp_emal_46440__pinl_14438_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp)) + ((6 + (SACp_emal_46440__pinl_14438_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46440__pinl_14438_shp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46440__pinl_14438_shp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp)) + ((6 + (SACp_emal_46440__pinl_14438_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46440__pinl_14438_shp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46440__pinl_14438_shp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp)) + ((6 + (SACp_emal_46440__pinl_14438_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp)) + ((6 + (SACp_emal_46440__pinl_14438_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp)) + ((6 + (SACp_emal_46440__pinl_14438_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp)) + ((6 + (SACp_emal_46440__pinl_14438_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp)) + ((6 + (SACp_emal_46440__pinl_14438_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46440__pinl_14438_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46440__pinl_14438_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46440__pinl_14438_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46440__pinl_14438_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46440__pinl_14438_shp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp, SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp), ((6 + (SACp_emal_46440__pinl_14438_shp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46440__pinl_14438_shp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46440__pinl_14438_shp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46440__pinl_14438_shp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46440__pinl_14438_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46440__pinl_14438_shp__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4680 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 4680 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46440__pinl_14438_shp[SAC_i] = ( SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res[SAC_off + SAC_i]); };
      }
    }

    ; ; { SACp_emal_46442__isaa_35368__pinl_14401__rtpf_17_res = (2) - (SACp_emal_46442__isaa_35368__pinl_14401__rtpf_17_res); };
    ; ; { SACp_emal_46438__pinl_14419__flat_248 = (SACp_emal_46442__isaa_35368__pinl_14401__rtpf_17_res) == (0); };
    { ; ; }
    if (SACp_emal_46438__pinl_14419__flat_248)
    {
      { { SACp_pinl_47972__emal_46518__hce_40 = 
# 4701 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     1
# 4701 "/home/rubenhensen/sac/hw/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14439__hce_40 = SACp_pinl_47972__emal_46518__hce_40; }

    }
    else
    {
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern error in application of unblock: feature `id:ishp' in return value does not match feature `id' in a"); SACp_pinl_47973__emal_46519__hce_40__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14439__hce_40 = SACp_pinl_47973__emal_46519__hce_40__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_46437__pinl_14425__flat_254__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46437__pinl_14425__flat_254"); }; { if ((((6 + (SACp_emal_46437__pinl_14425__flat_254__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46437__pinl_14425__flat_254__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46437__pinl_14425__flat_254__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46437__pinl_14425__flat_254__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46437__pinl_14425__flat_254__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46437__pinl_14425__flat_254__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46437__pinl_14425__flat_254__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46437__pinl_14425__flat_254__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46437__pinl_14425__flat_254__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46437__pinl_14425__flat_254__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46437__pinl_14425__flat_254__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46437__pinl_14425__flat_254__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46437__pinl_14425__flat_254__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46437__pinl_14425__flat_254__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46437__pinl_14425__flat_254__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46437__pinl_14425__flat_254__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46437__pinl_14425__flat_254__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46437__pinl_14425__flat_254__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46437__pinl_14425__flat_254__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46437__pinl_14425__flat_254__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__dim == (1)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_46437__pinl_14425__flat_254__dim == (1)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46437__pinl_14425__flat_254__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46437__pinl_14425__flat_254__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__sz - (((1) < 0) ? (-(1)) : (1));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46437__pinl_14425__flat_254__desc) & (-1 ^ (3))))[4]) = SACp_emal_46437__pinl_14425__flat_254__sz = SAC_size;
      if (!((SACp_emal_46437__pinl_14425__flat_254__sz >= 0))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 4742 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 4742 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4742 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 4742 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4742 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 4742 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 4742 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 4742, __extension__ __PRETTY_FUNCTION__); }))
# 4742 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46437__pinl_14425__flat_254 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46437__pinl_14425__flat_254__sz * sizeof (*SACp_emal_46437__pinl_14425__flat_254)); break; case SAC_HM_multi_threaded: SACp_emal_46437__pinl_14425__flat_254 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46437__pinl_14425__flat_254__sz * sizeof (*SACp_emal_46437__pinl_14425__flat_254), 0); break; case SAC_HM_any_threaded: SACp_emal_46437__pinl_14425__flat_254 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46437__pinl_14425__flat_254__sz * sizeof (*SACp_emal_46437__pinl_14425__flat_254), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46437__pinl_14425__flat_254__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46437__pinl_14425__flat_254__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46437__pinl_14425__flat_254__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 4749 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 4749 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_off = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46437__pinl_14425__flat_254[SAC_i] = ( SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46441__isaa_35369__pinl_14401__rtpf_17_res__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_46436__pinl_14424__flat_253__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46436__pinl_14424__flat_253"); }; { { if ((((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253)) + ((6 + (SACp_emal_46436__pinl_14424__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253)) + ((6 + (SACp_emal_46436__pinl_14424__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253)) + ((6 + (SACp_emal_46436__pinl_14424__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46436__pinl_14424__flat_253 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46436__pinl_14424__flat_253 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253)) + ((6 + (SACp_emal_46436__pinl_14424__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46436__pinl_14424__flat_253 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46436__pinl_14424__flat_253 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253)) + ((6 + (SACp_emal_46436__pinl_14424__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253)) + ((6 + (SACp_emal_46436__pinl_14424__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253)) + ((6 + (SACp_emal_46436__pinl_14424__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253)) + ((6 + (SACp_emal_46436__pinl_14424__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253)) + ((6 + (SACp_emal_46436__pinl_14424__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46436__pinl_14424__flat_253 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46436__pinl_14424__flat_253 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46436__pinl_14424__flat_253 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46436__pinl_14424__flat_253 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46436__pinl_14424__flat_253__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253, SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253), ((6 + (SACp_emal_46436__pinl_14424__flat_253__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46436__pinl_14424__flat_253__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46436__pinl_14424__flat_253__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46436__pinl_14424__flat_253__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46436__pinl_14424__flat_253__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46436__pinl_14424__flat_253__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4782 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 4782 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_46437__pinl_14425__flat_254__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_46437__pinl_14425__flat_254__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46436__pinl_14424__flat_253[SAC_i] = ( SACp_emal_46437__pinl_14425__flat_254[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_46437__pinl_14425__flat_254); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46437__pinl_14425__flat_254__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46435__uprf_40375 = ( SACp_emal_46436__pinl_14424__flat_253[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    { { { if (((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253, ((((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253) - 1)->data1.arena)); } else { if (SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253, ((((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253, ((((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253) - 1)->data1.arena)); } } else { if (((((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253, ((((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253) - 1)->data1.arena)); } else { if (((((SACp_emal_46436__pinl_14424__flat_253__sz * sizeof (*SACp_emal_46436__pinl_14424__flat_253))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253, ((((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46436__pinl_14424__flat_253); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46436__pinl_14424__flat_253__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46435__uprf_40375 = (SACp_emal_46435__uprf_40375) - (SACp_emal_46457__uprf_34270); };
    { ; ; }
    ; ; { SACp_emal_46433__uprf_40371 = (SACp_emal_46435__uprf_40375) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_46432__pinl_14409__icc_3350__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46432__pinl_14409__icc_3350"); }; { { if ((((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350)) + ((6 + (SACp_emal_46432__pinl_14409__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350)) + ((6 + (SACp_emal_46432__pinl_14409__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350)) + ((6 + (SACp_emal_46432__pinl_14409__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46432__pinl_14409__icc_3350 = (
# 4819 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46432__pinl_14409__icc_3350 = (
# 4819 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350)) + ((6 + (SACp_emal_46432__pinl_14409__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46432__pinl_14409__icc_3350 = (
# 4819 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46432__pinl_14409__icc_3350 = (
# 4819 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350)) + ((6 + (SACp_emal_46432__pinl_14409__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350)) + ((6 + (SACp_emal_46432__pinl_14409__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350)) + ((6 + (SACp_emal_46432__pinl_14409__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350)) + ((6 + (SACp_emal_46432__pinl_14409__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350)) + ((6 + (SACp_emal_46432__pinl_14409__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46432__pinl_14409__icc_3350 = (
# 4819 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46432__pinl_14409__icc_3350 = (
# 4819 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46432__pinl_14409__icc_3350 = (
# 4819 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46432__pinl_14409__icc_3350 = (
# 4819 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46432__pinl_14409__icc_3350__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350, SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350), ((6 + (SACp_emal_46432__pinl_14409__icc_3350__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46432__pinl_14409__icc_3350__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46432__pinl_14409__icc_3350__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46432__pinl_14409__icc_3350__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46432__pinl_14409__icc_3350__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46432__pinl_14409__icc_3350__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46432__pinl_14409__icc_3350[0] = SACp_emal_46433__uprf_40371; }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46432__pinl_14409__icc_3350__sz; SAC_i++) { if (( SACp_emal_46432__pinl_14409__icc_3350[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_46431__pinl_14422__flat_251 = SAC_all; }
    { { { if (((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350, ((((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350) - 1)->data1.arena)); } else { if (SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350, ((((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350, ((((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350) - 1)->data1.arena)); } } else { if (((((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350, ((((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350) - 1)->data1.arena)); } else { if (((((SACp_emal_46432__pinl_14409__icc_3350__sz * sizeof (*SACp_emal_46432__pinl_14409__icc_3350))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350, ((((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46432__pinl_14409__icc_3350); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46432__pinl_14409__icc_3350__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_46431__pinl_14422__flat_251)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14440__hce_39 = SACp_pinl_14439__hce_40; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern error in application of unblock: feature `id:ishp' in return value does not match feature `ishp' in a"); SACp_pinl_47975__emal_46517__hce_39__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14440__hce_39 = SACp_pinl_47975__emal_46517__hce_39__SSA0_1; }

    }
    if (SACp_emal_46438__pinl_14419__flat_248)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14441__hce_38 = SACp_pinl_14440__hce_39; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern error in application of unblock: feature `od:shp' in return value does not match argument od"); SACp_pinl_47977__emal_46516__hce_38__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14441__hce_38 = SACp_pinl_47977__emal_46516__hce_38__SSA0_1; }

    }
    ; ; { SACp_emal_46445__pinl_13943__icc_6606 = (SACp_emal_46445__pinl_13943__icc_6606) * (SACp_emal_46450__uprf_34262); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46429__pinl_14779__icc_6600 = ( SACp_emal_46440__pinl_14438_shp[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    { { { if (((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp, ((((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp) - 1)->data1.arena)); } else { if (SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp, ((((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp, ((((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp) - 1)->data1.arena)); } } else { if (((((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp, ((((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp) - 1)->data1.arena)); } else { if (((((SACp_emal_46440__pinl_14438_shp__sz * sizeof (*SACp_emal_46440__pinl_14438_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp, ((((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46440__pinl_14438_shp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46440__pinl_14438_shp__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46428__ctz_25611 = (SACp_emal_46445__pinl_13943__icc_6606) - (SACp_emal_46429__pinl_14779__icc_6600); };
    ; ; { SACp_emal_46427__pinl_14792__flat_3875 = (SACp_emal_46428__ctz_25611) == (0); };
    { ; ; }
    if (SACp_emal_46427__pinl_14792__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14442__hce_37 = SACp_pinl_14441__hce_38; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern post-condition of unblock failed"); SACp_pinl_47979__emal_46515__hce_37__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14442__hce_37 = SACp_pinl_47979__emal_46515__hce_37__SSA0_1; }

    }
    ; ; { SACp_emal_46429__pinl_14779__icc_6600 = (SACp_emal_46429__pinl_14779__icc_6600) - (SACp_emal_46445__pinl_13943__icc_6606); };
    { ; ; }
    ; ; { SACp_emal_46425__pinl_14591__flat_3875 = (SACp_emal_46429__pinl_14779__icc_6600) == (0); };
    { ; ; }
    if (SACp_emal_46425__pinl_14591__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14443__hce_36 = SACp_pinl_14442__hce_37; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern post-condition of unblock failedType pattern post-condition of unblock failed"); SACp_pinl_47981__emal_46514__hce_36__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14443__hce_36 = SACp_pinl_47981__emal_46514__hce_36__SSA0_1; }

    }
    if (!SACp_pinl_14443__hce_36) { SAC_RuntimeErrorLoc ("./week4.sac", 43, 1, "Type pattern post-condition of unblock failed"); }
    ;



    _tcp_48013_SACp_emal_46503__pinl_9546__icc_7613__desc = SACp_emal_46503__pinl_9546__icc_7613__desc;
    _tcp_48013_SACp_emal_46503__pinl_9546__icc_7613__sz = SACp_emal_46503__pinl_9546__icc_7613__sz;
    _tcp_48013_SACp_emal_46503__pinl_9546__icc_7613__dim = SACp_emal_46503__pinl_9546__icc_7613__dim;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48013_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46503__pinl_9546__icc_7613__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48013_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_46503__pinl_9546__icc_7613__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48013_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[4]) = SACp_emal_46503__pinl_9546__icc_7613__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48013_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[3]) = SACp_emal_46503__pinl_9546__icc_7613__dim;
    { _tcp_48013_SACp_emal_46503__pinl_9546__icc_7613 = SACp_emal_46503__pinl_9546__icc_7613; }




    SACwf__MAIN_CLArray___EQ_EQ__i_S__i_S (&SACp_flat_57, &SACp_flat_57__desc, SACp_pinl_14401__rtpf_17_res, SACp_pinl_14401__rtpf_17_res__desc, _tcp_48013_SACp_emal_46503__pinl_9546__icc_7613, _tcp_48013_SACp_emal_46503__pinl_9546__icc_7613__desc);




    SACp_flat_57__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_57__desc) & (-1 ^ (3))))[4]);
    SACp_flat_57__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_57__desc) & (-1 ^ (3))))[3]);

    { { SACp_emal_46424__isaa_35410__flat_57 = SACp_flat_57__dim; }; }
    { { if (!((1 == SACp_emal_46423__isaa_35411__flat_57__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46423__isaa_35411__flat_57"); }; { if ((((6 + (SACp_emal_46423__isaa_35411__flat_57__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46423__isaa_35411__flat_57__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46423__isaa_35411__flat_57__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46423__isaa_35411__flat_57__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46423__isaa_35411__flat_57__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46423__isaa_35411__flat_57__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46423__isaa_35411__flat_57__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46423__isaa_35411__flat_57__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46423__isaa_35411__flat_57__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46423__isaa_35411__flat_57__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46423__isaa_35411__flat_57__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46423__isaa_35411__flat_57__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46423__isaa_35411__flat_57__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46423__isaa_35411__flat_57__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46423__isaa_35411__flat_57__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46423__isaa_35411__flat_57__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46423__isaa_35411__flat_57__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46423__isaa_35411__flat_57__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46423__isaa_35411__flat_57__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46423__isaa_35411__flat_57__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46423__isaa_35411__flat_57__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 21, 17, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46423__isaa_35411__flat_57__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46423__isaa_35411__flat_57__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_flat_57__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46423__isaa_35411__flat_57__desc) & (-1 ^ (3))))[4]) = SACp_emal_46423__isaa_35411__flat_57__sz = SAC_size;
      if (!((SACp_emal_46423__isaa_35411__flat_57__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 21, 17, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5014 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5014 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5014 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5014 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5014 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5014 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5014 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5014, __extension__ __PRETTY_FUNCTION__); }))
# 5014 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46423__isaa_35411__flat_57 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46423__isaa_35411__flat_57__sz * sizeof (*SACp_emal_46423__isaa_35411__flat_57)); break; case SAC_HM_multi_threaded: SACp_emal_46423__isaa_35411__flat_57 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46423__isaa_35411__flat_57__sz * sizeof (*SACp_emal_46423__isaa_35411__flat_57), 0); break; case SAC_HM_any_threaded: SACp_emal_46423__isaa_35411__flat_57 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46423__isaa_35411__flat_57__sz * sizeof (*SACp_emal_46423__isaa_35411__flat_57), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46423__isaa_35411__flat_57__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46423__isaa_35411__flat_57__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46423__isaa_35411__flat_57__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_flat_57__dim; SAC_i++) {
      { SACp_emal_46423__isaa_35411__flat_57[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_57__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { if (!((1 == SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46422__isaa_35413__pinl_15209__flat_283"); }; { { if ((((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283)) + ((6 + (SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283)) + ((6 + (SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283)) + ((6 + (SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46422__isaa_35413__pinl_15209__flat_283 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46422__isaa_35413__pinl_15209__flat_283 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283)) + ((6 + (SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46422__isaa_35413__pinl_15209__flat_283 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46422__isaa_35413__pinl_15209__flat_283 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283)) + ((6 + (SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283)) + ((6 + (SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283)) + ((6 + (SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283)) + ((6 + (SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283)) + ((6 + (SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46422__isaa_35413__pinl_15209__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46422__isaa_35413__pinl_15209__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46422__isaa_35413__pinl_15209__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46422__isaa_35413__pinl_15209__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46422__isaa_35413__pinl_15209__flat_283__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283, SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283), ((6 + (SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46422__isaa_35413__pinl_15209__flat_283__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46422__isaa_35413__pinl_15209__flat_283__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46422__isaa_35413__pinl_15209__flat_283__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 42, 945, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 42, 945, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46422__isaa_35413__pinl_15209__flat_283[0] = SACp_emal_46424__isaa_35410__flat_57; }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46423__isaa_35411__flat_57__sz; SAC_i++) { if (( SACp_emal_46423__isaa_35411__flat_57[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_46423__isaa_35411__flat_57"); } { SACp_emal_46421__pinl_15084__icc_6059_pred = ( SACp_emal_46423__isaa_35411__flat_57[SAC_i]); }; } SACp_emal_46421__pinl_15084__icc_6059_pred = SAC_all; }
    if (SACp_emal_46508__isaa_35265__rso_285_TheWorld <= SACp_emal_46424__isaa_35410__flat_57) { SACp_emal_46420__uprf_24749 = 1; } else { SACp_emal_46420__uprf_24749 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8976, "Scalar constraint `" "SACp_emal_46508__isaa_35265__rso_285_TheWorld" " (" "%d" ") <= " "SACp_emal_46424__isaa_35410__flat_57" " (" "%d" ")" "' violated", SACp_emal_46508__isaa_35265__rso_285_TheWorld, SACp_emal_46424__isaa_35410__flat_57); }
    { ; ; }
    { { SACp_emal_46419__uprf_24748 = SACp_emal_46508__isaa_35265__rso_285_TheWorld; } }
    { { if (!((1 == SACp_emal_46418__pinl_15175__idc_7751__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46418__pinl_15175__idc_7751"); }; { { if ((((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751)) + ((6 + (SACp_emal_46418__pinl_15175__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751)) + ((6 + (SACp_emal_46418__pinl_15175__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751)) + ((6 + (SACp_emal_46418__pinl_15175__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46418__pinl_15175__idc_7751 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46418__pinl_15175__idc_7751 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751)) + ((6 + (SACp_emal_46418__pinl_15175__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46418__pinl_15175__idc_7751 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46418__pinl_15175__idc_7751 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751)) + ((6 + (SACp_emal_46418__pinl_15175__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751)) + ((6 + (SACp_emal_46418__pinl_15175__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751)) + ((6 + (SACp_emal_46418__pinl_15175__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751)) + ((6 + (SACp_emal_46418__pinl_15175__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751)) + ((6 + (SACp_emal_46418__pinl_15175__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46418__pinl_15175__idc_7751 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46418__pinl_15175__idc_7751 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46418__pinl_15175__idc_7751 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46418__pinl_15175__idc_7751 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46418__pinl_15175__idc_7751__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751, SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751), ((6 + (SACp_emal_46418__pinl_15175__idc_7751__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46418__pinl_15175__idc_7751__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46418__pinl_15175__idc_7751__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46418__pinl_15175__idc_7751__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46418__pinl_15175__idc_7751__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46418__pinl_15175__idc_7751__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46418__pinl_15175__idc_7751[0] = SACp_emal_46419__uprf_24748; }

    { ; ; }
    if (!SACp_emal_46420__uprf_24749) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8912, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46417__pinl_23671__icc_5332 = ( SACp_emal_46418__pinl_15175__idc_7751[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    { { { if (((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751, ((((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751) - 1)->data1.arena)); } else { if (SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751, ((((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751, ((((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751) - 1)->data1.arena)); } } else { if (((((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751, ((((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751) - 1)->data1.arena)); } else { if (((((SACp_emal_46418__pinl_15175__idc_7751__sz * sizeof (*SACp_emal_46418__pinl_15175__idc_7751))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751, ((((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46418__pinl_15175__idc_7751); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46418__pinl_15175__idc_7751__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46416__pinl_23674__icc_5338 = ( SACp_emal_46422__isaa_35413__pinl_15209__flat_283[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    { { { if (((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283, ((((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283) - 1)->data1.arena)); } else { if (SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283, ((((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283, ((((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283) - 1)->data1.arena)); } } else { if (((((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283, ((((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283) - 1)->data1.arena)); } else { if (((((SACp_emal_46422__isaa_35413__pinl_15209__flat_283__sz * sizeof (*SACp_emal_46422__isaa_35413__pinl_15209__flat_283))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283, ((((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46422__isaa_35413__pinl_15209__flat_283); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46422__isaa_35413__pinl_15209__flat_283__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_46413__pinl_15148__icc_7742__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46413__pinl_15148__icc_7742"); }; { if ((((6 + (SACp_emal_46413__pinl_15148__icc_7742__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46413__pinl_15148__icc_7742__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46413__pinl_15148__icc_7742__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46413__pinl_15148__icc_7742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46413__pinl_15148__icc_7742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46413__pinl_15148__icc_7742__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46413__pinl_15148__icc_7742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46413__pinl_15148__icc_7742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46413__pinl_15148__icc_7742__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46413__pinl_15148__icc_7742__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46413__pinl_15148__icc_7742__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46413__pinl_15148__icc_7742__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46413__pinl_15148__icc_7742__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46413__pinl_15148__icc_7742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46413__pinl_15148__icc_7742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46413__pinl_15148__icc_7742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46413__pinl_15148__icc_7742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46413__pinl_15148__icc_7742__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46413__pinl_15148__icc_7742__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46413__pinl_15148__icc_7742__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46413__pinl_15148__icc_7742__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46413__pinl_15148__icc_7742__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46413__pinl_15148__icc_7742__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46416__pinl_23674__icc_5338;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46413__pinl_15148__icc_7742__desc) & (-1 ^ (3))))[4]) = SACp_emal_46413__pinl_15148__icc_7742__sz = SAC_size;
      if (!((SACp_emal_46413__pinl_15148__icc_7742__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5088 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5088 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5088 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5088 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5088 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5088 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5088 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5088, __extension__ __PRETTY_FUNCTION__); }))
# 5088 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46413__pinl_15148__icc_7742 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46413__pinl_15148__icc_7742__sz * sizeof (*SACp_emal_46413__pinl_15148__icc_7742)); break; case SAC_HM_multi_threaded: SACp_emal_46413__pinl_15148__icc_7742 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46413__pinl_15148__icc_7742__sz * sizeof (*SACp_emal_46413__pinl_15148__icc_7742), 0); break; case SAC_HM_any_threaded: SACp_emal_46413__pinl_15148__icc_7742 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46413__pinl_15148__icc_7742__sz * sizeof (*SACp_emal_46413__pinl_15148__icc_7742), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46413__pinl_15148__icc_7742__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46413__pinl_15148__icc_7742__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46413__pinl_15148__icc_7742__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_46413__pinl_15148__icc_7742_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_46413__pinl_15148__icc_7742_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_46417__pinl_23671__icc_5332;




      SACp_wlidx_45659__pinl_15148__icc_7742
        = SAC_schedule_start0 * SAC_SACp_emal_46413__pinl_15148__icc_7742_shpfac0;

      { int SAC_stop_SACp_pinl_15159__eat_6625 = SACp_emal_46417__pinl_23671__icc_5332; for (SACp_pinl_15159__eat_6625 = 0; SACp_pinl_15159__eat_6625 < SACp_emal_46417__pinl_23671__icc_5332;) {
     



      if (!((0 == (SACp_emal_46413__pinl_15148__icc_7742__dim - SACp_pinl_15157_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46413__pinl_15148__icc_7742_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "WL expression with illegal size found!"); };
      { SACp_emal_46413__pinl_15148__icc_7742[SACp_wlidx_45659__pinl_15148__icc_7742] = SACp_emal_46499__pinl_11445__eat_340__SSA7_1; };

      SACp_wlidx_45659__pinl_15148__icc_7742 = SACp_wlidx_45659__pinl_15148__icc_7742 + 1;
      SACp_pinl_15159__eat_6625 = SACp_pinl_15159__eat_6625 + 1;
      } }
# 5158 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_46417__pinl_23671__icc_5332;
      SAC_schedule_stop0 = SACp_emal_46416__pinl_23674__icc_5338;




      SACp_wlidx_45659__pinl_15148__icc_7742
        = SAC_schedule_start0 * SAC_SACp_emal_46413__pinl_15148__icc_7742_shpfac0;

      { int SAC_stop_SACp_pinl_15159__eat_6625 = SACp_emal_46416__pinl_23674__icc_5338; for (SACp_pinl_15159__eat_6625 = SACp_emal_46417__pinl_23671__icc_5332; SACp_pinl_15159__eat_6625 < SACp_emal_46416__pinl_23674__icc_5338;) {
     



      if (!((0 == (SACp_emal_46413__pinl_15148__icc_7742__dim - SACp_pinl_15157_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46413__pinl_15148__icc_7742_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_46413__pinl_15148__icc_7742[SACp_wlidx_45659__pinl_15148__icc_7742] = SACp_emal_46508__isaa_35265__rso_285_TheWorld; };

      SACp_wlidx_45659__pinl_15148__icc_7742 = SACp_wlidx_45659__pinl_15148__icc_7742 + 1;
      SACp_pinl_15159__eat_6625 = SACp_pinl_15159__eat_6625 + 1;
      } }
# 5187 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48024_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_46420__uprf_24749) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8912, "With-loop guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46413__pinl_15148__icc_7742__sz; SAC_i++) { if (( SACp_emal_46413__pinl_15148__icc_7742[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_46413__pinl_15148__icc_7742"); } { SACp_emal_46412__pinl_15086__icc_6058_pred = ( SACp_emal_46413__pinl_15148__icc_7742[SAC_i]); }; } SACp_emal_46412__pinl_15086__icc_6058_pred = SAC_all; }
    if (!SACp_emal_46421__pinl_15084__icc_6059_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    if (!SACp_emal_46412__pinl_15086__icc_6058_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    { { if (!((1 == SACp_emal_46411__pinl_15108_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46411__pinl_15108_new_shape"); }; { if ((((6 + (SACp_emal_46411__pinl_15108_new_shape__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46411__pinl_15108_new_shape__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46411__pinl_15108_new_shape__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46411__pinl_15108_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46411__pinl_15108_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46411__pinl_15108_new_shape__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46411__pinl_15108_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46411__pinl_15108_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46411__pinl_15108_new_shape__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46411__pinl_15108_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46411__pinl_15108_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46411__pinl_15108_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46411__pinl_15108_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46411__pinl_15108_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46411__pinl_15108_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46411__pinl_15108_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46411__pinl_15108_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46411__pinl_15108_new_shape__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46411__pinl_15108_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46411__pinl_15108_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_46423__isaa_35411__flat_57__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_46411__pinl_15108_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46411__pinl_15108_new_shape__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46411__pinl_15108_new_shape__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46423__isaa_35411__flat_57__sz - (((SACp_emal_46416__pinl_23674__icc_5338) < 0) ? (-(SACp_emal_46416__pinl_23674__icc_5338)) : (SACp_emal_46416__pinl_23674__icc_5338));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46411__pinl_15108_new_shape__desc) & (-1 ^ (3))))[4]) = SACp_emal_46411__pinl_15108_new_shape__sz = SAC_size;
      if (!((SACp_emal_46411__pinl_15108_new_shape__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5217 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5217 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5217 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5217 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5217 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5217 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5217 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5217, __extension__ __PRETTY_FUNCTION__); }))
# 5217 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46411__pinl_15108_new_shape = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46411__pinl_15108_new_shape__sz * sizeof (*SACp_emal_46411__pinl_15108_new_shape)); break; case SAC_HM_multi_threaded: SACp_emal_46411__pinl_15108_new_shape = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46411__pinl_15108_new_shape__sz * sizeof (*SACp_emal_46411__pinl_15108_new_shape), 0); break; case SAC_HM_any_threaded: SACp_emal_46411__pinl_15108_new_shape = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46411__pinl_15108_new_shape__sz * sizeof (*SACp_emal_46411__pinl_15108_new_shape), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46411__pinl_15108_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46411__pinl_15108_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46411__pinl_15108_new_shape__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 5224 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 5224 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_46416__pinl_23674__icc_5338;
      SAC_cond = (SACp_emal_46416__pinl_23674__icc_5338 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_46423__isaa_35411__flat_57__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3547, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_46423__isaa_35411__flat_57__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3547, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46411__pinl_15108_new_shape[SAC_i] = ( SACp_emal_46423__isaa_35411__flat_57[SAC_off + SAC_i]); };
      }
    }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46411__pinl_15108_new_shape__sz; SAC_i++) { if (( SACp_emal_46411__pinl_15108_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Non-negativity constraint violated " "for vector " "SACp_emal_46411__pinl_15108_new_shape"); } { SACp_emal_46410__pinl_15117__icc_6023_pred = ( SACp_emal_46411__pinl_15108_new_shape[SAC_i]); }; } SACp_emal_46410__pinl_15117__icc_6023_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46411__pinl_15108_new_shape__sz; SAC_i++) { if (( SACp_emal_46411__pinl_15108_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Non-negativity constraint violated " "for vector " "SACp_emal_46411__pinl_15108_new_shape"); } { SACp_emal_46409__pinl_15124__icc_6028_pred = ( SACp_emal_46411__pinl_15108_new_shape[SAC_i]); }; } SACp_emal_46409__pinl_15124__icc_6028_pred = SAC_all; }
    { { if (!((1 == SACp_emal_46408__pinl_15106__flat_421__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46408__pinl_15106__flat_421"); }; { if ((((6 + (SACp_emal_46408__pinl_15106__flat_421__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46408__pinl_15106__flat_421__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46408__pinl_15106__flat_421__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46408__pinl_15106__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46408__pinl_15106__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46408__pinl_15106__flat_421__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46408__pinl_15106__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46408__pinl_15106__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46408__pinl_15106__flat_421__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46408__pinl_15106__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46408__pinl_15106__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46408__pinl_15106__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46408__pinl_15106__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46408__pinl_15106__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46408__pinl_15106__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46408__pinl_15106__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46408__pinl_15106__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46408__pinl_15106__flat_421__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46408__pinl_15106__flat_421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46408__pinl_15106__flat_421__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46408__pinl_15106__flat_421__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_46408__pinl_15106__flat_421__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46408__pinl_15106__flat_421__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46411__pinl_15108_new_shape__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46408__pinl_15106__flat_421__desc) & (-1 ^ (3))))[4]) = SACp_emal_46408__pinl_15106__flat_421__sz = SAC_size * SACp_emal_46411__pinl_15108_new_shape__sz;
      if (!((SACp_emal_46408__pinl_15106__flat_421__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5258 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5258 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5258 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5258 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5258 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5258 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5258 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5258, __extension__ __PRETTY_FUNCTION__); }))
# 5258 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46408__pinl_15106__flat_421 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46408__pinl_15106__flat_421__sz * sizeof (*SACp_emal_46408__pinl_15106__flat_421)); break; case SAC_HM_multi_threaded: SACp_emal_46408__pinl_15106__flat_421 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46408__pinl_15106__flat_421__sz * sizeof (*SACp_emal_46408__pinl_15106__flat_421), 0); break; case SAC_HM_any_threaded: SACp_emal_46408__pinl_15106__flat_421 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46408__pinl_15106__flat_421__sz * sizeof (*SACp_emal_46408__pinl_15106__flat_421), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46408__pinl_15106__flat_421__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46408__pinl_15106__flat_421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46408__pinl_15106__flat_421__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_46408__pinl_15106__flat_421__sz; SAC_i++) { { SACp_emal_46408__pinl_15106__flat_421[SAC_i] = (0) * (( SACp_emal_46411__pinl_15108_new_shape[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46408__pinl_15106__flat_421__sz; SAC_i++) { if (( SACp_emal_46408__pinl_15106__flat_421[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Non-negativity constraint violated " "for vector " "SACp_emal_46408__pinl_15106__flat_421"); } { SACp_emal_46407__pinl_15126__icc_6022_pred = ( SACp_emal_46408__pinl_15106__flat_421[SAC_i]); }; } SACp_emal_46407__pinl_15126__icc_6022_pred = SAC_all; }
        if (SACp_emal_46408__pinl_15106__flat_421__dim != SACp_emal_46411__pinl_15108_new_shape__dim) {
      SACp_emal_46406__pinl_15128__icc_6024_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Arrays `" "SACp_emal_46408__pinl_15106__flat_421""' with shape %s ""And `" "SACp_emal_46411__pinl_15108_new_shape""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_46408__pinl_15106__flat_421__desc), SAC_PrintShape (SACp_emal_46411__pinl_15108_new_shape__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_46408__pinl_15106__flat_421__shp0 != SACp_emal_46411__pinl_15108_new_shape__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Arrays `" "SACp_emal_46408__pinl_15106__flat_421""' with shape %s ""And `" "SACp_emal_46411__pinl_15108_new_shape""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_46408__pinl_15106__flat_421__desc), SAC_PrintShape (SACp_emal_46411__pinl_15108_new_shape__desc));
      }
      SACp_emal_46406__pinl_15128__icc_6024_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46408__pinl_15106__flat_421__sz && SAC_i < SACp_emal_46411__pinl_15108_new_shape__sz; SAC_i++) { if (( SACp_emal_46408__pinl_15106__flat_421[SAC_i]) > ( SACp_emal_46411__pinl_15108_new_shape[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Vector constraint `" "SACp_emal_46408__pinl_15106__flat_421" " < " "SACp_emal_46411__pinl_15108_new_shape" "' violated"); } } SACp_emal_46405__pinl_15131__icc_6025_pred = SAC_all; }
    if (!SACp_emal_46409__pinl_15124__icc_6028_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46405__pinl_15131__icc_6025_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46406__pinl_15128__icc_6024_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46410__pinl_15117__icc_6023_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46407__pinl_15126__icc_6022_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    { { if (!((1 == SACp_pinl_15082_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_15082_iv"); }; { if ((((6 + (SACp_pinl_15082_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_15082_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_15082_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_15082_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_15082_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_15082_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_15082_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_15082_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_15082_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_15082_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_15082_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_15082_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_15082_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_15082_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_15082_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_15082_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_15082_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15082_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15082_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15082_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_15082_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_15082_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15082_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46413__pinl_15148__icc_7742__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15082_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_15082_iv__sz = SAC_size * SACp_emal_46413__pinl_15148__icc_7742__sz;
      if (!((SACp_pinl_15082_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5295 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5295 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5295 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5295 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5295 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5295 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5295 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5295, __extension__ __PRETTY_FUNCTION__); }))
# 5295 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_pinl_15082_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_15082_iv__sz * sizeof (*SACp_pinl_15082_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_15082_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_15082_iv__sz * sizeof (*SACp_pinl_15082_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_15082_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_15082_iv__sz * sizeof (*SACp_pinl_15082_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15082_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15082_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15082_iv__desc) & (-1 ^ (3))))[1]) = 0; } }



    { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_pinl_15076__icc_6062"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5299 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5299 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5299 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5299 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5299 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5299 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5299 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5299, __extension__ __PRETTY_FUNCTION__); }))
# 5299 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_pinl_15076__icc_6062__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_pinl_15076__icc_6062__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_pinl_15076__icc_6062__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15076__icc_6062__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15076__icc_6062__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15076__icc_6062__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15076__icc_6062__desc) & (-1 ^ (3))))[3]) = SACp_pinl_15076__icc_6062__dim = 0; }
    { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15076__icc_6062__desc) & (-1 ^ (3))))[0]) = 1; }
    SACp_pinl_15076__icc_6062__sz = 1;
    SACp_pinl_15076__icc_6062__dim = 0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15076__icc_6062__desc) & (-1 ^ (3))))[4]) = 1;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15076__icc_6062__desc) & (-1 ^ (3))))[3]) = 0;
    { { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5305 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5305 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5305 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5305 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5305 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5305 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5305 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5305, __extension__ __PRETTY_FUNCTION__); }))
# 5305 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_pinl_15076__icc_6062 = (
# 5305 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5305 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_pinl_15076__icc_6062__sz * sizeof (*SACp_pinl_15076__icc_6062)); break; case SAC_HM_multi_threaded: SACp_pinl_15076__icc_6062 = (
# 5305 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5305 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_15076__icc_6062__sz * sizeof (*SACp_pinl_15076__icc_6062), 0); break; case SAC_HM_any_threaded: SACp_pinl_15076__icc_6062 = (
# 5305 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5305 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_pinl_15076__icc_6062__sz * sizeof (*SACp_pinl_15076__icc_6062), 0); break; } } } { SACp_pinl_15076__icc_6062[0] = SACp_emal_46507__pinl_9505__icc_3388_pred; } }

    { int SAC_d = 0; int SAC_max_d = SACp_pinl_15082_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_15082_iv[SAC_d] = ( SACp_emal_46413__pinl_15148__icc_7742[SAC_d]); SAC_within_bounds = SAC_within_bounds && ( ( SACp_emal_46413__pinl_15148__icc_7742[SAC_d]) < ( SACp_emal_46423__isaa_35411__flat_57[SAC_d]) ); SAC_d++; }
    while (SAC_within_bounds) { SAC_in_gen = 1;
    if (SAC_in_gen) {
    ;
    { { if (!(((SACp_emal_46411__pinl_15108_new_shape__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_46396__pinl_15099__icc_6040"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5312 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5312 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5312 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5312 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5312 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5312 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5312 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5312, __extension__ __PRETTY_FUNCTION__); }))
# 5312 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46396__pinl_15099__icc_6040__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_46411__pinl_15108_new_shape__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_46396__pinl_15099__icc_6040__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_46411__pinl_15108_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_46396__pinl_15099__icc_6040__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_46411__pinl_15108_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[3]) = SACp_emal_46396__pinl_15099__icc_6040__dim = (SACp_emal_46411__pinl_15108_new_shape__sz) + (0); }



   
    if (!((SACp_emal_46411__pinl_15108_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_46396__pinl_15099__icc_6040__dim == SACp_emal_46411__pinl_15108_new_shape__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_46411__pinl_15108_new_shape__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_46411__pinl_15108_new_shape[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[4]) = SACp_emal_46396__pinl_15099__icc_6040__sz = SAC_size;
      if (!((SACp_emal_46396__pinl_15099__icc_6040__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5332 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5332 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5332 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5332 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5332 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5332 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5332 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5332, __extension__ __PRETTY_FUNCTION__); }))
# 5332 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46396__pinl_15099__icc_6040 = (
# 5332 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5332 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_46396__pinl_15099__icc_6040__sz * sizeof (*SACp_emal_46396__pinl_15099__icc_6040)); break; case SAC_HM_multi_threaded: SACp_emal_46396__pinl_15099__icc_6040 = (
# 5332 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5332 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46396__pinl_15099__icc_6040__sz * sizeof (*SACp_emal_46396__pinl_15099__icc_6040), 0); break; case SAC_HM_any_threaded: SACp_emal_46396__pinl_15099__icc_6040 = (
# 5332 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5332 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_46396__pinl_15099__icc_6040__sz * sizeof (*SACp_emal_46396__pinl_15099__icc_6040), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_15109_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_15109_iv"); }; { if ((((6 + (SACp_pinl_15109_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_15109_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_15109_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_15109_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_15109_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_15109_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_15109_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_15109_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_15109_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_15109_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_15109_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_15109_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_15109_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_15109_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_15109_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_15109_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_15109_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15109_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15109_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15109_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_15109_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_15109_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15109_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46408__pinl_15106__flat_421__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15109_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_15109_iv__sz = SAC_size * SACp_emal_46408__pinl_15106__flat_421__sz;
      if (!((SACp_pinl_15109_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5347 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5347 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5347 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5347 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5347 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5347 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5347 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5347, __extension__ __PRETTY_FUNCTION__); }))
# 5347 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_pinl_15109_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_15109_iv__sz * sizeof (*SACp_pinl_15109_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_15109_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_15109_iv__sz * sizeof (*SACp_pinl_15109_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_15109_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_15109_iv__sz * sizeof (*SACp_pinl_15109_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15109_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15109_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15109_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_15109_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_15109_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_46396__pinl_15099__icc_6040__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_46396__pinl_15099__icc_6040_shpfac0; SAC_d = SACp_emal_46396__pinl_15099__icc_6040__dim - 1; SACp_wlidx_45660__pinl_15099__icc_6040 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_46396__pinl_15099__icc_6040_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_46408__pinl_15106__flat_421[SAC_d]) <= ( SACp_pinl_15109_iv[SAC_d])) && (( SACp_pinl_15109_iv[SAC_d]) < ( SACp_emal_46411__pinl_15108_new_shape[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!((1 == SACp_emal_46402__pinl_15110_new_idx__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46402__pinl_15110_new_idx"); }; { if ((((6 + (SACp_emal_46402__pinl_15110_new_idx__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46402__pinl_15110_new_idx__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46402__pinl_15110_new_idx__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46402__pinl_15110_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46402__pinl_15110_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46402__pinl_15110_new_idx__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46402__pinl_15110_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46402__pinl_15110_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46402__pinl_15110_new_idx__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46402__pinl_15110_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46402__pinl_15110_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46402__pinl_15110_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46402__pinl_15110_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46402__pinl_15110_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46402__pinl_15110_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46402__pinl_15110_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46402__pinl_15110_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46402__pinl_15110_new_idx__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46402__pinl_15110_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46402__pinl_15110_new_idx__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_pinl_15082_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_pinl_15109_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_46402__pinl_15110_new_idx__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46402__pinl_15110_new_idx__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46402__pinl_15110_new_idx__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_15082_iv__sz + SACp_pinl_15109_iv__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46402__pinl_15110_new_idx__desc) & (-1 ^ (3))))[4]) = SACp_emal_46402__pinl_15110_new_idx__sz = SAC_size;
      if (!((SACp_emal_46402__pinl_15110_new_idx__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5380 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5380 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5380 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5380 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5380 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5380 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5380 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5380, __extension__ __PRETTY_FUNCTION__); }))
# 5380 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46402__pinl_15110_new_idx = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46402__pinl_15110_new_idx__sz * sizeof (*SACp_emal_46402__pinl_15110_new_idx)); break; case SAC_HM_multi_threaded: SACp_emal_46402__pinl_15110_new_idx = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46402__pinl_15110_new_idx__sz * sizeof (*SACp_emal_46402__pinl_15110_new_idx), 0); break; case SAC_HM_any_threaded: SACp_emal_46402__pinl_15110_new_idx = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46402__pinl_15110_new_idx__sz * sizeof (*SACp_emal_46402__pinl_15110_new_idx), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46402__pinl_15110_new_idx__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46402__pinl_15110_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46402__pinl_15110_new_idx__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACp_pinl_15082_iv__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_46402__pinl_15110_new_idx[SAC_i] = ( SACp_pinl_15082_iv[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_pinl_15109_iv__sz; SAC_i++) { { SACp_emal_46402__pinl_15110_new_idx[SAC_off + SAC_i] = ( SACp_pinl_15109_iv[SAC_i]); }; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }
    if ((SACp_emal_46402__pinl_15110_new_idx__dim == 1) && (SACp_emal_46402__pinl_15110_new_idx__shp0 == SACp_flat_57__dim)) { SACp_emal_46401__pinl_15133__icc_6029_pred = 1; } else { SACp_emal_46401__pinl_15133__icc_6029_pred = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays " "SACp_emal_46402__pinl_15110_new_idx" " and " "SACp_flat_57" " do not adhere to shape matches dim constraint"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46402__pinl_15110_new_idx__sz; SAC_i++) { if (( SACp_emal_46402__pinl_15110_new_idx[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Non-negativity constraint violated " "for vector " "SACp_emal_46402__pinl_15110_new_idx"); } { SACp_emal_46400__pinl_15135__icc_6030_pred = ( SACp_emal_46402__pinl_15110_new_idx[SAC_i]); }; } SACp_emal_46400__pinl_15135__icc_6030_pred = SAC_all; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }



    if ((SACp_emal_46402__pinl_15110_new_idx__dim != 1) && (SACp_emal_46402__pinl_15110_new_idx__shp0 != SACp_flat_57__dim)) {
      SACp_emal_46399__pinl_15137__icc_6031_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays `" "SACp_emal_46402__pinl_15110_new_idx""' with shape %s ""And `" "SACp_flat_57""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_46402__pinl_15110_new_idx__desc), SAC_PrintShape (SACp_flat_57__desc));
    }
    else {
      int SAC_all = 1; for (int SAC_i = 0; SAC_i < SACp_flat_57__dim; SAC_i++) {
        if (( SACp_emal_46402__pinl_15110_new_idx[SAC_i]) >= (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_57__desc) & (-1 ^ (3))))[(6 + (SAC_i))])) {
          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays `" "SACp_emal_46402__pinl_15110_new_idx""' with shape %s ""And `" "SACp_flat_57""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_46402__pinl_15110_new_idx__desc), SAC_PrintShape (SACp_flat_57__desc));
        }
      }
      SACp_emal_46399__pinl_15137__icc_6031_pred = SAC_all;
    }

    if (!SACp_emal_46399__pinl_15137__icc_6031_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_46400__pinl_15135__icc_6030_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_46401__pinl_15133__icc_6029_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
    ;

    }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      for (SAC_i = 0; SAC_i < SACp_emal_46402__pinl_15110_new_idx__sz; SAC_i++)
      {

        SAC_l = ( SACp_emal_46423__isaa_35411__flat_57[SAC_i]) * SAC_l + ( SACp_emal_46402__pinl_15110_new_idx[SAC_i]);
      }
      for (SAC_i = SACp_emal_46402__pinl_15110_new_idx__sz; SAC_i < SACp_emal_46423__isaa_35411__flat_57__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_46423__isaa_35411__flat_57[SAC_i]);
      }
      SACp_emal_46398__ivesli_45699 = SAC_l;
    }

    { { free (SACp_emal_46402__pinl_15110_new_idx); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46402__pinl_15110_new_idx__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46397__pinl_15095__icc_6034 = ( SACp_flat_57[SACp_emal_46398__ivesli_45699]); }

    { ; ; }
    if (!SACp_emal_46399__pinl_15137__icc_6031_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_46400__pinl_15135__icc_6030_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_46401__pinl_15133__icc_6029_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_46396__pinl_15099__icc_6040__dim - SACp_pinl_15109_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3641, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_46396__pinl_15099__icc_6040_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3641, "WL expression with illegal size found!"); };
    { SACp_emal_46396__pinl_15099__icc_6040[SACp_wlidx_45660__pinl_15099__icc_6040] = SACp_emal_46397__pinl_15095__icc_6034; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_46396__pinl_15099__icc_6040__dim - SACp_pinl_15109_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_46396__pinl_15099__icc_6040_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "WL expression with illegal size found!"); };
    { SACp_emal_46396__pinl_15099__icc_6040[SACp_wlidx_45660__pinl_15099__icc_6040] = SACp_emal_46498__pinl_11272__flat_420; };

    }
    SACp_wlidx_45660__pinl_15099__icc_6040 = SACp_wlidx_45660__pinl_15099__icc_6040 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_15109_iv[SAC_d] = ( SACp_pinl_15109_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_15109_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_15109_iv[SAC_d] = 0; SAC_d--; SACp_pinl_15109_iv[SAC_d] = ( SACp_pinl_15109_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_15109_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46396__pinl_15099__icc_6040__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_15109_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15109_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_46409__pinl_15124__icc_6028_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46405__pinl_15131__icc_6025_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46406__pinl_15128__icc_6024_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46410__pinl_15117__icc_6023_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46407__pinl_15126__icc_6022_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }



    SACwf_ArrayArith___AM__bl_S__bl_S (&SACp_pinl_15089__ea_8076__flat_6601, &SACp_pinl_15089__ea_8076__flat_6601__desc, SACp_pinl_15076__icc_6062, SACp_pinl_15076__icc_6062__desc, SACp_emal_46396__pinl_15099__icc_6040, SACp_emal_46396__pinl_15099__icc_6040__desc);




    SACp_pinl_15089__ea_8076__flat_6601__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15089__ea_8076__flat_6601__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_15089__ea_8076__flat_6601__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15089__ea_8076__flat_6601__desc) & (-1 ^ (3))))[3]);




    ;




    SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601__desc = SACp_pinl_15089__ea_8076__flat_6601__desc;
    SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601__sz = SACp_pinl_15089__ea_8076__flat_6601__sz;
    SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601__dim = SACp_pinl_15089__ea_8076__flat_6601__dim;
    ;
    { SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601 = SACp_pinl_15089__ea_8076__flat_6601; }




    SACp_pinl_15076__icc_6062__desc = SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601__desc;
    SACp_pinl_15076__icc_6062__sz = SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601__sz;
    SACp_pinl_15076__icc_6062__dim = SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601__dim;
    ;
    { SACp_pinl_15076__icc_6062 = SACp_ufiv_46267__pinl_15089__ea_8076__flat_6601; }

    }
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_15082_iv[SAC_d] = ( SACp_pinl_15082_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_15082_iv[SAC_d]) == ( SACp_emal_46423__isaa_35411__flat_57[SAC_d]))) { SACp_pinl_15082_iv[SAC_d] = ( SACp_emal_46413__pinl_15148__icc_7742[SAC_d]); SAC_d--; SACp_pinl_15082_iv[SAC_d] = ( SACp_pinl_15082_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_15082_iv[SAC_d]) < ( SACp_emal_46423__isaa_35411__flat_57[SAC_d]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_emal_46413__pinl_15148__icc_7742); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46413__pinl_15148__icc_7742__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_flat_57); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_flat_57__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_pinl_15082_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15082_iv__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_46408__pinl_15106__flat_421); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46408__pinl_15106__flat_421__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_46411__pinl_15108_new_shape); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46411__pinl_15108_new_shape__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_46423__isaa_35411__flat_57); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46423__isaa_35411__flat_57__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_46421__pinl_15084__icc_6059_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    if (!SACp_emal_46412__pinl_15086__icc_6058_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { if (!((SACp_pinl_15076__icc_6062__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_46395__flat_56 = ( SACp_pinl_15076__icc_6062[0]); } }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15076__icc_6062__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_15076__icc_6062); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15076__icc_6062__desc) & (-1 ^ (3))))); } } } } else { } }



    SACf_ScalarIO__print__bl (SACp_emal_46395__flat_56);




    if (!((_tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__dim == (2)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__desc = SACp_emal_46503__pinl_9546__icc_7613__desc;
    _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__shp0 = SACp_emal_46503__pinl_9546__icc_7613__shp0;
    _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__shp1 = SACp_emal_46503__pinl_9546__icc_7613__shp1;
    _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__sz = SACp_emal_46503__pinl_9546__icc_7613__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46503__pinl_9546__icc_7613__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_46503__pinl_9546__icc_7613__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[4]) = SACp_emal_46503__pinl_9546__icc_7613__sz;
    { _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613 = SACp_emal_46503__pinl_9546__icc_7613; }




    SACf__MAIN___rtpf_8_impl_block__i_X_X__i_0 (&SACp_pinl_15863__rtpf_10_res, &SACp_pinl_15863__rtpf_10_res__desc, _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613, _tcp_48012_SACp_emal_46503__pinl_9546__icc_7613__desc);




    SACp_pinl_15863__rtpf_10_res__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15863__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (0))]);
    SACp_pinl_15863__rtpf_10_res__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15863__rtpf_10_res__desc) & (-1 ^ (3))))[(6 + (1))]);
    SACp_pinl_15863__rtpf_10_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15863__rtpf_10_res__desc) & (-1 ^ (3))))[4]);

    { { if (!((1 == SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res"); }; { { if ((((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res)) + ((6 + (SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res)) + ((6 + (SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res)) + ((6 + (SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res)) + ((6 + (SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res)) + ((6 + (SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res)) + ((6 + (SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res)) + ((6 + (SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res)) + ((6 + (SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res)) + ((6 + (SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res, SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res), ((6 + (SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res[0] = SACp_pinl_15863__rtpf_10_res__shp0; };
    { SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res[1] = SACp_pinl_15863__rtpf_10_res__shp1; };




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46393__uprf_34249 = ( SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46392__uprf_34254 = ( SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res[SACp_emal_46499__pinl_11445__eat_340__SSA7_1]); }

    { { { if (((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res) - 1)->data1.arena)); } else { if (SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res) - 1)->data1.arena)); } } else { if (((((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res) - 1)->data1.arena)); } else { if (((((SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__sz * sizeof (*SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res, ((((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46394__isaa_35470__pinl_15863__rtpf_10_res__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46391__esd_39554 = (-20) + (SACp_emal_46393__uprf_34249); };
    ; ; { SACp_emal_46390__uprf_34242 = (SACp_emal_46391__esd_39554) == (0); };
    { ; ; }
    ; ; { SACp_emal_46389__esd_39553 = (-12) + (SACp_emal_46392__uprf_34254); };
    ; ; { SACp_emal_46388__uprf_34245 = (SACp_emal_46389__esd_39553) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_46387__pinl_15874__icc_3186__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46387__pinl_15874__icc_3186"); }; { { if ((((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186)) + ((6 + (SACp_emal_46387__pinl_15874__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186)) + ((6 + (SACp_emal_46387__pinl_15874__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186)) + ((6 + (SACp_emal_46387__pinl_15874__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46387__pinl_15874__icc_3186 = (
# 5628 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46387__pinl_15874__icc_3186 = (
# 5628 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186)) + ((6 + (SACp_emal_46387__pinl_15874__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46387__pinl_15874__icc_3186 = (
# 5628 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46387__pinl_15874__icc_3186 = (
# 5628 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186)) + ((6 + (SACp_emal_46387__pinl_15874__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186)) + ((6 + (SACp_emal_46387__pinl_15874__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186)) + ((6 + (SACp_emal_46387__pinl_15874__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186)) + ((6 + (SACp_emal_46387__pinl_15874__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186)) + ((6 + (SACp_emal_46387__pinl_15874__icc_3186__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46387__pinl_15874__icc_3186 = (
# 5628 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46387__pinl_15874__icc_3186 = (
# 5628 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46387__pinl_15874__icc_3186 = (
# 5628 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46387__pinl_15874__icc_3186 = (
# 5628 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46387__pinl_15874__icc_3186__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186, SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186), ((6 + (SACp_emal_46387__pinl_15874__icc_3186__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46387__pinl_15874__icc_3186__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46387__pinl_15874__icc_3186__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46387__pinl_15874__icc_3186__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46387__pinl_15874__icc_3186__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46387__pinl_15874__icc_3186__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46387__pinl_15874__icc_3186[0] = SACp_emal_46390__uprf_34242; }
    { SACp_emal_46387__pinl_15874__icc_3186[1] = SACp_emal_46388__uprf_34245; }

    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46387__pinl_15874__icc_3186__sz; SAC_i++) { if (( SACp_emal_46387__pinl_15874__icc_3186[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_46386__pinl_15890__flat_125 = SAC_all; }
    { { { if (((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186, ((((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186) - 1)->data1.arena)); } else { if (SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186, ((((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186, ((((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186) - 1)->data1.arena)); } } else { if (((((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186, ((((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186) - 1)->data1.arena)); } else { if (((((SACp_emal_46387__pinl_15874__icc_3186__sz * sizeof (*SACp_emal_46387__pinl_15874__icc_3186))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186, ((((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46387__pinl_15874__icc_3186); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46387__pinl_15874__icc_3186__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_46386__pinl_15890__flat_125)
    {
      ;
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_15912__hce_31 = SACp_emal_46507__pinl_9505__icc_3388_pred; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Type pattern error in application of block: feature `id:ishp' in return value does not match feature `ishp' in a"); SACp_pinl_47983__emal_46513__hce_31__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_15912__hce_31 = SACp_pinl_47983__emal_46513__hce_31__SSA0_1; }

    }
    if (!SACp_pinl_15912__hce_31) { SAC_RuntimeErrorLoc ("./week4.sac", 36, 1, "Type pattern post-condition of block failed"); }
    ;



    SACp_flat_66__desc = SACp_pinl_15863__rtpf_10_res__desc;
    SACp_flat_66__sz = SACp_pinl_15863__rtpf_10_res__sz;
    SACp_flat_66__dim = SACp_pinl_15863__rtpf_10_res__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_66__desc) & (-1 ^ (3))))[3]) = SACp_pinl_15863__rtpf_10_res__dim;
    { SACp_flat_66 = SACp_pinl_15863__rtpf_10_res; }




    SACf__MAIN___rtpf_15_impl_unblock__i_S__i (&SACp_pinl_16522__rtpf_17_res, &SACp_pinl_16522__rtpf_17_res__desc, SACp_flat_66, SACp_flat_66__desc, SACp_emal_46508__isaa_35265__rso_285_TheWorld);




    SACp_pinl_16522__rtpf_17_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_16522__rtpf_17_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_46385__isaa_35477__pinl_16522__rtpf_17_res = SACp_pinl_16522__rtpf_17_res__dim; }; }
    { { if (!((1 == SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res"); }; { if ((((6 + (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_16522__rtpf_17_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__sz = SAC_size;
      if (!((SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5721 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5721 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5721 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5721 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5721 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5721 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5721 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5721, __extension__ __PRETTY_FUNCTION__); }))
# 5721 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__sz * sizeof (*SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res)); break; case SAC_HM_multi_threaded: SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__sz * sizeof (*SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res), 0); break; case SAC_HM_any_threaded: SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__sz * sizeof (*SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_16522__rtpf_17_res__dim; SAC_i++) {
      { SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; ; { SACp_emal_46385__isaa_35477__pinl_16522__rtpf_17_res = (2) - (SACp_emal_46385__isaa_35477__pinl_16522__rtpf_17_res); };
    ; ; { SACp_emal_46382__pinl_16540__flat_248 = (SACp_emal_46385__isaa_35477__pinl_16522__rtpf_17_res) == (0); };
    { ; ; }
    if (SACp_emal_46382__pinl_16540__flat_248)
    {
      { { SACp_pinl_47986__emal_46511__hce_40 = 
# 5735 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     1
# 5735 "/home/rubenhensen/sac/hw/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_16560__hce_40 = SACp_pinl_47986__emal_46511__hce_40; }

    }
    else
    {
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern error in application of unblock: feature `id:ishp' in return value does not match feature `id' in a"); SACp_pinl_47987__emal_46512__hce_40__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_16560__hce_40 = SACp_pinl_47987__emal_46512__hce_40__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_46381__pinl_16545__flat_253__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46381__pinl_16545__flat_253"); }; { { if ((((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253)) + ((6 + (SACp_emal_46381__pinl_16545__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253)) + ((6 + (SACp_emal_46381__pinl_16545__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253)) + ((6 + (SACp_emal_46381__pinl_16545__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46381__pinl_16545__flat_253 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46381__pinl_16545__flat_253 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253)) + ((6 + (SACp_emal_46381__pinl_16545__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46381__pinl_16545__flat_253 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46381__pinl_16545__flat_253 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253)) + ((6 + (SACp_emal_46381__pinl_16545__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253)) + ((6 + (SACp_emal_46381__pinl_16545__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253)) + ((6 + (SACp_emal_46381__pinl_16545__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253)) + ((6 + (SACp_emal_46381__pinl_16545__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253)) + ((6 + (SACp_emal_46381__pinl_16545__flat_253__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46381__pinl_16545__flat_253 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46381__pinl_16545__flat_253 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46381__pinl_16545__flat_253 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46381__pinl_16545__flat_253 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46381__pinl_16545__flat_253__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253, SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253), ((6 + (SACp_emal_46381__pinl_16545__flat_253__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46381__pinl_16545__flat_253__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46381__pinl_16545__flat_253__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46381__pinl_16545__flat_253__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46381__pinl_16545__flat_253__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46381__pinl_16545__flat_253__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 5774 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 5774 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_cnt = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46381__pinl_16545__flat_253[SAC_i] = ( SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46384__isaa_35478__pinl_16522__rtpf_17_res__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46380__uprf_40362 = ( SACp_emal_46381__pinl_16545__flat_253[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46379__uprf_40367 = ( SACp_emal_46381__pinl_16545__flat_253[SACp_emal_46499__pinl_11445__eat_340__SSA7_1]); }

    { { { if (((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253, ((((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253) - 1)->data1.arena)); } else { if (SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253, ((((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253, ((((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253) - 1)->data1.arena)); } } else { if (((((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253, ((((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253) - 1)->data1.arena)); } else { if (((((SACp_emal_46381__pinl_16545__flat_253__sz * sizeof (*SACp_emal_46381__pinl_16545__flat_253))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253, ((((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46381__pinl_16545__flat_253); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46381__pinl_16545__flat_253__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46380__uprf_40362 = (SACp_emal_46380__uprf_40362) - (SACp_emal_46393__uprf_34249); };
    { ; ; }
    ; ; { SACp_emal_46377__uprf_40355 = (SACp_emal_46380__uprf_40362) == (0); };
    { ; ; }
    ; ; { SACp_emal_46379__uprf_40367 = (SACp_emal_46379__uprf_40367) - (SACp_emal_46392__uprf_34254); };
    { ; ; }
    ; ; { SACp_emal_46375__uprf_40358 = (SACp_emal_46379__uprf_40367) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_46374__pinl_16530__icc_3350__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46374__pinl_16530__icc_3350"); }; { { if ((((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350)) + ((6 + (SACp_emal_46374__pinl_16530__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350)) + ((6 + (SACp_emal_46374__pinl_16530__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350)) + ((6 + (SACp_emal_46374__pinl_16530__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46374__pinl_16530__icc_3350 = (
# 5830 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46374__pinl_16530__icc_3350 = (
# 5830 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350)) + ((6 + (SACp_emal_46374__pinl_16530__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46374__pinl_16530__icc_3350 = (
# 5830 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46374__pinl_16530__icc_3350 = (
# 5830 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350)) + ((6 + (SACp_emal_46374__pinl_16530__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350)) + ((6 + (SACp_emal_46374__pinl_16530__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350)) + ((6 + (SACp_emal_46374__pinl_16530__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350)) + ((6 + (SACp_emal_46374__pinl_16530__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350)) + ((6 + (SACp_emal_46374__pinl_16530__icc_3350__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46374__pinl_16530__icc_3350 = (
# 5830 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46374__pinl_16530__icc_3350 = (
# 5830 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46374__pinl_16530__icc_3350 = (
# 5830 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46374__pinl_16530__icc_3350 = (
# 5830 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46374__pinl_16530__icc_3350__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350, SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350), ((6 + (SACp_emal_46374__pinl_16530__icc_3350__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46374__pinl_16530__icc_3350__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46374__pinl_16530__icc_3350__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46374__pinl_16530__icc_3350__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46374__pinl_16530__icc_3350__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46374__pinl_16530__icc_3350__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46374__pinl_16530__icc_3350[0] = SACp_emal_46377__uprf_40355; }
    { SACp_emal_46374__pinl_16530__icc_3350[1] = SACp_emal_46375__uprf_40358; }

    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46374__pinl_16530__icc_3350__sz; SAC_i++) { if (( SACp_emal_46374__pinl_16530__icc_3350[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_46373__pinl_16543__flat_251 = SAC_all; }
    { { { if (((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350, ((((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350) - 1)->data1.arena)); } else { if (SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350, ((((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350, ((((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350) - 1)->data1.arena)); } } else { if (((((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350, ((((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350) - 1)->data1.arena)); } else { if (((((SACp_emal_46374__pinl_16530__icc_3350__sz * sizeof (*SACp_emal_46374__pinl_16530__icc_3350))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350, ((((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46374__pinl_16530__icc_3350); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46374__pinl_16530__icc_3350__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_46373__pinl_16543__flat_251)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_16561__hce_39 = SACp_pinl_16560__hce_40; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern error in application of unblock: feature `id:ishp' in return value does not match feature `ishp' in a"); SACp_pinl_47989__emal_46510__hce_39__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_16561__hce_39 = SACp_pinl_47989__emal_46510__hce_39__SSA0_1; }

    }
    if (SACp_emal_46382__pinl_16540__flat_248)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_16562__hce_38 = SACp_pinl_16561__hce_39; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Type pattern error in application of unblock: feature `od:shp' in return value does not match argument od"); SACp_pinl_47991__emal_46509__hce_38__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_16562__hce_38 = SACp_pinl_47991__emal_46509__hce_38__SSA0_1; }

    }
    if (!SACp_pinl_16562__hce_38) { SAC_RuntimeErrorLoc ("./week4.sac", 43, 1, "Type pattern post-condition of unblock failed"); }
    ;



    _tcp_48011_SACp_emal_46503__pinl_9546__icc_7613__desc = SACp_emal_46503__pinl_9546__icc_7613__desc;
    _tcp_48011_SACp_emal_46503__pinl_9546__icc_7613__sz = SACp_emal_46503__pinl_9546__icc_7613__sz;
    _tcp_48011_SACp_emal_46503__pinl_9546__icc_7613__dim = SACp_emal_46503__pinl_9546__icc_7613__dim;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48011_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46503__pinl_9546__icc_7613__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48011_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_46503__pinl_9546__icc_7613__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48011_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[4]) = SACp_emal_46503__pinl_9546__icc_7613__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48011_SACp_emal_46503__pinl_9546__icc_7613__desc) & (-1 ^ (3))))[3]) = SACp_emal_46503__pinl_9546__icc_7613__dim;
    { _tcp_48011_SACp_emal_46503__pinl_9546__icc_7613 = SACp_emal_46503__pinl_9546__icc_7613; }




    SACwf__MAIN_CLArray___EQ_EQ__i_S__i_S (&SACp_flat_64, &SACp_flat_64__desc, SACp_pinl_16522__rtpf_17_res, SACp_pinl_16522__rtpf_17_res__desc, _tcp_48011_SACp_emal_46503__pinl_9546__icc_7613, _tcp_48011_SACp_emal_46503__pinl_9546__icc_7613__desc);




    SACp_flat_64__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_64__desc) & (-1 ^ (3))))[4]);
    SACp_flat_64__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_64__desc) & (-1 ^ (3))))[3]);

    { { SACp_emal_46372__isaa_35504__flat_64 = SACp_flat_64__dim; }; }
    { { if (!((1 == SACp_emal_46371__isaa_35505__flat_64__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46371__isaa_35505__flat_64"); }; { if ((((6 + (SACp_emal_46371__isaa_35505__flat_64__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46371__isaa_35505__flat_64__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46371__isaa_35505__flat_64__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46371__isaa_35505__flat_64__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46371__isaa_35505__flat_64__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46371__isaa_35505__flat_64__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46371__isaa_35505__flat_64__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46371__isaa_35505__flat_64__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46371__isaa_35505__flat_64__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46371__isaa_35505__flat_64__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46371__isaa_35505__flat_64__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46371__isaa_35505__flat_64__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46371__isaa_35505__flat_64__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46371__isaa_35505__flat_64__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46371__isaa_35505__flat_64__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46371__isaa_35505__flat_64__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46371__isaa_35505__flat_64__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46371__isaa_35505__flat_64__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46371__isaa_35505__flat_64__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46371__isaa_35505__flat_64__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46371__isaa_35505__flat_64__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 22, 17, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46371__isaa_35505__flat_64__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46371__isaa_35505__flat_64__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_flat_64__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46371__isaa_35505__flat_64__desc) & (-1 ^ (3))))[4]) = SACp_emal_46371__isaa_35505__flat_64__sz = SAC_size;
      if (!((SACp_emal_46371__isaa_35505__flat_64__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 22, 17, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5946 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 5946 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5946 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5946 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5946 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 5946 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5946 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 5946, __extension__ __PRETTY_FUNCTION__); }))
# 5946 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46371__isaa_35505__flat_64 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46371__isaa_35505__flat_64__sz * sizeof (*SACp_emal_46371__isaa_35505__flat_64)); break; case SAC_HM_multi_threaded: SACp_emal_46371__isaa_35505__flat_64 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46371__isaa_35505__flat_64__sz * sizeof (*SACp_emal_46371__isaa_35505__flat_64), 0); break; case SAC_HM_any_threaded: SACp_emal_46371__isaa_35505__flat_64 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46371__isaa_35505__flat_64__sz * sizeof (*SACp_emal_46371__isaa_35505__flat_64), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46371__isaa_35505__flat_64__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46371__isaa_35505__flat_64__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46371__isaa_35505__flat_64__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_flat_64__dim; SAC_i++) {
      { SACp_emal_46371__isaa_35505__flat_64[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_64__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { if (!((1 == SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46370__isaa_35507__pinl_17210__flat_283"); }; { { if ((((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283)) + ((6 + (SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283)) + ((6 + (SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283)) + ((6 + (SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46370__isaa_35507__pinl_17210__flat_283 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46370__isaa_35507__pinl_17210__flat_283 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283)) + ((6 + (SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46370__isaa_35507__pinl_17210__flat_283 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46370__isaa_35507__pinl_17210__flat_283 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283)) + ((6 + (SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283)) + ((6 + (SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283)) + ((6 + (SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283)) + ((6 + (SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283)) + ((6 + (SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46370__isaa_35507__pinl_17210__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46370__isaa_35507__pinl_17210__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46370__isaa_35507__pinl_17210__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46370__isaa_35507__pinl_17210__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46370__isaa_35507__pinl_17210__flat_283__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283, SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283), ((6 + (SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46370__isaa_35507__pinl_17210__flat_283__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46370__isaa_35507__pinl_17210__flat_283__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46370__isaa_35507__pinl_17210__flat_283__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 42, 945, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 42, 945, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46370__isaa_35507__pinl_17210__flat_283[0] = SACp_emal_46372__isaa_35504__flat_64; }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46371__isaa_35505__flat_64__sz; SAC_i++) { if (( SACp_emal_46371__isaa_35505__flat_64[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_46371__isaa_35505__flat_64"); } { SACp_emal_46369__pinl_17085__icc_6059_pred = ( SACp_emal_46371__isaa_35505__flat_64[SAC_i]); }; } SACp_emal_46369__pinl_17085__icc_6059_pred = SAC_all; }
    if (SACp_emal_46508__isaa_35265__rso_285_TheWorld <= SACp_emal_46372__isaa_35504__flat_64) { SACp_emal_46368__uprf_24368 = 1; } else { SACp_emal_46368__uprf_24368 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8976, "Scalar constraint `" "SACp_emal_46508__isaa_35265__rso_285_TheWorld" " (" "%d" ") <= " "SACp_emal_46372__isaa_35504__flat_64" " (" "%d" ")" "' violated", SACp_emal_46508__isaa_35265__rso_285_TheWorld, SACp_emal_46372__isaa_35504__flat_64); }
    { ; ; }
    { { SACp_emal_46367__uprf_24367 = SACp_emal_46508__isaa_35265__rso_285_TheWorld; } }
    { { if (!((1 == SACp_emal_46366__pinl_17176__idc_7751__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46366__pinl_17176__idc_7751"); }; { { if ((((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751)) + ((6 + (SACp_emal_46366__pinl_17176__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751)) + ((6 + (SACp_emal_46366__pinl_17176__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751)) + ((6 + (SACp_emal_46366__pinl_17176__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46366__pinl_17176__idc_7751 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46366__pinl_17176__idc_7751 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751)) + ((6 + (SACp_emal_46366__pinl_17176__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46366__pinl_17176__idc_7751 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46366__pinl_17176__idc_7751 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751)) + ((6 + (SACp_emal_46366__pinl_17176__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751)) + ((6 + (SACp_emal_46366__pinl_17176__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751)) + ((6 + (SACp_emal_46366__pinl_17176__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751)) + ((6 + (SACp_emal_46366__pinl_17176__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751)) + ((6 + (SACp_emal_46366__pinl_17176__idc_7751__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46366__pinl_17176__idc_7751 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46366__pinl_17176__idc_7751 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46366__pinl_17176__idc_7751 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46366__pinl_17176__idc_7751 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46366__pinl_17176__idc_7751__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751, SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751), ((6 + (SACp_emal_46366__pinl_17176__idc_7751__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46366__pinl_17176__idc_7751__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46366__pinl_17176__idc_7751__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46366__pinl_17176__idc_7751__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46366__pinl_17176__idc_7751__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46366__pinl_17176__idc_7751__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46366__pinl_17176__idc_7751[0] = SACp_emal_46367__uprf_24367; }

    { ; ; }
    if (!SACp_emal_46368__uprf_24368) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8912, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46365__pinl_24159__icc_5332 = ( SACp_emal_46366__pinl_17176__idc_7751[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    { { { if (((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751, ((((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751) - 1)->data1.arena)); } else { if (SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751, ((((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751, ((((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751) - 1)->data1.arena)); } } else { if (((((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751, ((((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751) - 1)->data1.arena)); } else { if (((((SACp_emal_46366__pinl_17176__idc_7751__sz * sizeof (*SACp_emal_46366__pinl_17176__idc_7751))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751, ((((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46366__pinl_17176__idc_7751); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46366__pinl_17176__idc_7751__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46364__pinl_24162__icc_5338 = ( SACp_emal_46370__isaa_35507__pinl_17210__flat_283[SACp_emal_46508__isaa_35265__rso_285_TheWorld]); }

    { { { if (((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283, ((((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283) - 1)->data1.arena)); } else { if (SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283, ((((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283, ((((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283) - 1)->data1.arena)); } } else { if (((((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283, ((((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283) - 1)->data1.arena)); } else { if (((((SACp_emal_46370__isaa_35507__pinl_17210__flat_283__sz * sizeof (*SACp_emal_46370__isaa_35507__pinl_17210__flat_283))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283, ((((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46370__isaa_35507__pinl_17210__flat_283); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46370__isaa_35507__pinl_17210__flat_283__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_46361__pinl_17149__icc_7742__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46361__pinl_17149__icc_7742"); }; { if ((((6 + (SACp_emal_46361__pinl_17149__icc_7742__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46361__pinl_17149__icc_7742__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46361__pinl_17149__icc_7742__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46361__pinl_17149__icc_7742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46361__pinl_17149__icc_7742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46361__pinl_17149__icc_7742__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46361__pinl_17149__icc_7742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46361__pinl_17149__icc_7742__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46361__pinl_17149__icc_7742__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46361__pinl_17149__icc_7742__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46361__pinl_17149__icc_7742__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46361__pinl_17149__icc_7742__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46361__pinl_17149__icc_7742__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46361__pinl_17149__icc_7742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46361__pinl_17149__icc_7742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46361__pinl_17149__icc_7742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46361__pinl_17149__icc_7742__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46361__pinl_17149__icc_7742__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46361__pinl_17149__icc_7742__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46361__pinl_17149__icc_7742__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46361__pinl_17149__icc_7742__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46361__pinl_17149__icc_7742__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46361__pinl_17149__icc_7742__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46364__pinl_24162__icc_5338;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46361__pinl_17149__icc_7742__desc) & (-1 ^ (3))))[4]) = SACp_emal_46361__pinl_17149__icc_7742__sz = SAC_size;
      if (!((SACp_emal_46361__pinl_17149__icc_7742__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6020 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 6020 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6020 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6020 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6020 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 6020 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6020 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 6020, __extension__ __PRETTY_FUNCTION__); }))
# 6020 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46361__pinl_17149__icc_7742 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46361__pinl_17149__icc_7742__sz * sizeof (*SACp_emal_46361__pinl_17149__icc_7742)); break; case SAC_HM_multi_threaded: SACp_emal_46361__pinl_17149__icc_7742 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46361__pinl_17149__icc_7742__sz * sizeof (*SACp_emal_46361__pinl_17149__icc_7742), 0); break; case SAC_HM_any_threaded: SACp_emal_46361__pinl_17149__icc_7742 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46361__pinl_17149__icc_7742__sz * sizeof (*SACp_emal_46361__pinl_17149__icc_7742), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46361__pinl_17149__icc_7742__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46361__pinl_17149__icc_7742__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46361__pinl_17149__icc_7742__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_46361__pinl_17149__icc_7742_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_46361__pinl_17149__icc_7742_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_46365__pinl_24159__icc_5332;




      SACp_wlidx_45661__pinl_17149__icc_7742
        = SAC_schedule_start0 * SAC_SACp_emal_46361__pinl_17149__icc_7742_shpfac0;

      { int SAC_stop_SACp_pinl_17160__eat_6625 = SACp_emal_46365__pinl_24159__icc_5332; for (SACp_pinl_17160__eat_6625 = 0; SACp_pinl_17160__eat_6625 < SACp_emal_46365__pinl_24159__icc_5332;) {
     



      if (!((0 == (SACp_emal_46361__pinl_17149__icc_7742__dim - SACp_pinl_17158_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46361__pinl_17149__icc_7742_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "WL expression with illegal size found!"); };
      { SACp_emal_46361__pinl_17149__icc_7742[SACp_wlidx_45661__pinl_17149__icc_7742] = SACp_emal_46499__pinl_11445__eat_340__SSA7_1; };

      SACp_wlidx_45661__pinl_17149__icc_7742 = SACp_wlidx_45661__pinl_17149__icc_7742 + 1;
      SACp_pinl_17160__eat_6625 = SACp_pinl_17160__eat_6625 + 1;
      } }
# 6090 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_46365__pinl_24159__icc_5332;
      SAC_schedule_stop0 = SACp_emal_46364__pinl_24162__icc_5338;




      SACp_wlidx_45661__pinl_17149__icc_7742
        = SAC_schedule_start0 * SAC_SACp_emal_46361__pinl_17149__icc_7742_shpfac0;

      { int SAC_stop_SACp_pinl_17160__eat_6625 = SACp_emal_46364__pinl_24162__icc_5338; for (SACp_pinl_17160__eat_6625 = SACp_emal_46365__pinl_24159__icc_5332; SACp_pinl_17160__eat_6625 < SACp_emal_46364__pinl_24162__icc_5338;) {
     



      if (!((0 == (SACp_emal_46361__pinl_17149__icc_7742__dim - SACp_pinl_17158_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46361__pinl_17149__icc_7742_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_46361__pinl_17149__icc_7742[SACp_wlidx_45661__pinl_17149__icc_7742] = SACp_emal_46508__isaa_35265__rso_285_TheWorld; };

      SACp_wlidx_45661__pinl_17149__icc_7742 = SACp_wlidx_45661__pinl_17149__icc_7742 + 1;
      SACp_pinl_17160__eat_6625 = SACp_pinl_17160__eat_6625 + 1;
      } }
# 6119 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48027_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_46368__uprf_24368) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8912, "With-loop guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46361__pinl_17149__icc_7742__sz; SAC_i++) { if (( SACp_emal_46361__pinl_17149__icc_7742[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_46361__pinl_17149__icc_7742"); } { SACp_emal_46360__pinl_17087__icc_6058_pred = ( SACp_emal_46361__pinl_17149__icc_7742[SAC_i]); }; } SACp_emal_46360__pinl_17087__icc_6058_pred = SAC_all; }
    if (!SACp_emal_46369__pinl_17085__icc_6059_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    if (!SACp_emal_46360__pinl_17087__icc_6058_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    { { if (!((1 == SACp_emal_46359__pinl_17109_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46359__pinl_17109_new_shape"); }; { if ((((6 + (SACp_emal_46359__pinl_17109_new_shape__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46359__pinl_17109_new_shape__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46359__pinl_17109_new_shape__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46359__pinl_17109_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46359__pinl_17109_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46359__pinl_17109_new_shape__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46359__pinl_17109_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46359__pinl_17109_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46359__pinl_17109_new_shape__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46359__pinl_17109_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46359__pinl_17109_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46359__pinl_17109_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46359__pinl_17109_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46359__pinl_17109_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46359__pinl_17109_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46359__pinl_17109_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46359__pinl_17109_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46359__pinl_17109_new_shape__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46359__pinl_17109_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46359__pinl_17109_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_46371__isaa_35505__flat_64__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_46359__pinl_17109_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46359__pinl_17109_new_shape__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46359__pinl_17109_new_shape__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46371__isaa_35505__flat_64__sz - (((SACp_emal_46364__pinl_24162__icc_5338) < 0) ? (-(SACp_emal_46364__pinl_24162__icc_5338)) : (SACp_emal_46364__pinl_24162__icc_5338));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46359__pinl_17109_new_shape__desc) & (-1 ^ (3))))[4]) = SACp_emal_46359__pinl_17109_new_shape__sz = SAC_size;
      if (!((SACp_emal_46359__pinl_17109_new_shape__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6150 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 6150 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6150 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6150 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6150 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 6150 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6150 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 6150, __extension__ __PRETTY_FUNCTION__); }))
# 6150 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46359__pinl_17109_new_shape = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46359__pinl_17109_new_shape__sz * sizeof (*SACp_emal_46359__pinl_17109_new_shape)); break; case SAC_HM_multi_threaded: SACp_emal_46359__pinl_17109_new_shape = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46359__pinl_17109_new_shape__sz * sizeof (*SACp_emal_46359__pinl_17109_new_shape), 0); break; case SAC_HM_any_threaded: SACp_emal_46359__pinl_17109_new_shape = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46359__pinl_17109_new_shape__sz * sizeof (*SACp_emal_46359__pinl_17109_new_shape), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46359__pinl_17109_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46359__pinl_17109_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46359__pinl_17109_new_shape__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 6157 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 6157 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_46364__pinl_24162__icc_5338;
      SAC_cond = (SACp_emal_46364__pinl_24162__icc_5338 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_46371__isaa_35505__flat_64__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3547, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_46371__isaa_35505__flat_64__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3547, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46359__pinl_17109_new_shape[SAC_i] = ( SACp_emal_46371__isaa_35505__flat_64[SAC_off + SAC_i]); };
      }
    }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46359__pinl_17109_new_shape__sz; SAC_i++) { if (( SACp_emal_46359__pinl_17109_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Non-negativity constraint violated " "for vector " "SACp_emal_46359__pinl_17109_new_shape"); } { SACp_emal_46358__pinl_17118__icc_6023_pred = ( SACp_emal_46359__pinl_17109_new_shape[SAC_i]); }; } SACp_emal_46358__pinl_17118__icc_6023_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46359__pinl_17109_new_shape__sz; SAC_i++) { if (( SACp_emal_46359__pinl_17109_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Non-negativity constraint violated " "for vector " "SACp_emal_46359__pinl_17109_new_shape"); } { SACp_emal_46357__pinl_17125__icc_6028_pred = ( SACp_emal_46359__pinl_17109_new_shape[SAC_i]); }; } SACp_emal_46357__pinl_17125__icc_6028_pred = SAC_all; }
    { { if (!((1 == SACp_emal_46356__pinl_17107__flat_421__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46356__pinl_17107__flat_421"); }; { if ((((6 + (SACp_emal_46356__pinl_17107__flat_421__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46356__pinl_17107__flat_421__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46356__pinl_17107__flat_421__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46356__pinl_17107__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46356__pinl_17107__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46356__pinl_17107__flat_421__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46356__pinl_17107__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46356__pinl_17107__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46356__pinl_17107__flat_421__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46356__pinl_17107__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46356__pinl_17107__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46356__pinl_17107__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46356__pinl_17107__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46356__pinl_17107__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46356__pinl_17107__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46356__pinl_17107__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46356__pinl_17107__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46356__pinl_17107__flat_421__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46356__pinl_17107__flat_421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46356__pinl_17107__flat_421__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46356__pinl_17107__flat_421__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_46356__pinl_17107__flat_421__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46356__pinl_17107__flat_421__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46359__pinl_17109_new_shape__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46356__pinl_17107__flat_421__desc) & (-1 ^ (3))))[4]) = SACp_emal_46356__pinl_17107__flat_421__sz = SAC_size * SACp_emal_46359__pinl_17109_new_shape__sz;
      if (!((SACp_emal_46356__pinl_17107__flat_421__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6191 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 6191 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6191 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6191 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6191 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 6191 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6191 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 6191, __extension__ __PRETTY_FUNCTION__); }))
# 6191 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46356__pinl_17107__flat_421 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46356__pinl_17107__flat_421__sz * sizeof (*SACp_emal_46356__pinl_17107__flat_421)); break; case SAC_HM_multi_threaded: SACp_emal_46356__pinl_17107__flat_421 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46356__pinl_17107__flat_421__sz * sizeof (*SACp_emal_46356__pinl_17107__flat_421), 0); break; case SAC_HM_any_threaded: SACp_emal_46356__pinl_17107__flat_421 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46356__pinl_17107__flat_421__sz * sizeof (*SACp_emal_46356__pinl_17107__flat_421), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46356__pinl_17107__flat_421__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46356__pinl_17107__flat_421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46356__pinl_17107__flat_421__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_46356__pinl_17107__flat_421__sz; SAC_i++) { { SACp_emal_46356__pinl_17107__flat_421[SAC_i] = (0) * (( SACp_emal_46359__pinl_17109_new_shape[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46356__pinl_17107__flat_421__sz; SAC_i++) { if (( SACp_emal_46356__pinl_17107__flat_421[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Non-negativity constraint violated " "for vector " "SACp_emal_46356__pinl_17107__flat_421"); } { SACp_emal_46355__pinl_17127__icc_6022_pred = ( SACp_emal_46356__pinl_17107__flat_421[SAC_i]); }; } SACp_emal_46355__pinl_17127__icc_6022_pred = SAC_all; }
        if (SACp_emal_46356__pinl_17107__flat_421__dim != SACp_emal_46359__pinl_17109_new_shape__dim) {
      SACp_emal_46354__pinl_17129__icc_6024_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Arrays `" "SACp_emal_46356__pinl_17107__flat_421""' with shape %s ""And `" "SACp_emal_46359__pinl_17109_new_shape""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_46356__pinl_17107__flat_421__desc), SAC_PrintShape (SACp_emal_46359__pinl_17109_new_shape__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_46356__pinl_17107__flat_421__shp0 != SACp_emal_46359__pinl_17109_new_shape__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Arrays `" "SACp_emal_46356__pinl_17107__flat_421""' with shape %s ""And `" "SACp_emal_46359__pinl_17109_new_shape""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_46356__pinl_17107__flat_421__desc), SAC_PrintShape (SACp_emal_46359__pinl_17109_new_shape__desc));
      }
      SACp_emal_46354__pinl_17129__icc_6024_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46356__pinl_17107__flat_421__sz && SAC_i < SACp_emal_46359__pinl_17109_new_shape__sz; SAC_i++) { if (( SACp_emal_46356__pinl_17107__flat_421[SAC_i]) > ( SACp_emal_46359__pinl_17109_new_shape[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Vector constraint `" "SACp_emal_46356__pinl_17107__flat_421" " < " "SACp_emal_46359__pinl_17109_new_shape" "' violated"); } } SACp_emal_46353__pinl_17132__icc_6025_pred = SAC_all; }
    if (!SACp_emal_46357__pinl_17125__icc_6028_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46353__pinl_17132__icc_6025_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46354__pinl_17129__icc_6024_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46358__pinl_17118__icc_6023_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46355__pinl_17127__icc_6022_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    { { if (!((1 == SACp_pinl_17083_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_17083_iv"); }; { if ((((6 + (SACp_pinl_17083_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_17083_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_17083_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_17083_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_17083_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_17083_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_17083_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_17083_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_17083_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_17083_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_17083_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_17083_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_17083_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_17083_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_17083_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_17083_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_17083_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17083_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17083_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17083_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_17083_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_17083_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17083_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46361__pinl_17149__icc_7742__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17083_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_17083_iv__sz = SAC_size * SACp_emal_46361__pinl_17149__icc_7742__sz;
      if (!((SACp_pinl_17083_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6228 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 6228 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6228 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6228 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6228 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 6228 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6228 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 6228, __extension__ __PRETTY_FUNCTION__); }))
# 6228 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_pinl_17083_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_17083_iv__sz * sizeof (*SACp_pinl_17083_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_17083_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_17083_iv__sz * sizeof (*SACp_pinl_17083_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_17083_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_17083_iv__sz * sizeof (*SACp_pinl_17083_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17083_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17083_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17083_iv__desc) & (-1 ^ (3))))[1]) = 0; } }



    { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_pinl_17077__icc_6062"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6232 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 6232 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6232 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6232 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6232 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 6232 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6232 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 6232, __extension__ __PRETTY_FUNCTION__); }))
# 6232 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_pinl_17077__icc_6062__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_pinl_17077__icc_6062__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_pinl_17077__icc_6062__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17077__icc_6062__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17077__icc_6062__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17077__icc_6062__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17077__icc_6062__desc) & (-1 ^ (3))))[3]) = SACp_pinl_17077__icc_6062__dim = 0; }
    { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17077__icc_6062__desc) & (-1 ^ (3))))[0]) = 1; }
    SACp_pinl_17077__icc_6062__sz = 1;
    SACp_pinl_17077__icc_6062__dim = 0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17077__icc_6062__desc) & (-1 ^ (3))))[4]) = 1;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17077__icc_6062__desc) & (-1 ^ (3))))[3]) = 0;
    { { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6238 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 6238 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6238 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6238 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6238 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 6238 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6238 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 6238, __extension__ __PRETTY_FUNCTION__); }))
# 6238 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_pinl_17077__icc_6062 = (
# 6238 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6238 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_pinl_17077__icc_6062__sz * sizeof (*SACp_pinl_17077__icc_6062)); break; case SAC_HM_multi_threaded: SACp_pinl_17077__icc_6062 = (
# 6238 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6238 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_17077__icc_6062__sz * sizeof (*SACp_pinl_17077__icc_6062), 0); break; case SAC_HM_any_threaded: SACp_pinl_17077__icc_6062 = (
# 6238 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6238 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_pinl_17077__icc_6062__sz * sizeof (*SACp_pinl_17077__icc_6062), 0); break; } } } { SACp_pinl_17077__icc_6062[0] = SACp_emal_46507__pinl_9505__icc_3388_pred; } }

    { int SAC_d = 0; int SAC_max_d = SACp_pinl_17083_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_17083_iv[SAC_d] = ( SACp_emal_46361__pinl_17149__icc_7742[SAC_d]); SAC_within_bounds = SAC_within_bounds && ( ( SACp_emal_46361__pinl_17149__icc_7742[SAC_d]) < ( SACp_emal_46371__isaa_35505__flat_64[SAC_d]) ); SAC_d++; }
    while (SAC_within_bounds) { SAC_in_gen = 1;
    if (SAC_in_gen) {
    ;
    { { if (!(((SACp_emal_46359__pinl_17109_new_shape__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_46344__pinl_17100__icc_6040"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6245 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 6245 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6245 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6245 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6245 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 6245 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6245 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 6245, __extension__ __PRETTY_FUNCTION__); }))
# 6245 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46344__pinl_17100__icc_6040__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_46359__pinl_17109_new_shape__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_46344__pinl_17100__icc_6040__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_46359__pinl_17109_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_46344__pinl_17100__icc_6040__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_46359__pinl_17109_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[3]) = SACp_emal_46344__pinl_17100__icc_6040__dim = (SACp_emal_46359__pinl_17109_new_shape__sz) + (0); }



   
    if (!((SACp_emal_46359__pinl_17109_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_46344__pinl_17100__icc_6040__dim == SACp_emal_46359__pinl_17109_new_shape__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_46359__pinl_17109_new_shape__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_46359__pinl_17109_new_shape[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[4]) = SACp_emal_46344__pinl_17100__icc_6040__sz = SAC_size;
      if (!((SACp_emal_46344__pinl_17100__icc_6040__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6265 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 6265 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6265 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6265 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6265 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 6265 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6265 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 6265, __extension__ __PRETTY_FUNCTION__); }))
# 6265 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46344__pinl_17100__icc_6040 = (
# 6265 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6265 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_46344__pinl_17100__icc_6040__sz * sizeof (*SACp_emal_46344__pinl_17100__icc_6040)); break; case SAC_HM_multi_threaded: SACp_emal_46344__pinl_17100__icc_6040 = (
# 6265 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6265 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46344__pinl_17100__icc_6040__sz * sizeof (*SACp_emal_46344__pinl_17100__icc_6040), 0); break; case SAC_HM_any_threaded: SACp_emal_46344__pinl_17100__icc_6040 = (
# 6265 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6265 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_46344__pinl_17100__icc_6040__sz * sizeof (*SACp_emal_46344__pinl_17100__icc_6040), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_17110_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_17110_iv"); }; { if ((((6 + (SACp_pinl_17110_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_17110_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_17110_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_17110_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_17110_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_17110_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_17110_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_17110_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_17110_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_17110_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_17110_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_17110_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_17110_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_17110_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_17110_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_17110_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_17110_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17110_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17110_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17110_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_17110_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_17110_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17110_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46356__pinl_17107__flat_421__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17110_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_17110_iv__sz = SAC_size * SACp_emal_46356__pinl_17107__flat_421__sz;
      if (!((SACp_pinl_17110_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6280 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 6280 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6280 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6280 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6280 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 6280 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6280 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 6280, __extension__ __PRETTY_FUNCTION__); }))
# 6280 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_pinl_17110_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_17110_iv__sz * sizeof (*SACp_pinl_17110_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_17110_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_17110_iv__sz * sizeof (*SACp_pinl_17110_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_17110_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_17110_iv__sz * sizeof (*SACp_pinl_17110_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17110_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17110_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17110_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_17110_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_17110_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_46344__pinl_17100__icc_6040__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_46344__pinl_17100__icc_6040_shpfac0; SAC_d = SACp_emal_46344__pinl_17100__icc_6040__dim - 1; SACp_wlidx_45662__pinl_17100__icc_6040 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_46344__pinl_17100__icc_6040_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_46356__pinl_17107__flat_421[SAC_d]) <= ( SACp_pinl_17110_iv[SAC_d])) && (( SACp_pinl_17110_iv[SAC_d]) < ( SACp_emal_46359__pinl_17109_new_shape[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!((1 == SACp_emal_46350__pinl_17111_new_idx__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46350__pinl_17111_new_idx"); }; { if ((((6 + (SACp_emal_46350__pinl_17111_new_idx__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46350__pinl_17111_new_idx__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46350__pinl_17111_new_idx__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46350__pinl_17111_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46350__pinl_17111_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46350__pinl_17111_new_idx__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46350__pinl_17111_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46350__pinl_17111_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46350__pinl_17111_new_idx__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46350__pinl_17111_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46350__pinl_17111_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46350__pinl_17111_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46350__pinl_17111_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46350__pinl_17111_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46350__pinl_17111_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46350__pinl_17111_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46350__pinl_17111_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46350__pinl_17111_new_idx__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46350__pinl_17111_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46350__pinl_17111_new_idx__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_pinl_17083_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_pinl_17110_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_46350__pinl_17111_new_idx__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46350__pinl_17111_new_idx__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46350__pinl_17111_new_idx__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_17083_iv__sz + SACp_pinl_17110_iv__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46350__pinl_17111_new_idx__desc) & (-1 ^ (3))))[4]) = SACp_emal_46350__pinl_17111_new_idx__sz = SAC_size;
      if (!((SACp_emal_46350__pinl_17111_new_idx__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6313 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 6313 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6313 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6313 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6313 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 6313 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6313 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 6313, __extension__ __PRETTY_FUNCTION__); }))
# 6313 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46350__pinl_17111_new_idx = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46350__pinl_17111_new_idx__sz * sizeof (*SACp_emal_46350__pinl_17111_new_idx)); break; case SAC_HM_multi_threaded: SACp_emal_46350__pinl_17111_new_idx = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46350__pinl_17111_new_idx__sz * sizeof (*SACp_emal_46350__pinl_17111_new_idx), 0); break; case SAC_HM_any_threaded: SACp_emal_46350__pinl_17111_new_idx = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46350__pinl_17111_new_idx__sz * sizeof (*SACp_emal_46350__pinl_17111_new_idx), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46350__pinl_17111_new_idx__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46350__pinl_17111_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46350__pinl_17111_new_idx__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACp_pinl_17083_iv__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_46350__pinl_17111_new_idx[SAC_i] = ( SACp_pinl_17083_iv[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_pinl_17110_iv__sz; SAC_i++) { { SACp_emal_46350__pinl_17111_new_idx[SAC_off + SAC_i] = ( SACp_pinl_17110_iv[SAC_i]); }; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }
    if ((SACp_emal_46350__pinl_17111_new_idx__dim == 1) && (SACp_emal_46350__pinl_17111_new_idx__shp0 == SACp_flat_64__dim)) { SACp_emal_46349__pinl_17134__icc_6029_pred = 1; } else { SACp_emal_46349__pinl_17134__icc_6029_pred = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays " "SACp_emal_46350__pinl_17111_new_idx" " and " "SACp_flat_64" " do not adhere to shape matches dim constraint"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46350__pinl_17111_new_idx__sz; SAC_i++) { if (( SACp_emal_46350__pinl_17111_new_idx[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Non-negativity constraint violated " "for vector " "SACp_emal_46350__pinl_17111_new_idx"); } { SACp_emal_46348__pinl_17136__icc_6030_pred = ( SACp_emal_46350__pinl_17111_new_idx[SAC_i]); }; } SACp_emal_46348__pinl_17136__icc_6030_pred = SAC_all; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }



    if ((SACp_emal_46350__pinl_17111_new_idx__dim != 1) && (SACp_emal_46350__pinl_17111_new_idx__shp0 != SACp_flat_64__dim)) {
      SACp_emal_46347__pinl_17138__icc_6031_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays `" "SACp_emal_46350__pinl_17111_new_idx""' with shape %s ""And `" "SACp_flat_64""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_46350__pinl_17111_new_idx__desc), SAC_PrintShape (SACp_flat_64__desc));
    }
    else {
      int SAC_all = 1; for (int SAC_i = 0; SAC_i < SACp_flat_64__dim; SAC_i++) {
        if (( SACp_emal_46350__pinl_17111_new_idx[SAC_i]) >= (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_64__desc) & (-1 ^ (3))))[(6 + (SAC_i))])) {
          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays `" "SACp_emal_46350__pinl_17111_new_idx""' with shape %s ""And `" "SACp_flat_64""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_46350__pinl_17111_new_idx__desc), SAC_PrintShape (SACp_flat_64__desc));
        }
      }
      SACp_emal_46347__pinl_17138__icc_6031_pred = SAC_all;
    }

    if (!SACp_emal_46347__pinl_17138__icc_6031_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_46348__pinl_17136__icc_6030_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_46349__pinl_17134__icc_6029_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
    ;

    }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      for (SAC_i = 0; SAC_i < SACp_emal_46350__pinl_17111_new_idx__sz; SAC_i++)
      {

        SAC_l = ( SACp_emal_46371__isaa_35505__flat_64[SAC_i]) * SAC_l + ( SACp_emal_46350__pinl_17111_new_idx[SAC_i]);
      }
      for (SAC_i = SACp_emal_46350__pinl_17111_new_idx__sz; SAC_i < SACp_emal_46371__isaa_35505__flat_64__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_46371__isaa_35505__flat_64[SAC_i]);
      }
      SACp_emal_46346__ivesli_45698 = SAC_l;
    }

    { { free (SACp_emal_46350__pinl_17111_new_idx); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46350__pinl_17111_new_idx__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46345__pinl_17096__icc_6034 = ( SACp_flat_64[SACp_emal_46346__ivesli_45698]); }

    { ; ; }
    if (!SACp_emal_46347__pinl_17138__icc_6031_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_46348__pinl_17136__icc_6030_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_46349__pinl_17134__icc_6029_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_46344__pinl_17100__icc_6040__dim - SACp_pinl_17110_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3641, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_46344__pinl_17100__icc_6040_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3641, "WL expression with illegal size found!"); };
    { SACp_emal_46344__pinl_17100__icc_6040[SACp_wlidx_45662__pinl_17100__icc_6040] = SACp_emal_46345__pinl_17096__icc_6034; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_46344__pinl_17100__icc_6040__dim - SACp_pinl_17110_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_46344__pinl_17100__icc_6040_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "WL expression with illegal size found!"); };
    { SACp_emal_46344__pinl_17100__icc_6040[SACp_wlidx_45662__pinl_17100__icc_6040] = SACp_emal_46498__pinl_11272__flat_420; };

    }
    SACp_wlidx_45662__pinl_17100__icc_6040 = SACp_wlidx_45662__pinl_17100__icc_6040 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_17110_iv[SAC_d] = ( SACp_pinl_17110_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_17110_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_17110_iv[SAC_d] = 0; SAC_d--; SACp_pinl_17110_iv[SAC_d] = ( SACp_pinl_17110_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_17110_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46344__pinl_17100__icc_6040__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_17110_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17110_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_46357__pinl_17125__icc_6028_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46353__pinl_17132__icc_6025_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46354__pinl_17129__icc_6024_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46358__pinl_17118__icc_6023_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_46355__pinl_17127__icc_6022_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }



    SACwf_ArrayArith___AM__bl_S__bl_S (&SACp_pinl_17090__ea_8076__flat_6601, &SACp_pinl_17090__ea_8076__flat_6601__desc, SACp_pinl_17077__icc_6062, SACp_pinl_17077__icc_6062__desc, SACp_emal_46344__pinl_17100__icc_6040, SACp_emal_46344__pinl_17100__icc_6040__desc);




    SACp_pinl_17090__ea_8076__flat_6601__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17090__ea_8076__flat_6601__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_17090__ea_8076__flat_6601__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17090__ea_8076__flat_6601__desc) & (-1 ^ (3))))[3]);




    ;




    SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601__desc = SACp_pinl_17090__ea_8076__flat_6601__desc;
    SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601__sz = SACp_pinl_17090__ea_8076__flat_6601__sz;
    SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601__dim = SACp_pinl_17090__ea_8076__flat_6601__dim;
    ;
    { SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601 = SACp_pinl_17090__ea_8076__flat_6601; }




    SACp_pinl_17077__icc_6062__desc = SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601__desc;
    SACp_pinl_17077__icc_6062__sz = SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601__sz;
    SACp_pinl_17077__icc_6062__dim = SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601__dim;
    ;
    { SACp_pinl_17077__icc_6062 = SACp_ufiv_46268__pinl_17090__ea_8076__flat_6601; }

    }
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_17083_iv[SAC_d] = ( SACp_pinl_17083_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_17083_iv[SAC_d]) == ( SACp_emal_46371__isaa_35505__flat_64[SAC_d]))) { SACp_pinl_17083_iv[SAC_d] = ( SACp_emal_46361__pinl_17149__icc_7742[SAC_d]); SAC_d--; SACp_pinl_17083_iv[SAC_d] = ( SACp_pinl_17083_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_17083_iv[SAC_d]) < ( SACp_emal_46371__isaa_35505__flat_64[SAC_d]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_emal_46361__pinl_17149__icc_7742); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46361__pinl_17149__icc_7742__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_flat_64); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_flat_64__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_pinl_17083_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17083_iv__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_46356__pinl_17107__flat_421); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46356__pinl_17107__flat_421__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_46359__pinl_17109_new_shape); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46359__pinl_17109_new_shape__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_46371__isaa_35505__flat_64); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46371__isaa_35505__flat_64__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_46369__pinl_17085__icc_6059_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    if (!SACp_emal_46360__pinl_17087__icc_6058_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { if (!((SACp_pinl_17077__icc_6062__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_46343__flat_63 = ( SACp_pinl_17077__icc_6062[0]); } }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17077__icc_6062__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_17077__icc_6062); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_17077__icc_6062__desc) & (-1 ^ (3))))); } } } } else { } }



    SACf_ScalarIO__print__bl (SACp_emal_46343__flat_63);




    { *SAC_arg_1__p = SACp_emal_46508__isaa_35265__rso_285_TheWorld; }
    return;
   
  }



}
}
# 6521 "/home/rubenhensen/sac/hw/a.out.c"
void SACf__MAIN_CL_INIT__init (void) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
   



    SACf_World_CL_INIT__init_TheWorld__SACt_World__World (&SACo_World__TheWorld, &SACo_World__TheWorld__desc);




    SACf_Terminal_CL_INIT__init_TheTerminal__SACt_Terminal__Terminal (&SACo_Terminal__TheTerminal, &SACo_Terminal__TheTerminal__desc);




    SACf_TermFile_CL_INIT__init_stdout__SACt_TermFile__TermFile (&SACo_TermFile__stdout, &SACo_TermFile__stdout__desc);




    return;
   
  }



}
}
# 6563 "/home/rubenhensen/sac/hw/a.out.c"
void SACf__MAIN___rtpf_15_impl_unblock__i_S__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int SACl_od) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    
# 6572 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6572 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emrb_47777_mem;
   
   




    int SACp_emal_46599__isaa_36450_od;
   
   




    int SACp_emal_46598__isaa_36453_a;
   
   




    int * SACp_emal_46597__isaa_36454_a;
    SAC_array_descriptor_t SACp_emal_46597__isaa_36454_a__desc = 
# 6594 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6594 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46597__isaa_36454_a__shp0;
    int SACp_emal_46597__isaa_36454_a__sz;
    const int SACp_emal_46597__isaa_36454_a__dim = 1;




    int SACp_emal_46596__mse_36458__isaa_36452_od;
   
   




    int * SACp_emal_46595__isaa_36457_oshp;
    SAC_array_descriptor_t SACp_emal_46595__isaa_36457_oshp__desc = 
# 6610 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6610 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46595__isaa_36457_oshp__shp0 = 1;
    const int SACp_emal_46595__isaa_36457_oshp__sz = 1;
    const int SACp_emal_46595__isaa_36457_oshp__dim = 1;




    int * SACp_emal_46594_oshp;
    SAC_array_descriptor_t SACp_emal_46594_oshp__desc = 
# 6619 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6619 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46594_oshp__shp0;
    int SACp_emal_46594_oshp__sz;
    const int SACp_emal_46594_oshp__dim = 1;




    int * SACp_emal_46593__flat_268;
    SAC_array_descriptor_t SACp_emal_46593__flat_268__desc = 
# 6628 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6628 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46593__flat_268__shp0;
    int SACp_emal_46593__flat_268__sz;
    const int SACp_emal_46593__flat_268__dim = 1;




    int * SACp_emal_46592_s;
    SAC_array_descriptor_t SACp_emal_46592_s__desc = 
# 6637 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6637 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46592_s__shp0;
    int SACp_emal_46592_s__sz;
    const int SACp_emal_46592_s__dim = 1;




    int SACp_emal_46591__dl_27819;
   
   




    int SACp_emal_46590__dl_27821;
   
   




    int SACp_emal_46589__cf_27797;
   
   




    int * SACp_emal_46586__flat_274;
    SAC_array_descriptor_t SACp_emal_46586__flat_274__desc = 
# 6667 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6667 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46586__flat_274__shp0;
    int SACp_emal_46586__flat_274__sz;
    const int SACp_emal_46586__flat_274__dim = 1;




    int SACp_emal_46585__mse_36468__dl_27813;
   
   




    int * SACp_emal_46584_ishp;
    SAC_array_descriptor_t SACp_emal_46584_ishp__desc = 
# 6683 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6683 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46584_ishp__shp0;
    int SACp_emal_46584_ishp__sz;
    const int SACp_emal_46584_ishp__dim = 1;




    
# 6691 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6691 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46583__uprf_27771;
   
   




    int SACp_emal_46582__uprf_27770;
   
   




    int * SACp_emal_46581__pinl_18608__idc_6705;
    SAC_array_descriptor_t SACp_emal_46581__pinl_18608__idc_6705__desc = 
# 6706 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6706 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46581__pinl_18608__idc_6705__shp0 = 1;
    const int SACp_emal_46581__pinl_18608__idc_6705__sz = 1;
    const int SACp_emal_46581__pinl_18608__idc_6705__dim = 1;




    int SACp_emal_46580__pinl_27419__icc_5332;
   
   




    int SACp_emal_46579__pinl_27422__icc_5338;
   
   




    int * SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound;
    SAC_array_descriptor_t SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__desc = 
# 6729 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6729 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__shp0 = 1;
    const int SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz = 1;
    const int SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim = 1;




    
# 6737 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6737 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46575__uprf_27763;
   
   




    
# 6744 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6744 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46574__uprf_27757;
   
   




    
# 6751 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6751 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46573__uprf_27748;
   
   




    
# 6758 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6758 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46572__uprf_27742;
   
   




    int * SACp_emal_46571__pinl_18620__idc_6711;
    SAC_array_descriptor_t SACp_emal_46571__pinl_18620__idc_6711__desc = 
# 6766 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6766 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46571__pinl_18620__idc_6711__shp0 = 1;
    const int SACp_emal_46571__pinl_18620__idc_6711__sz = 1;
    const int SACp_emal_46571__pinl_18620__idc_6711__dim = 1;




    int SACp_emal_46570__ivesli_45704;
   
   




    int SACp_emal_46569__pinl_18573__icc_6684;
   
   




    int SACp_emal_46568__ivesli_45703;
   
   




    int SACp_emal_46567__pinl_18576__icc_6690;
   
   




    int * SACp_emal_46565__pinl_18580__icc_6696;
    SAC_array_descriptor_t SACp_emal_46565__pinl_18580__icc_6696__desc = 
# 6803 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6803 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46565__pinl_18580__icc_6696__shp0;
    int SACp_emal_46565__pinl_18580__icc_6696__sz;
    const int SACp_emal_46565__pinl_18580__icc_6696__dim = 1;




    int SACp_emal_46564__pinl_18677__flat_2100;
   
   




    
# 6818 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6818 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46563__uprf_27719;
   
   




    int * SACp_emal_46562__pinl_18728__idc_6808;
    SAC_array_descriptor_t SACp_emal_46562__pinl_18728__idc_6808__desc = 
# 6826 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6826 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46562__pinl_18728__idc_6808__shp0 = 1;
    const int SACp_emal_46562__pinl_18728__idc_6808__sz = 1;
    const int SACp_emal_46562__pinl_18728__idc_6808__dim = 1;




    
# 6834 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6834 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46561__uprf_27713;
   
   




    int SACp_emal_46560__uprf_27712;
   
   




    int * SACp_emal_46559__pinl_18739__idc_6814;
    SAC_array_descriptor_t SACp_emal_46559__pinl_18739__idc_6814__desc = 
# 6849 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6849 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46559__pinl_18739__idc_6814__shp0 = 1;
    const int SACp_emal_46559__pinl_18739__idc_6814__sz = 1;
    const int SACp_emal_46559__pinl_18739__idc_6814__dim = 1;




    int SACp_emal_46558__pinl_27480__icc_5332;
   
   




    int SACp_emal_46557__pinl_27483__icc_5338;
   
   




    int SACp_emal_46556__pinl_27538_res;
   
   




    int SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e;
   
   




    
# 6885 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6885 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46552__uprf_27705;
   
   




    
# 6892 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6892 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46551__uprf_27699;
   
   




    int * SACp_emal_46550__pinl_18745__idc_6817;
    SAC_array_descriptor_t SACp_emal_46550__pinl_18745__idc_6817__desc = 
# 6900 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6900 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46550__pinl_18745__idc_6817__shp0 = 1;
    const int SACp_emal_46550__pinl_18745__idc_6817__sz = 1;
    const int SACp_emal_46550__pinl_18745__idc_6817__dim = 1;




    int SACp_emal_46549__ivesli_45702;
   
   




    int SACp_emal_46548__pinl_18659__icc_6768;
   
   




    int * SACp_emal_46547__pinl_18664__icc_6774;
    SAC_array_descriptor_t SACp_emal_46547__pinl_18664__icc_6774__desc = 
# 6923 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6923 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46547__pinl_18664__icc_6774__shp0;
    int SACp_emal_46547__pinl_18664__icc_6774__sz;
    const int SACp_emal_46547__pinl_18664__icc_6774__dim = 1;




    
# 6931 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6931 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46545__uprf_34398;
   
   




    
# 6938 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6938 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46544__uprf_34392;
   
   




    int * SACp_emal_46543__pinl_27646__idc_4889;
    SAC_array_descriptor_t SACp_emal_46543__pinl_27646__idc_4889__desc = 
# 6946 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6946 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46543__pinl_27646__idc_4889__shp0 = 1;
    const int SACp_emal_46543__pinl_27646__idc_4889__sz = 1;
    const int SACp_emal_46543__pinl_27646__idc_4889__dim = 1;




    int SACp_emal_46542__ivesli_45701;
   
   




    int SACp_emal_46541__pinl_27605__icc_4868;
   
   




    int SACp_emal_46539__uprf_27679;
   
   




    
# 6975 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6975 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46538__uprf_27673;
   
   




    
# 6982 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 6982 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46537__uprf_27667;
   
   




    int * SACp_emal_46536__pinl_18765__idc_6828;
    SAC_array_descriptor_t SACp_emal_46536__pinl_18765__idc_6828__desc = 
# 6990 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 6990 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_46536__pinl_18765__idc_6828__shp0 = 1;
    const int SACp_emal_46536__pinl_18765__idc_6828__sz = 1;
    const int SACp_emal_46536__pinl_18765__idc_6828__dim = 1;




    int SACp_emal_46535__ivesli_45700;
   
   




    int SACp_emal_46534__pinl_18673__icc_6792;
   
   




    int * SACp_emal_46533__pinl_18676__icc_6795;
    SAC_array_descriptor_t SACp_emal_46533__pinl_18676__icc_6795__desc = 
# 7013 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 7013 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46533__pinl_18676__icc_6795__shp0;
    int SACp_emal_46533__pinl_18676__icc_6795__sz;
    const int SACp_emal_46533__pinl_18676__icc_6795__dim = 1;




    
# 7021 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 7021 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46532__pinl_18819__icc_3353_pred;
   
   




    
# 7028 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 7028 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_46531__pinl_18821__icc_3354_pred;
   
   




    int * SACp_emal_46530__pinl_18818__icc_3357;
    SAC_array_descriptor_t SACp_emal_46530__pinl_18818__icc_3357__desc = 
# 7036 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 7036 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_46530__pinl_18818__icc_3357__sz = 0;
    int SACp_emal_46530__pinl_18818__icc_3357__dim = 0;




    int SACp_wlidx_45665__pinl_18676__icc_6795;
   
   




    int SACp_wlidx_45664__pinl_18664__icc_6774;
   
   




    int SACp_wlidx_45663__pinl_18580__icc_6696;
   
   




    int * SACp_pinl_27604__icc_4867;
    SAC_array_descriptor_t SACp_pinl_27604__icc_4867__desc = 
# 7065 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 7065 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_27604__icc_4867__sz = 0;
    int SACp_pinl_27604__icc_4867__dim = 0;




    int * SACp_pinl_27603__icc_4866;
    SAC_array_descriptor_t SACp_pinl_27603__icc_4866__desc = 
# 7073 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 7073 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_27603__icc_4866__shp0;
    int SACp_pinl_27603__icc_4866__sz;
    const int SACp_pinl_27603__icc_4866__dim = 1;




    int SACp_pinl_18592__eat_325;
   
   




    int * SACp_pinl_18590_iv;
    SAC_array_descriptor_t SACp_pinl_18590_iv__desc = 
# 7089 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 7089 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_pinl_18590_iv__shp0 = 1;
    const int SACp_pinl_18590_iv__sz = 1;
    const int SACp_pinl_18590_iv__dim = 1;




    int SACp_pinl_18703__eat_328;
   
   




    int SACp_pinl_18702__eat_327;
   
   




    int * SACp_pinl_18700_iv__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_18700_iv__SSA0_1__desc = 
# 7112 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 7112 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_pinl_18700_iv__SSA0_1__shp0 = 1;
    const int SACp_pinl_18700_iv__SSA0_1__sz = 1;
    const int SACp_pinl_18700_iv__SSA0_1__dim = 1;




    int * SACp_pinl_18697_iv;
    SAC_array_descriptor_t SACp_pinl_18697_iv__desc = 
# 7121 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 7121 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_pinl_18697_iv__shp0 = 1;
    const int SACp_pinl_18697_iv__sz = 1;
    const int SACp_pinl_18697_iv__dim = 1;




    int * SACp_pinl_18818__icc_3357;
    SAC_array_descriptor_t SACp_pinl_18818__icc_3357__desc = 
# 7130 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 7130 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_pinl_18818__icc_3357__sz = 0;
    int SACp_pinl_18818__icc_3357__dim = 0;





   




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_46599__isaa_36450_od = 0; }; }
    { { SACp_emal_46598__isaa_36453_a = SACl_a__dim; }; }
    { { if (!((1 == SACp_emal_46597__isaa_36454_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46597__isaa_36454_a"); }; { if ((((6 + (SACp_emal_46597__isaa_36454_a__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46597__isaa_36454_a__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46597__isaa_36454_a__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46597__isaa_36454_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46597__isaa_36454_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46597__isaa_36454_a__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46597__isaa_36454_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46597__isaa_36454_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46597__isaa_36454_a__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46597__isaa_36454_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46597__isaa_36454_a__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46597__isaa_36454_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46597__isaa_36454_a__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46597__isaa_36454_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46597__isaa_36454_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46597__isaa_36454_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46597__isaa_36454_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46597__isaa_36454_a__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46597__isaa_36454_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46597__isaa_36454_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46597__isaa_36454_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46597__isaa_36454_a__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46597__isaa_36454_a__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46597__isaa_36454_a__desc) & (-1 ^ (3))))[4]) = SACp_emal_46597__isaa_36454_a__sz = SAC_size;
      if (!((SACp_emal_46597__isaa_36454_a__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7172 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 7172 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7172 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7172 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7172 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 7172 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7172 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 7172, __extension__ __PRETTY_FUNCTION__); }))
# 7172 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46597__isaa_36454_a = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46597__isaa_36454_a__sz * sizeof (*SACp_emal_46597__isaa_36454_a)); break; case SAC_HM_multi_threaded: SACp_emal_46597__isaa_36454_a = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46597__isaa_36454_a__sz * sizeof (*SACp_emal_46597__isaa_36454_a), 0); break; case SAC_HM_any_threaded: SACp_emal_46597__isaa_36454_a = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46597__isaa_36454_a__sz * sizeof (*SACp_emal_46597__isaa_36454_a), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46597__isaa_36454_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46597__isaa_36454_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46597__isaa_36454_a__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
      { SACp_emal_46597__isaa_36454_a[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; { SACp_emal_46596__mse_36458__isaa_36452_od = ((SACl_od) < 0) ? -(SACl_od) : (SACl_od); };
    { { if (!((1 == SACp_emal_46595__isaa_36457_oshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46595__isaa_36457_oshp"); }; { { if ((((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp)) + ((6 + (SACp_emal_46595__isaa_36457_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp)) + ((6 + (SACp_emal_46595__isaa_36457_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp)) + ((6 + (SACp_emal_46595__isaa_36457_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46595__isaa_36457_oshp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46595__isaa_36457_oshp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp)) + ((6 + (SACp_emal_46595__isaa_36457_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46595__isaa_36457_oshp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46595__isaa_36457_oshp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp)) + ((6 + (SACp_emal_46595__isaa_36457_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp)) + ((6 + (SACp_emal_46595__isaa_36457_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp)) + ((6 + (SACp_emal_46595__isaa_36457_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp)) + ((6 + (SACp_emal_46595__isaa_36457_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp)) + ((6 + (SACp_emal_46595__isaa_36457_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46595__isaa_36457_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46595__isaa_36457_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46595__isaa_36457_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46595__isaa_36457_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46595__isaa_36457_oshp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp, SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp), ((6 + (SACp_emal_46595__isaa_36457_oshp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46595__isaa_36457_oshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46595__isaa_36457_oshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46595__isaa_36457_oshp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46595__isaa_36457_oshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46595__isaa_36457_oshp__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46595__isaa_36457_oshp[0] = SACp_emal_46596__mse_36458__isaa_36452_od; }

    { { if (!((1 == SACp_emal_46594_oshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46594_oshp"); }; { if ((((6 + (SACp_emal_46594_oshp__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46594_oshp__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46594_oshp__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46594_oshp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46594_oshp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46594_oshp__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46594_oshp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46594_oshp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46594_oshp__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46594_oshp__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46594_oshp__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46594_oshp__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46594_oshp__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46594_oshp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46594_oshp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46594_oshp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46594_oshp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46594_oshp__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46594_oshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46594_oshp__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_46597__isaa_36454_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_46594_oshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46594_oshp__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46594_oshp__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACl_od) < 0) ? (-(SACl_od)) : (SACl_od));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46594_oshp__desc) & (-1 ^ (3))))[4]) = SACp_emal_46594_oshp__sz = SAC_size;
      if (!((SACp_emal_46594_oshp__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7214 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 7214 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7214 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7214 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7214 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 7214 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7214 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 7214, __extension__ __PRETTY_FUNCTION__); }))
# 7214 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46594_oshp = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46594_oshp__sz * sizeof (*SACp_emal_46594_oshp)); break; case SAC_HM_multi_threaded: SACp_emal_46594_oshp = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46594_oshp__sz * sizeof (*SACp_emal_46594_oshp), 0); break; case SAC_HM_any_threaded: SACp_emal_46594_oshp = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46594_oshp__sz * sizeof (*SACp_emal_46594_oshp), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46594_oshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46594_oshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46594_oshp__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 7221 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 7221 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_cnt = SACl_od;
      SAC_cond = (SACl_od < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_46597__isaa_36454_a__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_46597__isaa_36454_a__sz))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46594_oshp[SAC_i] = ( SACp_emal_46597__isaa_36454_a[SAC_off + SAC_i]); };
      }
    }

    { { if (!((1 == SACp_emal_46593__flat_268__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46593__flat_268"); }; { if ((((6 + (SACp_emal_46593__flat_268__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46593__flat_268__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46593__flat_268__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46593__flat_268__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46593__flat_268__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46593__flat_268__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46593__flat_268__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46593__flat_268__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46593__flat_268__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46593__flat_268__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46593__flat_268__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46593__flat_268__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46593__flat_268__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46593__flat_268__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46593__flat_268__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46593__flat_268__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46593__flat_268__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46593__flat_268__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46593__flat_268__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46593__flat_268__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_46597__isaa_36454_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_46593__flat_268__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46593__flat_268__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46593__flat_268__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46597__isaa_36454_a__sz - (((SACl_od) < 0) ? (-(SACl_od)) : (SACl_od));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46593__flat_268__desc) & (-1 ^ (3))))[4]) = SACp_emal_46593__flat_268__sz = SAC_size;
      if (!((SACp_emal_46593__flat_268__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7255 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 7255 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7255 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7255 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7255 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 7255 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7255 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 7255, __extension__ __PRETTY_FUNCTION__); }))
# 7255 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46593__flat_268 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46593__flat_268__sz * sizeof (*SACp_emal_46593__flat_268)); break; case SAC_HM_multi_threaded: SACp_emal_46593__flat_268 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46593__flat_268__sz * sizeof (*SACp_emal_46593__flat_268), 0); break; case SAC_HM_any_threaded: SACp_emal_46593__flat_268 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46593__flat_268__sz * sizeof (*SACp_emal_46593__flat_268), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46593__flat_268__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46593__flat_268__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46593__flat_268__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 7262 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 7262 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_off = SACl_od;
      SAC_cond = (SACl_od < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_46597__isaa_36454_a__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_46597__isaa_36454_a__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46593__flat_268[SAC_i] = ( SACp_emal_46597__isaa_36454_a[SAC_off + SAC_i]); };
      }
    }

    { { if (!((1 == SACp_emal_46592_s__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46592_s"); }; { if ((((6 + (SACp_emal_46592_s__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46592_s__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46592_s__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46592_s__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46592_s__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46592_s__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46592_s__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46592_s__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46592_s__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46592_s__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46592_s__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46592_s__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46592_s__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46592_s__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46592_s__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46592_s__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46592_s__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46592_s__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46592_s__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46592_s__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_46593__flat_268__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_46592_s__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46592_s__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46592_s__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACl_od) < 0) ? (-(SACl_od)) : (SACl_od));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46592_s__desc) & (-1 ^ (3))))[4]) = SACp_emal_46592_s__sz = SAC_size;
      if (!((SACp_emal_46592_s__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7297 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 7297 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7297 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7297 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7297 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 7297 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7297 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 7297, __extension__ __PRETTY_FUNCTION__); }))
# 7297 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46592_s = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46592_s__sz * sizeof (*SACp_emal_46592_s)); break; case SAC_HM_multi_threaded: SACp_emal_46592_s = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46592_s__sz * sizeof (*SACp_emal_46592_s), 0); break; case SAC_HM_any_threaded: SACp_emal_46592_s = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46592_s__sz * sizeof (*SACp_emal_46592_s), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46592_s__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46592_s__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46592_s__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 7304 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 7304 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_cnt = SACl_od;
      SAC_cond = (SACl_od < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_46593__flat_268__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_46593__flat_268__sz))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46592_s[SAC_i] = ( SACp_emal_46593__flat_268[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_46593__flat_268); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46593__flat_268__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_46591__dl_27819 = 1; }; }
    ; ; { SACp_emal_46590__dl_27821 = (2) * (SACl_od); };
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "Assignment with incompatible types found"); };
    ;

    }
    ; { SACp_emal_46589__cf_27797 = -(SACl_od); };
    ;
    ; ; { SACp_emal_46589__cf_27797 = (SACp_emal_46589__cf_27797) * (2); };
    ; ; { SACp_emal_46589__cf_27797 = (SACp_emal_46589__cf_27797) + (SACp_emal_46598__isaa_36453_a); };
    { ; ; }
    { { if (!((1 == SACp_emal_46586__flat_274__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46586__flat_274"); }; { if ((((6 + (SACp_emal_46586__flat_274__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46586__flat_274__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46586__flat_274__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46586__flat_274__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46586__flat_274__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46586__flat_274__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46586__flat_274__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46586__flat_274__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46586__flat_274__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46586__flat_274__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46586__flat_274__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46586__flat_274__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46586__flat_274__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46586__flat_274__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46586__flat_274__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46586__flat_274__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46586__flat_274__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46586__flat_274__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46586__flat_274__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46586__flat_274__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_46597__isaa_36454_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_46586__flat_274__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46586__flat_274__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46586__flat_274__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46597__isaa_36454_a__sz - (((SACp_emal_46590__dl_27821) < 0) ? (-(SACp_emal_46590__dl_27821)) : (SACp_emal_46590__dl_27821));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46586__flat_274__desc) & (-1 ^ (3))))[4]) = SACp_emal_46586__flat_274__sz = SAC_size;
      if (!((SACp_emal_46586__flat_274__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7362 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 7362 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7362 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7362 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7362 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 7362 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7362 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 7362, __extension__ __PRETTY_FUNCTION__); }))
# 7362 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46586__flat_274 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46586__flat_274__sz * sizeof (*SACp_emal_46586__flat_274)); break; case SAC_HM_multi_threaded: SACp_emal_46586__flat_274 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46586__flat_274__sz * sizeof (*SACp_emal_46586__flat_274), 0); break; case SAC_HM_any_threaded: SACp_emal_46586__flat_274 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46586__flat_274__sz * sizeof (*SACp_emal_46586__flat_274), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46586__flat_274__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46586__flat_274__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46586__flat_274__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 7369 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 7369 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_46590__dl_27821;
      SAC_cond = (SACp_emal_46590__dl_27821 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_46597__isaa_36454_a__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_46597__isaa_36454_a__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46586__flat_274[SAC_i] = ( SACp_emal_46597__isaa_36454_a[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_46597__isaa_36454_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46597__isaa_36454_a__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    ; { SACp_emal_46585__mse_36468__dl_27813 = ((SACp_emal_46589__cf_27797) < 0) ? -(SACp_emal_46589__cf_27797) : (SACp_emal_46589__cf_27797); };
    { { if (!((1 == SACp_emal_46584_ishp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46584_ishp"); }; { if ((((6 + (SACp_emal_46584_ishp__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46584_ishp__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46584_ishp__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46584_ishp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46584_ishp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46584_ishp__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46584_ishp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46584_ishp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46584_ishp__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46584_ishp__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46584_ishp__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46584_ishp__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46584_ishp__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46584_ishp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46584_ishp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46584_ishp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46584_ishp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46584_ishp__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46584_ishp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46584_ishp__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_46586__flat_274__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_46584_ishp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46584_ishp__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46584_ishp__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_46589__cf_27797) < 0) ? (-(SACp_emal_46589__cf_27797)) : (SACp_emal_46589__cf_27797));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46584_ishp__desc) & (-1 ^ (3))))[4]) = SACp_emal_46584_ishp__sz = SAC_size;
      if (!((SACp_emal_46584_ishp__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7407 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 7407 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7407 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7407 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7407 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 7407 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7407 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 7407, __extension__ __PRETTY_FUNCTION__); }))
# 7407 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46584_ishp = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46584_ishp__sz * sizeof (*SACp_emal_46584_ishp)); break; case SAC_HM_multi_threaded: SACp_emal_46584_ishp = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46584_ishp__sz * sizeof (*SACp_emal_46584_ishp), 0); break; case SAC_HM_any_threaded: SACp_emal_46584_ishp = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46584_ishp__sz * sizeof (*SACp_emal_46584_ishp), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46584_ishp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46584_ishp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46584_ishp__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 7414 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 7414 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_46589__cf_27797;
      SAC_cond = (SACp_emal_46589__cf_27797 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_46586__flat_274__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_46586__flat_274__sz))) { SAC_RuntimeWarningLoc ("./week4.sac", 43, 58, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_46584_ishp[SAC_i] = ( SACp_emal_46586__flat_274[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_46586__flat_274); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46586__flat_274__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (SACp_emal_46599__isaa_36450_od <= SACp_emal_46596__mse_36458__isaa_36452_od) { SACp_emal_46583__uprf_27771 = 1; } else { SACp_emal_46583__uprf_27771 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7780, "Scalar constraint `" "SACp_emal_46599__isaa_36450_od" " (" "%d" ") <= " "SACp_emal_46596__mse_36458__isaa_36452_od" " (" "%d" ")" "' violated", SACp_emal_46599__isaa_36450_od, SACp_emal_46596__mse_36458__isaa_36452_od); }
    { { SACp_emal_46582__uprf_27770 = SACp_emal_46599__isaa_36450_od; } }
    { { if (!((1 == SACp_emal_46581__pinl_18608__idc_6705__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46581__pinl_18608__idc_6705"); }; { { if ((((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705)) + ((6 + (SACp_emal_46581__pinl_18608__idc_6705__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705)) + ((6 + (SACp_emal_46581__pinl_18608__idc_6705__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705)) + ((6 + (SACp_emal_46581__pinl_18608__idc_6705__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46581__pinl_18608__idc_6705 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46581__pinl_18608__idc_6705 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705)) + ((6 + (SACp_emal_46581__pinl_18608__idc_6705__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46581__pinl_18608__idc_6705 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46581__pinl_18608__idc_6705 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705)) + ((6 + (SACp_emal_46581__pinl_18608__idc_6705__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705)) + ((6 + (SACp_emal_46581__pinl_18608__idc_6705__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705)) + ((6 + (SACp_emal_46581__pinl_18608__idc_6705__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705)) + ((6 + (SACp_emal_46581__pinl_18608__idc_6705__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705)) + ((6 + (SACp_emal_46581__pinl_18608__idc_6705__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46581__pinl_18608__idc_6705 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46581__pinl_18608__idc_6705 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46581__pinl_18608__idc_6705 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46581__pinl_18608__idc_6705 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46581__pinl_18608__idc_6705__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705, SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705), ((6 + (SACp_emal_46581__pinl_18608__idc_6705__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46581__pinl_18608__idc_6705__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46581__pinl_18608__idc_6705__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46581__pinl_18608__idc_6705__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46581__pinl_18608__idc_6705__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7710, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46581__pinl_18608__idc_6705__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7710, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46581__pinl_18608__idc_6705[0] = SACp_emal_46582__uprf_27770; }

    { ; ; }
    if (!SACp_emal_46583__uprf_27771) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7701, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46580__pinl_27419__icc_5332 = ( SACp_emal_46581__pinl_18608__idc_6705[SACp_emal_46599__isaa_36450_od]); }

    { { { if (((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705, ((((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705) - 1)->data1.arena)); } else { if (SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705, ((((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705, ((((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705) - 1)->data1.arena)); } } else { if (((((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705, ((((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705) - 1)->data1.arena)); } else { if (((((SACp_emal_46581__pinl_18608__idc_6705__sz * sizeof (*SACp_emal_46581__pinl_18608__idc_6705))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705, ((((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46581__pinl_18608__idc_6705); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46581__pinl_18608__idc_6705__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46579__pinl_27422__icc_5338 = ( SACp_emal_46595__isaa_36457_oshp[SACp_emal_46599__isaa_36450_od]); }

    { { { if (((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp, ((((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp) - 1)->data1.arena)); } else { if (SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp, ((((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp, ((((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp, ((((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp) - 1)->data1.arena)); } else { if (((((SACp_emal_46595__isaa_36457_oshp__sz * sizeof (*SACp_emal_46595__isaa_36457_oshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp, ((((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46595__isaa_36457_oshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46595__isaa_36457_oshp__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound"); }; { { if ((((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound)) + ((6 + (SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound)) + ((6 + (SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound)) + ((6 + (SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound)) + ((6 + (SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound)) + ((6 + (SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound)) + ((6 + (SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound)) + ((6 + (SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound)) + ((6 + (SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound)) + ((6 + (SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound, SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound), ((6 + (SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7780, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7780, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound[0] = SACp_emal_46579__pinl_27422__icc_5338; }

    { { if (!((1 == SACp_emal_46565__pinl_18580__icc_6696__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46565__pinl_18580__icc_6696"); }; { if ((((6 + (SACp_emal_46565__pinl_18580__icc_6696__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46565__pinl_18580__icc_6696__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46565__pinl_18580__icc_6696__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46565__pinl_18580__icc_6696__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46565__pinl_18580__icc_6696__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46565__pinl_18580__icc_6696__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46565__pinl_18580__icc_6696__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46565__pinl_18580__icc_6696__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46565__pinl_18580__icc_6696__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46565__pinl_18580__icc_6696__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46565__pinl_18580__icc_6696__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46565__pinl_18580__icc_6696__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46565__pinl_18580__icc_6696__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46565__pinl_18580__icc_6696__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46565__pinl_18580__icc_6696__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46565__pinl_18580__icc_6696__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46565__pinl_18580__icc_6696__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46565__pinl_18580__icc_6696__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46565__pinl_18580__icc_6696__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46565__pinl_18580__icc_6696__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46565__pinl_18580__icc_6696__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7695, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46565__pinl_18580__icc_6696__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46565__pinl_18580__icc_6696__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46579__pinl_27422__icc_5338;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46565__pinl_18580__icc_6696__desc) & (-1 ^ (3))))[4]) = SACp_emal_46565__pinl_18580__icc_6696__sz = SAC_size;
      if (!((SACp_emal_46565__pinl_18580__icc_6696__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7695, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7495 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 7495 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7495 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7495 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7495 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 7495 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7495 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 7495, __extension__ __PRETTY_FUNCTION__); }))
# 7495 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46565__pinl_18580__icc_6696 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46565__pinl_18580__icc_6696__sz * sizeof (*SACp_emal_46565__pinl_18580__icc_6696)); break; case SAC_HM_multi_threaded: SACp_emal_46565__pinl_18580__icc_6696 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46565__pinl_18580__icc_6696__sz * sizeof (*SACp_emal_46565__pinl_18580__icc_6696), 0); break; case SAC_HM_any_threaded: SACp_emal_46565__pinl_18580__icc_6696 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46565__pinl_18580__icc_6696__sz * sizeof (*SACp_emal_46565__pinl_18580__icc_6696), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46565__pinl_18580__icc_6696__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46565__pinl_18580__icc_6696__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46565__pinl_18580__icc_6696__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7695, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7695, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_46565__pinl_18580__icc_6696_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_46565__pinl_18580__icc_6696_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_46580__pinl_27419__icc_5332;




      SACp_wlidx_45663__pinl_18580__icc_6696
        = SAC_schedule_start0 * SAC_SACp_emal_46565__pinl_18580__icc_6696_shpfac0;

      { int SAC_stop_SACp_pinl_18592__eat_325 = SACp_emal_46580__pinl_27419__icc_5332; for (SACp_pinl_18592__eat_325 = 0; SACp_pinl_18592__eat_325 < SACp_emal_46580__pinl_27419__icc_5332;) {
     



      if (!((0 == (SACp_emal_46565__pinl_18580__icc_6696__dim - SACp_pinl_18590_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7710, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46565__pinl_18580__icc_6696_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7710, "WL expression with illegal size found!"); };
      { SACp_emal_46565__pinl_18580__icc_6696[SACp_wlidx_45663__pinl_18580__icc_6696] = SACp_emal_46591__dl_27819; };

      SACp_wlidx_45663__pinl_18580__icc_6696 = SACp_wlidx_45663__pinl_18580__icc_6696 + 1;
      SACp_pinl_18592__eat_325 = SACp_pinl_18592__eat_325 + 1;
      } }
# 7565 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_46580__pinl_27419__icc_5332;
      SAC_schedule_stop0 = SACp_emal_46579__pinl_27422__icc_5338;




      SACp_wlidx_45663__pinl_18580__icc_6696
        = SAC_schedule_start0 * SAC_SACp_emal_46565__pinl_18580__icc_6696_shpfac0;

      { int SAC_stop_SACp_pinl_18592__eat_325 = SACp_emal_46579__pinl_27422__icc_5338; for (SACp_pinl_18592__eat_325 = SACp_emal_46580__pinl_27419__icc_5332; SACp_pinl_18592__eat_325 < SACp_emal_46579__pinl_27422__icc_5338;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_18592__eat_325 >= 0) { { SACp_emal_46575__uprf_27763 = SACp_pinl_18592__eat_325; }; SACp_emal_46575__uprf_27763 = 1; } else { SACp_emal_46575__uprf_27763 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Non-negativity constraint violated " "for scalar " "SACp_pinl_18592__eat_325"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_18592__eat_325 < SACp_emal_46596__mse_36458__isaa_36452_od) { SACp_emal_46574__uprf_27757 = 1; } else { SACp_emal_46574__uprf_27757 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Scalar constraint `" "SACp_pinl_18592__eat_325" " (" "%d" ") < " "SACp_emal_46596__mse_36458__isaa_36452_od" " (" "%d" ")" "' violated", SACp_pinl_18592__eat_325, SACp_emal_46596__mse_36458__isaa_36452_od); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_18592__eat_325 >= 0) { { SACp_emal_46573__uprf_27748 = SACp_pinl_18592__eat_325; }; SACp_emal_46573__uprf_27748 = 1; } else { SACp_emal_46573__uprf_27748 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Non-negativity constraint violated " "for scalar " "SACp_pinl_18592__eat_325"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_18592__eat_325 < SACp_emal_46596__mse_36458__isaa_36452_od) { SACp_emal_46572__uprf_27742 = 1; } else { SACp_emal_46572__uprf_27742 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Scalar constraint `" "SACp_pinl_18592__eat_325" " (" "%d" ") < " "SACp_emal_46596__mse_36458__isaa_36452_od" " (" "%d" ")" "' violated", SACp_pinl_18592__eat_325, SACp_emal_46596__mse_36458__isaa_36452_od); }
      { { if (!((1 == SACp_emal_46571__pinl_18620__idc_6711__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46571__pinl_18620__idc_6711"); }; { { if ((((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711)) + ((6 + (SACp_emal_46571__pinl_18620__idc_6711__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711)) + ((6 + (SACp_emal_46571__pinl_18620__idc_6711__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711)) + ((6 + (SACp_emal_46571__pinl_18620__idc_6711__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46571__pinl_18620__idc_6711 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46571__pinl_18620__idc_6711 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711)) + ((6 + (SACp_emal_46571__pinl_18620__idc_6711__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46571__pinl_18620__idc_6711 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46571__pinl_18620__idc_6711 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711)) + ((6 + (SACp_emal_46571__pinl_18620__idc_6711__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711)) + ((6 + (SACp_emal_46571__pinl_18620__idc_6711__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711)) + ((6 + (SACp_emal_46571__pinl_18620__idc_6711__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711)) + ((6 + (SACp_emal_46571__pinl_18620__idc_6711__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711)) + ((6 + (SACp_emal_46571__pinl_18620__idc_6711__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46571__pinl_18620__idc_6711 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46571__pinl_18620__idc_6711 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46571__pinl_18620__idc_6711 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46571__pinl_18620__idc_6711 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46571__pinl_18620__idc_6711__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711, SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711), ((6 + (SACp_emal_46571__pinl_18620__idc_6711__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46571__pinl_18620__idc_6711__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46571__pinl_18620__idc_6711__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46571__pinl_18620__idc_6711__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_46571__pinl_18620__idc_6711__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7715, "Assignment with incompatible types found"); };
      if (!((SACp_emal_46571__pinl_18620__idc_6711__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7715, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_46571__pinl_18620__idc_6711[0] = SACp_pinl_18592__eat_325; }

      if (!SACp_emal_46574__uprf_27757) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_46575__uprf_27763) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_46570__ivesli_45704 = ( SACp_emal_46571__pinl_18620__idc_6711[0]);

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_46569__pinl_18573__icc_6684 = ( SACp_emal_46592_s[SACp_emal_46570__ivesli_45704]); }

      { ; ; }
      if (!SACp_emal_46574__uprf_27757) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_46575__uprf_27763) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      if (!SACp_emal_46572__uprf_27742) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_46573__uprf_27748) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_46568__ivesli_45703 = ( SACp_emal_46571__pinl_18620__idc_6711[0]);

      { { { if (((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711, ((((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711) - 1)->data1.arena)); } else { if (SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711, ((((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711, ((((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711) - 1)->data1.arena)); } } else { if (((((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711, ((((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711) - 1)->data1.arena)); } else { if (((((SACp_emal_46571__pinl_18620__idc_6711__sz * sizeof (*SACp_emal_46571__pinl_18620__idc_6711))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711, ((((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46571__pinl_18620__idc_6711); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46571__pinl_18620__idc_6711__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_46567__pinl_18576__icc_6690 = ( SACp_emal_46594_oshp[SACp_emal_46568__ivesli_45703]); }

      { ; ; }
      if (!SACp_emal_46572__uprf_27742) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_46573__uprf_27748) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      ; ; { SACp_emal_46567__pinl_18576__icc_6690 = (SACp_emal_46567__pinl_18576__icc_6690) * (SACp_emal_46569__pinl_18573__icc_6684); };
      { ; ; }



      if (!((0 == (SACp_emal_46565__pinl_18580__icc_6696__dim - SACp_pinl_18590_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46565__pinl_18580__icc_6696_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_46565__pinl_18580__icc_6696[SACp_wlidx_45663__pinl_18580__icc_6696] = SACp_emal_46567__pinl_18576__icc_6690; };

      { ; ; }
      SACp_wlidx_45663__pinl_18580__icc_6696 = SACp_wlidx_45663__pinl_18580__icc_6696 + 1;
      SACp_pinl_18592__eat_325 = SACp_pinl_18592__eat_325 + 1;
      } }
# 7718 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48030_SAC_label:;
    { ; ; }
    { { free (SACp_emal_46594_oshp); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46594_oshp__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_46592_s); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46592_s__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_46583__uprf_27771) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7701, "With-loop guard failed"); }
    { ; ; }
    ; ; { SACp_emal_46564__pinl_18677__flat_2100 = (SACp_emal_46585__mse_36468__dl_27813) + (SACp_emal_46579__pinl_27422__icc_5338); };
    if (SACp_emal_46564__pinl_18677__flat_2100 >= 0) { { SACp_emal_46563__uprf_27719 = SACp_emal_46564__pinl_18677__flat_2100; }; SACp_emal_46563__uprf_27719 = 1; } else { SACp_emal_46563__uprf_27719 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3141, "Non-negativity constraint violated " "for scalar " "SACp_emal_46564__pinl_18677__flat_2100"); }
    { { if (!((1 == SACp_emal_46562__pinl_18728__idc_6808__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46562__pinl_18728__idc_6808"); }; { { if ((((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808)) + ((6 + (SACp_emal_46562__pinl_18728__idc_6808__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808)) + ((6 + (SACp_emal_46562__pinl_18728__idc_6808__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808)) + ((6 + (SACp_emal_46562__pinl_18728__idc_6808__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46562__pinl_18728__idc_6808 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46562__pinl_18728__idc_6808 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808)) + ((6 + (SACp_emal_46562__pinl_18728__idc_6808__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46562__pinl_18728__idc_6808 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46562__pinl_18728__idc_6808 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808)) + ((6 + (SACp_emal_46562__pinl_18728__idc_6808__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808)) + ((6 + (SACp_emal_46562__pinl_18728__idc_6808__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808)) + ((6 + (SACp_emal_46562__pinl_18728__idc_6808__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808)) + ((6 + (SACp_emal_46562__pinl_18728__idc_6808__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808)) + ((6 + (SACp_emal_46562__pinl_18728__idc_6808__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46562__pinl_18728__idc_6808 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46562__pinl_18728__idc_6808 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46562__pinl_18728__idc_6808 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46562__pinl_18728__idc_6808 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46562__pinl_18728__idc_6808__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808, SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808), ((6 + (SACp_emal_46562__pinl_18728__idc_6808__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46562__pinl_18728__idc_6808__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46562__pinl_18728__idc_6808__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46562__pinl_18728__idc_6808__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46562__pinl_18728__idc_6808__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 2929, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46562__pinl_18728__idc_6808__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 2929, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46562__pinl_18728__idc_6808[0] = SACp_emal_46564__pinl_18677__flat_2100; }

    if (SACp_emal_46599__isaa_36450_od <= SACp_emal_46564__pinl_18677__flat_2100) { SACp_emal_46561__uprf_27713 = 1; } else { SACp_emal_46561__uprf_27713 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3141, "Scalar constraint `" "SACp_emal_46599__isaa_36450_od" " (" "%d" ") <= " "SACp_emal_46564__pinl_18677__flat_2100" " (" "%d" ")" "' violated", SACp_emal_46599__isaa_36450_od, SACp_emal_46564__pinl_18677__flat_2100); }
    { ; ; }
    { { SACp_emal_46560__uprf_27712 = SACp_emal_46599__isaa_36450_od; } }
    { { if (!((1 == SACp_emal_46559__pinl_18739__idc_6814__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46559__pinl_18739__idc_6814"); }; { { if ((((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814)) + ((6 + (SACp_emal_46559__pinl_18739__idc_6814__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814)) + ((6 + (SACp_emal_46559__pinl_18739__idc_6814__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814)) + ((6 + (SACp_emal_46559__pinl_18739__idc_6814__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46559__pinl_18739__idc_6814 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46559__pinl_18739__idc_6814 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814)) + ((6 + (SACp_emal_46559__pinl_18739__idc_6814__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46559__pinl_18739__idc_6814 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46559__pinl_18739__idc_6814 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814)) + ((6 + (SACp_emal_46559__pinl_18739__idc_6814__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814)) + ((6 + (SACp_emal_46559__pinl_18739__idc_6814__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814)) + ((6 + (SACp_emal_46559__pinl_18739__idc_6814__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814)) + ((6 + (SACp_emal_46559__pinl_18739__idc_6814__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814)) + ((6 + (SACp_emal_46559__pinl_18739__idc_6814__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46559__pinl_18739__idc_6814 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46559__pinl_18739__idc_6814 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46559__pinl_18739__idc_6814 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46559__pinl_18739__idc_6814 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46559__pinl_18739__idc_6814__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814, SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814), ((6 + (SACp_emal_46559__pinl_18739__idc_6814__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46559__pinl_18739__idc_6814__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46559__pinl_18739__idc_6814__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46559__pinl_18739__idc_6814__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46559__pinl_18739__idc_6814__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "Assignment with incompatible types found"); };
    if (!((SACp_emal_46559__pinl_18739__idc_6814__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_46559__pinl_18739__idc_6814[0] = SACp_emal_46560__uprf_27712; }

    { ; ; }
    if (!SACp_emal_46563__uprf_27719) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3074, "With-loop guard failed"); }
    if (!SACp_emal_46561__uprf_27713) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3074, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46558__pinl_27480__icc_5332 = ( SACp_emal_46559__pinl_18739__idc_6814[SACp_emal_46599__isaa_36450_od]); }

    { { { if (((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814, ((((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814) - 1)->data1.arena)); } else { if (SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814, ((((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814, ((((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814) - 1)->data1.arena)); } } else { if (((((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814, ((((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814) - 1)->data1.arena)); } else { if (((((SACp_emal_46559__pinl_18739__idc_6814__sz * sizeof (*SACp_emal_46559__pinl_18739__idc_6814))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814, ((((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46559__pinl_18739__idc_6814); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46559__pinl_18739__idc_6814__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46557__pinl_27483__icc_5338 = ( SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound[SACp_emal_46599__isaa_36450_od]); }

    { { { if (((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound, ((((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound) - 1)->data1.arena)); } else { if (SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound, ((((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound, ((((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound) - 1)->data1.arena)); } } else { if (((((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound, ((((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound) - 1)->data1.arena)); } else { if (((((SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__sz * sizeof (*SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound, ((((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46578__pinl_18647__wlbsc_9044_sc_bound__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_46556__pinl_27538_res = (SACp_emal_46558__pinl_27480__icc_5332) > (SACp_emal_46557__pinl_27483__icc_5338) ? (SACp_emal_46558__pinl_27480__icc_5332) : (SACp_emal_46557__pinl_27483__icc_5338); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3141, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e = ( SACp_emal_46562__pinl_18728__idc_6808[SACp_emal_46599__isaa_36450_od]); }

    { { { if (((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808, ((((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808) - 1)->data1.arena)); } else { if (SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808, ((((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808, ((((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808) - 1)->data1.arena)); } } else { if (((((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808, ((((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808) - 1)->data1.arena)); } else { if (((((SACp_emal_46562__pinl_18728__idc_6808__sz * sizeof (*SACp_emal_46562__pinl_18728__idc_6808))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808, ((((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46562__pinl_18728__idc_6808); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46562__pinl_18728__idc_6808__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_46547__pinl_18664__icc_6774__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46547__pinl_18664__icc_6774"); }; { if ((((6 + (SACp_emal_46547__pinl_18664__icc_6774__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46547__pinl_18664__icc_6774__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46547__pinl_18664__icc_6774__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46547__pinl_18664__icc_6774__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46547__pinl_18664__icc_6774__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46547__pinl_18664__icc_6774__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46547__pinl_18664__icc_6774__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46547__pinl_18664__icc_6774__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46547__pinl_18664__icc_6774__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46547__pinl_18664__icc_6774__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46547__pinl_18664__icc_6774__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46547__pinl_18664__icc_6774__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46547__pinl_18664__icc_6774__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46547__pinl_18664__icc_6774__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46547__pinl_18664__icc_6774__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46547__pinl_18664__icc_6774__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46547__pinl_18664__icc_6774__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46547__pinl_18664__icc_6774__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46547__pinl_18664__icc_6774__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46547__pinl_18664__icc_6774__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46547__pinl_18664__icc_6774__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3068, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_46547__pinl_18664__icc_6774__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46547__pinl_18664__icc_6774__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46547__pinl_18664__icc_6774__desc) & (-1 ^ (3))))[4]) = SACp_emal_46547__pinl_18664__icc_6774__sz = SAC_size;
      if (!((SACp_emal_46547__pinl_18664__icc_6774__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3068, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7807 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 7807 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7807 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7807 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7807 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 7807 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7807 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 7807, __extension__ __PRETTY_FUNCTION__); }))
# 7807 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46547__pinl_18664__icc_6774 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46547__pinl_18664__icc_6774__sz * sizeof (*SACp_emal_46547__pinl_18664__icc_6774)); break; case SAC_HM_multi_threaded: SACp_emal_46547__pinl_18664__icc_6774 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46547__pinl_18664__icc_6774__sz * sizeof (*SACp_emal_46547__pinl_18664__icc_6774), 0); break; case SAC_HM_any_threaded: SACp_emal_46547__pinl_18664__icc_6774 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46547__pinl_18664__icc_6774__sz * sizeof (*SACp_emal_46547__pinl_18664__icc_6774), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46547__pinl_18664__icc_6774__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46547__pinl_18664__icc_6774__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46547__pinl_18664__icc_6774__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3068, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3068, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_46547__pinl_18664__icc_6774_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_46547__pinl_18664__icc_6774_shpfac0 = 1;
      }




      SAC_schedule_start0 = SACp_emal_46556__pinl_27538_res;
      SAC_schedule_stop0 = SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e;




      SACp_wlidx_45664__pinl_18664__icc_6774
        = SAC_schedule_start0 * SAC_SACp_emal_46547__pinl_18664__icc_6774_shpfac0;

      { int SAC_stop_SACp_pinl_18702__eat_327 = SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e; for (SACp_pinl_18702__eat_327 = SACp_emal_46556__pinl_27538_res; SACp_pinl_18702__eat_327 < SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e;) {
     



      if (!((0 == (SACp_emal_46547__pinl_18664__icc_6774__dim - SACp_pinl_18697_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46547__pinl_18664__icc_6774_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "WL expression with illegal size found!"); };
      { SACp_emal_46547__pinl_18664__icc_6774[SACp_wlidx_45664__pinl_18664__icc_6774] = SACp_emal_46599__isaa_36450_od; };

      SACp_wlidx_45664__pinl_18664__icc_6774 = SACp_wlidx_45664__pinl_18664__icc_6774 + 1;
      SACp_pinl_18702__eat_327 = SACp_pinl_18702__eat_327 + 1;
      } }
# 7877 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_46558__pinl_27480__icc_5332;




      SACp_wlidx_45664__pinl_18664__icc_6774
        = SAC_schedule_start0 * SAC_SACp_emal_46547__pinl_18664__icc_6774_shpfac0;

      { int SAC_stop_SACp_pinl_18702__eat_327 = SACp_emal_46558__pinl_27480__icc_5332; for (SACp_pinl_18702__eat_327 = 0; SACp_pinl_18702__eat_327 < SACp_emal_46558__pinl_27480__icc_5332;) {
     



      if (!((0 == (SACp_emal_46547__pinl_18664__icc_6774__dim - SACp_pinl_18697_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46547__pinl_18664__icc_6774_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "WL expression with illegal size found!"); };
      { SACp_emal_46547__pinl_18664__icc_6774[SACp_wlidx_45664__pinl_18664__icc_6774] = SACp_emal_46599__isaa_36450_od; };

      SACp_wlidx_45664__pinl_18664__icc_6774 = SACp_wlidx_45664__pinl_18664__icc_6774 + 1;
      SACp_pinl_18702__eat_327 = SACp_pinl_18702__eat_327 + 1;
      } }
# 7906 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_46558__pinl_27480__icc_5332;
      SAC_schedule_stop0 = SACp_emal_46557__pinl_27483__icc_5338;




      SACp_wlidx_45664__pinl_18664__icc_6774
        = SAC_schedule_start0 * SAC_SACp_emal_46547__pinl_18664__icc_6774_shpfac0;

      { int SAC_stop_SACp_pinl_18702__eat_327 = SACp_emal_46557__pinl_27483__icc_5338; for (SACp_pinl_18702__eat_327 = SACp_emal_46558__pinl_27480__icc_5332; SACp_pinl_18702__eat_327 < SACp_emal_46557__pinl_27483__icc_5338;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_18702__eat_327 >= 0) { { SACp_emal_46552__uprf_27705 = SACp_pinl_18702__eat_327; }; SACp_emal_46552__uprf_27705 = 1; } else { SACp_emal_46552__uprf_27705 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Non-negativity constraint violated " "for scalar " "SACp_pinl_18702__eat_327"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_18702__eat_327 < SACp_emal_46579__pinl_27422__icc_5338) { SACp_emal_46551__uprf_27699 = 1; } else { SACp_emal_46551__uprf_27699 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Scalar constraint `" "SACp_pinl_18702__eat_327" " (" "%d" ") < " "SACp_emal_46579__pinl_27422__icc_5338" " (" "%d" ")" "' violated", SACp_pinl_18702__eat_327, SACp_emal_46579__pinl_27422__icc_5338); }
      { { if (!((1 == SACp_emal_46550__pinl_18745__idc_6817__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46550__pinl_18745__idc_6817"); }; { { if ((((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817)) + ((6 + (SACp_emal_46550__pinl_18745__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817)) + ((6 + (SACp_emal_46550__pinl_18745__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817)) + ((6 + (SACp_emal_46550__pinl_18745__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46550__pinl_18745__idc_6817 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46550__pinl_18745__idc_6817 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817)) + ((6 + (SACp_emal_46550__pinl_18745__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46550__pinl_18745__idc_6817 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46550__pinl_18745__idc_6817 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817)) + ((6 + (SACp_emal_46550__pinl_18745__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817)) + ((6 + (SACp_emal_46550__pinl_18745__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817)) + ((6 + (SACp_emal_46550__pinl_18745__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817)) + ((6 + (SACp_emal_46550__pinl_18745__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817)) + ((6 + (SACp_emal_46550__pinl_18745__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46550__pinl_18745__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46550__pinl_18745__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46550__pinl_18745__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46550__pinl_18745__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46550__pinl_18745__idc_6817__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817, SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817), ((6 + (SACp_emal_46550__pinl_18745__idc_6817__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46550__pinl_18745__idc_6817__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46550__pinl_18745__idc_6817__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46550__pinl_18745__idc_6817__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_46550__pinl_18745__idc_6817__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3088, "Assignment with incompatible types found"); };
      if (!((SACp_emal_46550__pinl_18745__idc_6817__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3088, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_46550__pinl_18745__idc_6817[0] = SACp_pinl_18702__eat_327; }

      if (!SACp_emal_46551__uprf_27699) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_46552__uprf_27705) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_46549__ivesli_45702 = ( SACp_emal_46550__pinl_18745__idc_6817[0]);

      { { { if (((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817, ((((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817) - 1)->data1.arena)); } else { if (SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817, ((((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817, ((((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817) - 1)->data1.arena)); } } else { if (((((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817, ((((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817) - 1)->data1.arena)); } else { if (((((SACp_emal_46550__pinl_18745__idc_6817__sz * sizeof (*SACp_emal_46550__pinl_18745__idc_6817))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817, ((((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46550__pinl_18745__idc_6817); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46550__pinl_18745__idc_6817__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_46548__pinl_18659__icc_6768 = ( SACp_emal_46565__pinl_18580__icc_6696[SACp_emal_46549__ivesli_45702]); }

      { ; ; }
      if (!SACp_emal_46551__uprf_27699) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_46552__uprf_27705) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }



      if (!((0 == (SACp_emal_46547__pinl_18664__icc_6774__dim - SACp_pinl_18697_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46547__pinl_18664__icc_6774_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_46547__pinl_18664__icc_6774[SACp_wlidx_45664__pinl_18664__icc_6774] = SACp_emal_46548__pinl_18659__icc_6768; };

      { ; ; }
      SACp_wlidx_45664__pinl_18664__icc_6774 = SACp_wlidx_45664__pinl_18664__icc_6774 + 1;
      SACp_pinl_18702__eat_327 = SACp_pinl_18702__eat_327 + 1;
      } }
# 8004 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48031_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_46565__pinl_18580__icc_6696); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46565__pinl_18580__icc_6696__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_46563__uprf_27719) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3074, "With-loop guard failed"); }
    if (!SACp_emal_46561__uprf_27713) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3074, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { { if (!((1 == SACp_emal_46533__pinl_18676__icc_6795__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46533__pinl_18676__icc_6795"); }; { if ((((6 + (SACp_emal_46533__pinl_18676__icc_6795__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46533__pinl_18676__icc_6795__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_46533__pinl_18676__icc_6795__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46533__pinl_18676__icc_6795__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46533__pinl_18676__icc_6795__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_46533__pinl_18676__icc_6795__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46533__pinl_18676__icc_6795__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46533__pinl_18676__icc_6795__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_46533__pinl_18676__icc_6795__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_46533__pinl_18676__icc_6795__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_46533__pinl_18676__icc_6795__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_46533__pinl_18676__icc_6795__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_46533__pinl_18676__icc_6795__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46533__pinl_18676__icc_6795__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46533__pinl_18676__icc_6795__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46533__pinl_18676__icc_6795__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46533__pinl_18676__icc_6795__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46533__pinl_18676__icc_6795__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46533__pinl_18676__icc_6795__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46533__pinl_18676__icc_6795__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_46533__pinl_18676__icc_6795__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3260, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_46533__pinl_18676__icc_6795__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46533__pinl_18676__icc_6795__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46547__pinl_18664__icc_6774__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46533__pinl_18676__icc_6795__desc) & (-1 ^ (3))))[4]) = SACp_emal_46533__pinl_18676__icc_6795__sz = SAC_size * SACp_emal_46547__pinl_18664__icc_6774__sz;
      if (!((SACp_emal_46533__pinl_18676__icc_6795__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3260, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8033 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 8033 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8033 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 8033 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8033 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 8033 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8033 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 8033, __extension__ __PRETTY_FUNCTION__); }))
# 8033 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46533__pinl_18676__icc_6795 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46533__pinl_18676__icc_6795__sz * sizeof (*SACp_emal_46533__pinl_18676__icc_6795)); break; case SAC_HM_multi_threaded: SACp_emal_46533__pinl_18676__icc_6795 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46533__pinl_18676__icc_6795__sz * sizeof (*SACp_emal_46533__pinl_18676__icc_6795), 0); break; case SAC_HM_any_threaded: SACp_emal_46533__pinl_18676__icc_6795 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46533__pinl_18676__icc_6795__sz * sizeof (*SACp_emal_46533__pinl_18676__icc_6795), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46533__pinl_18676__icc_6795__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46533__pinl_18676__icc_6795__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46533__pinl_18676__icc_6795__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3260, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3260, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_46533__pinl_18676__icc_6795_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_46533__pinl_18676__icc_6795_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_46579__pinl_27422__icc_5338;




      SACp_wlidx_45665__pinl_18676__icc_6795
        = SAC_schedule_start0 * SAC_SACp_emal_46533__pinl_18676__icc_6795_shpfac0;

      { int SAC_stop_SACp_pinl_18703__eat_328 = SACp_emal_46579__pinl_27422__icc_5338; for (SACp_pinl_18703__eat_328 = 0; SACp_pinl_18703__eat_328 < SACp_emal_46579__pinl_27422__icc_5338;) {
     
      { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46547__pinl_18664__icc_6774__desc) & (-1 ^ (3))))[0]) += 1; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_18703__eat_328 >= 0) { { SACp_emal_46545__uprf_34398 = SACp_pinl_18703__eat_328; }; SACp_emal_46545__uprf_34398 = 1; } else { SACp_emal_46545__uprf_34398 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Non-negativity constraint violated " "for scalar " "SACp_pinl_18703__eat_328"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_18703__eat_328 < SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e) { SACp_emal_46544__uprf_34392 = 1; } else { SACp_emal_46544__uprf_34392 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Scalar constraint `" "SACp_pinl_18703__eat_328" " (" "%d" ") < " "SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e" " (" "%d" ")" "' violated", SACp_pinl_18703__eat_328, SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e); }
      { { if (!((1 == SACp_emal_46543__pinl_27646__idc_4889__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46543__pinl_27646__idc_4889"); }; { { if ((((SACp_emal_46543__pinl_27646__idc_4889__sz * sizeof (*SACp_emal_46543__pinl_27646__idc_4889)) + ((6 + (SACp_emal_46543__pinl_27646__idc_4889__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46543__pinl_27646__idc_4889__sz * sizeof (*SACp_emal_46543__pinl_27646__idc_4889)) + ((6 + (SACp_emal_46543__pinl_27646__idc_4889__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46543__pinl_27646__idc_4889__sz * sizeof (*SACp_emal_46543__pinl_27646__idc_4889)) + ((6 + (SACp_emal_46543__pinl_27646__idc_4889__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46543__pinl_27646__idc_4889 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46543__pinl_27646__idc_4889 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46543__pinl_27646__idc_4889__sz * sizeof (*SACp_emal_46543__pinl_27646__idc_4889)) + ((6 + (SACp_emal_46543__pinl_27646__idc_4889__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46543__pinl_27646__idc_4889 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46543__pinl_27646__idc_4889 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46543__pinl_27646__idc_4889__sz * sizeof (*SACp_emal_46543__pinl_27646__idc_4889)) + ((6 + (SACp_emal_46543__pinl_27646__idc_4889__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46543__pinl_27646__idc_4889__sz * sizeof (*SACp_emal_46543__pinl_27646__idc_4889)) + ((6 + (SACp_emal_46543__pinl_27646__idc_4889__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46543__pinl_27646__idc_4889__sz * sizeof (*SACp_emal_46543__pinl_27646__idc_4889)) + ((6 + (SACp_emal_46543__pinl_27646__idc_4889__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46543__pinl_27646__idc_4889__sz * sizeof (*SACp_emal_46543__pinl_27646__idc_4889)) + ((6 + (SACp_emal_46543__pinl_27646__idc_4889__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46543__pinl_27646__idc_4889__sz * sizeof (*SACp_emal_46543__pinl_27646__idc_4889)) + ((6 + (SACp_emal_46543__pinl_27646__idc_4889__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46543__pinl_27646__idc_4889 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46543__pinl_27646__idc_4889 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46543__pinl_27646__idc_4889 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46543__pinl_27646__idc_4889 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46543__pinl_27646__idc_4889__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46543__pinl_27646__idc_4889, SACp_emal_46543__pinl_27646__idc_4889__sz * sizeof (*SACp_emal_46543__pinl_27646__idc_4889), ((6 + (SACp_emal_46543__pinl_27646__idc_4889__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46543__pinl_27646__idc_4889__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46543__pinl_27646__idc_4889__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46543__pinl_27646__idc_4889__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_46543__pinl_27646__idc_4889__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 190, "Assignment with incompatible types found"); };
      if (!((SACp_emal_46543__pinl_27646__idc_4889__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 190, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_46543__pinl_27646__idc_4889[0] = SACp_pinl_18703__eat_328; }

      if (!SACp_emal_46544__uprf_34392) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_46545__uprf_34398) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Primitive function _sel_VxA_ guard failed"); }



      SACp_pinl_27604__icc_4867__desc = SACp_emal_46547__pinl_18664__icc_6774__desc;
      SACp_pinl_27604__icc_4867__sz = SACp_emal_46547__pinl_18664__icc_6774__sz;
      SACp_pinl_27604__icc_4867__dim = SACp_emal_46547__pinl_18664__icc_6774__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27604__icc_4867__desc) & (-1 ^ (3))))[3]) = SACp_emal_46547__pinl_18664__icc_6774__dim;
      { SACp_pinl_27604__icc_4867 = SACp_emal_46547__pinl_18664__icc_6774; }




      if (!((SACp_pinl_27603__icc_4866__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Assignment with incompatible types found"); };
      SACp_pinl_27603__icc_4866__desc = SACp_emal_46543__pinl_27646__idc_4889__desc;
      SACp_pinl_27603__icc_4866__shp0 = SACp_emal_46543__pinl_27646__idc_4889__shp0;
      SACp_pinl_27603__icc_4866__sz = SACp_emal_46543__pinl_27646__idc_4889__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27603__icc_4866__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_46543__pinl_27646__idc_4889__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27603__icc_4866__desc) & (-1 ^ (3))))[4]) = SACp_emal_46543__pinl_27646__idc_4889__sz;
      { SACp_pinl_27603__icc_4866 = SACp_emal_46543__pinl_27646__idc_4889; }

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Assignment with incompatible types found"); };
      ;

      }



      {
        int SAC_l;
        SAC_l = 0;
        SAC_l *= SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e;
        if (0 < SACp_pinl_27603__icc_4866__sz)
        {

          SAC_l += ( SACp_pinl_27603__icc_4866[0]);
        }
SACp_emal_46542__ivesli_45701 = SAC_l; }

      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27603__icc_4866__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_27603__icc_4866); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27603__icc_4866__desc) & (-1 ^ (3))))); } } } } else { } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_46541__pinl_27605__icc_4868 = ( SACp_pinl_27604__icc_4867[SACp_emal_46542__ivesli_45701]); }

      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27604__icc_4867__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_27604__icc_4867); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_27604__icc_4867__desc) & (-1 ^ (3))))); } } } } else { } }
      { ; ; }
      if (!SACp_emal_46544__uprf_34392) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_46545__uprf_34398) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }



      if (!((0 == (SACp_emal_46533__pinl_18676__icc_6795__dim - SACp_pinl_18700_iv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3275, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46533__pinl_18676__icc_6795_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3275, "WL expression with illegal size found!"); };
      { SACp_emal_46533__pinl_18676__icc_6795[SACp_wlidx_45665__pinl_18676__icc_6795] = SACp_emal_46541__pinl_27605__icc_4868; };

      { ; ; }
      SACp_wlidx_45665__pinl_18676__icc_6795 = SACp_wlidx_45665__pinl_18676__icc_6795 + 1;
      SACp_pinl_18703__eat_328 = SACp_pinl_18703__eat_328 + 1;
      } }
# 8203 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_46579__pinl_27422__icc_5338;
      SAC_schedule_stop0 = SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e;




      SACp_wlidx_45665__pinl_18676__icc_6795
        = SAC_schedule_start0 * SAC_SACp_emal_46533__pinl_18676__icc_6795_shpfac0;

      { int SAC_stop_SACp_pinl_18703__eat_328 = SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e; for (SACp_pinl_18703__eat_328 = SACp_emal_46579__pinl_27422__icc_5338; SACp_pinl_18703__eat_328 < SACp_emal_46555__pinl_18814__wlbsc_9094_sc_e;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3308, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_46539__uprf_27679 = (SACp_pinl_18703__eat_328) - (SACp_emal_46579__pinl_27422__icc_5338); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_emal_46539__uprf_27679 >= 0) { { SACp_emal_46538__uprf_27673 = SACp_emal_46539__uprf_27679; }; SACp_emal_46538__uprf_27673 = 1; } else { SACp_emal_46538__uprf_27673 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Non-negativity constraint violated " "for scalar " "SACp_emal_46539__uprf_27679"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_emal_46539__uprf_27679 < SACp_emal_46585__mse_36468__dl_27813) { SACp_emal_46537__uprf_27667 = 1; } else { SACp_emal_46537__uprf_27667 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Scalar constraint `" "SACp_emal_46539__uprf_27679" " (" "%d" ") < " "SACp_emal_46585__mse_36468__dl_27813" " (" "%d" ")" "' violated", SACp_emal_46539__uprf_27679, SACp_emal_46585__mse_36468__dl_27813); }
      { { if (!((1 == SACp_emal_46536__pinl_18765__idc_6828__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_46536__pinl_18765__idc_6828"); }; { { if ((((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828)) + ((6 + (SACp_emal_46536__pinl_18765__idc_6828__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828)) + ((6 + (SACp_emal_46536__pinl_18765__idc_6828__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828)) + ((6 + (SACp_emal_46536__pinl_18765__idc_6828__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46536__pinl_18765__idc_6828 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_46536__pinl_18765__idc_6828 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828)) + ((6 + (SACp_emal_46536__pinl_18765__idc_6828__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_46536__pinl_18765__idc_6828 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_46536__pinl_18765__idc_6828 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828)) + ((6 + (SACp_emal_46536__pinl_18765__idc_6828__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828)) + ((6 + (SACp_emal_46536__pinl_18765__idc_6828__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828)) + ((6 + (SACp_emal_46536__pinl_18765__idc_6828__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828)) + ((6 + (SACp_emal_46536__pinl_18765__idc_6828__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828)) + ((6 + (SACp_emal_46536__pinl_18765__idc_6828__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_46536__pinl_18765__idc_6828 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_46536__pinl_18765__idc_6828 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_46536__pinl_18765__idc_6828 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_46536__pinl_18765__idc_6828 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_46536__pinl_18765__idc_6828__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828, SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828), ((6 + (SACp_emal_46536__pinl_18765__idc_6828__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46536__pinl_18765__idc_6828__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46536__pinl_18765__idc_6828__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46536__pinl_18765__idc_6828__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_46536__pinl_18765__idc_6828__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3308, "Assignment with incompatible types found"); };
      if (!((SACp_emal_46536__pinl_18765__idc_6828__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3308, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_46536__pinl_18765__idc_6828[0] = SACp_emal_46539__uprf_27679; }

      { ; ; }
      if (!SACp_emal_46537__uprf_27667) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_46538__uprf_27673) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_46535__ivesli_45700 = ( SACp_emal_46536__pinl_18765__idc_6828[0]);

      { { { if (((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828, ((((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828) - 1)->data1.arena)); } else { if (SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828, ((((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828, ((((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828) - 1)->data1.arena)); } } else { if (((((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828, ((((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828) - 1)->data1.arena)); } else { if (((((SACp_emal_46536__pinl_18765__idc_6828__sz * sizeof (*SACp_emal_46536__pinl_18765__idc_6828))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828, ((((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_46536__pinl_18765__idc_6828); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46536__pinl_18765__idc_6828__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_46534__pinl_18673__icc_6792 = ( SACp_emal_46584_ishp[SACp_emal_46535__ivesli_45700]); }

      { ; ; }
      if (!SACp_emal_46537__uprf_27667) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_46538__uprf_27673) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }



      if (!((0 == (SACp_emal_46533__pinl_18676__icc_6795__dim - SACp_pinl_18700_iv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_46533__pinl_18676__icc_6795_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_46533__pinl_18676__icc_6795[SACp_wlidx_45665__pinl_18676__icc_6795] = SACp_emal_46534__pinl_18673__icc_6792; };

      { ; ; }
      SACp_wlidx_45665__pinl_18676__icc_6795 = SACp_wlidx_45665__pinl_18676__icc_6795 + 1;
      SACp_pinl_18703__eat_328 = SACp_pinl_18703__eat_328 + 1;
      } }
# 8311 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48032_SAC_label:;
    { { free (SACp_emal_46584_ishp); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46584_ishp__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_46547__pinl_18664__icc_6774); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46547__pinl_18664__icc_6774__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_46533__pinl_18676__icc_6795__sz; SAC_i++) { if (( SACp_emal_46533__pinl_18676__icc_6795[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Non-negativity constraint violated " "for vector " "SACp_emal_46533__pinl_18676__icc_6795"); } { SACp_emal_46532__pinl_18819__icc_3353_pred = ( SACp_emal_46533__pinl_18676__icc_6795[SAC_i]); }; } SACp_emal_46532__pinl_18819__icc_3353_pred = SAC_all; }



    {
      int SAC_i, SAC_p1 = 1, SAC_p2 = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_46533__pinl_18676__icc_6795__shp0; SAC_i++) {
        SAC_p1 *= ( SACp_emal_46533__pinl_18676__icc_6795[SAC_i]); }
      for (SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
        SAC_p2 *= (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]);
      }
      if (SAC_p1 == SAC_p2) {
        SACp_emal_46531__pinl_18821__icc_3354_pred = 1;
      }
      else {
        SACp_emal_46531__pinl_18821__icc_3354_pred = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Arrays `" "SACp_emal_46533__pinl_18676__icc_6795""' with shape %s ""And `" "SACl_a""' with shape %s ""do not adhere to prod matches prod shape constraint", SAC_PrintShape (SACp_emal_46533__pinl_18676__icc_6795__desc), SAC_PrintShape (SACl_a__desc));
      }
    }

    if (!SACp_emal_46531__pinl_18821__icc_3354_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Primitive function _reshape_VxA_ guard failed"); }
    if (!SACp_emal_46532__pinl_18819__icc_3353_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Primitive function _reshape_VxA_ guard failed"); }
    if ((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) == 1) {
    { if (!((SACp_emal_46533__pinl_18676__icc_6795__sz >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_46530__pinl_18818__icc_3357"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8345 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 8345 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8345 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 8345 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8345 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 8345 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8345 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 8345, __extension__ __PRETTY_FUNCTION__); }))
# 8345 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46530__pinl_18818__icc_3357__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (SACp_emal_46533__pinl_18676__icc_6795__sz)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_46530__pinl_18818__icc_3357__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (SACp_emal_46533__pinl_18676__icc_6795__sz)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_46530__pinl_18818__icc_3357__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (SACp_emal_46533__pinl_18676__icc_6795__sz)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[3]) = SACp_emal_46530__pinl_18818__icc_3357__dim = SACp_emal_46533__pinl_18676__icc_6795__sz; }
    { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } }



    SACl_a__desc = SACp_emal_46530__pinl_18818__icc_3357__desc;

    { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[0]) = 1; }



   
    if (!((SACp_emal_46533__pinl_18676__icc_6795__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "1st argument of _reshape_VxA_ is not a vector!"); };
    if (!((SACp_emal_46530__pinl_18818__icc_3357__dim == SACp_emal_46533__pinl_18676__icc_6795__sz))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_46533__pinl_18676__icc_6795__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_46533__pinl_18676__icc_6795[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[4]) = SACp_emal_46530__pinl_18818__icc_3357__sz = SAC_size;
      if (!((SACp_emal_46530__pinl_18818__icc_3357__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Array with size <0 found!"); };
    }

    { SACp_emal_46530__pinl_18818__icc_3357 = SACl_a; }
    { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[0]) += 1; }
    } else {
    { { if (!((SACp_emal_46533__pinl_18676__icc_6795__sz >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_46530__pinl_18818__icc_3357"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8375 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 8375 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8375 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 8375 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8375 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 8375 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8375 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 8375, __extension__ __PRETTY_FUNCTION__); }))
# 8375 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46530__pinl_18818__icc_3357__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (SACp_emal_46533__pinl_18676__icc_6795__sz)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_46530__pinl_18818__icc_3357__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (SACp_emal_46533__pinl_18676__icc_6795__sz)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_46530__pinl_18818__icc_3357__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (SACp_emal_46533__pinl_18676__icc_6795__sz)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[3]) = SACp_emal_46530__pinl_18818__icc_3357__dim = SACp_emal_46533__pinl_18676__icc_6795__sz; }



   
    if (!((SACp_emal_46533__pinl_18676__icc_6795__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "1st argument of _reshape_VxA_ is not a vector!"); };
    if (!((SACp_emal_46530__pinl_18818__icc_3357__dim == SACp_emal_46533__pinl_18676__icc_6795__sz))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_46533__pinl_18676__icc_6795__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_46533__pinl_18676__icc_6795[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[4]) = SACp_emal_46530__pinl_18818__icc_3357__sz = SAC_size;
      if (!((SACp_emal_46530__pinl_18818__icc_3357__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8395 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 8395 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8395 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 8395 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8395 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 8395 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8395 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 8395, __extension__ __PRETTY_FUNCTION__); }))
# 8395 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_46530__pinl_18818__icc_3357 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_46530__pinl_18818__icc_3357__sz * sizeof (*SACp_emal_46530__pinl_18818__icc_3357)); break; case SAC_HM_multi_threaded: SACp_emal_46530__pinl_18818__icc_3357 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_46530__pinl_18818__icc_3357__sz * sizeof (*SACp_emal_46530__pinl_18818__icc_3357), 0); break; case SAC_HM_any_threaded: SACp_emal_46530__pinl_18818__icc_3357 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_46530__pinl_18818__icc_3357__sz * sizeof (*SACp_emal_46530__pinl_18818__icc_3357), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46530__pinl_18818__icc_3357__desc) & (-1 ^ (3))))[1]) = 0; } }
    }
    { { free (SACp_emal_46533__pinl_18676__icc_6795); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_46533__pinl_18676__icc_6795__desc) & (-1 ^ (3))))); } } }
    SACp_emrb_47777_mem = (SACp_emal_46530__pinl_18818__icc_3357 == SACl_a);
    if (SACp_emrb_47777_mem)
    {
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
      ;
      ;



      SACp_pinl_18818__icc_3357__desc = SACp_emal_46530__pinl_18818__icc_3357__desc;
      SACp_pinl_18818__icc_3357__sz = SACp_emal_46530__pinl_18818__icc_3357__sz;
      SACp_pinl_18818__icc_3357__dim = SACp_emal_46530__pinl_18818__icc_3357__dim;
      ;
      { SACp_pinl_18818__icc_3357 = SACp_emal_46530__pinl_18818__icc_3357; }

    }
    else
    {
      ;
      { int SAC_i; if (!((SACp_emal_46530__pinl_18818__icc_3357__sz == SACl_a__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACl_a__sz; SAC_i++) { { SACp_emal_46530__pinl_18818__icc_3357[SAC_i] = ( SACl_a[SAC_i]); } } }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }



      SACp_pinl_18818__icc_3357__desc = SACp_emal_46530__pinl_18818__icc_3357__desc;
      SACp_pinl_18818__icc_3357__sz = SACp_emal_46530__pinl_18818__icc_3357__sz;
      SACp_pinl_18818__icc_3357__dim = SACp_emal_46530__pinl_18818__icc_3357__dim;
      ;
      { SACp_pinl_18818__icc_3357 = SACp_emal_46530__pinl_18818__icc_3357; }

    }
    if (!SACp_emal_46531__pinl_18821__icc_3354_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Primitive function _reshape_VxA_ guard failed"); }
    if (!SACp_emal_46532__pinl_18819__icc_3353_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Primitive function _reshape_VxA_ guard failed"); }
    { ; ; }
    { ; ; }



    { *SAC_arg_1__p = SACp_pinl_18818__icc_3357; *SAC_arg_1__desc__p = SACp_pinl_18818__icc_3357__desc; }
    return;
   
  }



}
}
# 8454 "/home/rubenhensen/sac/hw/a.out.c"
void SACf__MAIN___rtpf_8_impl_block__i_X_X__i_0 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
    const int SACp_emal_47438__isaa_38359_s = 1;



    int * SACp_emal_47437__isaa_38363_a;
    SAC_array_descriptor_t SACp_emal_47437__isaa_38363_a__desc = 
# 8465 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 8465 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47437__isaa_38363_a__shp0 = 2;
    const int SACp_emal_47437__isaa_38363_a__sz = 2;
    const int SACp_emal_47437__isaa_38363_a__dim = 1;

    const int SACp_emal_47436__flat_152 = 0;



    int SACp_emal_47435__uprf_29524;
   
   




    int SACp_emal_47434__uprf_29529;
   
   




    
# 8488 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8488 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47431__uprf_29489;
   
   




    
# 8495 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8495 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47430__uprf_29494;
   
   




    
# 8502 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8502 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47428__uprf_29476;
   
   




    
# 8509 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8509 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47427__uprf_29483;
   
   




    int * SACp_emal_47425__pinl_19633__idc_5490;
    SAC_array_descriptor_t SACp_emal_47425__pinl_19633__idc_5490__desc = 
# 8517 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 8517 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47425__pinl_19633__idc_5490__shp0 = 2;
    const int SACp_emal_47425__pinl_19633__idc_5490__sz = 2;
    const int SACp_emal_47425__pinl_19633__idc_5490__dim = 1;




    int SACp_emal_47424__ivesli_45765;
   
   




    int SACp_emal_47423__pinl_19589__icc_5469;
   
   




    int * SACp_emal_47422__pinl_19593__icc_5475;
    SAC_array_descriptor_t SACp_emal_47422__pinl_19593__icc_5475__desc = 
# 8540 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 8540 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_47422__pinl_19593__icc_5475__shp0;
    int SACp_emal_47422__pinl_19593__icc_5475__shp1;
    int SACp_emal_47422__pinl_19593__icc_5475__sz;
    const int SACp_emal_47422__pinl_19593__icc_5475__dim = 2;




    
# 8549 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8549 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47421__uprf_29438;
   
   




    
# 8556 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8556 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47419__uprf_29445;
   
   




    int SACp_wlidx_45683__pinl_19593__icc_5475;
   
   




    int SACp_pinl_19605__eat_292;
   
   




    int SACp_pinl_19604__eat_291;
   
   




    int * SACp_pinl_19602_iv;
    SAC_array_descriptor_t SACp_pinl_19602_iv__desc = 
# 8585 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 8585 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_pinl_19602_iv__shp0 = 2;
    const int SACp_pinl_19602_iv__sz = 2;
    const int SACp_pinl_19602_iv__dim = 1;





    int SACl_a__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_a__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (1))]);
    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    const int SACl_a__dim = 2;

   
    { { if (!((1 == SACp_emal_47437__isaa_38363_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47437__isaa_38363_a"); }; { { if ((((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a)) + ((6 + (SACp_emal_47437__isaa_38363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a)) + ((6 + (SACp_emal_47437__isaa_38363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a)) + ((6 + (SACp_emal_47437__isaa_38363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47437__isaa_38363_a = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47437__isaa_38363_a = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a)) + ((6 + (SACp_emal_47437__isaa_38363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47437__isaa_38363_a = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47437__isaa_38363_a = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a)) + ((6 + (SACp_emal_47437__isaa_38363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a)) + ((6 + (SACp_emal_47437__isaa_38363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a)) + ((6 + (SACp_emal_47437__isaa_38363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a)) + ((6 + (SACp_emal_47437__isaa_38363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a)) + ((6 + (SACp_emal_47437__isaa_38363_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47437__isaa_38363_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47437__isaa_38363_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47437__isaa_38363_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47437__isaa_38363_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47437__isaa_38363_a__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a, SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a), ((6 + (SACp_emal_47437__isaa_38363_a__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47437__isaa_38363_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47437__isaa_38363_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47437__isaa_38363_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47437__isaa_38363_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47437__isaa_38363_a__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_47437__isaa_38363_a[0] = SACl_a__shp0; };
    { SACp_emal_47437__isaa_38363_a[1] = SACl_a__shp1; };




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47435__uprf_29524 = ( SACp_emal_47437__isaa_38363_a[SACp_emal_47436__flat_152]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47434__uprf_29529 = ( SACp_emal_47437__isaa_38363_a[SACp_emal_47438__isaa_38359_s]); }

    { ; ; }
    { { if (!((2 == SACp_emal_47422__pinl_19593__icc_5475__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47422__pinl_19593__icc_5475"); }; { if ((((6 + (SACp_emal_47422__pinl_19593__icc_5475__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47422__pinl_19593__icc_5475__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47422__pinl_19593__icc_5475__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47422__pinl_19593__icc_5475__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47422__pinl_19593__icc_5475__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_47422__pinl_19593__icc_5475__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47422__pinl_19593__icc_5475__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47422__pinl_19593__icc_5475__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_47422__pinl_19593__icc_5475__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_47422__pinl_19593__icc_5475__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_47422__pinl_19593__icc_5475__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_47422__pinl_19593__icc_5475__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_47422__pinl_19593__icc_5475__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47422__pinl_19593__icc_5475__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47422__pinl_19593__icc_5475__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47422__pinl_19593__icc_5475__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47422__pinl_19593__icc_5475__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47422__pinl_19593__icc_5475__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47422__pinl_19593__icc_5475__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47422__pinl_19593__icc_5475__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47422__pinl_19593__icc_5475__dim == (2)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_47422__pinl_19593__icc_5475__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47422__pinl_19593__icc_5475__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_47435__uprf_29524;
      SAC_size *=
      SACp_emal_47422__pinl_19593__icc_5475__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47422__pinl_19593__icc_5475__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_47434__uprf_29529;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47422__pinl_19593__icc_5475__desc) & (-1 ^ (3))))[4]) = SACp_emal_47422__pinl_19593__icc_5475__sz = SAC_size;
      if (!((SACp_emal_47422__pinl_19593__icc_5475__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8649 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 8649 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8649 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 8649 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8649 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 8649 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8649 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 8649, __extension__ __PRETTY_FUNCTION__); }))
# 8649 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_47422__pinl_19593__icc_5475 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_47422__pinl_19593__icc_5475__sz * sizeof (*SACp_emal_47422__pinl_19593__icc_5475)); break; case SAC_HM_multi_threaded: SACp_emal_47422__pinl_19593__icc_5475 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_47422__pinl_19593__icc_5475__sz * sizeof (*SACp_emal_47422__pinl_19593__icc_5475), 0); break; case SAC_HM_any_threaded: SACp_emal_47422__pinl_19593__icc_5475 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_47422__pinl_19593__icc_5475__sz * sizeof (*SACp_emal_47422__pinl_19593__icc_5475), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47422__pinl_19593__icc_5475__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47422__pinl_19593__icc_5475__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47422__pinl_19593__icc_5475__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;
      int SAC_schedule_start1;
      int SAC_schedule_stop1;




      int SAC_SACp_emal_47422__pinl_19593__icc_5475_shpfac0;
      int SAC_SACp_emal_47422__pinl_19593__icc_5475_shpfac1;




      {
        int SAC_i;
        SAC_SACp_emal_47422__pinl_19593__icc_5475_shpfac0 = 1 * SACp_emal_47422__pinl_19593__icc_5475__shp1;
        SAC_SACp_emal_47422__pinl_19593__icc_5475_shpfac1 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_47435__uprf_29524;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_47434__uprf_29529;




      SACp_wlidx_45683__pinl_19593__icc_5475
        = SAC_schedule_start0 * SAC_SACp_emal_47422__pinl_19593__icc_5475_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47422__pinl_19593__icc_5475_shpfac1;

      { int SAC_stop_SACp_pinl_19605__eat_292 = SACp_emal_47435__uprf_29524; for (SACp_pinl_19605__eat_292 = 0; SACp_pinl_19605__eat_292 < SACp_emal_47435__uprf_29524;) {
     



      SACp_wlidx_45683__pinl_19593__icc_5475
        = ( SACp_emal_47422__pinl_19593__icc_5475__shp1 * SACp_pinl_19605__eat_292
         + SAC_schedule_start1 ) * SAC_SACp_emal_47422__pinl_19593__icc_5475_shpfac1;

      { int SAC_stop_SACp_pinl_19604__eat_291 = SACp_emal_47434__uprf_29529; for (SACp_pinl_19604__eat_291 = 0; SACp_pinl_19604__eat_291 < SACp_emal_47434__uprf_29529;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_19605__eat_292 >= 0) { { SACp_emal_47431__uprf_29489 = SACp_pinl_19605__eat_292; }; SACp_emal_47431__uprf_29489 = 1; } else { SACp_emal_47431__uprf_29489 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_pinl_19605__eat_292"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_19604__eat_291 >= 0) { { SACp_emal_47430__uprf_29494 = SACp_pinl_19604__eat_291; }; SACp_emal_47430__uprf_29494 = 1; } else { SACp_emal_47430__uprf_29494 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_pinl_19604__eat_291"); }
      ; ; { SACp_emal_47431__uprf_29489 = (SACp_emal_47431__uprf_29489) & (SACp_emal_47430__uprf_29494); };
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_19605__eat_292 < SACp_emal_47435__uprf_29524) { SACp_emal_47428__uprf_29476 = 1; } else { SACp_emal_47428__uprf_29476 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_pinl_19605__eat_292" " (" "%d" ") < " "SACp_emal_47435__uprf_29524" " (" "%d" ")" "' violated", SACp_pinl_19605__eat_292, SACp_emal_47435__uprf_29524); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_19604__eat_291 < SACp_emal_47434__uprf_29529) { SACp_emal_47427__uprf_29483 = 1; } else { SACp_emal_47427__uprf_29483 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_pinl_19604__eat_291" " (" "%d" ") < " "SACp_emal_47434__uprf_29529" " (" "%d" ")" "' violated", SACp_pinl_19604__eat_291, SACp_emal_47434__uprf_29529); }
      ; ; { SACp_emal_47428__uprf_29476 = (SACp_emal_47428__uprf_29476) & (SACp_emal_47427__uprf_29483); };
      { ; ; }
      { { if (!((1 == SACp_emal_47425__pinl_19633__idc_5490__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47425__pinl_19633__idc_5490"); }; { { if ((((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490)) + ((6 + (SACp_emal_47425__pinl_19633__idc_5490__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490)) + ((6 + (SACp_emal_47425__pinl_19633__idc_5490__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490)) + ((6 + (SACp_emal_47425__pinl_19633__idc_5490__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47425__pinl_19633__idc_5490 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47425__pinl_19633__idc_5490 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490)) + ((6 + (SACp_emal_47425__pinl_19633__idc_5490__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47425__pinl_19633__idc_5490 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47425__pinl_19633__idc_5490 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490)) + ((6 + (SACp_emal_47425__pinl_19633__idc_5490__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490)) + ((6 + (SACp_emal_47425__pinl_19633__idc_5490__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490)) + ((6 + (SACp_emal_47425__pinl_19633__idc_5490__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490)) + ((6 + (SACp_emal_47425__pinl_19633__idc_5490__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490)) + ((6 + (SACp_emal_47425__pinl_19633__idc_5490__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47425__pinl_19633__idc_5490 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47425__pinl_19633__idc_5490 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47425__pinl_19633__idc_5490 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47425__pinl_19633__idc_5490 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47425__pinl_19633__idc_5490__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490, SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490), ((6 + (SACp_emal_47425__pinl_19633__idc_5490__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47425__pinl_19633__idc_5490__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47425__pinl_19633__idc_5490__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47425__pinl_19633__idc_5490__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_47425__pinl_19633__idc_5490__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
      if (!((SACp_emal_47425__pinl_19633__idc_5490__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_47425__pinl_19633__idc_5490[0] = SACp_pinl_19605__eat_292; }
      { SACp_emal_47425__pinl_19633__idc_5490[1] = SACp_pinl_19604__eat_291; }

      if (!SACp_emal_47428__uprf_29476) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_47431__uprf_29489) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_47424__ivesli_45765 = ( ( SACp_emal_47437__isaa_38363_a[1]) * ( SACp_emal_47425__pinl_19633__idc_5490[0]) + ( SACp_emal_47425__pinl_19633__idc_5490[1]) );

      { { { if (((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490, ((((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490) - 1)->data1.arena)); } else { if (SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490, ((((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490, ((((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490) - 1)->data1.arena)); } } else { if (((((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490, ((((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490) - 1)->data1.arena)); } else { if (((((SACp_emal_47425__pinl_19633__idc_5490__sz * sizeof (*SACp_emal_47425__pinl_19633__idc_5490))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490, ((((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47425__pinl_19633__idc_5490); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47425__pinl_19633__idc_5490__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_47423__pinl_19589__icc_5469 = ( SACl_a[SACp_emal_47424__ivesli_45765]); }

      { ; ; }
      if (!SACp_emal_47428__uprf_29476) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_47431__uprf_29489) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }



      if (!((0 == (SACp_emal_47422__pinl_19593__icc_5475__dim - SACp_pinl_19602_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47422__pinl_19593__icc_5475_shpfac1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal size found!"); };
      { SACp_emal_47422__pinl_19593__icc_5475[SACp_wlidx_45683__pinl_19593__icc_5475] = SACp_emal_47423__pinl_19589__icc_5469; };

      { ; ; }
      SACp_wlidx_45683__pinl_19593__icc_5475 = SACp_wlidx_45683__pinl_19593__icc_5475 + 1;
      SACp_pinl_19604__eat_291 = SACp_pinl_19604__eat_291 + 1;
      } }
      SACp_pinl_19605__eat_292 = SACp_pinl_19605__eat_292 + 1;
      } }
# 8837 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48033_SAC_label:;
    { ; ; }
    { ; ; }
    { { { if (((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a, ((((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a) - 1)->data1.arena)); } else { if (SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a, ((((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a, ((((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a) - 1)->data1.arena)); } } else { if (((((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a, ((((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a) - 1)->data1.arena)); } else { if (((((SACp_emal_47437__isaa_38363_a__sz * sizeof (*SACp_emal_47437__isaa_38363_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a, ((((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47437__isaa_38363_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47437__isaa_38363_a__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47436__flat_152 <= SACp_emal_47435__uprf_29524) { SACp_emal_47421__uprf_29438 = 1; } else { SACp_emal_47421__uprf_29438 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_47436__flat_152" " (" "%d" ") <= " "SACp_emal_47435__uprf_29524" " (" "%d" ")" "' violated", SACp_emal_47436__flat_152, SACp_emal_47435__uprf_29524); }
    { ; ; }
    if (SACp_emal_47436__flat_152 <= SACp_emal_47434__uprf_29529) { SACp_emal_47419__uprf_29445 = 1; } else { SACp_emal_47419__uprf_29445 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_47436__flat_152" " (" "%d" ") <= " "SACp_emal_47434__uprf_29529" " (" "%d" ")" "' violated", SACp_emal_47436__flat_152, SACp_emal_47434__uprf_29529); }
    { ; ; }
    { ; ; }
    ; ; { SACp_emal_47421__uprf_29438 = (SACp_emal_47421__uprf_29438) & (SACp_emal_47419__uprf_29445); };
    { ; ; }
    if (!SACp_emal_47421__uprf_29438) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_47421__uprf_29438) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_47422__pinl_19593__icc_5475; *SAC_arg_1__desc__p = SACp_emal_47422__pinl_19593__icc_5475__desc; }
    return;
   
  }



}
}
# 8885 "/home/rubenhensen/sac/hw/a.out.c"
void SACf__MAIN___rtpf_8_impl_block__i_X_X__i_1 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_s, SAC_array_descriptor_t SACl_s__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
    const int SACp_emal_47534__isaa_38547_s = 1;



    int * SACp_emal_47533__isaa_38551_a;
    SAC_array_descriptor_t SACp_emal_47533__isaa_38551_a__desc = 
# 8896 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 8896 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47533__isaa_38551_a__shp0 = 2;
    const int SACp_emal_47533__isaa_38551_a__sz = 2;
    const int SACp_emal_47533__isaa_38551_a__dim = 1;




    int SACp_emal_47532__ivesplit_38641;
   
   




    int SACp_emal_47531__uprf_31646;
   
   




    
# 8918 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8918 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47530__uprf_31648;
   
   




    
# 8925 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8925 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47529__uprf_31642;
   
   




    
# 8932 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8932 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47528__uprf_31636;
   
   




    
# 8939 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8939 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47527__uprf_31630;
   
   




    int * SACp_emal_47526__idc_6530;
    SAC_array_descriptor_t SACp_emal_47526__idc_6530__desc = 
# 8947 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 8947 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47526__idc_6530__shp0 = 1;
    const int SACp_emal_47526__idc_6530__sz = 1;
    const int SACp_emal_47526__idc_6530__dim = 1;




    int * SACp_emal_47525_oshp;
    SAC_array_descriptor_t SACp_emal_47525_oshp__desc = 
# 8956 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 8956 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47525_oshp__shp0 = 1;
    const int SACp_emal_47525_oshp__sz = 1;
    const int SACp_emal_47525_oshp__dim = 1;




    int SACp_emal_47524__pinl_20532__icc_6415;
   
   




    
# 8971 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8971 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47522__uprf_31594;
   
   




    
# 8978 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8978 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47521__uprf_31588;
   
   




    int * SACp_emal_47520__idc_6538;
    SAC_array_descriptor_t SACp_emal_47520__idc_6538__desc = 
# 8986 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 8986 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47520__idc_6538__shp0 = 1;
    const int SACp_emal_47520__idc_6538__sz = 1;
    const int SACp_emal_47520__idc_6538__dim = 1;




    
# 8994 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 8994 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47519__uprf_31582;
   
   




    int SACp_emal_47518__uprf_31581;
   
   




    
# 9008 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9008 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47517__uprf_31574;
   
   




    
# 9015 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9015 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47516__uprf_31568;
   
   




    int * SACp_emal_47515__idc_6546;
    SAC_array_descriptor_t SACp_emal_47515__idc_6546__desc = 
# 9023 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9023 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47515__idc_6546__shp0 = 1;
    const int SACp_emal_47515__idc_6546__sz = 1;
    const int SACp_emal_47515__idc_6546__dim = 1;




    
# 9031 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9031 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47514__uprf_31495;
   
   




    int SACp_emal_47513__uprf_31494;
   
   




    int * SACp_emal_47512__idc_6550;
    SAC_array_descriptor_t SACp_emal_47512__idc_6550__desc = 
# 9046 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9046 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47512__idc_6550__shp0 = 1;
    const int SACp_emal_47512__idc_6550__sz = 1;
    const int SACp_emal_47512__idc_6550__dim = 1;




    int * SACp_emal_47511__pinl_21034_new_shape;
    SAC_array_descriptor_t SACp_emal_47511__pinl_21034_new_shape__desc = 
# 9055 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9055 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47511__pinl_21034_new_shape__shp0 = 1;
    const int SACp_emal_47511__pinl_21034_new_shape__sz = 1;
    const int SACp_emal_47511__pinl_21034_new_shape__dim = 1;




    int SACp_emal_47510__uprf_31405;
   
   




    
# 9070 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9070 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47509__uprf_31407;
   
   




    
# 9077 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9077 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47508__uprf_31401;
   
   




    int * SACp_emal_47507__pinl_21052__idc_6097;
    SAC_array_descriptor_t SACp_emal_47507__pinl_21052__idc_6097__desc = 
# 9085 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9085 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47507__pinl_21052__idc_6097__shp0 = 1;
    const int SACp_emal_47507__pinl_21052__idc_6097__sz = 1;
    const int SACp_emal_47507__pinl_21052__idc_6097__dim = 1;




    
# 9093 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9093 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47506__uprf_31395;
   
   




    int SACp_emal_47505__uprf_31394;
   
   




    int * SACp_emal_47504__pinl_21059__idc_6101;
    SAC_array_descriptor_t SACp_emal_47504__pinl_21059__idc_6101__desc = 
# 9108 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9108 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47504__pinl_21059__idc_6101__shp0 = 1;
    const int SACp_emal_47504__pinl_21059__idc_6101__sz = 1;
    const int SACp_emal_47504__pinl_21059__idc_6101__dim = 1;




    int SACp_emal_47503__pinl_30005__icc_5332;
   
   




    int SACp_emal_47502__pinl_30008__icc_5338;
   
   




    int * SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound;
    SAC_array_descriptor_t SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__desc = 
# 9131 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9131 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__shp0 = 1;
    const int SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz = 1;
    const int SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim = 1;




    int SACp_emal_47500__uprf_31367;
   
   




    int SACp_emal_47499__uprf_31374;
   
   




    
# 9153 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9153 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47498__uprf_31348;
   
   




    int SACp_emal_47497__uprf_31347;
   
   




    int * SACp_emal_47496__idc_6559;
    SAC_array_descriptor_t SACp_emal_47496__idc_6559__desc = 
# 9168 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9168 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47496__idc_6559__shp0 = 1;
    const int SACp_emal_47496__idc_6559__sz = 1;
    const int SACp_emal_47496__idc_6559__dim = 1;




    int SACp_emal_47495__pinl_30088__icc_5332;
   
   




    int SACp_emal_47494__pinl_30091__icc_5338;
   
   




    int * SACp_emal_47491__icc_6457;
    SAC_array_descriptor_t SACp_emal_47491__icc_6457__desc = 
# 9191 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9191 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_47491__icc_6457__shp0;
    int SACp_emal_47491__icc_6457__sz;
    const int SACp_emal_47491__icc_6457__dim = 1;




    int SACp_emal_47490__pinl_30174__icc_5338;
   
   




    int * SACp_emal_47489__isaa_38567__icc_6470;
    SAC_array_descriptor_t SACp_emal_47489__isaa_38567__icc_6470__desc = 
# 9207 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9207 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47489__isaa_38567__icc_6470__shp0 = 2;
    const int SACp_emal_47489__isaa_38567__icc_6470__sz = 2;
    const int SACp_emal_47489__isaa_38567__icc_6470__dim = 1;




    
# 9215 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9215 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47488__uprf_31254;
   
   




    int SACp_emal_47487__uprf_31253;
   
   




    
# 9229 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9229 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47486__uprf_31261;
   
   




    int SACp_emal_47485__uprf_31260;
   
   




    int * SACp_emal_47483__idc_6572;
    SAC_array_descriptor_t SACp_emal_47483__idc_6572__desc = 
# 9244 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9244 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47483__idc_6572__shp0 = 2;
    const int SACp_emal_47483__idc_6572__sz = 2;
    const int SACp_emal_47483__idc_6572__dim = 1;




    int SACp_emal_47482__pinl_30337__icc_5332;
   
   




    int SACp_emal_47481__pinl_30340__icc_5338;
   
   




    int SACp_emal_47480__pinl_30360_res;
   
   




    int * SACp_emal_47479__emec_46301__icc_6480;
    SAC_array_descriptor_t SACp_emal_47479__emec_46301__icc_6480__desc = 
# 9274 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9274 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47479__emec_46301__icc_6480__shp0 = 2;
    const int SACp_emal_47479__emec_46301__icc_6480__sz = 2;
    const int SACp_emal_47479__emec_46301__icc_6480__dim = 1;




    int * SACp_emal_47477__emec_46300__icc_6480;
    SAC_array_descriptor_t SACp_emal_47477__emec_46300__icc_6480__desc = 
# 9283 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9283 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47477__emec_46300__icc_6480__shp0 = 2;
    const int SACp_emal_47477__emec_46300__icc_6480__sz = 2;
    const int SACp_emal_47477__emec_46300__icc_6480__dim = 1;




    int SACp_emal_47475__pinl_30420__icc_5332;
   
   




    int SACp_emal_47474__pinl_30423__icc_5338;
   
   




    int SACp_emal_47473__pinl_30443_res;
   
   




    int SACp_emal_47472__wlbsc_8926_sc_e;
   
   




    int SACp_emal_47471__wlbsc_8916_sc_e;
   
   




    int * SACp_emal_47468__icc_6483;
    SAC_array_descriptor_t SACp_emal_47468__icc_6483__desc = 
# 9327 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9327 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_47468__icc_6483__shp0;
    int SACp_emal_47468__icc_6483__shp1;
    int SACp_emal_47468__icc_6483__sz;
    const int SACp_emal_47468__icc_6483__dim = 2;




    int SACp_emal_47467__pinl_30503__icc_5332;
   
   




    int SACp_emal_47466__pinl_30506__icc_5338;
   
   




    int SACp_emal_47465__pinl_30835__icc_5332;
   
   




    int SACp_emal_47464__pinl_30838__icc_5338;
   
   




    int SACp_emal_47459__pinl_21237__flat_1763;
   
   




    int SACp_emal_47454__pinl_21443__flat_1747;
   
   




    
# 9378 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9378 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47453__uprf_31104;
   
   




    
# 9385 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9385 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47452__uprf_31091;
   
   




    
# 9392 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9392 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47449__uprf_31109;
   
   




    
# 9399 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 9399 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47447__uprf_31098;
   
   




    int * SACp_emal_47445__pinl_21529__idc_6104;
    SAC_array_descriptor_t SACp_emal_47445__pinl_21529__idc_6104__desc = 
# 9407 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9407 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47445__pinl_21529__idc_6104__shp0 = 2;
    const int SACp_emal_47445__pinl_21529__idc_6104__sz = 2;
    const int SACp_emal_47445__pinl_21529__idc_6104__dim = 1;




    int SACp_emal_47444__ivesli_45766;
   
   




    int SACp_emal_47443__pinl_21486__icc_6083;
   
   




    int * SACp_emal_47442__pinl_21490__icc_6089;
    SAC_array_descriptor_t SACp_emal_47442__pinl_21490__icc_6089__desc = 
# 9430 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9430 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_47442__pinl_21490__icc_6089__shp0;
    int SACp_emal_47442__pinl_21490__icc_6089__sz;
    const int SACp_emal_47442__pinl_21490__icc_6089__dim = 1;




    int * SACp_emal_47440__icc_6516;
    SAC_array_descriptor_t SACp_emal_47440__icc_6516__desc = 
# 9439 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9439 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_47440__icc_6516__shp0;
    int SACp_emal_47440__icc_6516__shp1;
    int SACp_emal_47440__icc_6516__sz;
    const int SACp_emal_47440__icc_6516__dim = 2;




    int * SACp_emal_47439__icc_6520;
    SAC_array_descriptor_t SACp_emal_47439__icc_6520__desc = 
# 9449 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9449 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_47439__icc_6520__shp0;
    int SACp_emal_47439__icc_6520__shp1;
    int SACp_emal_47439__icc_6520__shp2;
    int SACp_emal_47439__icc_6520__sz;
    const int SACp_emal_47439__icc_6520__dim = 3;




    int SACp_wlidx_45689__pinl_21490__icc_6089;
   
   




    int SACp_wlidx_45688__icc_6516;
   
   




    int SACp_wlidx_45687__icc_6520;
   
   




    int SACp_wlidx_45686__icc_6483;
   
   




    int SACp_wlidx_45685__icc_6457;
   
   




    int SACp_pinl_21501__eat_307;
   
   




    int * SACp_pinl_21499_iv;
    SAC_array_descriptor_t SACp_pinl_21499_iv__desc = 
# 9502 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9502 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_pinl_21499_iv__shp0 = 1;
    const int SACp_pinl_21499_iv__sz = 1;
    const int SACp_pinl_21499_iv__dim = 1;




    int SACp_eat_322;
   
   




    int SACp_eat_320;
   
   




    int SACp_eat_319;
   
   




    int SACp_eat_318;
   
   




    int SACp_eat_316;
   
   




    int * SACl_jv__SSA0_1;
    SAC_array_descriptor_t SACl_jv__SSA0_1__desc = 
# 9546 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9546 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACl_jv__SSA0_1__shp0 = 1;
    const int SACl_jv__SSA0_1__sz = 1;
    const int SACl_jv__SSA0_1__dim = 1;




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 9555 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9555 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACl_iv__shp0 = 1;
    const int SACl_iv__sz = 1;
    const int SACl_iv__dim = 1;




    int * SACp_hse_23;
    SAC_array_descriptor_t SACp_hse_23__desc = 
# 9564 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9564 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_hse_23__shp0 = 2;
    const int SACp_hse_23__sz = 2;
    const int SACp_hse_23__dim = 1;




    int * SACp_hse_22;
    SAC_array_descriptor_t SACp_hse_22__desc = 
# 9573 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 9573 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_hse_22__shp0 = 1;
    const int SACp_hse_22__sz = 1;
    const int SACp_hse_22__dim = 1;





    const int SACl_s__shp0 = 1;
    const int SACl_s__sz = 1;
    const int SACl_s__dim = 1;




    int SACl_a__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_a__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (1))]);
    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    const int SACl_a__dim = 2;

   
    { { if (!((1 == SACp_emal_47533__isaa_38551_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47533__isaa_38551_a"); }; { { if ((((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a)) + ((6 + (SACp_emal_47533__isaa_38551_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a)) + ((6 + (SACp_emal_47533__isaa_38551_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a)) + ((6 + (SACp_emal_47533__isaa_38551_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47533__isaa_38551_a = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47533__isaa_38551_a = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a)) + ((6 + (SACp_emal_47533__isaa_38551_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47533__isaa_38551_a = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47533__isaa_38551_a = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a)) + ((6 + (SACp_emal_47533__isaa_38551_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a)) + ((6 + (SACp_emal_47533__isaa_38551_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a)) + ((6 + (SACp_emal_47533__isaa_38551_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a)) + ((6 + (SACp_emal_47533__isaa_38551_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a)) + ((6 + (SACp_emal_47533__isaa_38551_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47533__isaa_38551_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47533__isaa_38551_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47533__isaa_38551_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47533__isaa_38551_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47533__isaa_38551_a__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a, SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a), ((6 + (SACp_emal_47533__isaa_38551_a__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47533__isaa_38551_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47533__isaa_38551_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47533__isaa_38551_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47533__isaa_38551_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47533__isaa_38551_a__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_47533__isaa_38551_a[0] = SACl_a__shp0; };
    { SACp_emal_47533__isaa_38551_a[1] = SACl_a__shp1; };

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_47532__ivesplit_38641 = 0; }; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47531__uprf_31646 = ( SACl_s[SACp_emal_47532__ivesplit_38641]); }

    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_s__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACl_s__sz * sizeof (*SACl_s)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { if (SACl_s__sz * sizeof (*SACl_s) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } } else { if (((((SACl_s__sz * sizeof (*SACl_s))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { if (((((SACl_s__sz * sizeof (*SACl_s))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_s); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_s); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_s); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_s); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_s__desc) & (-1 ^ (3))))); } } } } else { } }
    if (SACp_emal_47531__uprf_31646 >= 0) { { SACp_emal_47530__uprf_31648 = SACp_emal_47531__uprf_31646; }; SACp_emal_47530__uprf_31648 = 1; } else { SACp_emal_47530__uprf_31648 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_47531__uprf_31646"); }
    if (SACp_emal_47531__uprf_31646 >= 0) { { SACp_emal_47529__uprf_31642 = SACp_emal_47531__uprf_31646; }; SACp_emal_47529__uprf_31642 = 1; } else { SACp_emal_47529__uprf_31642 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_47531__uprf_31646"); }
    if (SACp_emal_47531__uprf_31646 >= 0) { { SACp_emal_47528__uprf_31636 = SACp_emal_47531__uprf_31646; }; SACp_emal_47528__uprf_31636 = 1; } else { SACp_emal_47528__uprf_31636 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_47531__uprf_31646"); }
    if (SACp_emal_47531__uprf_31646 >= 0) { { SACp_emal_47527__uprf_31630 = SACp_emal_47531__uprf_31646; }; SACp_emal_47527__uprf_31630 = 1; } else { SACp_emal_47527__uprf_31630 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_47531__uprf_31646"); }
    { { if (!((1 == SACp_emal_47526__idc_6530__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47526__idc_6530"); }; { { if ((((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530)) + ((6 + (SACp_emal_47526__idc_6530__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530)) + ((6 + (SACp_emal_47526__idc_6530__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530)) + ((6 + (SACp_emal_47526__idc_6530__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47526__idc_6530 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47526__idc_6530 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530)) + ((6 + (SACp_emal_47526__idc_6530__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47526__idc_6530 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47526__idc_6530 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530)) + ((6 + (SACp_emal_47526__idc_6530__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530)) + ((6 + (SACp_emal_47526__idc_6530__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530)) + ((6 + (SACp_emal_47526__idc_6530__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530)) + ((6 + (SACp_emal_47526__idc_6530__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530)) + ((6 + (SACp_emal_47526__idc_6530__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47526__idc_6530 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47526__idc_6530 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47526__idc_6530 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47526__idc_6530 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47526__idc_6530__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47526__idc_6530, SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530), ((6 + (SACp_emal_47526__idc_6530__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47526__idc_6530__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47526__idc_6530__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47526__idc_6530__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47526__idc_6530__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 57, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47526__idc_6530__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 57, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47526__idc_6530[0] = SACp_emal_47531__uprf_31646; }

    { { if (!((1 == SACp_emal_47525_oshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47525_oshp"); }; { { if ((((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp)) + ((6 + (SACp_emal_47525_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp)) + ((6 + (SACp_emal_47525_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp)) + ((6 + (SACp_emal_47525_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47525_oshp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47525_oshp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp)) + ((6 + (SACp_emal_47525_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47525_oshp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47525_oshp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp)) + ((6 + (SACp_emal_47525_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp)) + ((6 + (SACp_emal_47525_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp)) + ((6 + (SACp_emal_47525_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp)) + ((6 + (SACp_emal_47525_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp)) + ((6 + (SACp_emal_47525_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47525_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47525_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47525_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47525_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47525_oshp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47525_oshp, SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp), ((6 + (SACp_emal_47525_oshp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47525_oshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47525_oshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47525_oshp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47525_oshp__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47525_oshp__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 9661 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 9661 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_47533__isaa_38551_a__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_47533__isaa_38551_a__sz))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 54, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_47525_oshp[SAC_i] = ( SACp_emal_47533__isaa_38551_a[SAC_off + SAC_i]); };
      }
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7947, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7947, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47524__pinl_20532__icc_6415 = ( SACp_emal_47525_oshp[SACp_emal_47532__ivesplit_38641]); }

    { { { if (((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47525_oshp, ((((SAC_HM_header_t *)SACp_emal_47525_oshp) - 1)->data1.arena)); } else { if (SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47525_oshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47525_oshp, ((((SAC_HM_header_t *)SACp_emal_47525_oshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47525_oshp, ((((SAC_HM_header_t *)SACp_emal_47525_oshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47525_oshp, ((((SAC_HM_header_t *)SACp_emal_47525_oshp) - 1)->data1.arena)); } else { if (((((SACp_emal_47525_oshp__sz * sizeof (*SACp_emal_47525_oshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47525_oshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47525_oshp, ((((SAC_HM_header_t *)SACp_emal_47525_oshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47525_oshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47525_oshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47525_oshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47525_oshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47525_oshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47525_oshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47525_oshp__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_47524__pinl_20532__icc_6415 = (SACp_emal_47524__pinl_20532__icc_6415) / (SACp_emal_47531__uprf_31646); };
    if (SACp_emal_47524__pinl_20532__icc_6415 >= 0) { { SACp_emal_47522__uprf_31594 = SACp_emal_47524__pinl_20532__icc_6415; }; SACp_emal_47522__uprf_31594 = 1; } else { SACp_emal_47522__uprf_31594 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 61, "Non-negativity constraint violated " "for scalar " "SACp_emal_47524__pinl_20532__icc_6415"); }
    if (SACp_emal_47524__pinl_20532__icc_6415 >= 0) { { SACp_emal_47521__uprf_31588 = SACp_emal_47524__pinl_20532__icc_6415; }; SACp_emal_47521__uprf_31588 = 1; } else { SACp_emal_47521__uprf_31588 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_47524__pinl_20532__icc_6415"); }
    { { if (!((1 == SACp_emal_47520__idc_6538__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47520__idc_6538"); }; { { if ((((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538)) + ((6 + (SACp_emal_47520__idc_6538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538)) + ((6 + (SACp_emal_47520__idc_6538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538)) + ((6 + (SACp_emal_47520__idc_6538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47520__idc_6538 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47520__idc_6538 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538)) + ((6 + (SACp_emal_47520__idc_6538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47520__idc_6538 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47520__idc_6538 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538)) + ((6 + (SACp_emal_47520__idc_6538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538)) + ((6 + (SACp_emal_47520__idc_6538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538)) + ((6 + (SACp_emal_47520__idc_6538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538)) + ((6 + (SACp_emal_47520__idc_6538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538)) + ((6 + (SACp_emal_47520__idc_6538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47520__idc_6538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47520__idc_6538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47520__idc_6538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47520__idc_6538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47520__idc_6538__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47520__idc_6538, SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538), ((6 + (SACp_emal_47520__idc_6538__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47520__idc_6538__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47520__idc_6538__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47520__idc_6538__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47520__idc_6538__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 38, 5, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47520__idc_6538__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 38, 5, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47520__idc_6538[0] = SACp_emal_47524__pinl_20532__icc_6415; }

    if (SACp_emal_47532__ivesplit_38641 <= SACp_emal_47531__uprf_31646) { SACp_emal_47519__uprf_31582 = 1; } else { SACp_emal_47519__uprf_31582 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_47532__ivesplit_38641" " (" "%d" ") <= " "SACp_emal_47531__uprf_31646" " (" "%d" ")" "' violated", SACp_emal_47532__ivesplit_38641, SACp_emal_47531__uprf_31646); }
    { { SACp_emal_47518__uprf_31581 = SACp_emal_47532__ivesplit_38641; } }
    if (SACp_emal_47518__uprf_31581 >= 0) { { SACp_emal_47517__uprf_31574 = SACp_emal_47518__uprf_31581; }; SACp_emal_47517__uprf_31574 = 1; } else { SACp_emal_47517__uprf_31574 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_47518__uprf_31581"); }
    if (SACp_emal_47518__uprf_31581 <= SACp_emal_47531__uprf_31646) { SACp_emal_47516__uprf_31568 = 1; } else { SACp_emal_47516__uprf_31568 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_47518__uprf_31581" " (" "%d" ") <= " "SACp_emal_47531__uprf_31646" " (" "%d" ")" "' violated", SACp_emal_47518__uprf_31581, SACp_emal_47531__uprf_31646); }
    { { if (!((1 == SACp_emal_47515__idc_6546__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47515__idc_6546"); }; { { if ((((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546)) + ((6 + (SACp_emal_47515__idc_6546__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546)) + ((6 + (SACp_emal_47515__idc_6546__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546)) + ((6 + (SACp_emal_47515__idc_6546__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47515__idc_6546 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47515__idc_6546 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546)) + ((6 + (SACp_emal_47515__idc_6546__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47515__idc_6546 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47515__idc_6546 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546)) + ((6 + (SACp_emal_47515__idc_6546__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546)) + ((6 + (SACp_emal_47515__idc_6546__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546)) + ((6 + (SACp_emal_47515__idc_6546__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546)) + ((6 + (SACp_emal_47515__idc_6546__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546)) + ((6 + (SACp_emal_47515__idc_6546__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47515__idc_6546 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47515__idc_6546 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47515__idc_6546 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47515__idc_6546 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47515__idc_6546__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47515__idc_6546, SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546), ((6 + (SACp_emal_47515__idc_6546__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47515__idc_6546__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47515__idc_6546__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47515__idc_6546__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47515__idc_6546__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 44, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47515__idc_6546__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 44, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47515__idc_6546[0] = SACp_emal_47518__uprf_31581; }

    { ; ; }
    if (SACp_emal_47532__ivesplit_38641 <= SACp_emal_47524__pinl_20532__icc_6415) { SACp_emal_47514__uprf_31495 = 1; } else { SACp_emal_47514__uprf_31495 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_47532__ivesplit_38641" " (" "%d" ") <= " "SACp_emal_47524__pinl_20532__icc_6415" " (" "%d" ")" "' violated", SACp_emal_47532__ivesplit_38641, SACp_emal_47524__pinl_20532__icc_6415); }
    { ; ; }
    { { SACp_emal_47513__uprf_31494 = SACp_emal_47532__ivesplit_38641; } }
    { { if (!((1 == SACp_emal_47512__idc_6550__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47512__idc_6550"); }; { { if ((((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550)) + ((6 + (SACp_emal_47512__idc_6550__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550)) + ((6 + (SACp_emal_47512__idc_6550__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550)) + ((6 + (SACp_emal_47512__idc_6550__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47512__idc_6550 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47512__idc_6550 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550)) + ((6 + (SACp_emal_47512__idc_6550__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47512__idc_6550 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47512__idc_6550 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550)) + ((6 + (SACp_emal_47512__idc_6550__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550)) + ((6 + (SACp_emal_47512__idc_6550__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550)) + ((6 + (SACp_emal_47512__idc_6550__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550)) + ((6 + (SACp_emal_47512__idc_6550__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550)) + ((6 + (SACp_emal_47512__idc_6550__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47512__idc_6550 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47512__idc_6550 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47512__idc_6550 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47512__idc_6550 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47512__idc_6550__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47512__idc_6550, SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550), ((6 + (SACp_emal_47512__idc_6550__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47512__idc_6550__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47512__idc_6550__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47512__idc_6550__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47512__idc_6550__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 28, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47512__idc_6550__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 28, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47512__idc_6550[0] = SACp_emal_47513__uprf_31494; }

    { ; ; }
    { { if (!((1 == SACp_emal_47511__pinl_21034_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47511__pinl_21034_new_shape"); }; { { if ((((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape)) + ((6 + (SACp_emal_47511__pinl_21034_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape)) + ((6 + (SACp_emal_47511__pinl_21034_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape)) + ((6 + (SACp_emal_47511__pinl_21034_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47511__pinl_21034_new_shape = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47511__pinl_21034_new_shape = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape)) + ((6 + (SACp_emal_47511__pinl_21034_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47511__pinl_21034_new_shape = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47511__pinl_21034_new_shape = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape)) + ((6 + (SACp_emal_47511__pinl_21034_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape)) + ((6 + (SACp_emal_47511__pinl_21034_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape)) + ((6 + (SACp_emal_47511__pinl_21034_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape)) + ((6 + (SACp_emal_47511__pinl_21034_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape)) + ((6 + (SACp_emal_47511__pinl_21034_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47511__pinl_21034_new_shape = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47511__pinl_21034_new_shape = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47511__pinl_21034_new_shape = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47511__pinl_21034_new_shape = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47511__pinl_21034_new_shape__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape, SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape), ((6 + (SACp_emal_47511__pinl_21034_new_shape__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47511__pinl_21034_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47511__pinl_21034_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47511__pinl_21034_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47511__pinl_21034_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47511__pinl_21034_new_shape__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 9762 "/home/rubenhensen/sac/hw/a.out.c" 3 4
     _Bool 
# 9762 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_cond;
      SAC_off = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_47533__isaa_38551_a__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_47533__isaa_38551_a__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_47511__pinl_21034_new_shape[SAC_i] = ( SACp_emal_47533__isaa_38551_a[SAC_off + SAC_i]); };
      }
    }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47510__uprf_31405 = ( SACp_emal_47511__pinl_21034_new_shape[SACp_emal_47532__ivesplit_38641]); }

    { { { if (((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape, ((((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape) - 1)->data1.arena)); } else { if (SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape, ((((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape, ((((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape) - 1)->data1.arena)); } } else { if (((((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape, ((((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape) - 1)->data1.arena)); } else { if (((((SACp_emal_47511__pinl_21034_new_shape__sz * sizeof (*SACp_emal_47511__pinl_21034_new_shape))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape, ((((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47511__pinl_21034_new_shape); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47511__pinl_21034_new_shape__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_47510__uprf_31405 >= 0) { { SACp_emal_47509__uprf_31407 = SACp_emal_47510__uprf_31405; }; SACp_emal_47509__uprf_31407 = 1; } else { SACp_emal_47509__uprf_31407 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for scalar " "SACp_emal_47510__uprf_31405"); }
    if (SACp_emal_47510__uprf_31405 >= 0) { { SACp_emal_47508__uprf_31401 = SACp_emal_47510__uprf_31405; }; SACp_emal_47508__uprf_31401 = 1; } else { SACp_emal_47508__uprf_31401 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Non-negativity constraint violated " "for scalar " "SACp_emal_47510__uprf_31405"); }
    { { if (!((1 == SACp_emal_47507__pinl_21052__idc_6097__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47507__pinl_21052__idc_6097"); }; { { if ((((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097)) + ((6 + (SACp_emal_47507__pinl_21052__idc_6097__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097)) + ((6 + (SACp_emal_47507__pinl_21052__idc_6097__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097)) + ((6 + (SACp_emal_47507__pinl_21052__idc_6097__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47507__pinl_21052__idc_6097 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47507__pinl_21052__idc_6097 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097)) + ((6 + (SACp_emal_47507__pinl_21052__idc_6097__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47507__pinl_21052__idc_6097 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47507__pinl_21052__idc_6097 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097)) + ((6 + (SACp_emal_47507__pinl_21052__idc_6097__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097)) + ((6 + (SACp_emal_47507__pinl_21052__idc_6097__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097)) + ((6 + (SACp_emal_47507__pinl_21052__idc_6097__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097)) + ((6 + (SACp_emal_47507__pinl_21052__idc_6097__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097)) + ((6 + (SACp_emal_47507__pinl_21052__idc_6097__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47507__pinl_21052__idc_6097 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47507__pinl_21052__idc_6097 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47507__pinl_21052__idc_6097 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47507__pinl_21052__idc_6097 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47507__pinl_21052__idc_6097__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097, SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097), ((6 + (SACp_emal_47507__pinl_21052__idc_6097__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47507__pinl_21052__idc_6097__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47507__pinl_21052__idc_6097__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47507__pinl_21052__idc_6097__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47507__pinl_21052__idc_6097__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47507__pinl_21052__idc_6097__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47507__pinl_21052__idc_6097[0] = SACp_emal_47510__uprf_31405; }

    if (SACp_emal_47532__ivesplit_38641 <= SACp_emal_47510__uprf_31405) { SACp_emal_47506__uprf_31395 = 1; } else { SACp_emal_47506__uprf_31395 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Scalar constraint `" "SACp_emal_47532__ivesplit_38641" " (" "%d" ") <= " "SACp_emal_47510__uprf_31405" " (" "%d" ")" "' violated", SACp_emal_47532__ivesplit_38641, SACp_emal_47510__uprf_31405); }
    { ; ; }
    { { SACp_emal_47505__uprf_31394 = SACp_emal_47532__ivesplit_38641; } }
    { { if (!((1 == SACp_emal_47504__pinl_21059__idc_6101__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47504__pinl_21059__idc_6101"); }; { { if ((((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101)) + ((6 + (SACp_emal_47504__pinl_21059__idc_6101__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101)) + ((6 + (SACp_emal_47504__pinl_21059__idc_6101__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101)) + ((6 + (SACp_emal_47504__pinl_21059__idc_6101__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47504__pinl_21059__idc_6101 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47504__pinl_21059__idc_6101 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101)) + ((6 + (SACp_emal_47504__pinl_21059__idc_6101__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47504__pinl_21059__idc_6101 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47504__pinl_21059__idc_6101 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101)) + ((6 + (SACp_emal_47504__pinl_21059__idc_6101__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101)) + ((6 + (SACp_emal_47504__pinl_21059__idc_6101__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101)) + ((6 + (SACp_emal_47504__pinl_21059__idc_6101__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101)) + ((6 + (SACp_emal_47504__pinl_21059__idc_6101__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101)) + ((6 + (SACp_emal_47504__pinl_21059__idc_6101__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47504__pinl_21059__idc_6101 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47504__pinl_21059__idc_6101 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47504__pinl_21059__idc_6101 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47504__pinl_21059__idc_6101 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47504__pinl_21059__idc_6101__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101, SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101), ((6 + (SACp_emal_47504__pinl_21059__idc_6101__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47504__pinl_21059__idc_6101__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47504__pinl_21059__idc_6101__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47504__pinl_21059__idc_6101__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47504__pinl_21059__idc_6101__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47504__pinl_21059__idc_6101__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47504__pinl_21059__idc_6101[0] = SACp_emal_47505__uprf_31394; }

    { ; ; }
    if (!SACp_emal_47508__uprf_31401) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_47506__uprf_31395) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_47509__uprf_31407) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47503__pinl_30005__icc_5332 = ( SACp_emal_47504__pinl_21059__idc_6101[SACp_emal_47532__ivesplit_38641]); }

    { { { if (((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101, ((((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101) - 1)->data1.arena)); } else { if (SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101, ((((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101, ((((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101) - 1)->data1.arena)); } } else { if (((((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101, ((((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101) - 1)->data1.arena)); } else { if (((((SACp_emal_47504__pinl_21059__idc_6101__sz * sizeof (*SACp_emal_47504__pinl_21059__idc_6101))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101, ((((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47504__pinl_21059__idc_6101); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47504__pinl_21059__idc_6101__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47502__pinl_30008__icc_5338 = ( SACp_emal_47507__pinl_21052__idc_6097[SACp_emal_47532__ivesplit_38641]); }

    { { { if (((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097, ((((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097) - 1)->data1.arena)); } else { if (SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097, ((((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097, ((((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097) - 1)->data1.arena)); } } else { if (((((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097, ((((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097) - 1)->data1.arena)); } else { if (((((SACp_emal_47507__pinl_21052__idc_6097__sz * sizeof (*SACp_emal_47507__pinl_21052__idc_6097))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097, ((((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47507__pinl_21052__idc_6097); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47507__pinl_21052__idc_6097__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound"); }; { { if ((((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound)) + ((6 + (SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound)) + ((6 + (SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound)) + ((6 + (SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound)) + ((6 + (SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound)) + ((6 + (SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound)) + ((6 + (SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound)) + ((6 + (SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound)) + ((6 + (SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound)) + ((6 + (SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound, SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound), ((6 + (SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound[0] = SACp_emal_47502__pinl_30008__icc_5338; }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47500__uprf_31367 = ( SACp_emal_47533__isaa_38551_a[SACp_emal_47532__ivesplit_38641]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47499__uprf_31374 = ( SACp_emal_47533__isaa_38551_a[SACp_emal_47534__isaa_38547_s]); }

    if (SACp_emal_47532__ivesplit_38641 <= SACp_emal_47502__pinl_30008__icc_5338) { SACp_emal_47498__uprf_31348 = 1; } else { SACp_emal_47498__uprf_31348 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_47532__ivesplit_38641" " (" "%d" ") <= " "SACp_emal_47502__pinl_30008__icc_5338" " (" "%d" ")" "' violated", SACp_emal_47532__ivesplit_38641, SACp_emal_47502__pinl_30008__icc_5338); }
    { { SACp_emal_47497__uprf_31347 = SACp_emal_47532__ivesplit_38641; } }
    { { if (!((1 == SACp_emal_47496__idc_6559__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47496__idc_6559"); }; { { if ((((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559)) + ((6 + (SACp_emal_47496__idc_6559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559)) + ((6 + (SACp_emal_47496__idc_6559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559)) + ((6 + (SACp_emal_47496__idc_6559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47496__idc_6559 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47496__idc_6559 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559)) + ((6 + (SACp_emal_47496__idc_6559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47496__idc_6559 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47496__idc_6559 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559)) + ((6 + (SACp_emal_47496__idc_6559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559)) + ((6 + (SACp_emal_47496__idc_6559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559)) + ((6 + (SACp_emal_47496__idc_6559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559)) + ((6 + (SACp_emal_47496__idc_6559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559)) + ((6 + (SACp_emal_47496__idc_6559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47496__idc_6559 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47496__idc_6559 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47496__idc_6559 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47496__idc_6559 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47496__idc_6559__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47496__idc_6559, SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559), ((6 + (SACp_emal_47496__idc_6559__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47496__idc_6559__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47496__idc_6559__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47496__idc_6559__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47496__idc_6559__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47496__idc_6559__shp0 == 1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47496__idc_6559[0] = SACp_emal_47497__uprf_31347; }

    { ; ; }
    if (!SACp_emal_47498__uprf_31348) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47495__pinl_30088__icc_5332 = ( SACp_emal_47496__idc_6559[SACp_emal_47532__ivesplit_38641]); }

    { { { if (((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47496__idc_6559, ((((SAC_HM_header_t *)SACp_emal_47496__idc_6559) - 1)->data1.arena)); } else { if (SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47496__idc_6559) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47496__idc_6559, ((((SAC_HM_header_t *)SACp_emal_47496__idc_6559) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47496__idc_6559, ((((SAC_HM_header_t *)SACp_emal_47496__idc_6559) - 1)->data1.arena)); } } else { if (((((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47496__idc_6559, ((((SAC_HM_header_t *)SACp_emal_47496__idc_6559) - 1)->data1.arena)); } else { if (((((SACp_emal_47496__idc_6559__sz * sizeof (*SACp_emal_47496__idc_6559))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47496__idc_6559) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47496__idc_6559, ((((SAC_HM_header_t *)SACp_emal_47496__idc_6559) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47496__idc_6559, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47496__idc_6559); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47496__idc_6559); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47496__idc_6559, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47496__idc_6559); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47496__idc_6559); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47496__idc_6559__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47494__pinl_30091__icc_5338 = ( SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound[SACp_emal_47532__ivesplit_38641]); }

    { { { if (((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound, ((((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound) - 1)->data1.arena)); } else { if (SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound, ((((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound, ((((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound) - 1)->data1.arena)); } } else { if (((((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound, ((((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound) - 1)->data1.arena)); } else { if (((((SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__sz * sizeof (*SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound, ((((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47501__pinl_21092__wlbsc_8784_sc_bound__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_47491__icc_6457__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47491__icc_6457"); }; { if ((((6 + (SACp_emal_47491__icc_6457__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47491__icc_6457__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47491__icc_6457__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47491__icc_6457__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47491__icc_6457__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_47491__icc_6457__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47491__icc_6457__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47491__icc_6457__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_47491__icc_6457__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_47491__icc_6457__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_47491__icc_6457__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_47491__icc_6457__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_47491__icc_6457__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47491__icc_6457__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47491__icc_6457__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47491__icc_6457__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47491__icc_6457__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47491__icc_6457__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47491__icc_6457__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47491__icc_6457__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47491__icc_6457__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_47491__icc_6457__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47491__icc_6457__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_47494__pinl_30091__icc_5338;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47491__icc_6457__desc) & (-1 ^ (3))))[4]) = SACp_emal_47491__icc_6457__sz = SAC_size;
      if (!((SACp_emal_47491__icc_6457__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 9917 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 9917 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9917 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 9917 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9917 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 9917 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 9917 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 9917, __extension__ __PRETTY_FUNCTION__); }))
# 9917 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_47491__icc_6457 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_47491__icc_6457__sz * sizeof (*SACp_emal_47491__icc_6457)); break; case SAC_HM_multi_threaded: SACp_emal_47491__icc_6457 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_47491__icc_6457__sz * sizeof (*SACp_emal_47491__icc_6457), 0); break; case SAC_HM_any_threaded: SACp_emal_47491__icc_6457 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_47491__icc_6457__sz * sizeof (*SACp_emal_47491__icc_6457), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47491__icc_6457__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47491__icc_6457__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47491__icc_6457__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_47491__icc_6457_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_47491__icc_6457_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_47495__pinl_30088__icc_5332;




      SACp_wlidx_45685__icc_6457
        = SAC_schedule_start0 * SAC_SACp_emal_47491__icc_6457_shpfac0;

      { int SAC_stop_SACp_eat_316 = SACp_emal_47495__pinl_30088__icc_5332; for (SACp_eat_316 = 0; SACp_eat_316 < SACp_emal_47495__pinl_30088__icc_5332;) {
     



      if (!((0 == (SACp_emal_47491__icc_6457__dim - SACp_hse_22__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47491__icc_6457_shpfac0))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal size found!"); };
      { SACp_emal_47491__icc_6457[SACp_wlidx_45685__icc_6457] = SACp_emal_47532__ivesplit_38641; };

      SACp_wlidx_45685__icc_6457 = SACp_wlidx_45685__icc_6457 + 1;
      SACp_eat_316 = SACp_eat_316 + 1;
      } }
# 9987 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_47495__pinl_30088__icc_5332;
      SAC_schedule_stop0 = SACp_emal_47494__pinl_30091__icc_5338;




      SACp_wlidx_45685__icc_6457
        = SAC_schedule_start0 * SAC_SACp_emal_47491__icc_6457_shpfac0;

      { int SAC_stop_SACp_eat_316 = SACp_emal_47494__pinl_30091__icc_5338; for (SACp_eat_316 = SACp_emal_47495__pinl_30088__icc_5332; SACp_eat_316 < SACp_emal_47494__pinl_30091__icc_5338;) {
     



      if (!((0 == (SACp_emal_47491__icc_6457__dim - SACp_hse_22__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47491__icc_6457_shpfac0))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal size found!"); };
      { SACp_emal_47491__icc_6457[SACp_wlidx_45685__icc_6457] = SACp_emal_47532__ivesplit_38641; };

      SACp_wlidx_45685__icc_6457 = SACp_wlidx_45685__icc_6457 + 1;
      SACp_eat_316 = SACp_eat_316 + 1;
      } }
# 10016 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48034_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_47498__uprf_31348) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    { ; ; }
    if (!SACp_emal_47529__uprf_31642) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_47519__uprf_31582) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_47530__uprf_31648) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47490__pinl_30174__icc_5338 = ( SACp_emal_47526__idc_6530[SACp_emal_47532__ivesplit_38641]); }

    { { if (!((1 == SACp_emal_47489__isaa_38567__icc_6470__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47489__isaa_38567__icc_6470"); }; { { if ((((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470)) + ((6 + (SACp_emal_47489__isaa_38567__icc_6470__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470)) + ((6 + (SACp_emal_47489__isaa_38567__icc_6470__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470)) + ((6 + (SACp_emal_47489__isaa_38567__icc_6470__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47489__isaa_38567__icc_6470 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47489__isaa_38567__icc_6470 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470)) + ((6 + (SACp_emal_47489__isaa_38567__icc_6470__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47489__isaa_38567__icc_6470 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47489__isaa_38567__icc_6470 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470)) + ((6 + (SACp_emal_47489__isaa_38567__icc_6470__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470)) + ((6 + (SACp_emal_47489__isaa_38567__icc_6470__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470)) + ((6 + (SACp_emal_47489__isaa_38567__icc_6470__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470)) + ((6 + (SACp_emal_47489__isaa_38567__icc_6470__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470)) + ((6 + (SACp_emal_47489__isaa_38567__icc_6470__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47489__isaa_38567__icc_6470 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47489__isaa_38567__icc_6470 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47489__isaa_38567__icc_6470 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47489__isaa_38567__icc_6470 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47489__isaa_38567__icc_6470__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470, SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470), ((6 + (SACp_emal_47489__isaa_38567__icc_6470__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47489__isaa_38567__icc_6470__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47489__isaa_38567__icc_6470__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47489__isaa_38567__icc_6470__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47489__isaa_38567__icc_6470__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47489__isaa_38567__icc_6470__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47489__isaa_38567__icc_6470[0] = SACp_emal_47490__pinl_30174__icc_5338; }
    { SACp_emal_47489__isaa_38567__icc_6470[1] = SACp_emal_47494__pinl_30091__icc_5338; }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47532__ivesplit_38641 <= SACp_emal_47490__pinl_30174__icc_5338) { SACp_emal_47488__uprf_31254 = 1; } else { SACp_emal_47488__uprf_31254 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_47532__ivesplit_38641" " (" "%d" ") <= " "SACp_emal_47490__pinl_30174__icc_5338" " (" "%d" ")" "' violated", SACp_emal_47532__ivesplit_38641, SACp_emal_47490__pinl_30174__icc_5338); }
    { ; ; }
    { { SACp_emal_47487__uprf_31253 = SACp_emal_47532__ivesplit_38641; } }
    if (SACp_emal_47532__ivesplit_38641 <= SACp_emal_47494__pinl_30091__icc_5338) { SACp_emal_47486__uprf_31261 = 1; } else { SACp_emal_47486__uprf_31261 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_47532__ivesplit_38641" " (" "%d" ") <= " "SACp_emal_47494__pinl_30091__icc_5338" " (" "%d" ")" "' violated", SACp_emal_47532__ivesplit_38641, SACp_emal_47494__pinl_30091__icc_5338); }
    { ; ; }
    { { SACp_emal_47485__uprf_31260 = SACp_emal_47532__ivesplit_38641; } }
    ; ; { SACp_emal_47488__uprf_31254 = (SACp_emal_47488__uprf_31254) & (SACp_emal_47486__uprf_31261); };
    { ; ; }
    { { if (!((1 == SACp_emal_47483__idc_6572__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47483__idc_6572"); }; { { if ((((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572)) + ((6 + (SACp_emal_47483__idc_6572__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572)) + ((6 + (SACp_emal_47483__idc_6572__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572)) + ((6 + (SACp_emal_47483__idc_6572__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47483__idc_6572 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47483__idc_6572 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572)) + ((6 + (SACp_emal_47483__idc_6572__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47483__idc_6572 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47483__idc_6572 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572)) + ((6 + (SACp_emal_47483__idc_6572__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572)) + ((6 + (SACp_emal_47483__idc_6572__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572)) + ((6 + (SACp_emal_47483__idc_6572__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572)) + ((6 + (SACp_emal_47483__idc_6572__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572)) + ((6 + (SACp_emal_47483__idc_6572__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47483__idc_6572 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47483__idc_6572 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47483__idc_6572 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47483__idc_6572 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47483__idc_6572__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47483__idc_6572, SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572), ((6 + (SACp_emal_47483__idc_6572__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47483__idc_6572__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47483__idc_6572__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47483__idc_6572__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47483__idc_6572__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47483__idc_6572__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47483__idc_6572[0] = SACp_emal_47487__uprf_31253; }
    { SACp_emal_47483__idc_6572[1] = SACp_emal_47485__uprf_31260; }

    { ; ; }
    { ; ; }
    if (!SACp_emal_47488__uprf_31254) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47482__pinl_30337__icc_5332 = ( SACp_emal_47483__idc_6572[SACp_emal_47532__ivesplit_38641]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47481__pinl_30340__icc_5338 = ( SACp_emal_47489__isaa_38567__icc_6470[SACp_emal_47532__ivesplit_38641]); }

    ; ; { SACp_emal_47480__pinl_30360_res = (SACp_emal_47482__pinl_30337__icc_5332) > (SACp_emal_47481__pinl_30340__icc_5338) ? (SACp_emal_47482__pinl_30337__icc_5332) : (SACp_emal_47481__pinl_30340__icc_5338); };
    { { if (!((1 == SACp_emal_47479__emec_46301__icc_6480__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47479__emec_46301__icc_6480"); }; { { if ((((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480)) + ((6 + (SACp_emal_47479__emec_46301__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480)) + ((6 + (SACp_emal_47479__emec_46301__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480)) + ((6 + (SACp_emal_47479__emec_46301__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47479__emec_46301__icc_6480 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47479__emec_46301__icc_6480 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480)) + ((6 + (SACp_emal_47479__emec_46301__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47479__emec_46301__icc_6480 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47479__emec_46301__icc_6480 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480)) + ((6 + (SACp_emal_47479__emec_46301__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480)) + ((6 + (SACp_emal_47479__emec_46301__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480)) + ((6 + (SACp_emal_47479__emec_46301__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480)) + ((6 + (SACp_emal_47479__emec_46301__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480)) + ((6 + (SACp_emal_47479__emec_46301__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47479__emec_46301__icc_6480 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47479__emec_46301__icc_6480 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47479__emec_46301__icc_6480 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47479__emec_46301__icc_6480 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47479__emec_46301__icc_6480__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480, SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480), ((6 + (SACp_emal_47479__emec_46301__icc_6480__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47479__emec_46301__icc_6480__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47479__emec_46301__icc_6480__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47479__emec_46301__icc_6480__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47479__emec_46301__icc_6480__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47479__emec_46301__icc_6480__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_47479__emec_46301__icc_6480__sz == SACp_emal_47489__isaa_38567__icc_6470__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47489__isaa_38567__icc_6470__sz; SAC_i++) { { SACp_emal_47479__emec_46301__icc_6480[SAC_i] = ( SACp_emal_47489__isaa_38567__icc_6470[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_47532__ivesplit_38641;
      { SACp_emal_47479__emec_46301__icc_6480[SAC_idx] = SACp_emal_47482__pinl_30337__icc_5332; }
    }

    { { if (!((1 == SACp_emal_47477__emec_46300__icc_6480__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47477__emec_46300__icc_6480"); }; { { if ((((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480)) + ((6 + (SACp_emal_47477__emec_46300__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480)) + ((6 + (SACp_emal_47477__emec_46300__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480)) + ((6 + (SACp_emal_47477__emec_46300__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47477__emec_46300__icc_6480 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47477__emec_46300__icc_6480 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480)) + ((6 + (SACp_emal_47477__emec_46300__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47477__emec_46300__icc_6480 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47477__emec_46300__icc_6480 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480)) + ((6 + (SACp_emal_47477__emec_46300__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480)) + ((6 + (SACp_emal_47477__emec_46300__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480)) + ((6 + (SACp_emal_47477__emec_46300__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480)) + ((6 + (SACp_emal_47477__emec_46300__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480)) + ((6 + (SACp_emal_47477__emec_46300__icc_6480__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47477__emec_46300__icc_6480 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47477__emec_46300__icc_6480 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47477__emec_46300__icc_6480 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47477__emec_46300__icc_6480 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47477__emec_46300__icc_6480__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480, SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480), ((6 + (SACp_emal_47477__emec_46300__icc_6480__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47477__emec_46300__icc_6480__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47477__emec_46300__icc_6480__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47477__emec_46300__icc_6480__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47477__emec_46300__icc_6480__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47477__emec_46300__icc_6480__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_47477__emec_46300__icc_6480__sz == SACp_emal_47489__isaa_38567__icc_6470__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47489__isaa_38567__icc_6470__sz; SAC_i++) { { SACp_emal_47477__emec_46300__icc_6480[SAC_i] = ( SACp_emal_47489__isaa_38567__icc_6470[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_47532__ivesplit_38641;
      { SACp_emal_47477__emec_46300__icc_6480[SAC_idx] = SACp_emal_47480__pinl_30360_res; }
    }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47475__pinl_30420__icc_5332 = ( SACp_emal_47483__idc_6572[SACp_emal_47534__isaa_38547_s]); }

    { { { if (((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47483__idc_6572, ((((SAC_HM_header_t *)SACp_emal_47483__idc_6572) - 1)->data1.arena)); } else { if (SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47483__idc_6572) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47483__idc_6572, ((((SAC_HM_header_t *)SACp_emal_47483__idc_6572) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47483__idc_6572, ((((SAC_HM_header_t *)SACp_emal_47483__idc_6572) - 1)->data1.arena)); } } else { if (((((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47483__idc_6572, ((((SAC_HM_header_t *)SACp_emal_47483__idc_6572) - 1)->data1.arena)); } else { if (((((SACp_emal_47483__idc_6572__sz * sizeof (*SACp_emal_47483__idc_6572))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47483__idc_6572) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47483__idc_6572, ((((SAC_HM_header_t *)SACp_emal_47483__idc_6572) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47483__idc_6572, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47483__idc_6572); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47483__idc_6572); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47483__idc_6572, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47483__idc_6572); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47483__idc_6572); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47483__idc_6572__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47474__pinl_30423__icc_5338 = ( SACp_emal_47489__isaa_38567__icc_6470[SACp_emal_47534__isaa_38547_s]); }

    { { { if (((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470, ((((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470) - 1)->data1.arena)); } else { if (SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470, ((((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470, ((((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470) - 1)->data1.arena)); } } else { if (((((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470, ((((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470) - 1)->data1.arena)); } else { if (((((SACp_emal_47489__isaa_38567__icc_6470__sz * sizeof (*SACp_emal_47489__isaa_38567__icc_6470))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470, ((((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47489__isaa_38567__icc_6470); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47489__isaa_38567__icc_6470__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_47473__pinl_30443_res = (SACp_emal_47475__pinl_30420__icc_5332) > (SACp_emal_47474__pinl_30423__icc_5338) ? (SACp_emal_47475__pinl_30420__icc_5332) : (SACp_emal_47474__pinl_30423__icc_5338); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47472__wlbsc_8926_sc_e = ( SACp_emal_47477__emec_46300__icc_6480[SACp_emal_47534__isaa_38547_s]); }

    { { { if (((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480, ((((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480) - 1)->data1.arena)); } else { if (SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480, ((((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480, ((((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480) - 1)->data1.arena)); } } else { if (((((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480, ((((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480) - 1)->data1.arena)); } else { if (((((SACp_emal_47477__emec_46300__icc_6480__sz * sizeof (*SACp_emal_47477__emec_46300__icc_6480))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480, ((((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47477__emec_46300__icc_6480); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47477__emec_46300__icc_6480__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47471__wlbsc_8916_sc_e = ( SACp_emal_47479__emec_46301__icc_6480[SACp_emal_47534__isaa_38547_s]); }

    { { { if (((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480, ((((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480) - 1)->data1.arena)); } else { if (SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480, ((((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480, ((((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480) - 1)->data1.arena)); } } else { if (((((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480, ((((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480) - 1)->data1.arena)); } else { if (((((SACp_emal_47479__emec_46301__icc_6480__sz * sizeof (*SACp_emal_47479__emec_46301__icc_6480))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480, ((((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47479__emec_46301__icc_6480); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47479__emec_46301__icc_6480__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { { if (!((2 == SACp_emal_47468__icc_6483__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47468__icc_6483"); }; { if ((((6 + (SACp_emal_47468__icc_6483__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47468__icc_6483__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47468__icc_6483__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47468__icc_6483__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47468__icc_6483__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_47468__icc_6483__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47468__icc_6483__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47468__icc_6483__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_47468__icc_6483__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_47468__icc_6483__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_47468__icc_6483__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_47468__icc_6483__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_47468__icc_6483__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47468__icc_6483__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47468__icc_6483__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47468__icc_6483__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47468__icc_6483__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47468__icc_6483__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47468__icc_6483__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47468__icc_6483__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47468__icc_6483__dim == (2)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_47468__icc_6483__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47468__icc_6483__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_47481__pinl_30340__icc_5338;
      SAC_size *=
      SACp_emal_47468__icc_6483__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47468__icc_6483__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_47474__pinl_30423__icc_5338;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47468__icc_6483__desc) & (-1 ^ (3))))[4]) = SACp_emal_47468__icc_6483__sz = SAC_size;
      if (!((SACp_emal_47468__icc_6483__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 10196 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 10196 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10196 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 10196 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10196 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 10196 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 10196 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 10196, __extension__ __PRETTY_FUNCTION__); }))
# 10196 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_47468__icc_6483 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_47468__icc_6483__sz * sizeof (*SACp_emal_47468__icc_6483)); break; case SAC_HM_multi_threaded: SACp_emal_47468__icc_6483 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_47468__icc_6483__sz * sizeof (*SACp_emal_47468__icc_6483), 0); break; case SAC_HM_any_threaded: SACp_emal_47468__icc_6483 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_47468__icc_6483__sz * sizeof (*SACp_emal_47468__icc_6483), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47468__icc_6483__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47468__icc_6483__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47468__icc_6483__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;
      int SAC_schedule_start1;
      int SAC_schedule_stop1;




      int SAC_SACp_emal_47468__icc_6483_shpfac0;
      int SAC_SACp_emal_47468__icc_6483_shpfac1;




      {
        int SAC_i;
        SAC_SACp_emal_47468__icc_6483_shpfac0 = 1 * SACp_emal_47468__icc_6483__shp1;
        SAC_SACp_emal_47468__icc_6483_shpfac1 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_47482__pinl_30337__icc_5332;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_47471__wlbsc_8916_sc_e;




      SACp_wlidx_45686__icc_6483
        = SAC_schedule_start0 * SAC_SACp_emal_47468__icc_6483_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47468__icc_6483_shpfac1;

      { int SAC_stop_SACp_eat_319 = SACp_emal_47482__pinl_30337__icc_5332; for (SACp_eat_319 = 0; SACp_eat_319 < SACp_emal_47482__pinl_30337__icc_5332;) {
     



      SACp_wlidx_45686__icc_6483
        = ( SACp_emal_47468__icc_6483__shp1 * SACp_eat_319
         + SAC_schedule_start1 ) * SAC_SACp_emal_47468__icc_6483_shpfac1;

      { int SAC_stop_SACp_eat_318 = SACp_emal_47471__wlbsc_8916_sc_e; for (SACp_eat_318 = 0; SACp_eat_318 < SACp_emal_47471__wlbsc_8916_sc_e;) {
     



      if (!((0 == (SACp_emal_47468__icc_6483__dim - SACp_hse_23__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47468__icc_6483_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_47468__icc_6483[SACp_wlidx_45686__icc_6483] = SACp_emal_47532__ivesplit_38641; };

      SACp_wlidx_45686__icc_6483 = SACp_wlidx_45686__icc_6483 + 1;
      SACp_eat_318 = SACp_eat_318 + 1;
      } }
      SACp_eat_319 = SACp_eat_319 + 1;
      } }
# 10292 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_47482__pinl_30337__icc_5332;
      SAC_schedule_stop0 = SACp_emal_47480__pinl_30360_res;
      SAC_schedule_start1 = SACp_emal_47473__pinl_30443_res;
      SAC_schedule_stop1 = SACp_emal_47472__wlbsc_8926_sc_e;




      SACp_wlidx_45686__icc_6483
        = SAC_schedule_start0 * SAC_SACp_emal_47468__icc_6483_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47468__icc_6483_shpfac1;

      { int SAC_stop_SACp_eat_319 = SACp_emal_47480__pinl_30360_res; for (SACp_eat_319 = SACp_emal_47482__pinl_30337__icc_5332; SACp_eat_319 < SACp_emal_47480__pinl_30360_res;) {
     



      SACp_wlidx_45686__icc_6483
        = ( SACp_emal_47468__icc_6483__shp1 * SACp_eat_319
         + SAC_schedule_start1 ) * SAC_SACp_emal_47468__icc_6483_shpfac1;

      { int SAC_stop_SACp_eat_318 = SACp_emal_47472__wlbsc_8926_sc_e; for (SACp_eat_318 = SACp_emal_47473__pinl_30443_res; SACp_eat_318 < SACp_emal_47472__wlbsc_8926_sc_e;) {
     



      if (!((0 == (SACp_emal_47468__icc_6483__dim - SACp_hse_23__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47468__icc_6483_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_47468__icc_6483[SACp_wlidx_45686__icc_6483] = SACp_emal_47532__ivesplit_38641; };

      SACp_wlidx_45686__icc_6483 = SACp_wlidx_45686__icc_6483 + 1;
      SACp_eat_318 = SACp_eat_318 + 1;
      } }
      SACp_eat_319 = SACp_eat_319 + 1;
      } }
# 10335 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_47482__pinl_30337__icc_5332;
      SAC_schedule_stop0 = SACp_emal_47480__pinl_30360_res;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_47475__pinl_30420__icc_5332;




      SACp_wlidx_45686__icc_6483
        = SAC_schedule_start0 * SAC_SACp_emal_47468__icc_6483_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47468__icc_6483_shpfac1;

      { int SAC_stop_SACp_eat_319 = SACp_emal_47480__pinl_30360_res; for (SACp_eat_319 = SACp_emal_47482__pinl_30337__icc_5332; SACp_eat_319 < SACp_emal_47480__pinl_30360_res;) {
     



      SACp_wlidx_45686__icc_6483
        = ( SACp_emal_47468__icc_6483__shp1 * SACp_eat_319
         + SAC_schedule_start1 ) * SAC_SACp_emal_47468__icc_6483_shpfac1;

      { int SAC_stop_SACp_eat_318 = SACp_emal_47475__pinl_30420__icc_5332; for (SACp_eat_318 = 0; SACp_eat_318 < SACp_emal_47475__pinl_30420__icc_5332;) {
     



      if (!((0 == (SACp_emal_47468__icc_6483__dim - SACp_hse_23__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47468__icc_6483_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_47468__icc_6483[SACp_wlidx_45686__icc_6483] = SACp_emal_47532__ivesplit_38641; };

      SACp_wlidx_45686__icc_6483 = SACp_wlidx_45686__icc_6483 + 1;
      SACp_eat_318 = SACp_eat_318 + 1;
      } }
      SACp_eat_319 = SACp_eat_319 + 1;
      } }
# 10378 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_47482__pinl_30337__icc_5332;
      SAC_schedule_stop0 = SACp_emal_47481__pinl_30340__icc_5338;
      SAC_schedule_start1 = SACp_emal_47475__pinl_30420__icc_5332;
      SAC_schedule_stop1 = SACp_emal_47474__pinl_30423__icc_5338;




      SACp_wlidx_45686__icc_6483
        = SAC_schedule_start0 * SAC_SACp_emal_47468__icc_6483_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47468__icc_6483_shpfac1;

      { int SAC_stop_SACp_eat_319 = SACp_emal_47481__pinl_30340__icc_5338; for (SACp_eat_319 = SACp_emal_47482__pinl_30337__icc_5332; SACp_eat_319 < SACp_emal_47481__pinl_30340__icc_5338;) {
     



      SACp_wlidx_45686__icc_6483
        = ( SACp_emal_47468__icc_6483__shp1 * SACp_eat_319
         + SAC_schedule_start1 ) * SAC_SACp_emal_47468__icc_6483_shpfac1;

      { int SAC_stop_SACp_eat_318 = SACp_emal_47474__pinl_30423__icc_5338; for (SACp_eat_318 = SACp_emal_47475__pinl_30420__icc_5332; SACp_eat_318 < SACp_emal_47474__pinl_30423__icc_5338;) {
     



      if (!((0 == (SACp_emal_47468__icc_6483__dim - SACp_hse_23__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47468__icc_6483_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_47468__icc_6483[SACp_wlidx_45686__icc_6483] = SACp_emal_47532__ivesplit_38641; };

      SACp_wlidx_45686__icc_6483 = SACp_wlidx_45686__icc_6483 + 1;
      SACp_eat_318 = SACp_eat_318 + 1;
      } }
      SACp_eat_319 = SACp_eat_319 + 1;
      } }
# 10421 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48035_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_47488__uprf_31254) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    { ; ; }
    if (!SACp_emal_47521__uprf_31588) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_47514__uprf_31495) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_47522__uprf_31594) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47467__pinl_30503__icc_5332 = ( SACp_emal_47512__idc_6550[SACp_emal_47532__ivesplit_38641]); }

    { { { if (((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47512__idc_6550, ((((SAC_HM_header_t *)SACp_emal_47512__idc_6550) - 1)->data1.arena)); } else { if (SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47512__idc_6550) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47512__idc_6550, ((((SAC_HM_header_t *)SACp_emal_47512__idc_6550) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47512__idc_6550, ((((SAC_HM_header_t *)SACp_emal_47512__idc_6550) - 1)->data1.arena)); } } else { if (((((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47512__idc_6550, ((((SAC_HM_header_t *)SACp_emal_47512__idc_6550) - 1)->data1.arena)); } else { if (((((SACp_emal_47512__idc_6550__sz * sizeof (*SACp_emal_47512__idc_6550))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47512__idc_6550) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47512__idc_6550, ((((SAC_HM_header_t *)SACp_emal_47512__idc_6550) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47512__idc_6550, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47512__idc_6550); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47512__idc_6550); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47512__idc_6550, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47512__idc_6550); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47512__idc_6550); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47512__idc_6550__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47466__pinl_30506__icc_5338 = ( SACp_emal_47520__idc_6538[SACp_emal_47532__ivesplit_38641]); }

    { { { if (((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47520__idc_6538, ((((SAC_HM_header_t *)SACp_emal_47520__idc_6538) - 1)->data1.arena)); } else { if (SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47520__idc_6538) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47520__idc_6538, ((((SAC_HM_header_t *)SACp_emal_47520__idc_6538) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47520__idc_6538, ((((SAC_HM_header_t *)SACp_emal_47520__idc_6538) - 1)->data1.arena)); } } else { if (((((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47520__idc_6538, ((((SAC_HM_header_t *)SACp_emal_47520__idc_6538) - 1)->data1.arena)); } else { if (((((SACp_emal_47520__idc_6538__sz * sizeof (*SACp_emal_47520__idc_6538))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47520__idc_6538) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47520__idc_6538, ((((SAC_HM_header_t *)SACp_emal_47520__idc_6538) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47520__idc_6538, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47520__idc_6538); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47520__idc_6538); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47520__idc_6538, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47520__idc_6538); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47520__idc_6538); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47520__idc_6538__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_47527__uprf_31630) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_47516__uprf_31568) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_47528__uprf_31636) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_47517__uprf_31574) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47465__pinl_30835__icc_5332 = ( SACp_emal_47515__idc_6546[SACp_emal_47532__ivesplit_38641]); }

    { { { if (((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47515__idc_6546, ((((SAC_HM_header_t *)SACp_emal_47515__idc_6546) - 1)->data1.arena)); } else { if (SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47515__idc_6546) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47515__idc_6546, ((((SAC_HM_header_t *)SACp_emal_47515__idc_6546) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47515__idc_6546, ((((SAC_HM_header_t *)SACp_emal_47515__idc_6546) - 1)->data1.arena)); } } else { if (((((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47515__idc_6546, ((((SAC_HM_header_t *)SACp_emal_47515__idc_6546) - 1)->data1.arena)); } else { if (((((SACp_emal_47515__idc_6546__sz * sizeof (*SACp_emal_47515__idc_6546))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47515__idc_6546) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47515__idc_6546, ((((SAC_HM_header_t *)SACp_emal_47515__idc_6546) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47515__idc_6546, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47515__idc_6546); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47515__idc_6546); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47515__idc_6546, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47515__idc_6546); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47515__idc_6546); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47515__idc_6546__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47464__pinl_30838__icc_5338 = ( SACp_emal_47526__idc_6530[SACp_emal_47532__ivesplit_38641]); }

    { { { if (((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47526__idc_6530, ((((SAC_HM_header_t *)SACp_emal_47526__idc_6530) - 1)->data1.arena)); } else { if (SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47526__idc_6530) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47526__idc_6530, ((((SAC_HM_header_t *)SACp_emal_47526__idc_6530) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47526__idc_6530, ((((SAC_HM_header_t *)SACp_emal_47526__idc_6530) - 1)->data1.arena)); } } else { if (((((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47526__idc_6530, ((((SAC_HM_header_t *)SACp_emal_47526__idc_6530) - 1)->data1.arena)); } else { if (((((SACp_emal_47526__idc_6530__sz * sizeof (*SACp_emal_47526__idc_6530))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47526__idc_6530) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47526__idc_6530, ((((SAC_HM_header_t *)SACp_emal_47526__idc_6530) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47526__idc_6530, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47526__idc_6530); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47526__idc_6530); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47526__idc_6530, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47526__idc_6530); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47526__idc_6530); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47526__idc_6530__desc) & (-1 ^ (3))))); } } }
    { { if (!((3 == SACp_emal_47439__icc_6520__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47439__icc_6520"); }; { if ((((6 + (SACp_emal_47439__icc_6520__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47439__icc_6520__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47439__icc_6520__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47439__icc_6520__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47439__icc_6520__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_47439__icc_6520__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47439__icc_6520__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47439__icc_6520__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_47439__icc_6520__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_47439__icc_6520__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_47439__icc_6520__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_47439__icc_6520__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_47439__icc_6520__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47439__icc_6520__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47439__icc_6520__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47439__icc_6520__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47439__icc_6520__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47439__icc_6520__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47439__icc_6520__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47439__icc_6520__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_emal_47439__icc_6520__dim == (1) + (2)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_47439__icc_6520__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47439__icc_6520__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_47466__pinl_30506__icc_5338;
      SACp_emal_47439__icc_6520__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47439__icc_6520__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_47468__icc_6483__shp0;
      SACp_emal_47439__icc_6520__shp2 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47439__icc_6520__desc) & (-1 ^ (3))))[(6 + (2))]) = SACp_emal_47468__icc_6483__shp1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47439__icc_6520__desc) & (-1 ^ (3))))[4]) = SACp_emal_47439__icc_6520__sz = SAC_size * SACp_emal_47468__icc_6483__sz;
      if (!((SACp_emal_47439__icc_6520__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 10497 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 10497 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10497 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 10497 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10497 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 10497 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 10497 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 10497, __extension__ __PRETTY_FUNCTION__); }))
# 10497 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_47439__icc_6520 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_47439__icc_6520__sz * sizeof (*SACp_emal_47439__icc_6520)); break; case SAC_HM_multi_threaded: SACp_emal_47439__icc_6520 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_47439__icc_6520__sz * sizeof (*SACp_emal_47439__icc_6520), 0); break; case SAC_HM_any_threaded: SACp_emal_47439__icc_6520 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_47439__icc_6520__sz * sizeof (*SACp_emal_47439__icc_6520), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47439__icc_6520__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47439__icc_6520__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47439__icc_6520__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { if (!(((SACp_emal_47439__icc_6520__dim) - (1) == SACp_emal_47440__icc_6516__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47440__icc_6516"); }; { if ((((6 + (SACp_emal_47440__icc_6516__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47440__icc_6516__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47440__icc_6516__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47440__icc_6516__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47440__icc_6516__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_47440__icc_6516__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47440__icc_6516__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47440__icc_6516__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_47440__icc_6516__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_47440__icc_6516__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_47440__icc_6516__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_47440__icc_6516__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_47440__icc_6516__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47440__icc_6516__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47440__icc_6516__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47440__icc_6516__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47440__icc_6516__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47440__icc_6516__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47440__icc_6516__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47440__icc_6516__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47440__icc_6516__dim == (2)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_47440__icc_6516__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47440__icc_6516__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_47468__icc_6483__shp0;
      SACp_emal_47440__icc_6516__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47440__icc_6516__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_47468__icc_6483__shp1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47440__icc_6516__desc) & (-1 ^ (3))))[4]) = SACp_emal_47440__icc_6516__sz = SAC_size * SACp_emal_47468__icc_6483__sz;
      if (!((SACp_emal_47440__icc_6516__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Array with size <0 found!"); };
    }

   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_47439__icc_6520_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_47439__icc_6520_shpfac0 = 1 * SACp_emal_47439__icc_6520__shp1 * SACp_emal_47439__icc_6520__shp2;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_47467__pinl_30503__icc_5332;




      SACp_wlidx_45687__icc_6520
        = SAC_schedule_start0 * SAC_SACp_emal_47439__icc_6520_shpfac0;

      { int SAC_stop_SACp_eat_320 = SACp_emal_47467__pinl_30503__icc_5332; for (SACp_eat_320 = 0; SACp_eat_320 < SACp_emal_47467__pinl_30503__icc_5332;) {
     



      SACp_emal_47440__icc_6516 = SACp_emal_47439__icc_6520+SACp_wlidx_45687__icc_6520;

      { int SAC_i; if (!((SACp_emal_47440__icc_6516__sz == SACp_emal_47468__icc_6483__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47468__icc_6483__sz; SAC_i++) { { SACp_emal_47440__icc_6516[SAC_i] = ( SACp_emal_47468__icc_6483[SAC_i]); } } }
      SACp_wlidx_45687__icc_6520 = SACp_wlidx_45687__icc_6520 + SACp_emal_47440__icc_6516__sz;
      SACp_eat_320 = SACp_eat_320 + 1;
      } }
# 10582 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_47467__pinl_30503__icc_5332;
      SAC_schedule_stop0 = SACp_emal_47466__pinl_30506__icc_5338;




      SACp_wlidx_45687__icc_6520
        = SAC_schedule_start0 * SAC_SACp_emal_47439__icc_6520_shpfac0;

      { int SAC_stop_SACp_eat_320 = SACp_emal_47466__pinl_30506__icc_5338; for (SACp_eat_320 = SACp_emal_47467__pinl_30503__icc_5332; SACp_eat_320 < SACp_emal_47466__pinl_30506__icc_5338;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7727, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_47459__pinl_21237__flat_1763 = (SACp_eat_320) * (SACp_emal_47531__uprf_31646); };



      SACp_emal_47440__icc_6516 = SACp_emal_47439__icc_6520+SACp_wlidx_45687__icc_6520;

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
      ;

      }
      { if (!(((SACp_emal_47440__icc_6516__dim) - (1) == SACp_emal_47442__pinl_21490__icc_6089__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47442__pinl_21490__icc_6089"); }; { if ((((6 + (SACp_emal_47442__pinl_21490__icc_6089__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47442__pinl_21490__icc_6089__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47442__pinl_21490__icc_6089__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47442__pinl_21490__icc_6089__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47442__pinl_21490__icc_6089__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_47442__pinl_21490__icc_6089__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47442__pinl_21490__icc_6089__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47442__pinl_21490__icc_6089__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_47442__pinl_21490__icc_6089__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_47442__pinl_21490__icc_6089__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_47442__pinl_21490__icc_6089__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_47442__pinl_21490__icc_6089__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_47442__pinl_21490__icc_6089__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47442__pinl_21490__icc_6089__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47442__pinl_21490__icc_6089__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47442__pinl_21490__icc_6089__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47442__pinl_21490__icc_6089__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47442__pinl_21490__icc_6089__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47442__pinl_21490__icc_6089__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47442__pinl_21490__icc_6089__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_47442__pinl_21490__icc_6089__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_emal_47442__pinl_21490__icc_6089__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47442__pinl_21490__icc_6089__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_47491__icc_6457__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47442__pinl_21490__icc_6089__desc) & (-1 ^ (3))))[4]) = SACp_emal_47442__pinl_21490__icc_6089__sz = SAC_size * SACp_emal_47491__icc_6457__sz;
        if (!((SACp_emal_47442__pinl_21490__icc_6089__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Array with size <0 found!"); };
      }

     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_emal_47440__icc_6516_shpfac0;




        {
          int SAC_i;
          SAC_SACp_emal_47440__icc_6516_shpfac0 = 1 * SACp_emal_47440__icc_6516__shp1;
        }




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_emal_47465__pinl_30835__icc_5332;




        SACp_wlidx_45688__icc_6516
          = SAC_schedule_start0 * SAC_SACp_emal_47440__icc_6516_shpfac0;

        { int SAC_stop_SACp_eat_322 = SACp_emal_47465__pinl_30835__icc_5332; for (SACp_eat_322 = 0; SACp_eat_322 < SACp_emal_47465__pinl_30835__icc_5332;) {
       



        SACp_emal_47442__pinl_21490__icc_6089 = SACp_emal_47440__icc_6516+SACp_wlidx_45688__icc_6516;

        { int SAC_i; if (!((SACp_emal_47442__pinl_21490__icc_6089__sz == SACp_emal_47491__icc_6457__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47491__icc_6457__sz; SAC_i++) { { SACp_emal_47442__pinl_21490__icc_6089[SAC_i] = ( SACp_emal_47491__icc_6457[SAC_i]); } } }
        SACp_wlidx_45688__icc_6516 = SACp_wlidx_45688__icc_6516 + SACp_emal_47442__pinl_21490__icc_6089__sz;
        SACp_eat_322 = SACp_eat_322 + 1;
        } }
# 10689 "/home/rubenhensen/sac/hw/a.out.c"
        SAC_schedule_start0 = SACp_emal_47465__pinl_30835__icc_5332;
        SAC_schedule_stop0 = SACp_emal_47464__pinl_30838__icc_5338;




        SACp_wlidx_45688__icc_6516
          = SAC_schedule_start0 * SAC_SACp_emal_47440__icc_6516_shpfac0;

        { int SAC_stop_SACp_eat_322 = SACp_emal_47464__pinl_30838__icc_5338; for (SACp_eat_322 = SACp_emal_47465__pinl_30835__icc_5332; SACp_eat_322 < SACp_emal_47464__pinl_30838__icc_5338;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7311, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_emal_47454__pinl_21443__flat_1747 = (SACp_eat_322) + (SACp_emal_47459__pinl_21237__flat_1763); };
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_47454__pinl_21443__flat_1747 >= 0) { { SACp_emal_47453__uprf_31104 = SACp_emal_47454__pinl_21443__flat_1747; }; SACp_emal_47453__uprf_31104 = 1; } else { SACp_emal_47453__uprf_31104 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_emal_47454__pinl_21443__flat_1747"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_47454__pinl_21443__flat_1747 < SACp_emal_47500__uprf_31367) { SACp_emal_47452__uprf_31091 = 1; } else { SACp_emal_47452__uprf_31091 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_emal_47454__pinl_21443__flat_1747" " (" "%d" ") < " "SACp_emal_47500__uprf_31367" " (" "%d" ")" "' violated", SACp_emal_47454__pinl_21443__flat_1747, SACp_emal_47500__uprf_31367); }



        SACp_emal_47442__pinl_21490__icc_6089 = SACp_emal_47440__icc_6516+SACp_wlidx_45688__icc_6516;

        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
        ;

        }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
        ;

        }
       



        {
          int SAC_schedule_start0;
          int SAC_schedule_stop0;




          int SAC_SACp_emal_47442__pinl_21490__icc_6089_shpfac0;




          {
            int SAC_i;
            SAC_SACp_emal_47442__pinl_21490__icc_6089_shpfac0 = 1;
          }




          SAC_schedule_start0 = 0;
          SAC_schedule_stop0 = SACp_emal_47503__pinl_30005__icc_5332;




          SACp_wlidx_45689__pinl_21490__icc_6089
            = SAC_schedule_start0 * SAC_SACp_emal_47442__pinl_21490__icc_6089_shpfac0;

          { int SAC_stop_SACp_pinl_21501__eat_307 = SACp_emal_47503__pinl_30005__icc_5332; for (SACp_pinl_21501__eat_307 = 0; SACp_pinl_21501__eat_307 < SACp_emal_47503__pinl_30005__icc_5332;) {
         



          if (!((0 == (SACp_emal_47442__pinl_21490__icc_6089__dim - SACp_pinl_21499_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal dimension found!"); };
          if (!((1 == SAC_SACp_emal_47442__pinl_21490__icc_6089_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal size found!"); };
          { SACp_emal_47442__pinl_21490__icc_6089[SACp_wlidx_45689__pinl_21490__icc_6089] = SACp_emal_47532__ivesplit_38641; };

          SACp_wlidx_45689__pinl_21490__icc_6089 = SACp_wlidx_45689__pinl_21490__icc_6089 + 1;
          SACp_pinl_21501__eat_307 = SACp_pinl_21501__eat_307 + 1;
          } }
# 10801 "/home/rubenhensen/sac/hw/a.out.c"
          SAC_schedule_start0 = SACp_emal_47503__pinl_30005__icc_5332;
          SAC_schedule_stop0 = SACp_emal_47502__pinl_30008__icc_5338;




          SACp_wlidx_45689__pinl_21490__icc_6089
            = SAC_schedule_start0 * SAC_SACp_emal_47442__pinl_21490__icc_6089_shpfac0;

          { int SAC_stop_SACp_pinl_21501__eat_307 = SACp_emal_47502__pinl_30008__icc_5338; for (SACp_pinl_21501__eat_307 = SACp_emal_47503__pinl_30005__icc_5332; SACp_pinl_21501__eat_307 < SACp_emal_47502__pinl_30008__icc_5338;) {
         
          { ; ;



          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
          ;

          }
          if (SACp_pinl_21501__eat_307 >= 0) { { SACp_emal_47449__uprf_31109 = SACp_pinl_21501__eat_307; }; SACp_emal_47449__uprf_31109 = 1; } else { SACp_emal_47449__uprf_31109 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_pinl_21501__eat_307"); }
          ; ; { SACp_emal_47449__uprf_31109 = (SACp_emal_47453__uprf_31104) & (SACp_emal_47449__uprf_31109); };
          { ; ;



          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
          ;

          }
          if (SACp_pinl_21501__eat_307 < SACp_emal_47499__uprf_31374) { SACp_emal_47447__uprf_31098 = 1; } else { SACp_emal_47447__uprf_31098 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_pinl_21501__eat_307" " (" "%d" ") < " "SACp_emal_47499__uprf_31374" " (" "%d" ")" "' violated", SACp_pinl_21501__eat_307, SACp_emal_47499__uprf_31374); }
          ; ; { SACp_emal_47447__uprf_31098 = (SACp_emal_47452__uprf_31091) & (SACp_emal_47447__uprf_31098); };
          { { if (!((1 == SACp_emal_47445__pinl_21529__idc_6104__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47445__pinl_21529__idc_6104"); }; { { if ((((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104)) + ((6 + (SACp_emal_47445__pinl_21529__idc_6104__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104)) + ((6 + (SACp_emal_47445__pinl_21529__idc_6104__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104)) + ((6 + (SACp_emal_47445__pinl_21529__idc_6104__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47445__pinl_21529__idc_6104 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47445__pinl_21529__idc_6104 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104)) + ((6 + (SACp_emal_47445__pinl_21529__idc_6104__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47445__pinl_21529__idc_6104 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47445__pinl_21529__idc_6104 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104)) + ((6 + (SACp_emal_47445__pinl_21529__idc_6104__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104)) + ((6 + (SACp_emal_47445__pinl_21529__idc_6104__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104)) + ((6 + (SACp_emal_47445__pinl_21529__idc_6104__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104)) + ((6 + (SACp_emal_47445__pinl_21529__idc_6104__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104)) + ((6 + (SACp_emal_47445__pinl_21529__idc_6104__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47445__pinl_21529__idc_6104 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47445__pinl_21529__idc_6104 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47445__pinl_21529__idc_6104 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47445__pinl_21529__idc_6104 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47445__pinl_21529__idc_6104__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104, SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104), ((6 + (SACp_emal_47445__pinl_21529__idc_6104__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47445__pinl_21529__idc_6104__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47445__pinl_21529__idc_6104__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47445__pinl_21529__idc_6104__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_emal_47445__pinl_21529__idc_6104__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
          if (!((SACp_emal_47445__pinl_21529__idc_6104__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
          ;

          }



          { SACp_emal_47445__pinl_21529__idc_6104[0] = SACp_emal_47454__pinl_21443__flat_1747; }
          { SACp_emal_47445__pinl_21529__idc_6104[1] = SACp_pinl_21501__eat_307; }

          if (!SACp_emal_47447__uprf_31098) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
          if (!SACp_emal_47449__uprf_31109) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
          { ; ;



          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
          ;

          }



          SACp_emal_47444__ivesli_45766 = ( ( SACp_emal_47533__isaa_38551_a[1]) * ( SACp_emal_47445__pinl_21529__idc_6104[0]) + ( SACp_emal_47445__pinl_21529__idc_6104[1]) );

          { { { if (((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104, ((((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104) - 1)->data1.arena)); } else { if (SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104, ((((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104, ((((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104) - 1)->data1.arena)); } } else { if (((((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104, ((((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104) - 1)->data1.arena)); } else { if (((((SACp_emal_47445__pinl_21529__idc_6104__sz * sizeof (*SACp_emal_47445__pinl_21529__idc_6104))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104, ((((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47445__pinl_21529__idc_6104); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47445__pinl_21529__idc_6104__desc) & (-1 ^ (3))))); } } }
          { ; ;



          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
          ;

          }



         
          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
          { SACp_emal_47443__pinl_21486__icc_6083 = ( SACl_a[SACp_emal_47444__ivesli_45766]); }

          { ; ; }
          if (!SACp_emal_47447__uprf_31098) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
          if (!SACp_emal_47449__uprf_31109) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
          { ; ; }
          { ; ; }



          if (!((0 == (SACp_emal_47442__pinl_21490__icc_6089__dim - SACp_pinl_21499_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal dimension found!"); };
          if (!((1 == SAC_SACp_emal_47442__pinl_21490__icc_6089_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal size found!"); };
          { SACp_emal_47442__pinl_21490__icc_6089[SACp_wlidx_45689__pinl_21490__icc_6089] = SACp_emal_47443__pinl_21486__icc_6083; };

          { ; ; }
          SACp_wlidx_45689__pinl_21490__icc_6089 = SACp_wlidx_45689__pinl_21490__icc_6089 + 1;
          SACp_pinl_21501__eat_307 = SACp_pinl_21501__eat_307 + 1;
          } }
# 10902 "/home/rubenhensen/sac/hw/a.out.c"
        }

       
        _comp_48036_SAC_label:;
        { ; ; }
        { ; ; }
        { ; ; }
        { ; ; }
        { ; ; }
        if (!SACp_emal_47508__uprf_31401) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
        if (!SACp_emal_47506__uprf_31395) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
        if (!SACp_emal_47509__uprf_31407) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
        SACp_wlidx_45688__icc_6516 = SACp_wlidx_45688__icc_6516 + SACp_emal_47442__pinl_21490__icc_6089__sz;
        SACp_eat_322 = SACp_eat_322 + 1;
        } }
# 10925 "/home/rubenhensen/sac/hw/a.out.c"
      }

     
      _comp_48037_SAC_label:;
      { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47442__pinl_21490__icc_6089__desc) & (-1 ^ (3))))); } }
      { ; ; }
      { ; ; }
      { ; ; }
      if (!SACp_emal_47527__uprf_31630) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_47516__uprf_31568) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_47528__uprf_31636) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_47517__uprf_31574) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
      SACp_wlidx_45687__icc_6520 = SACp_wlidx_45687__icc_6520 + SACp_emal_47440__icc_6516__sz;
      SACp_eat_320 = SACp_eat_320 + 1;
      } }
# 10948 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48038_SAC_label:;
    { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47440__icc_6516__desc) & (-1 ^ (3))))); } }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_47491__icc_6457); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47491__icc_6457__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_47468__icc_6483); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47468__icc_6483__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { { if (((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a, ((((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a) - 1)->data1.arena)); } else { if (SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a, ((((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a, ((((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a) - 1)->data1.arena)); } } else { if (((((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a, ((((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a) - 1)->data1.arena)); } else { if (((((SACp_emal_47533__isaa_38551_a__sz * sizeof (*SACp_emal_47533__isaa_38551_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a, ((((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47533__isaa_38551_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47533__isaa_38551_a__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
    if (!SACp_emal_47521__uprf_31588) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_47514__uprf_31495) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_47522__uprf_31594) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_47439__icc_6520; *SAC_arg_1__desc__p = SACp_emal_47439__icc_6520__desc; }
    return;
   
  }



}
}
# 11003 "/home/rubenhensen/sac/hw/a.out.c"
void SACf__MAIN_CLArray___EQ_EQ__i_X__i_X (
# 11003 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 11003 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * SACp_emal_47553__isaa_38896_B;
    SAC_array_descriptor_t SACp_emal_47553__isaa_38896_B__desc = 
# 11013 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11013 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47553__isaa_38896_B__shp0 = 1;
    const int SACp_emal_47553__isaa_38896_B__sz = 1;
    const int SACp_emal_47553__isaa_38896_B__dim = 1;




    int * SACp_emal_47552__isaa_38899_A;
    SAC_array_descriptor_t SACp_emal_47552__isaa_38899_A__desc = 
# 11022 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11022 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47552__isaa_38899_A__shp0 = 1;
    const int SACp_emal_47552__isaa_38899_A__sz = 1;
    const int SACp_emal_47552__isaa_38899_A__dim = 1;




    
# 11030 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11030 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47551__uprf_31869;
   
   

    const int SACp_emal_47550__ivesplit_38915 = 0;



    int SACp_emal_47549__uprf_31871;
   
   




    int SACp_emal_47548__uprf_31830;
   
   




    
# 11052 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11052 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47546__uprf_31853;
   
   




    
# 11059 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11059 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47545__uprf_31847;
   
   




    
# 11066 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11066 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47544__uprf_31838;
   
   




    
# 11073 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11073 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47543__uprf_31832;
   
   




    int * SACp_emal_47542__idc_6627;
    SAC_array_descriptor_t SACp_emal_47542__idc_6627__desc = 
# 11081 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11081 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47542__idc_6627__shp0 = 1;
    const int SACp_emal_47542__idc_6627__sz = 1;
    const int SACp_emal_47542__idc_6627__dim = 1;




    int SACp_emal_47541__ivesli_45768;
   
   




    int SACp_emal_47540__icc_6600;
   
   




    int SACp_emal_47539__ivesli_45767;
   
   




    int SACp_emal_47538__icc_6606;
   
   




    
# 11117 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11117 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47536__flat_3875;
   
   




    
# 11124 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11124 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_emal_47535__icc_6612;
    SAC_array_descriptor_t SACp_emal_47535__icc_6612__desc = 
# 11125 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11125 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_47535__icc_6612__shp0;
    int SACp_emal_47535__icc_6612__sz;
    const int SACp_emal_47535__icc_6612__dim = 1;




    int SACp_wlidx_45690__icc_6612;
   
   




    int SACp_eat_323;
   
   




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 11148 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11148 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACl_iv__shp0 = 1;
    const int SACl_iv__sz = 1;
    const int SACl_iv__dim = 1;





    int SACl_B__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_B__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[4]);
    const int SACl_B__dim = 1;




    int SACl_A__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_A__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[4]);
    const int SACl_A__dim = 1;

   
    { { if (!((1 == SACp_emal_47553__isaa_38896_B__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47553__isaa_38896_B"); }; { { if ((((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B)) + ((6 + (SACp_emal_47553__isaa_38896_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B)) + ((6 + (SACp_emal_47553__isaa_38896_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B)) + ((6 + (SACp_emal_47553__isaa_38896_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47553__isaa_38896_B = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47553__isaa_38896_B = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B)) + ((6 + (SACp_emal_47553__isaa_38896_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47553__isaa_38896_B = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47553__isaa_38896_B = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B)) + ((6 + (SACp_emal_47553__isaa_38896_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B)) + ((6 + (SACp_emal_47553__isaa_38896_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B)) + ((6 + (SACp_emal_47553__isaa_38896_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B)) + ((6 + (SACp_emal_47553__isaa_38896_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B)) + ((6 + (SACp_emal_47553__isaa_38896_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47553__isaa_38896_B = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47553__isaa_38896_B = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47553__isaa_38896_B = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47553__isaa_38896_B = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47553__isaa_38896_B__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B, SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B), ((6 + (SACp_emal_47553__isaa_38896_B__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47553__isaa_38896_B__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47553__isaa_38896_B__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47553__isaa_38896_B__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47553__isaa_38896_B__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7141, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47553__isaa_38896_B__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7141, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_47553__isaa_38896_B[0] = SACl_B__shp0; };

    { { if (!((1 == SACp_emal_47552__isaa_38899_A__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47552__isaa_38899_A"); }; { { if ((((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A)) + ((6 + (SACp_emal_47552__isaa_38899_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A)) + ((6 + (SACp_emal_47552__isaa_38899_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A)) + ((6 + (SACp_emal_47552__isaa_38899_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47552__isaa_38899_A = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47552__isaa_38899_A = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A)) + ((6 + (SACp_emal_47552__isaa_38899_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47552__isaa_38899_A = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47552__isaa_38899_A = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A)) + ((6 + (SACp_emal_47552__isaa_38899_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A)) + ((6 + (SACp_emal_47552__isaa_38899_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A)) + ((6 + (SACp_emal_47552__isaa_38899_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A)) + ((6 + (SACp_emal_47552__isaa_38899_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A)) + ((6 + (SACp_emal_47552__isaa_38899_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47552__isaa_38899_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47552__isaa_38899_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47552__isaa_38899_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47552__isaa_38899_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47552__isaa_38899_A__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A, SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A), ((6 + (SACp_emal_47552__isaa_38899_A__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47552__isaa_38899_A__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47552__isaa_38899_A__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47552__isaa_38899_A__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47552__isaa_38899_A__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7141, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47552__isaa_38899_A__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7141, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_47552__isaa_38899_A[0] = SACl_A__shp0; };

    { { SACp_emal_47551__uprf_31869 = 
# 11199 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   1
# 11199 "/home/rubenhensen/sac/hw/a.out.c"
   ; }; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47549__uprf_31871 = ( SACp_emal_47553__isaa_38896_B[SACp_emal_47550__ivesplit_38915]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47548__uprf_31830 = ( SACp_emal_47552__isaa_38899_A[SACp_emal_47550__ivesplit_38915]); }

    { ; ; }
    { { if (!((1 == SACp_emal_47535__icc_6612__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47535__icc_6612"); }; { if ((((6 + (SACp_emal_47535__icc_6612__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47535__icc_6612__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47535__icc_6612__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47535__icc_6612__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47535__icc_6612__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_47535__icc_6612__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47535__icc_6612__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47535__icc_6612__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_47535__icc_6612__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_47535__icc_6612__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_47535__icc_6612__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_47535__icc_6612__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_47535__icc_6612__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47535__icc_6612__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47535__icc_6612__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47535__icc_6612__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47535__icc_6612__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47535__icc_6612__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47535__icc_6612__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47535__icc_6612__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47535__icc_6612__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_47535__icc_6612__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47535__icc_6612__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_47549__uprf_31871;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47535__icc_6612__desc) & (-1 ^ (3))))[4]) = SACp_emal_47535__icc_6612__sz = SAC_size;
      if (!((SACp_emal_47535__icc_6612__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 11230 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 11230 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11230 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 11230 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11230 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 11230 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 11230 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 11230, __extension__ __PRETTY_FUNCTION__); }))
# 11230 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_47535__icc_6612 = (
# 11230 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11230 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_47535__icc_6612__sz * sizeof (*SACp_emal_47535__icc_6612)); break; case SAC_HM_multi_threaded: SACp_emal_47535__icc_6612 = (
# 11230 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11230 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_47535__icc_6612__sz * sizeof (*SACp_emal_47535__icc_6612), 0); break; case SAC_HM_any_threaded: SACp_emal_47535__icc_6612 = (
# 11230 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11230 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_47535__icc_6612__sz * sizeof (*SACp_emal_47535__icc_6612), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47535__icc_6612__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47535__icc_6612__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47535__icc_6612__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_47535__icc_6612_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_47535__icc_6612_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_47549__uprf_31871;




      SACp_wlidx_45690__icc_6612
        = SAC_schedule_start0 * SAC_SACp_emal_47535__icc_6612_shpfac0;

      { int SAC_stop_SACp_eat_323 = SACp_emal_47549__uprf_31871; for (SACp_eat_323 = 0; SACp_eat_323 < SACp_emal_47549__uprf_31871;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_323 >= 0) { { SACp_emal_47546__uprf_31853 = SACp_eat_323; }; SACp_emal_47546__uprf_31853 = 1; } else { SACp_emal_47546__uprf_31853 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Non-negativity constraint violated " "for scalar " "SACp_eat_323"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_323 < SACp_emal_47549__uprf_31871) { SACp_emal_47545__uprf_31847 = 1; } else { SACp_emal_47545__uprf_31847 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Scalar constraint `" "SACp_eat_323" " (" "%d" ") < " "SACp_emal_47549__uprf_31871" " (" "%d" ")" "' violated", SACp_eat_323, SACp_emal_47549__uprf_31871); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_323 >= 0) { { SACp_emal_47544__uprf_31838 = SACp_eat_323; }; SACp_emal_47544__uprf_31838 = 1; } else { SACp_emal_47544__uprf_31838 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Non-negativity constraint violated " "for scalar " "SACp_eat_323"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_323 < SACp_emal_47548__uprf_31830) { SACp_emal_47543__uprf_31832 = 1; } else { SACp_emal_47543__uprf_31832 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Scalar constraint `" "SACp_eat_323" " (" "%d" ") < " "SACp_emal_47548__uprf_31830" " (" "%d" ")" "' violated", SACp_eat_323, SACp_emal_47548__uprf_31830); }
      { { if (!((1 == SACp_emal_47542__idc_6627__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47542__idc_6627"); }; { { if ((((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627)) + ((6 + (SACp_emal_47542__idc_6627__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627)) + ((6 + (SACp_emal_47542__idc_6627__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627)) + ((6 + (SACp_emal_47542__idc_6627__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47542__idc_6627 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47542__idc_6627 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627)) + ((6 + (SACp_emal_47542__idc_6627__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47542__idc_6627 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47542__idc_6627 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627)) + ((6 + (SACp_emal_47542__idc_6627__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627)) + ((6 + (SACp_emal_47542__idc_6627__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627)) + ((6 + (SACp_emal_47542__idc_6627__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627)) + ((6 + (SACp_emal_47542__idc_6627__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627)) + ((6 + (SACp_emal_47542__idc_6627__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47542__idc_6627 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47542__idc_6627 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47542__idc_6627 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47542__idc_6627 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47542__idc_6627__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47542__idc_6627, SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627), ((6 + (SACp_emal_47542__idc_6627__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47542__idc_6627__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47542__idc_6627__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47542__idc_6627__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_47542__idc_6627__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
      if (!((SACp_emal_47542__idc_6627__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_47542__idc_6627[0] = SACp_eat_323; }

      if (!SACp_emal_47545__uprf_31847) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_47546__uprf_31853) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_47541__ivesli_45768 = ( SACp_emal_47542__idc_6627[0]);

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_47540__icc_6600 = ( SACl_B[SACp_emal_47541__ivesli_45768]); }

      { ; ; }
      if (!SACp_emal_47545__uprf_31847) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_47546__uprf_31853) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      if (!SACp_emal_47543__uprf_31832) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_47544__uprf_31838) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_47539__ivesli_45767 = ( SACp_emal_47542__idc_6627[0]);

      { { { if (((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47542__idc_6627, ((((SAC_HM_header_t *)SACp_emal_47542__idc_6627) - 1)->data1.arena)); } else { if (SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47542__idc_6627) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47542__idc_6627, ((((SAC_HM_header_t *)SACp_emal_47542__idc_6627) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47542__idc_6627, ((((SAC_HM_header_t *)SACp_emal_47542__idc_6627) - 1)->data1.arena)); } } else { if (((((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47542__idc_6627, ((((SAC_HM_header_t *)SACp_emal_47542__idc_6627) - 1)->data1.arena)); } else { if (((((SACp_emal_47542__idc_6627__sz * sizeof (*SACp_emal_47542__idc_6627))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47542__idc_6627) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47542__idc_6627, ((((SAC_HM_header_t *)SACp_emal_47542__idc_6627) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47542__idc_6627, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47542__idc_6627); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47542__idc_6627); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47542__idc_6627, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47542__idc_6627); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47542__idc_6627); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47542__idc_6627__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_47538__icc_6606 = ( SACl_A[SACp_emal_47539__ivesli_45767]); }

      { ; ; }
      if (!SACp_emal_47543__uprf_31832) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_47544__uprf_31838) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      ; ; { SACp_emal_47538__icc_6606 = (SACp_emal_47538__icc_6606) - (SACp_emal_47540__icc_6600); };
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_47536__flat_3875 = (SACp_emal_47538__icc_6606) == (0); };
      { ; ; }



      if (!((0 == (SACp_emal_47535__icc_6612__dim - SACl_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47535__icc_6612_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_47535__icc_6612[SACp_wlidx_45690__icc_6612] = SACp_emal_47536__flat_3875; };

      { ; ; }
      SACp_wlidx_45690__icc_6612 = SACp_wlidx_45690__icc_6612 + 1;
      SACp_eat_323 = SACp_eat_323 + 1;
      } }
# 11434 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48039_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { { if (((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B, ((((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B) - 1)->data1.arena)); } else { if (SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B, ((((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B, ((((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B) - 1)->data1.arena)); } } else { if (((((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B, ((((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B) - 1)->data1.arena)); } else { if (((((SACp_emal_47553__isaa_38896_B__sz * sizeof (*SACp_emal_47553__isaa_38896_B))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B, ((((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47553__isaa_38896_B); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47553__isaa_38896_B__desc) & (-1 ^ (3))))); } } }
    { { { if (((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A, ((((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A) - 1)->data1.arena)); } else { if (SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A, ((((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A, ((((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A) - 1)->data1.arena)); } } else { if (((((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A, ((((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A) - 1)->data1.arena)); } else { if (((((SACp_emal_47552__isaa_38899_A__sz * sizeof (*SACp_emal_47552__isaa_38899_A))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A, ((((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47552__isaa_38899_A); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47552__isaa_38899_A__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_B); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))); } } } } else { } }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_A); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))); } } } } else { } }



    { *SAC_arg_1__p = SACp_emal_47535__icc_6612; *SAC_arg_1__desc__p = SACp_emal_47535__icc_6612__desc; }
    return;
   
  }



}
}
# 11468 "/home/rubenhensen/sac/hw/a.out.c"
void SACf__MAIN_CLArray___EQ_EQ__i_X__i (
# 11468 "/home/rubenhensen/sac/hw/a.out.c" 3 4
_Bool 
# 11468 "/home/rubenhensen/sac/hw/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int SACl_B) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
    const int SACp_emal_47566__isaa_38959_B = 0;



    int * SACp_emal_47565__isaa_38963_A;
    SAC_array_descriptor_t SACp_emal_47565__isaa_38963_A__desc = 
# 11479 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11479 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47565__isaa_38963_A__shp0 = 1;
    const int SACp_emal_47565__isaa_38963_A__sz = 1;
    const int SACp_emal_47565__isaa_38963_A__dim = 1;




    
# 11487 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11487 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47564__uprf_32001;
   
   




    int SACp_emal_47563__uprf_32003;
   
   




    
# 11501 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11501 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47561__uprf_31985;
   
   




    
# 11508 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11508 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47560__uprf_31979;
   
   




    int * SACp_emal_47559__idc_7415;
    SAC_array_descriptor_t SACp_emal_47559__idc_7415__desc = 
# 11516 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11516 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47559__idc_7415__shp0 = 1;
    const int SACp_emal_47559__idc_7415__sz = 1;
    const int SACp_emal_47559__idc_7415__dim = 1;




    int SACp_emal_47558__ivesli_45769;
   
   




    int SACp_emal_47557__icc_7397;
   
   




    
# 11538 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11538 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47555__flat_3965;
   
   




    
# 11545 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11545 "/home/rubenhensen/sac/hw/a.out.c"
   * SACp_emal_47554__icc_7403;
    SAC_array_descriptor_t SACp_emal_47554__icc_7403__desc = 
# 11546 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11546 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_47554__icc_7403__shp0;
    int SACp_emal_47554__icc_7403__sz;
    const int SACp_emal_47554__icc_7403__dim = 1;




    int SACp_wlidx_45691__icc_7403;
   
   




    int SACp_eat_339;
   
   




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 11569 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11569 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACl_iv__shp0 = 1;
    const int SACl_iv__sz = 1;
    const int SACl_iv__dim = 1;





   




    int SACl_A__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_A__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[4]);
    const int SACl_A__dim = 1;

   
    { { if (!((1 == SACp_emal_47565__isaa_38963_A__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47565__isaa_38963_A"); }; { { if ((((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A)) + ((6 + (SACp_emal_47565__isaa_38963_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A)) + ((6 + (SACp_emal_47565__isaa_38963_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A)) + ((6 + (SACp_emal_47565__isaa_38963_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47565__isaa_38963_A = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47565__isaa_38963_A = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A)) + ((6 + (SACp_emal_47565__isaa_38963_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47565__isaa_38963_A = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47565__isaa_38963_A = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A)) + ((6 + (SACp_emal_47565__isaa_38963_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A)) + ((6 + (SACp_emal_47565__isaa_38963_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A)) + ((6 + (SACp_emal_47565__isaa_38963_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A)) + ((6 + (SACp_emal_47565__isaa_38963_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A)) + ((6 + (SACp_emal_47565__isaa_38963_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47565__isaa_38963_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47565__isaa_38963_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47565__isaa_38963_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47565__isaa_38963_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47565__isaa_38963_A__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A, SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A), ((6 + (SACp_emal_47565__isaa_38963_A__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47565__isaa_38963_A__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47565__isaa_38963_A__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47565__isaa_38963_A__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47565__isaa_38963_A__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9523, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47565__isaa_38963_A__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9523, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_47565__isaa_38963_A[0] = SACl_A__shp0; };

    { { SACp_emal_47564__uprf_32001 = 
# 11603 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   1
# 11603 "/home/rubenhensen/sac/hw/a.out.c"
   ; }; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9597, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47563__uprf_32003 = ( SACp_emal_47565__isaa_38963_A[SACp_emal_47566__isaa_38959_B]); }

    { ; ; }
    { { if (!((1 == SACp_emal_47554__icc_7403__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47554__icc_7403"); }; { if ((((6 + (SACp_emal_47554__icc_7403__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47554__icc_7403__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47554__icc_7403__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47554__icc_7403__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47554__icc_7403__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_47554__icc_7403__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47554__icc_7403__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47554__icc_7403__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_47554__icc_7403__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_47554__icc_7403__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_47554__icc_7403__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_47554__icc_7403__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_47554__icc_7403__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47554__icc_7403__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47554__icc_7403__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47554__icc_7403__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47554__icc_7403__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47554__icc_7403__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47554__icc_7403__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47554__icc_7403__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47554__icc_7403__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9582, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_47554__icc_7403__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47554__icc_7403__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_47563__uprf_32003;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47554__icc_7403__desc) & (-1 ^ (3))))[4]) = SACp_emal_47554__icc_7403__sz = SAC_size;
      if (!((SACp_emal_47554__icc_7403__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9582, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 11627 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 11627 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11627 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 11627 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11627 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 11627 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 11627 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 11627, __extension__ __PRETTY_FUNCTION__); }))
# 11627 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_47554__icc_7403 = (
# 11627 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11627 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_47554__icc_7403__sz * sizeof (*SACp_emal_47554__icc_7403)); break; case SAC_HM_multi_threaded: SACp_emal_47554__icc_7403 = (
# 11627 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11627 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_47554__icc_7403__sz * sizeof (*SACp_emal_47554__icc_7403), 0); break; case SAC_HM_any_threaded: SACp_emal_47554__icc_7403 = (
# 11627 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11627 "/home/rubenhensen/sac/hw/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_47554__icc_7403__sz * sizeof (*SACp_emal_47554__icc_7403), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47554__icc_7403__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47554__icc_7403__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47554__icc_7403__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9582, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9582, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_47554__icc_7403_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_47554__icc_7403_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_47563__uprf_32003;




      SACp_wlidx_45691__icc_7403
        = SAC_schedule_start0 * SAC_SACp_emal_47554__icc_7403_shpfac0;

      { int SAC_stop_SACp_eat_339 = SACp_emal_47563__uprf_32003; for (SACp_eat_339 = 0; SACp_eat_339 < SACp_emal_47563__uprf_32003;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_339 >= 0) { { SACp_emal_47561__uprf_31985 = SACp_eat_339; }; SACp_emal_47561__uprf_31985 = 1; } else { SACp_emal_47561__uprf_31985 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Non-negativity constraint violated " "for scalar " "SACp_eat_339"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_339 < SACp_emal_47563__uprf_32003) { SACp_emal_47560__uprf_31979 = 1; } else { SACp_emal_47560__uprf_31979 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Scalar constraint `" "SACp_eat_339" " (" "%d" ") < " "SACp_emal_47563__uprf_32003" " (" "%d" ")" "' violated", SACp_eat_339, SACp_emal_47563__uprf_32003); }
      { { if (!((1 == SACp_emal_47559__idc_7415__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47559__idc_7415"); }; { { if ((((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415)) + ((6 + (SACp_emal_47559__idc_7415__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415)) + ((6 + (SACp_emal_47559__idc_7415__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415)) + ((6 + (SACp_emal_47559__idc_7415__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47559__idc_7415 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47559__idc_7415 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415)) + ((6 + (SACp_emal_47559__idc_7415__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47559__idc_7415 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47559__idc_7415 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415)) + ((6 + (SACp_emal_47559__idc_7415__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415)) + ((6 + (SACp_emal_47559__idc_7415__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415)) + ((6 + (SACp_emal_47559__idc_7415__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415)) + ((6 + (SACp_emal_47559__idc_7415__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415)) + ((6 + (SACp_emal_47559__idc_7415__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47559__idc_7415 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47559__idc_7415 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47559__idc_7415 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47559__idc_7415 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47559__idc_7415__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47559__idc_7415, SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415), ((6 + (SACp_emal_47559__idc_7415__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47559__idc_7415__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47559__idc_7415__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47559__idc_7415__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_47559__idc_7415__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9602, "Assignment with incompatible types found"); };
      if (!((SACp_emal_47559__idc_7415__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9602, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_47559__idc_7415[0] = SACp_eat_339; }

      if (!SACp_emal_47560__uprf_31979) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_47561__uprf_31985) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_47558__ivesli_45769 = ( SACp_emal_47559__idc_7415[0]);

      { { { if (((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47559__idc_7415, ((((SAC_HM_header_t *)SACp_emal_47559__idc_7415) - 1)->data1.arena)); } else { if (SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47559__idc_7415) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47559__idc_7415, ((((SAC_HM_header_t *)SACp_emal_47559__idc_7415) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47559__idc_7415, ((((SAC_HM_header_t *)SACp_emal_47559__idc_7415) - 1)->data1.arena)); } } else { if (((((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47559__idc_7415, ((((SAC_HM_header_t *)SACp_emal_47559__idc_7415) - 1)->data1.arena)); } else { if (((((SACp_emal_47559__idc_7415__sz * sizeof (*SACp_emal_47559__idc_7415))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47559__idc_7415) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47559__idc_7415, ((((SAC_HM_header_t *)SACp_emal_47559__idc_7415) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47559__idc_7415, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47559__idc_7415); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47559__idc_7415); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47559__idc_7415, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47559__idc_7415); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47559__idc_7415); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47559__idc_7415__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_47557__icc_7397 = ( SACl_A[SACp_emal_47558__ivesli_45769]); }

      { ; ; }
      if (!SACp_emal_47560__uprf_31979) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_47561__uprf_31985) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      ; ; { SACp_emal_47557__icc_7397 = (SACp_emal_47557__icc_7397) - (SACl_B); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9614, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_47555__flat_3965 = (SACp_emal_47557__icc_7397) == (0); };
      { ; ; }



      if (!((0 == (SACp_emal_47554__icc_7403__dim - SACl_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47554__icc_7403_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_47554__icc_7403[SACp_wlidx_45691__icc_7403] = SACp_emal_47555__flat_3965; };

      { ; ; }
      SACp_wlidx_45691__icc_7403 = SACp_wlidx_45691__icc_7403 + 1;
      SACp_eat_339 = SACp_eat_339 + 1;
      } }
# 11777 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48040_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { { { if (((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A, ((((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A) - 1)->data1.arena)); } else { if (SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A, ((((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A, ((((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A) - 1)->data1.arena)); } } else { if (((((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A, ((((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A) - 1)->data1.arena)); } else { if (((((SACp_emal_47565__isaa_38963_A__sz * sizeof (*SACp_emal_47565__isaa_38963_A))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A, ((((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47565__isaa_38963_A); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47565__isaa_38963_A__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    ;
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_A); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))); } } } } else { } }



    { *SAC_arg_1__p = SACp_emal_47554__icc_7403; *SAC_arg_1__desc__p = SACp_emal_47554__icc_7403__desc; }
    return;
   
  }



}
}
# 11809 "/home/rubenhensen/sac/hw/a.out.c"
void SACf__MAIN___rtpf_8_impl_block__i_X_X__i_2 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_s, SAC_array_descriptor_t SACl_s__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
    const int SACp_emal_47684__isaa_39010_s = 1;



    int * SACp_emal_47683__isaa_39014_a;
    SAC_array_descriptor_t SACp_emal_47683__isaa_39014_a__desc = 
# 11820 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11820 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47683__isaa_39014_a__shp0 = 2;
    const int SACp_emal_47683__isaa_39014_a__sz = 2;
    const int SACp_emal_47683__isaa_39014_a__dim = 1;




    int SACp_emal_47682__ivesplit_39066;
   
   




    int SACp_emal_47681__uprf_33692;
   
   




    
# 11842 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11842 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47680__uprf_33694;
   
   




    int SACp_emal_47679__uprf_33697;
   
   




    
# 11856 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11856 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47678__uprf_33699;
   
   




    
# 11863 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11863 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47676__uprf_33683;
   
   




    
# 11870 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11870 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47675__uprf_33688;
   
   




    
# 11877 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11877 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47673__uprf_33672;
   
   




    
# 11884 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11884 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47672__uprf_33677;
   
   




    
# 11891 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11891 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47670__uprf_33661;
   
   




    
# 11898 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11898 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47669__uprf_33666;
   
   




    int * SACp_emal_47667__idc_7551;
    SAC_array_descriptor_t SACp_emal_47667__idc_7551__desc = 
# 11906 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11906 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47667__idc_7551__shp0 = 2;
    const int SACp_emal_47667__idc_7551__sz = 2;
    const int SACp_emal_47667__idc_7551__dim = 1;




    int SACp_emal_47666__pinl_21813__icc_7279;
   
   




    int SACp_emal_47665__pinl_21823__flat_1771;
   
   




    int SACp_emal_47664__pinl_21813__icc_7279__SSA6_1;
   
   




    int SACp_emal_47663__pinl_21823__flat_1771__SSA6_2;
   
   




    
# 11942 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11942 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47662__uprf_33620;
   
   




    
# 11949 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11949 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47661__uprf_33625;
   
   




    
# 11956 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11956 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47659__uprf_33609;
   
   




    
# 11963 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11963 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47658__uprf_33614;
   
   




    int * SACp_emal_47656__idc_7559;
    SAC_array_descriptor_t SACp_emal_47656__idc_7559__desc = 
# 11971 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 11971 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47656__idc_7559__shp0 = 2;
    const int SACp_emal_47656__idc_7559__sz = 2;
    const int SACp_emal_47656__idc_7559__dim = 1;




    
# 11979 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11979 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47655__uprf_33596;
   
   




    int SACp_emal_47654__uprf_33595;
   
   




    
# 11993 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 11993 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47653__uprf_33603;
   
   




    int SACp_emal_47652__uprf_33602;
   
   




    
# 12007 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12007 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47650__uprf_33583;
   
   




    
# 12014 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12014 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47649__uprf_33588;
   
   




    
# 12021 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12021 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47647__uprf_33570;
   
   




    
# 12028 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12028 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47646__uprf_33577;
   
   




    int * SACp_emal_47644__idc_7567;
    SAC_array_descriptor_t SACp_emal_47644__idc_7567__desc = 
# 12036 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12036 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47644__idc_7567__shp0 = 2;
    const int SACp_emal_47644__idc_7567__sz = 2;
    const int SACp_emal_47644__idc_7567__dim = 1;




    
# 12044 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12044 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47643__uprf_33490;
   
   




    int SACp_emal_47642__uprf_33489;
   
   




    
# 12058 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12058 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47641__uprf_33497;
   
   




    int SACp_emal_47640__uprf_33496;
   
   




    int * SACp_emal_47638__idc_7571;
    SAC_array_descriptor_t SACp_emal_47638__idc_7571__desc = 
# 12073 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12073 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47638__idc_7571__shp0 = 2;
    const int SACp_emal_47638__idc_7571__sz = 2;
    const int SACp_emal_47638__idc_7571__dim = 1;




    int SACp_emal_47636__pinl_32428__icc_5338;
   
   




    int SACp_emal_47635__pinl_32511__icc_5338;
   
   




    int * SACp_emal_47634__wlbsc_9436_sc_bound;
    SAC_array_descriptor_t SACp_emal_47634__wlbsc_9436_sc_bound__desc = 
# 12096 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12096 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47634__wlbsc_9436_sc_bound__shp0 = 2;
    const int SACp_emal_47634__wlbsc_9436_sc_bound__sz = 2;
    const int SACp_emal_47634__wlbsc_9436_sc_bound__dim = 1;




    
# 12104 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12104 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47633__uprf_33343;
   
   




    int SACp_emal_47632__uprf_33342;
   
   




    
# 12118 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12118 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47631__uprf_33350;
   
   




    int SACp_emal_47630__uprf_33349;
   
   




    int * SACp_emal_47628__idc_7593;
    SAC_array_descriptor_t SACp_emal_47628__idc_7593__desc = 
# 12133 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12133 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47628__idc_7593__shp0 = 2;
    const int SACp_emal_47628__idc_7593__sz = 2;
    const int SACp_emal_47628__idc_7593__dim = 1;




    int SACp_emal_47627__pinl_32591__icc_5332;
   
   




    int SACp_emal_47626__pinl_32594__icc_5338;
   
   




    int SACp_emal_47625__pinl_32614_res;
   
   




    int * SACp_emal_47624__emec_46307__icc_7501;
    SAC_array_descriptor_t SACp_emal_47624__emec_46307__icc_7501__desc = 
# 12163 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12163 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47624__emec_46307__icc_7501__shp0 = 2;
    const int SACp_emal_47624__emec_46307__icc_7501__sz = 2;
    const int SACp_emal_47624__emec_46307__icc_7501__dim = 1;




    int * SACp_emal_47622__emec_46306__icc_7501;
    SAC_array_descriptor_t SACp_emal_47622__emec_46306__icc_7501__desc = 
# 12172 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12172 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47622__emec_46306__icc_7501__shp0 = 2;
    const int SACp_emal_47622__emec_46306__icc_7501__sz = 2;
    const int SACp_emal_47622__emec_46306__icc_7501__dim = 1;




    int SACp_emal_47620__pinl_32674__icc_5332;
   
   




    int SACp_emal_47619__pinl_32677__icc_5338;
   
   




    int SACp_emal_47618__pinl_32697_res;
   
   




    int SACp_emal_47617__wlbsc_9358_sc_e;
   
   




    int SACp_emal_47616__wlbsc_9348_sc_e;
   
   




    int * SACp_emal_47613__icc_7504;
    SAC_array_descriptor_t SACp_emal_47613__icc_7504__desc = 
# 12216 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12216 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_47613__icc_7504__shp0;
    int SACp_emal_47613__icc_7504__shp1;
    int SACp_emal_47613__icc_7504__sz;
    const int SACp_emal_47613__icc_7504__dim = 2;




    int SACp_emal_47612__pinl_32757__icc_5332;
   
   




    int SACp_emal_47611__pinl_32760__icc_5338;
   
   




    int SACp_emal_47610__pinl_32780_res;
   
   




    int * SACp_emal_47609__emec_46305__icc_7538;
    SAC_array_descriptor_t SACp_emal_47609__emec_46305__icc_7538__desc = 
# 12247 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12247 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47609__emec_46305__icc_7538__shp0 = 2;
    const int SACp_emal_47609__emec_46305__icc_7538__sz = 2;
    const int SACp_emal_47609__emec_46305__icc_7538__dim = 1;




    int * SACp_emal_47607__emec_46304__icc_7538;
    SAC_array_descriptor_t SACp_emal_47607__emec_46304__icc_7538__desc = 
# 12256 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12256 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47607__emec_46304__icc_7538__shp0 = 2;
    const int SACp_emal_47607__emec_46304__icc_7538__sz = 2;
    const int SACp_emal_47607__emec_46304__icc_7538__dim = 1;




    int SACp_emal_47605__pinl_32840__icc_5332;
   
   




    int SACp_emal_47604__pinl_32843__icc_5338;
   
   




    int SACp_emal_47603__pinl_32863_res;
   
   




    int SACp_emal_47602__wlbsc_9308_sc_e;
   
   




    int SACp_emal_47601__wlbsc_9298_sc_e;
   
   




    int SACp_emal_47600__icc_7533;
   
   




    int SACp_emal_47599__pinl_33006__icc_5332;
   
   




    int SACp_emal_47598__pinl_33009__icc_5338;
   
   




    int SACp_emal_47597__pinl_33029_res;
   
   




    int * SACp_emal_47596__emec_46303__icc_7534;
    SAC_array_descriptor_t SACp_emal_47596__emec_46303__icc_7534__desc = 
# 12328 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12328 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47596__emec_46303__icc_7534__shp0 = 2;
    const int SACp_emal_47596__emec_46303__icc_7534__sz = 2;
    const int SACp_emal_47596__emec_46303__icc_7534__dim = 1;




    int * SACp_emal_47594__emec_46302__icc_7534;
    SAC_array_descriptor_t SACp_emal_47594__emec_46302__icc_7534__desc = 
# 12337 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12337 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47594__emec_46302__icc_7534__shp0 = 2;
    const int SACp_emal_47594__emec_46302__icc_7534__sz = 2;
    const int SACp_emal_47594__emec_46302__icc_7534__dim = 1;




    int SACp_emal_47592__pinl_33089__icc_5332;
   
   




    int SACp_emal_47591__pinl_33092__icc_5338;
   
   




    int SACp_emal_47590__pinl_33112_res;
   
   




    int SACp_emal_47589__wlbsc_9258_sc_e;
   
   




    int SACp_emal_47588__wlbsc_9248_sc_e;
   
   




    int SACp_emal_47583__pinl_22476__flat_1763;
   
   




    int SACp_emal_47582__pinl_22476__flat_1763__SSA14_2;
   
   




    int SACp_emal_47579__pinl_22661__flat_1747;
   
   




    int SACp_emal_47578__pinl_22661__flat_1747__SSA6_2;
   
   




    
# 12408 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12408 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47577__uprf_33267;
   
   




    
# 12415 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12415 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47576__uprf_33272;
   
   




    
# 12422 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12422 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47574__uprf_33254;
   
   




    
# 12429 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   _Bool 
# 12429 "/home/rubenhensen/sac/hw/a.out.c"
   SACp_emal_47573__uprf_33261;
   
   




    int * SACp_emal_47571__pinl_22746__idc_6910;
    SAC_array_descriptor_t SACp_emal_47571__pinl_22746__idc_6910__desc = 
# 12437 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12437 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_emal_47571__pinl_22746__idc_6910__shp0 = 2;
    const int SACp_emal_47571__pinl_22746__idc_6910__sz = 2;
    const int SACp_emal_47571__pinl_22746__idc_6910__dim = 1;




    int SACp_emal_47570__ivesli_45770;
   
   




    int SACp_emal_47569__pinl_22704__icc_6889;
   
   




    int * SACp_emal_47568__icc_7537;
    SAC_array_descriptor_t SACp_emal_47568__icc_7537__desc = 
# 12460 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12460 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_47568__icc_7537__shp0;
    int SACp_emal_47568__icc_7537__shp1;
    int SACp_emal_47568__icc_7537__sz;
    const int SACp_emal_47568__icc_7537__dim = 2;




    int * SACp_emal_47567__icc_7541;
    SAC_array_descriptor_t SACp_emal_47567__icc_7541__desc = 
# 12470 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12470 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int SACp_emal_47567__icc_7541__shp0;
    int SACp_emal_47567__icc_7541__shp1;
    int SACp_emal_47567__icc_7541__shp2;
    int SACp_emal_47567__icc_7541__shp3;
    int SACp_emal_47567__icc_7541__sz;
    const int SACp_emal_47567__icc_7541__dim = 4;




    int SACp_wlidx_45694__icc_7537;
   
   




    int SACp_wlidx_45693__icc_7541;
   
   




    int SACp_wlidx_45692__icc_7504;
   
   




    int SACp_eat_348;
   
   




    int SACp_eat_347;
   
   




    int SACp_eat_346;
   
   




    int SACp_eat_345;
   
   




    int SACp_eat_344;
   
   




    int SACp_eat_343;
   
   




    int * SACl_jv__SSA0_1;
    SAC_array_descriptor_t SACl_jv__SSA0_1__desc = 
# 12545 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12545 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACl_jv__SSA0_1__shp0 = 2;
    const int SACl_jv__SSA0_1__sz = 2;
    const int SACl_jv__SSA0_1__dim = 1;




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 12554 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12554 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACl_iv__shp0 = 2;
    const int SACl_iv__sz = 2;
    const int SACl_iv__dim = 1;




    int * SACp_hse_23;
    SAC_array_descriptor_t SACp_hse_23__desc = 
# 12563 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 12563 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    const int SACp_hse_23__shp0 = 2;
    const int SACp_hse_23__sz = 2;
    const int SACp_hse_23__dim = 1;





    const int SACl_s__shp0 = 2;
    const int SACl_s__sz = 2;
    const int SACl_s__dim = 1;




    int SACl_a__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_a__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (1))]);
    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    const int SACl_a__dim = 2;

   
    { { if (!((1 == SACp_emal_47683__isaa_39014_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47683__isaa_39014_a"); }; { { if ((((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a)) + ((6 + (SACp_emal_47683__isaa_39014_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a)) + ((6 + (SACp_emal_47683__isaa_39014_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a)) + ((6 + (SACp_emal_47683__isaa_39014_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47683__isaa_39014_a = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47683__isaa_39014_a = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a)) + ((6 + (SACp_emal_47683__isaa_39014_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47683__isaa_39014_a = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47683__isaa_39014_a = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a)) + ((6 + (SACp_emal_47683__isaa_39014_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a)) + ((6 + (SACp_emal_47683__isaa_39014_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a)) + ((6 + (SACp_emal_47683__isaa_39014_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a)) + ((6 + (SACp_emal_47683__isaa_39014_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a)) + ((6 + (SACp_emal_47683__isaa_39014_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47683__isaa_39014_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47683__isaa_39014_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47683__isaa_39014_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47683__isaa_39014_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47683__isaa_39014_a__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a, SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a), ((6 + (SACp_emal_47683__isaa_39014_a__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47683__isaa_39014_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47683__isaa_39014_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47683__isaa_39014_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47683__isaa_39014_a__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47683__isaa_39014_a__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_47683__isaa_39014_a[0] = SACl_a__shp0; };
    { SACp_emal_47683__isaa_39014_a[1] = SACl_a__shp1; };

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_47682__ivesplit_39066 = 0; }; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47681__uprf_33692 = ( SACl_s[SACp_emal_47682__ivesplit_39066]); }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47681__uprf_33692 >= 0) { { SACp_emal_47680__uprf_33694 = SACp_emal_47681__uprf_33692; }; SACp_emal_47680__uprf_33694 = 1; } else { SACp_emal_47680__uprf_33694 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_47681__uprf_33692"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47679__uprf_33697 = ( SACl_s[SACp_emal_47684__isaa_39010_s]); }

    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_s__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACl_s__sz * sizeof (*SACl_s)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { if (SACl_s__sz * sizeof (*SACl_s) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } } else { if (((((SACl_s__sz * sizeof (*SACl_s))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { if (((((SACl_s__sz * sizeof (*SACl_s))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_s); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_s); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_s); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_s); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_s__desc) & (-1 ^ (3))))); } } } } else { } }
    if (SACp_emal_47679__uprf_33697 >= 0) { { SACp_emal_47678__uprf_33699 = SACp_emal_47679__uprf_33697; }; SACp_emal_47678__uprf_33699 = 1; } else { SACp_emal_47678__uprf_33699 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_47679__uprf_33697"); }
    ; ; { SACp_emal_47680__uprf_33694 = (SACp_emal_47680__uprf_33694) & (SACp_emal_47678__uprf_33699); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47681__uprf_33692 >= 0) { { SACp_emal_47676__uprf_33683 = SACp_emal_47681__uprf_33692; }; SACp_emal_47676__uprf_33683 = 1; } else { SACp_emal_47676__uprf_33683 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_47681__uprf_33692"); }
    if (SACp_emal_47679__uprf_33697 >= 0) { { SACp_emal_47675__uprf_33688 = SACp_emal_47679__uprf_33697; }; SACp_emal_47675__uprf_33688 = 1; } else { SACp_emal_47675__uprf_33688 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_47679__uprf_33697"); }
    ; ; { SACp_emal_47676__uprf_33683 = (SACp_emal_47676__uprf_33683) & (SACp_emal_47675__uprf_33688); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47681__uprf_33692 >= 0) { { SACp_emal_47673__uprf_33672 = SACp_emal_47681__uprf_33692; }; SACp_emal_47673__uprf_33672 = 1; } else { SACp_emal_47673__uprf_33672 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_47681__uprf_33692"); }
    if (SACp_emal_47679__uprf_33697 >= 0) { { SACp_emal_47672__uprf_33677 = SACp_emal_47679__uprf_33697; }; SACp_emal_47672__uprf_33677 = 1; } else { SACp_emal_47672__uprf_33677 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_47679__uprf_33697"); }
    ; ; { SACp_emal_47673__uprf_33672 = (SACp_emal_47673__uprf_33672) & (SACp_emal_47672__uprf_33677); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47681__uprf_33692 >= 0) { { SACp_emal_47670__uprf_33661 = SACp_emal_47681__uprf_33692; }; SACp_emal_47670__uprf_33661 = 1; } else { SACp_emal_47670__uprf_33661 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_47681__uprf_33692"); }
    if (SACp_emal_47679__uprf_33697 >= 0) { { SACp_emal_47669__uprf_33666 = SACp_emal_47679__uprf_33697; }; SACp_emal_47669__uprf_33666 = 1; } else { SACp_emal_47669__uprf_33666 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_47679__uprf_33697"); }
    ; ; { SACp_emal_47670__uprf_33661 = (SACp_emal_47670__uprf_33661) & (SACp_emal_47669__uprf_33666); };
    { ; ; }
    { { if (!((1 == SACp_emal_47667__idc_7551__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47667__idc_7551"); }; { { if ((((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551)) + ((6 + (SACp_emal_47667__idc_7551__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551)) + ((6 + (SACp_emal_47667__idc_7551__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551)) + ((6 + (SACp_emal_47667__idc_7551__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47667__idc_7551 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47667__idc_7551 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551)) + ((6 + (SACp_emal_47667__idc_7551__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47667__idc_7551 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47667__idc_7551 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551)) + ((6 + (SACp_emal_47667__idc_7551__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551)) + ((6 + (SACp_emal_47667__idc_7551__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551)) + ((6 + (SACp_emal_47667__idc_7551__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551)) + ((6 + (SACp_emal_47667__idc_7551__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551)) + ((6 + (SACp_emal_47667__idc_7551__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47667__idc_7551 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47667__idc_7551 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47667__idc_7551 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47667__idc_7551 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47667__idc_7551__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47667__idc_7551, SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551), ((6 + (SACp_emal_47667__idc_7551__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47667__idc_7551__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47667__idc_7551__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47667__idc_7551__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47667__idc_7551__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 57, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47667__idc_7551__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 36, 57, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47667__idc_7551[0] = SACp_emal_47681__uprf_33692; }
    { SACp_emal_47667__idc_7551[1] = SACp_emal_47679__uprf_33697; }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7947, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47666__pinl_21813__icc_7279 = ( SACp_emal_47683__isaa_39014_a[SACp_emal_47682__ivesplit_39066]); }

    ; ; { SACp_emal_47665__pinl_21823__flat_1771 = (SACp_emal_47666__pinl_21813__icc_7279) / (SACp_emal_47681__uprf_33692); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7947, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47664__pinl_21813__icc_7279__SSA6_1 = ( SACp_emal_47683__isaa_39014_a[SACp_emal_47684__isaa_39010_s]); }

    ; ; { SACp_emal_47663__pinl_21823__flat_1771__SSA6_2 = (SACp_emal_47664__pinl_21813__icc_7279__SSA6_1) / (SACp_emal_47679__uprf_33697); };
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 61, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47665__pinl_21823__flat_1771 >= 0) { { SACp_emal_47662__uprf_33620 = SACp_emal_47665__pinl_21823__flat_1771; }; SACp_emal_47662__uprf_33620 = 1; } else { SACp_emal_47662__uprf_33620 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 61, "Non-negativity constraint violated " "for scalar " "SACp_emal_47665__pinl_21823__flat_1771"); }
    if (SACp_emal_47663__pinl_21823__flat_1771__SSA6_2 >= 0) { { SACp_emal_47661__uprf_33625 = SACp_emal_47663__pinl_21823__flat_1771__SSA6_2; }; SACp_emal_47661__uprf_33625 = 1; } else { SACp_emal_47661__uprf_33625 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 61, "Non-negativity constraint violated " "for scalar " "SACp_emal_47663__pinl_21823__flat_1771__SSA6_2"); }
    ; ; { SACp_emal_47662__uprf_33620 = (SACp_emal_47662__uprf_33620) & (SACp_emal_47661__uprf_33625); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47665__pinl_21823__flat_1771 >= 0) { { SACp_emal_47659__uprf_33609 = SACp_emal_47665__pinl_21823__flat_1771; }; SACp_emal_47659__uprf_33609 = 1; } else { SACp_emal_47659__uprf_33609 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_47665__pinl_21823__flat_1771"); }
    if (SACp_emal_47663__pinl_21823__flat_1771__SSA6_2 >= 0) { { SACp_emal_47658__uprf_33614 = SACp_emal_47663__pinl_21823__flat_1771__SSA6_2; }; SACp_emal_47658__uprf_33614 = 1; } else { SACp_emal_47658__uprf_33614 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_47663__pinl_21823__flat_1771__SSA6_2"); }
    ; ; { SACp_emal_47659__uprf_33609 = (SACp_emal_47659__uprf_33609) & (SACp_emal_47658__uprf_33614); };
    { ; ; }
    { { if (!((1 == SACp_emal_47656__idc_7559__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47656__idc_7559"); }; { { if ((((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559)) + ((6 + (SACp_emal_47656__idc_7559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559)) + ((6 + (SACp_emal_47656__idc_7559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559)) + ((6 + (SACp_emal_47656__idc_7559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47656__idc_7559 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47656__idc_7559 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559)) + ((6 + (SACp_emal_47656__idc_7559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47656__idc_7559 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47656__idc_7559 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559)) + ((6 + (SACp_emal_47656__idc_7559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559)) + ((6 + (SACp_emal_47656__idc_7559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559)) + ((6 + (SACp_emal_47656__idc_7559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559)) + ((6 + (SACp_emal_47656__idc_7559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559)) + ((6 + (SACp_emal_47656__idc_7559__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47656__idc_7559 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47656__idc_7559 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47656__idc_7559 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47656__idc_7559 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47656__idc_7559__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47656__idc_7559, SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559), ((6 + (SACp_emal_47656__idc_7559__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47656__idc_7559__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47656__idc_7559__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47656__idc_7559__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47656__idc_7559__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 38, 5, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47656__idc_7559__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 38, 5, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47656__idc_7559[0] = SACp_emal_47665__pinl_21823__flat_1771; }
    { SACp_emal_47656__idc_7559[1] = SACp_emal_47663__pinl_21823__flat_1771__SSA6_2; }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47682__ivesplit_39066 <= SACp_emal_47681__uprf_33692) { SACp_emal_47655__uprf_33596 = 1; } else { SACp_emal_47655__uprf_33596 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_47682__ivesplit_39066" " (" "%d" ") <= " "SACp_emal_47681__uprf_33692" " (" "%d" ")" "' violated", SACp_emal_47682__ivesplit_39066, SACp_emal_47681__uprf_33692); }
    { { SACp_emal_47654__uprf_33595 = SACp_emal_47682__ivesplit_39066; } }
    if (SACp_emal_47682__ivesplit_39066 <= SACp_emal_47679__uprf_33697) { SACp_emal_47653__uprf_33603 = 1; } else { SACp_emal_47653__uprf_33603 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_47682__ivesplit_39066" " (" "%d" ") <= " "SACp_emal_47679__uprf_33697" " (" "%d" ")" "' violated", SACp_emal_47682__ivesplit_39066, SACp_emal_47679__uprf_33697); }
    { { SACp_emal_47652__uprf_33602 = SACp_emal_47682__ivesplit_39066; } }
    ; ; { SACp_emal_47655__uprf_33596 = (SACp_emal_47655__uprf_33596) & (SACp_emal_47653__uprf_33603); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47654__uprf_33595 >= 0) { { SACp_emal_47650__uprf_33583 = SACp_emal_47654__uprf_33595; }; SACp_emal_47650__uprf_33583 = 1; } else { SACp_emal_47650__uprf_33583 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_47654__uprf_33595"); }
    if (SACp_emal_47652__uprf_33602 >= 0) { { SACp_emal_47649__uprf_33588 = SACp_emal_47652__uprf_33602; }; SACp_emal_47649__uprf_33588 = 1; } else { SACp_emal_47649__uprf_33588 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_47652__uprf_33602"); }
    ; ; { SACp_emal_47650__uprf_33583 = (SACp_emal_47650__uprf_33583) & (SACp_emal_47649__uprf_33588); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47654__uprf_33595 <= SACp_emal_47681__uprf_33692) { SACp_emal_47647__uprf_33570 = 1; } else { SACp_emal_47647__uprf_33570 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_47654__uprf_33595" " (" "%d" ") <= " "SACp_emal_47681__uprf_33692" " (" "%d" ")" "' violated", SACp_emal_47654__uprf_33595, SACp_emal_47681__uprf_33692); }
    if (SACp_emal_47652__uprf_33602 <= SACp_emal_47679__uprf_33697) { SACp_emal_47646__uprf_33577 = 1; } else { SACp_emal_47646__uprf_33577 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_47652__uprf_33602" " (" "%d" ") <= " "SACp_emal_47679__uprf_33697" " (" "%d" ")" "' violated", SACp_emal_47652__uprf_33602, SACp_emal_47679__uprf_33697); }
    ; ; { SACp_emal_47647__uprf_33570 = (SACp_emal_47647__uprf_33570) & (SACp_emal_47646__uprf_33577); };
    { ; ; }
    { { if (!((1 == SACp_emal_47644__idc_7567__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47644__idc_7567"); }; { { if ((((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567)) + ((6 + (SACp_emal_47644__idc_7567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567)) + ((6 + (SACp_emal_47644__idc_7567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567)) + ((6 + (SACp_emal_47644__idc_7567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47644__idc_7567 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47644__idc_7567 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567)) + ((6 + (SACp_emal_47644__idc_7567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47644__idc_7567 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47644__idc_7567 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567)) + ((6 + (SACp_emal_47644__idc_7567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567)) + ((6 + (SACp_emal_47644__idc_7567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567)) + ((6 + (SACp_emal_47644__idc_7567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567)) + ((6 + (SACp_emal_47644__idc_7567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567)) + ((6 + (SACp_emal_47644__idc_7567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47644__idc_7567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47644__idc_7567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47644__idc_7567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47644__idc_7567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47644__idc_7567__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47644__idc_7567, SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567), ((6 + (SACp_emal_47644__idc_7567__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47644__idc_7567__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47644__idc_7567__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47644__idc_7567__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47644__idc_7567__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 44, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47644__idc_7567__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 44, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47644__idc_7567[0] = SACp_emal_47654__uprf_33595; }
    { SACp_emal_47644__idc_7567[1] = SACp_emal_47652__uprf_33602; }

    { ; ; }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47682__ivesplit_39066 <= SACp_emal_47665__pinl_21823__flat_1771) { SACp_emal_47643__uprf_33490 = 1; } else { SACp_emal_47643__uprf_33490 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_47682__ivesplit_39066" " (" "%d" ") <= " "SACp_emal_47665__pinl_21823__flat_1771" " (" "%d" ")" "' violated", SACp_emal_47682__ivesplit_39066, SACp_emal_47665__pinl_21823__flat_1771); }
    { ; ; }
    { { SACp_emal_47642__uprf_33489 = SACp_emal_47682__ivesplit_39066; } }
    if (SACp_emal_47682__ivesplit_39066 <= SACp_emal_47663__pinl_21823__flat_1771__SSA6_2) { SACp_emal_47641__uprf_33497 = 1; } else { SACp_emal_47641__uprf_33497 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_47682__ivesplit_39066" " (" "%d" ") <= " "SACp_emal_47663__pinl_21823__flat_1771__SSA6_2" " (" "%d" ")" "' violated", SACp_emal_47682__ivesplit_39066, SACp_emal_47663__pinl_21823__flat_1771__SSA6_2); }
    { ; ; }
    { { SACp_emal_47640__uprf_33496 = SACp_emal_47682__ivesplit_39066; } }
    ; ; { SACp_emal_47643__uprf_33490 = (SACp_emal_47643__uprf_33490) & (SACp_emal_47641__uprf_33497); };
    { ; ; }
    { { if (!((1 == SACp_emal_47638__idc_7571__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47638__idc_7571"); }; { { if ((((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571)) + ((6 + (SACp_emal_47638__idc_7571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571)) + ((6 + (SACp_emal_47638__idc_7571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571)) + ((6 + (SACp_emal_47638__idc_7571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47638__idc_7571 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47638__idc_7571 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571)) + ((6 + (SACp_emal_47638__idc_7571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47638__idc_7571 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47638__idc_7571 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571)) + ((6 + (SACp_emal_47638__idc_7571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571)) + ((6 + (SACp_emal_47638__idc_7571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571)) + ((6 + (SACp_emal_47638__idc_7571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571)) + ((6 + (SACp_emal_47638__idc_7571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571)) + ((6 + (SACp_emal_47638__idc_7571__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47638__idc_7571 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47638__idc_7571 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47638__idc_7571 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47638__idc_7571 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47638__idc_7571__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47638__idc_7571, SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571), ((6 + (SACp_emal_47638__idc_7571__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47638__idc_7571__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47638__idc_7571__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47638__idc_7571__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47638__idc_7571__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 28, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47638__idc_7571__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 28, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47638__idc_7571[0] = SACp_emal_47642__uprf_33489; }
    { SACp_emal_47638__idc_7571[1] = SACp_emal_47640__uprf_33496; }

    { ; ; }
    { ; ; }
    if (!SACp_emal_47676__uprf_33683) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_47655__uprf_33596) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_47680__uprf_33694) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47636__pinl_32428__icc_5338 = ( SACp_emal_47667__idc_7551[SACp_emal_47682__ivesplit_39066]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47635__pinl_32511__icc_5338 = ( SACp_emal_47667__idc_7551[SACp_emal_47684__isaa_39010_s]); }

    { { if (!((1 == SACp_emal_47634__wlbsc_9436_sc_bound__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47634__wlbsc_9436_sc_bound"); }; { { if ((((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound)) + ((6 + (SACp_emal_47634__wlbsc_9436_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound)) + ((6 + (SACp_emal_47634__wlbsc_9436_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound)) + ((6 + (SACp_emal_47634__wlbsc_9436_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47634__wlbsc_9436_sc_bound = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47634__wlbsc_9436_sc_bound = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound)) + ((6 + (SACp_emal_47634__wlbsc_9436_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47634__wlbsc_9436_sc_bound = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47634__wlbsc_9436_sc_bound = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound)) + ((6 + (SACp_emal_47634__wlbsc_9436_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound)) + ((6 + (SACp_emal_47634__wlbsc_9436_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound)) + ((6 + (SACp_emal_47634__wlbsc_9436_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound)) + ((6 + (SACp_emal_47634__wlbsc_9436_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound)) + ((6 + (SACp_emal_47634__wlbsc_9436_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47634__wlbsc_9436_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47634__wlbsc_9436_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47634__wlbsc_9436_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47634__wlbsc_9436_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47634__wlbsc_9436_sc_bound__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound, SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound), ((6 + (SACp_emal_47634__wlbsc_9436_sc_bound__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47634__wlbsc_9436_sc_bound__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47634__wlbsc_9436_sc_bound__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47634__wlbsc_9436_sc_bound__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47634__wlbsc_9436_sc_bound__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47634__wlbsc_9436_sc_bound__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47634__wlbsc_9436_sc_bound[0] = SACp_emal_47636__pinl_32428__icc_5338; }
    { SACp_emal_47634__wlbsc_9436_sc_bound[1] = SACp_emal_47635__pinl_32511__icc_5338; }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_47682__ivesplit_39066 <= SACp_emal_47636__pinl_32428__icc_5338) { SACp_emal_47633__uprf_33343 = 1; } else { SACp_emal_47633__uprf_33343 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_47682__ivesplit_39066" " (" "%d" ") <= " "SACp_emal_47636__pinl_32428__icc_5338" " (" "%d" ")" "' violated", SACp_emal_47682__ivesplit_39066, SACp_emal_47636__pinl_32428__icc_5338); }
    { ; ; }
    { { SACp_emal_47632__uprf_33342 = SACp_emal_47682__ivesplit_39066; } }
    if (SACp_emal_47682__ivesplit_39066 <= SACp_emal_47635__pinl_32511__icc_5338) { SACp_emal_47631__uprf_33350 = 1; } else { SACp_emal_47631__uprf_33350 = 0; SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_47682__ivesplit_39066" " (" "%d" ") <= " "SACp_emal_47635__pinl_32511__icc_5338" " (" "%d" ")" "' violated", SACp_emal_47682__ivesplit_39066, SACp_emal_47635__pinl_32511__icc_5338); }
    { ; ; }
    { { SACp_emal_47630__uprf_33349 = SACp_emal_47682__ivesplit_39066; } }
    ; ; { SACp_emal_47633__uprf_33343 = (SACp_emal_47633__uprf_33343) & (SACp_emal_47631__uprf_33350); };
    { ; ; }
    { { if (!((1 == SACp_emal_47628__idc_7593__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47628__idc_7593"); }; { { if ((((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593)) + ((6 + (SACp_emal_47628__idc_7593__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593)) + ((6 + (SACp_emal_47628__idc_7593__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593)) + ((6 + (SACp_emal_47628__idc_7593__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47628__idc_7593 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47628__idc_7593 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593)) + ((6 + (SACp_emal_47628__idc_7593__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47628__idc_7593 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47628__idc_7593 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593)) + ((6 + (SACp_emal_47628__idc_7593__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593)) + ((6 + (SACp_emal_47628__idc_7593__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593)) + ((6 + (SACp_emal_47628__idc_7593__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593)) + ((6 + (SACp_emal_47628__idc_7593__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593)) + ((6 + (SACp_emal_47628__idc_7593__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47628__idc_7593 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47628__idc_7593 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47628__idc_7593 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47628__idc_7593 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47628__idc_7593__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47628__idc_7593, SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593), ((6 + (SACp_emal_47628__idc_7593__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47628__idc_7593__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47628__idc_7593__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47628__idc_7593__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47628__idc_7593__dim == (1)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47628__idc_7593__shp0 == 2))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_47628__idc_7593[0] = SACp_emal_47632__uprf_33342; }
    { SACp_emal_47628__idc_7593[1] = SACp_emal_47630__uprf_33349; }

    { ; ; }
    { ; ; }
    if (!SACp_emal_47633__uprf_33343) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47627__pinl_32591__icc_5332 = ( SACp_emal_47628__idc_7593[SACp_emal_47682__ivesplit_39066]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47626__pinl_32594__icc_5338 = ( SACp_emal_47634__wlbsc_9436_sc_bound[SACp_emal_47682__ivesplit_39066]); }

    ; ; { SACp_emal_47625__pinl_32614_res = (SACp_emal_47627__pinl_32591__icc_5332) > (SACp_emal_47626__pinl_32594__icc_5338) ? (SACp_emal_47627__pinl_32591__icc_5332) : (SACp_emal_47626__pinl_32594__icc_5338); };
    { { if (!((1 == SACp_emal_47624__emec_46307__icc_7501__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47624__emec_46307__icc_7501"); }; { { if ((((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501)) + ((6 + (SACp_emal_47624__emec_46307__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501)) + ((6 + (SACp_emal_47624__emec_46307__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501)) + ((6 + (SACp_emal_47624__emec_46307__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47624__emec_46307__icc_7501 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47624__emec_46307__icc_7501 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501)) + ((6 + (SACp_emal_47624__emec_46307__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47624__emec_46307__icc_7501 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47624__emec_46307__icc_7501 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501)) + ((6 + (SACp_emal_47624__emec_46307__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501)) + ((6 + (SACp_emal_47624__emec_46307__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501)) + ((6 + (SACp_emal_47624__emec_46307__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501)) + ((6 + (SACp_emal_47624__emec_46307__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501)) + ((6 + (SACp_emal_47624__emec_46307__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47624__emec_46307__icc_7501 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47624__emec_46307__icc_7501 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47624__emec_46307__icc_7501 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47624__emec_46307__icc_7501 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47624__emec_46307__icc_7501__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501, SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501), ((6 + (SACp_emal_47624__emec_46307__icc_7501__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47624__emec_46307__icc_7501__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47624__emec_46307__icc_7501__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47624__emec_46307__icc_7501__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47624__emec_46307__icc_7501__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47624__emec_46307__icc_7501__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_47624__emec_46307__icc_7501__sz == SACp_emal_47634__wlbsc_9436_sc_bound__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47634__wlbsc_9436_sc_bound__sz; SAC_i++) { { SACp_emal_47624__emec_46307__icc_7501[SAC_i] = ( SACp_emal_47634__wlbsc_9436_sc_bound[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_47682__ivesplit_39066;
      { SACp_emal_47624__emec_46307__icc_7501[SAC_idx] = SACp_emal_47627__pinl_32591__icc_5332; }
    }

    { { if (!((1 == SACp_emal_47622__emec_46306__icc_7501__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47622__emec_46306__icc_7501"); }; { { if ((((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501)) + ((6 + (SACp_emal_47622__emec_46306__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501)) + ((6 + (SACp_emal_47622__emec_46306__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501)) + ((6 + (SACp_emal_47622__emec_46306__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47622__emec_46306__icc_7501 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47622__emec_46306__icc_7501 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501)) + ((6 + (SACp_emal_47622__emec_46306__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47622__emec_46306__icc_7501 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47622__emec_46306__icc_7501 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501)) + ((6 + (SACp_emal_47622__emec_46306__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501)) + ((6 + (SACp_emal_47622__emec_46306__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501)) + ((6 + (SACp_emal_47622__emec_46306__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501)) + ((6 + (SACp_emal_47622__emec_46306__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501)) + ((6 + (SACp_emal_47622__emec_46306__icc_7501__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47622__emec_46306__icc_7501 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47622__emec_46306__icc_7501 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47622__emec_46306__icc_7501 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47622__emec_46306__icc_7501 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47622__emec_46306__icc_7501__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501, SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501), ((6 + (SACp_emal_47622__emec_46306__icc_7501__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47622__emec_46306__icc_7501__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47622__emec_46306__icc_7501__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47622__emec_46306__icc_7501__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47622__emec_46306__icc_7501__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47622__emec_46306__icc_7501__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_47622__emec_46306__icc_7501__sz == SACp_emal_47634__wlbsc_9436_sc_bound__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47634__wlbsc_9436_sc_bound__sz; SAC_i++) { { SACp_emal_47622__emec_46306__icc_7501[SAC_i] = ( SACp_emal_47634__wlbsc_9436_sc_bound[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_47682__ivesplit_39066;
      { SACp_emal_47622__emec_46306__icc_7501[SAC_idx] = SACp_emal_47625__pinl_32614_res; }
    }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47620__pinl_32674__icc_5332 = ( SACp_emal_47628__idc_7593[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47628__idc_7593, ((((SAC_HM_header_t *)SACp_emal_47628__idc_7593) - 1)->data1.arena)); } else { if (SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47628__idc_7593) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47628__idc_7593, ((((SAC_HM_header_t *)SACp_emal_47628__idc_7593) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47628__idc_7593, ((((SAC_HM_header_t *)SACp_emal_47628__idc_7593) - 1)->data1.arena)); } } else { if (((((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47628__idc_7593, ((((SAC_HM_header_t *)SACp_emal_47628__idc_7593) - 1)->data1.arena)); } else { if (((((SACp_emal_47628__idc_7593__sz * sizeof (*SACp_emal_47628__idc_7593))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47628__idc_7593) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47628__idc_7593, ((((SAC_HM_header_t *)SACp_emal_47628__idc_7593) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47628__idc_7593, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47628__idc_7593); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47628__idc_7593); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47628__idc_7593, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47628__idc_7593); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47628__idc_7593); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47628__idc_7593__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47619__pinl_32677__icc_5338 = ( SACp_emal_47634__wlbsc_9436_sc_bound[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound, ((((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound) - 1)->data1.arena)); } else { if (SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound, ((((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound, ((((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound) - 1)->data1.arena)); } } else { if (((((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound, ((((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound) - 1)->data1.arena)); } else { if (((((SACp_emal_47634__wlbsc_9436_sc_bound__sz * sizeof (*SACp_emal_47634__wlbsc_9436_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound, ((((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47634__wlbsc_9436_sc_bound); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47634__wlbsc_9436_sc_bound__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_47618__pinl_32697_res = (SACp_emal_47620__pinl_32674__icc_5332) > (SACp_emal_47619__pinl_32677__icc_5338) ? (SACp_emal_47620__pinl_32674__icc_5332) : (SACp_emal_47619__pinl_32677__icc_5338); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47617__wlbsc_9358_sc_e = ( SACp_emal_47622__emec_46306__icc_7501[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501, ((((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501) - 1)->data1.arena)); } else { if (SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501, ((((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501, ((((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501) - 1)->data1.arena)); } } else { if (((((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501, ((((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501) - 1)->data1.arena)); } else { if (((((SACp_emal_47622__emec_46306__icc_7501__sz * sizeof (*SACp_emal_47622__emec_46306__icc_7501))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501, ((((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47622__emec_46306__icc_7501); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47622__emec_46306__icc_7501__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47616__wlbsc_9348_sc_e = ( SACp_emal_47624__emec_46307__icc_7501[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501, ((((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501) - 1)->data1.arena)); } else { if (SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501, ((((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501, ((((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501) - 1)->data1.arena)); } } else { if (((((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501, ((((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501) - 1)->data1.arena)); } else { if (((((SACp_emal_47624__emec_46307__icc_7501__sz * sizeof (*SACp_emal_47624__emec_46307__icc_7501))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501, ((((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47624__emec_46307__icc_7501); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47624__emec_46307__icc_7501__desc) & (-1 ^ (3))))); } } }
    { { if (!((2 == SACp_emal_47613__icc_7504__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47613__icc_7504"); }; { if ((((6 + (SACp_emal_47613__icc_7504__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47613__icc_7504__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47613__icc_7504__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47613__icc_7504__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47613__icc_7504__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_47613__icc_7504__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47613__icc_7504__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47613__icc_7504__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_47613__icc_7504__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_47613__icc_7504__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_47613__icc_7504__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_47613__icc_7504__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_47613__icc_7504__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47613__icc_7504__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47613__icc_7504__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47613__icc_7504__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47613__icc_7504__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47613__icc_7504__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47613__icc_7504__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47613__icc_7504__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47613__icc_7504__dim == (2)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_47613__icc_7504__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47613__icc_7504__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_47626__pinl_32594__icc_5338;
      SAC_size *=
      SACp_emal_47613__icc_7504__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47613__icc_7504__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_47619__pinl_32677__icc_5338;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47613__icc_7504__desc) & (-1 ^ (3))))[4]) = SACp_emal_47613__icc_7504__sz = SAC_size;
      if (!((SACp_emal_47613__icc_7504__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13008 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 13008 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13008 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13008 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13008 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 13008 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13008 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 13008, __extension__ __PRETTY_FUNCTION__); }))
# 13008 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_47613__icc_7504 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_47613__icc_7504__sz * sizeof (*SACp_emal_47613__icc_7504)); break; case SAC_HM_multi_threaded: SACp_emal_47613__icc_7504 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_47613__icc_7504__sz * sizeof (*SACp_emal_47613__icc_7504), 0); break; case SAC_HM_any_threaded: SACp_emal_47613__icc_7504 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_47613__icc_7504__sz * sizeof (*SACp_emal_47613__icc_7504), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47613__icc_7504__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47613__icc_7504__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47613__icc_7504__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;
      int SAC_schedule_start1;
      int SAC_schedule_stop1;




      int SAC_SACp_emal_47613__icc_7504_shpfac0;
      int SAC_SACp_emal_47613__icc_7504_shpfac1;




      {
        int SAC_i;
        SAC_SACp_emal_47613__icc_7504_shpfac0 = 1 * SACp_emal_47613__icc_7504__shp1;
        SAC_SACp_emal_47613__icc_7504_shpfac1 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_47627__pinl_32591__icc_5332;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_47616__wlbsc_9348_sc_e;




      SACp_wlidx_45692__icc_7504
        = SAC_schedule_start0 * SAC_SACp_emal_47613__icc_7504_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47613__icc_7504_shpfac1;

      { int SAC_stop_SACp_eat_344 = SACp_emal_47627__pinl_32591__icc_5332; for (SACp_eat_344 = 0; SACp_eat_344 < SACp_emal_47627__pinl_32591__icc_5332;) {
     



      SACp_wlidx_45692__icc_7504
        = ( SACp_emal_47613__icc_7504__shp1 * SACp_eat_344
         + SAC_schedule_start1 ) * SAC_SACp_emal_47613__icc_7504_shpfac1;

      { int SAC_stop_SACp_eat_343 = SACp_emal_47616__wlbsc_9348_sc_e; for (SACp_eat_343 = 0; SACp_eat_343 < SACp_emal_47616__wlbsc_9348_sc_e;) {
     



      if (!((0 == (SACp_emal_47613__icc_7504__dim - SACp_hse_23__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47613__icc_7504_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_47613__icc_7504[SACp_wlidx_45692__icc_7504] = SACp_emal_47682__ivesplit_39066; };

      SACp_wlidx_45692__icc_7504 = SACp_wlidx_45692__icc_7504 + 1;
      SACp_eat_343 = SACp_eat_343 + 1;
      } }
      SACp_eat_344 = SACp_eat_344 + 1;
      } }
# 13104 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_47627__pinl_32591__icc_5332;
      SAC_schedule_stop0 = SACp_emal_47625__pinl_32614_res;
      SAC_schedule_start1 = SACp_emal_47618__pinl_32697_res;
      SAC_schedule_stop1 = SACp_emal_47617__wlbsc_9358_sc_e;




      SACp_wlidx_45692__icc_7504
        = SAC_schedule_start0 * SAC_SACp_emal_47613__icc_7504_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47613__icc_7504_shpfac1;

      { int SAC_stop_SACp_eat_344 = SACp_emal_47625__pinl_32614_res; for (SACp_eat_344 = SACp_emal_47627__pinl_32591__icc_5332; SACp_eat_344 < SACp_emal_47625__pinl_32614_res;) {
     



      SACp_wlidx_45692__icc_7504
        = ( SACp_emal_47613__icc_7504__shp1 * SACp_eat_344
         + SAC_schedule_start1 ) * SAC_SACp_emal_47613__icc_7504_shpfac1;

      { int SAC_stop_SACp_eat_343 = SACp_emal_47617__wlbsc_9358_sc_e; for (SACp_eat_343 = SACp_emal_47618__pinl_32697_res; SACp_eat_343 < SACp_emal_47617__wlbsc_9358_sc_e;) {
     



      if (!((0 == (SACp_emal_47613__icc_7504__dim - SACp_hse_23__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47613__icc_7504_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_47613__icc_7504[SACp_wlidx_45692__icc_7504] = SACp_emal_47682__ivesplit_39066; };

      SACp_wlidx_45692__icc_7504 = SACp_wlidx_45692__icc_7504 + 1;
      SACp_eat_343 = SACp_eat_343 + 1;
      } }
      SACp_eat_344 = SACp_eat_344 + 1;
      } }
# 13147 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_47627__pinl_32591__icc_5332;
      SAC_schedule_stop0 = SACp_emal_47625__pinl_32614_res;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_47620__pinl_32674__icc_5332;




      SACp_wlidx_45692__icc_7504
        = SAC_schedule_start0 * SAC_SACp_emal_47613__icc_7504_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47613__icc_7504_shpfac1;

      { int SAC_stop_SACp_eat_344 = SACp_emal_47625__pinl_32614_res; for (SACp_eat_344 = SACp_emal_47627__pinl_32591__icc_5332; SACp_eat_344 < SACp_emal_47625__pinl_32614_res;) {
     



      SACp_wlidx_45692__icc_7504
        = ( SACp_emal_47613__icc_7504__shp1 * SACp_eat_344
         + SAC_schedule_start1 ) * SAC_SACp_emal_47613__icc_7504_shpfac1;

      { int SAC_stop_SACp_eat_343 = SACp_emal_47620__pinl_32674__icc_5332; for (SACp_eat_343 = 0; SACp_eat_343 < SACp_emal_47620__pinl_32674__icc_5332;) {
     



      if (!((0 == (SACp_emal_47613__icc_7504__dim - SACp_hse_23__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47613__icc_7504_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_47613__icc_7504[SACp_wlidx_45692__icc_7504] = SACp_emal_47682__ivesplit_39066; };

      SACp_wlidx_45692__icc_7504 = SACp_wlidx_45692__icc_7504 + 1;
      SACp_eat_343 = SACp_eat_343 + 1;
      } }
      SACp_eat_344 = SACp_eat_344 + 1;
      } }
# 13190 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_47627__pinl_32591__icc_5332;
      SAC_schedule_stop0 = SACp_emal_47626__pinl_32594__icc_5338;
      SAC_schedule_start1 = SACp_emal_47620__pinl_32674__icc_5332;
      SAC_schedule_stop1 = SACp_emal_47619__pinl_32677__icc_5338;




      SACp_wlidx_45692__icc_7504
        = SAC_schedule_start0 * SAC_SACp_emal_47613__icc_7504_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47613__icc_7504_shpfac1;

      { int SAC_stop_SACp_eat_344 = SACp_emal_47626__pinl_32594__icc_5338; for (SACp_eat_344 = SACp_emal_47627__pinl_32591__icc_5332; SACp_eat_344 < SACp_emal_47626__pinl_32594__icc_5338;) {
     



      SACp_wlidx_45692__icc_7504
        = ( SACp_emal_47613__icc_7504__shp1 * SACp_eat_344
         + SAC_schedule_start1 ) * SAC_SACp_emal_47613__icc_7504_shpfac1;

      { int SAC_stop_SACp_eat_343 = SACp_emal_47619__pinl_32677__icc_5338; for (SACp_eat_343 = SACp_emal_47620__pinl_32674__icc_5332; SACp_eat_343 < SACp_emal_47619__pinl_32677__icc_5338;) {
     



      if (!((0 == (SACp_emal_47613__icc_7504__dim - SACp_hse_23__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_47613__icc_7504_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_47613__icc_7504[SACp_wlidx_45692__icc_7504] = SACp_emal_47682__ivesplit_39066; };

      SACp_wlidx_45692__icc_7504 = SACp_wlidx_45692__icc_7504 + 1;
      SACp_eat_343 = SACp_eat_343 + 1;
      } }
      SACp_eat_344 = SACp_eat_344 + 1;
      } }
# 13233 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48041_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_47633__uprf_33343) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    { ; ; }
    if (!SACp_emal_47659__uprf_33609) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_47643__uprf_33490) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_47662__uprf_33620) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47612__pinl_32757__icc_5332 = ( SACp_emal_47638__idc_7571[SACp_emal_47682__ivesplit_39066]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47611__pinl_32760__icc_5338 = ( SACp_emal_47656__idc_7559[SACp_emal_47682__ivesplit_39066]); }

    ; ; { SACp_emal_47610__pinl_32780_res = (SACp_emal_47612__pinl_32757__icc_5332) > (SACp_emal_47611__pinl_32760__icc_5338) ? (SACp_emal_47612__pinl_32757__icc_5332) : (SACp_emal_47611__pinl_32760__icc_5338); };
    { { if (!((1 == SACp_emal_47609__emec_46305__icc_7538__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47609__emec_46305__icc_7538"); }; { { if ((((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538)) + ((6 + (SACp_emal_47609__emec_46305__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538)) + ((6 + (SACp_emal_47609__emec_46305__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538)) + ((6 + (SACp_emal_47609__emec_46305__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47609__emec_46305__icc_7538 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47609__emec_46305__icc_7538 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538)) + ((6 + (SACp_emal_47609__emec_46305__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47609__emec_46305__icc_7538 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47609__emec_46305__icc_7538 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538)) + ((6 + (SACp_emal_47609__emec_46305__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538)) + ((6 + (SACp_emal_47609__emec_46305__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538)) + ((6 + (SACp_emal_47609__emec_46305__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538)) + ((6 + (SACp_emal_47609__emec_46305__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538)) + ((6 + (SACp_emal_47609__emec_46305__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47609__emec_46305__icc_7538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47609__emec_46305__icc_7538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47609__emec_46305__icc_7538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47609__emec_46305__icc_7538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47609__emec_46305__icc_7538__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538, SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538), ((6 + (SACp_emal_47609__emec_46305__icc_7538__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47609__emec_46305__icc_7538__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47609__emec_46305__icc_7538__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47609__emec_46305__icc_7538__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47609__emec_46305__icc_7538__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47609__emec_46305__icc_7538__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_47609__emec_46305__icc_7538__sz == SACp_emal_47656__idc_7559__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47656__idc_7559__sz; SAC_i++) { { SACp_emal_47609__emec_46305__icc_7538[SAC_i] = ( SACp_emal_47656__idc_7559[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_47682__ivesplit_39066;
      { SACp_emal_47609__emec_46305__icc_7538[SAC_idx] = SACp_emal_47612__pinl_32757__icc_5332; }
    }

    { { if (!((1 == SACp_emal_47607__emec_46304__icc_7538__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47607__emec_46304__icc_7538"); }; { { if ((((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538)) + ((6 + (SACp_emal_47607__emec_46304__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538)) + ((6 + (SACp_emal_47607__emec_46304__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538)) + ((6 + (SACp_emal_47607__emec_46304__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47607__emec_46304__icc_7538 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47607__emec_46304__icc_7538 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538)) + ((6 + (SACp_emal_47607__emec_46304__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47607__emec_46304__icc_7538 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47607__emec_46304__icc_7538 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538)) + ((6 + (SACp_emal_47607__emec_46304__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538)) + ((6 + (SACp_emal_47607__emec_46304__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538)) + ((6 + (SACp_emal_47607__emec_46304__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538)) + ((6 + (SACp_emal_47607__emec_46304__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538)) + ((6 + (SACp_emal_47607__emec_46304__icc_7538__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47607__emec_46304__icc_7538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47607__emec_46304__icc_7538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47607__emec_46304__icc_7538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47607__emec_46304__icc_7538 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47607__emec_46304__icc_7538__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538, SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538), ((6 + (SACp_emal_47607__emec_46304__icc_7538__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47607__emec_46304__icc_7538__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47607__emec_46304__icc_7538__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47607__emec_46304__icc_7538__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47607__emec_46304__icc_7538__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47607__emec_46304__icc_7538__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_47607__emec_46304__icc_7538__sz == SACp_emal_47656__idc_7559__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47656__idc_7559__sz; SAC_i++) { { SACp_emal_47607__emec_46304__icc_7538[SAC_i] = ( SACp_emal_47656__idc_7559[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_47682__ivesplit_39066;
      { SACp_emal_47607__emec_46304__icc_7538[SAC_idx] = SACp_emal_47610__pinl_32780_res; }
    }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47605__pinl_32840__icc_5332 = ( SACp_emal_47638__idc_7571[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47638__idc_7571, ((((SAC_HM_header_t *)SACp_emal_47638__idc_7571) - 1)->data1.arena)); } else { if (SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47638__idc_7571) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47638__idc_7571, ((((SAC_HM_header_t *)SACp_emal_47638__idc_7571) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47638__idc_7571, ((((SAC_HM_header_t *)SACp_emal_47638__idc_7571) - 1)->data1.arena)); } } else { if (((((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47638__idc_7571, ((((SAC_HM_header_t *)SACp_emal_47638__idc_7571) - 1)->data1.arena)); } else { if (((((SACp_emal_47638__idc_7571__sz * sizeof (*SACp_emal_47638__idc_7571))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47638__idc_7571) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47638__idc_7571, ((((SAC_HM_header_t *)SACp_emal_47638__idc_7571) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47638__idc_7571, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47638__idc_7571); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47638__idc_7571); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47638__idc_7571, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47638__idc_7571); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47638__idc_7571); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47638__idc_7571__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47604__pinl_32843__icc_5338 = ( SACp_emal_47656__idc_7559[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47656__idc_7559, ((((SAC_HM_header_t *)SACp_emal_47656__idc_7559) - 1)->data1.arena)); } else { if (SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47656__idc_7559) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47656__idc_7559, ((((SAC_HM_header_t *)SACp_emal_47656__idc_7559) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47656__idc_7559, ((((SAC_HM_header_t *)SACp_emal_47656__idc_7559) - 1)->data1.arena)); } } else { if (((((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47656__idc_7559, ((((SAC_HM_header_t *)SACp_emal_47656__idc_7559) - 1)->data1.arena)); } else { if (((((SACp_emal_47656__idc_7559__sz * sizeof (*SACp_emal_47656__idc_7559))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47656__idc_7559) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47656__idc_7559, ((((SAC_HM_header_t *)SACp_emal_47656__idc_7559) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47656__idc_7559, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47656__idc_7559); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47656__idc_7559); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47656__idc_7559, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47656__idc_7559); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47656__idc_7559); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47656__idc_7559__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_47603__pinl_32863_res = (SACp_emal_47605__pinl_32840__icc_5332) > (SACp_emal_47604__pinl_32843__icc_5338) ? (SACp_emal_47605__pinl_32840__icc_5332) : (SACp_emal_47604__pinl_32843__icc_5338); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47602__wlbsc_9308_sc_e = ( SACp_emal_47607__emec_46304__icc_7538[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538, ((((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538) - 1)->data1.arena)); } else { if (SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538, ((((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538, ((((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538) - 1)->data1.arena)); } } else { if (((((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538, ((((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538) - 1)->data1.arena)); } else { if (((((SACp_emal_47607__emec_46304__icc_7538__sz * sizeof (*SACp_emal_47607__emec_46304__icc_7538))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538, ((((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47607__emec_46304__icc_7538); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47607__emec_46304__icc_7538__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47601__wlbsc_9298_sc_e = ( SACp_emal_47609__emec_46305__icc_7538[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538, ((((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538) - 1)->data1.arena)); } else { if (SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538, ((((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538, ((((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538) - 1)->data1.arena)); } } else { if (((((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538, ((((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538) - 1)->data1.arena)); } else { if (((((SACp_emal_47609__emec_46305__icc_7538__sz * sizeof (*SACp_emal_47609__emec_46305__icc_7538))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538, ((((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47609__emec_46305__icc_7538); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47609__emec_46305__icc_7538__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_47670__uprf_33661) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_47647__uprf_33570) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_47673__uprf_33672) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_47650__uprf_33583) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_47600__icc_7533 = SACp_emal_47682__ivesplit_39066; } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47599__pinl_33006__icc_5332 = ( SACp_emal_47644__idc_7567[SACp_emal_47682__ivesplit_39066]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47598__pinl_33009__icc_5338 = ( SACp_emal_47667__idc_7551[SACp_emal_47682__ivesplit_39066]); }

    ; ; { SACp_emal_47597__pinl_33029_res = (SACp_emal_47599__pinl_33006__icc_5332) > (SACp_emal_47598__pinl_33009__icc_5338) ? (SACp_emal_47599__pinl_33006__icc_5332) : (SACp_emal_47598__pinl_33009__icc_5338); };
    { { if (!((1 == SACp_emal_47596__emec_46303__icc_7534__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47596__emec_46303__icc_7534"); }; { { if ((((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534)) + ((6 + (SACp_emal_47596__emec_46303__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534)) + ((6 + (SACp_emal_47596__emec_46303__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534)) + ((6 + (SACp_emal_47596__emec_46303__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47596__emec_46303__icc_7534 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47596__emec_46303__icc_7534 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534)) + ((6 + (SACp_emal_47596__emec_46303__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47596__emec_46303__icc_7534 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47596__emec_46303__icc_7534 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534)) + ((6 + (SACp_emal_47596__emec_46303__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534)) + ((6 + (SACp_emal_47596__emec_46303__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534)) + ((6 + (SACp_emal_47596__emec_46303__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534)) + ((6 + (SACp_emal_47596__emec_46303__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534)) + ((6 + (SACp_emal_47596__emec_46303__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47596__emec_46303__icc_7534 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47596__emec_46303__icc_7534 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47596__emec_46303__icc_7534 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47596__emec_46303__icc_7534 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47596__emec_46303__icc_7534__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534, SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534), ((6 + (SACp_emal_47596__emec_46303__icc_7534__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47596__emec_46303__icc_7534__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47596__emec_46303__icc_7534__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47596__emec_46303__icc_7534__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47596__emec_46303__icc_7534__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47596__emec_46303__icc_7534__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_47596__emec_46303__icc_7534__sz == SACp_emal_47667__idc_7551__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47667__idc_7551__sz; SAC_i++) { { SACp_emal_47596__emec_46303__icc_7534[SAC_i] = ( SACp_emal_47667__idc_7551[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_47682__ivesplit_39066;
      { SACp_emal_47596__emec_46303__icc_7534[SAC_idx] = SACp_emal_47599__pinl_33006__icc_5332; }
    }

    { { if (!((1 == SACp_emal_47594__emec_46302__icc_7534__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47594__emec_46302__icc_7534"); }; { { if ((((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534)) + ((6 + (SACp_emal_47594__emec_46302__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534)) + ((6 + (SACp_emal_47594__emec_46302__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534)) + ((6 + (SACp_emal_47594__emec_46302__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47594__emec_46302__icc_7534 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47594__emec_46302__icc_7534 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534)) + ((6 + (SACp_emal_47594__emec_46302__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47594__emec_46302__icc_7534 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47594__emec_46302__icc_7534 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534)) + ((6 + (SACp_emal_47594__emec_46302__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534)) + ((6 + (SACp_emal_47594__emec_46302__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534)) + ((6 + (SACp_emal_47594__emec_46302__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534)) + ((6 + (SACp_emal_47594__emec_46302__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534)) + ((6 + (SACp_emal_47594__emec_46302__icc_7534__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47594__emec_46302__icc_7534 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47594__emec_46302__icc_7534 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47594__emec_46302__icc_7534 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47594__emec_46302__icc_7534 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47594__emec_46302__icc_7534__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534, SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534), ((6 + (SACp_emal_47594__emec_46302__icc_7534__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47594__emec_46302__icc_7534__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47594__emec_46302__icc_7534__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47594__emec_46302__icc_7534__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47594__emec_46302__icc_7534__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    if (!((SACp_emal_47594__emec_46302__icc_7534__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_47594__emec_46302__icc_7534__sz == SACp_emal_47667__idc_7551__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47667__idc_7551__sz; SAC_i++) { { SACp_emal_47594__emec_46302__icc_7534[SAC_i] = ( SACp_emal_47667__idc_7551[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_47682__ivesplit_39066;
      { SACp_emal_47594__emec_46302__icc_7534[SAC_idx] = SACp_emal_47597__pinl_33029_res; }
    }

    { ; ; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47592__pinl_33089__icc_5332 = ( SACp_emal_47644__idc_7567[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47644__idc_7567, ((((SAC_HM_header_t *)SACp_emal_47644__idc_7567) - 1)->data1.arena)); } else { if (SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47644__idc_7567) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47644__idc_7567, ((((SAC_HM_header_t *)SACp_emal_47644__idc_7567) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47644__idc_7567, ((((SAC_HM_header_t *)SACp_emal_47644__idc_7567) - 1)->data1.arena)); } } else { if (((((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47644__idc_7567, ((((SAC_HM_header_t *)SACp_emal_47644__idc_7567) - 1)->data1.arena)); } else { if (((((SACp_emal_47644__idc_7567__sz * sizeof (*SACp_emal_47644__idc_7567))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47644__idc_7567) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47644__idc_7567, ((((SAC_HM_header_t *)SACp_emal_47644__idc_7567) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47644__idc_7567, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47644__idc_7567); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47644__idc_7567); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47644__idc_7567, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47644__idc_7567); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47644__idc_7567); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47644__idc_7567__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47591__pinl_33092__icc_5338 = ( SACp_emal_47667__idc_7551[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47667__idc_7551, ((((SAC_HM_header_t *)SACp_emal_47667__idc_7551) - 1)->data1.arena)); } else { if (SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47667__idc_7551) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47667__idc_7551, ((((SAC_HM_header_t *)SACp_emal_47667__idc_7551) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47667__idc_7551, ((((SAC_HM_header_t *)SACp_emal_47667__idc_7551) - 1)->data1.arena)); } } else { if (((((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47667__idc_7551, ((((SAC_HM_header_t *)SACp_emal_47667__idc_7551) - 1)->data1.arena)); } else { if (((((SACp_emal_47667__idc_7551__sz * sizeof (*SACp_emal_47667__idc_7551))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47667__idc_7551) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47667__idc_7551, ((((SAC_HM_header_t *)SACp_emal_47667__idc_7551) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47667__idc_7551, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47667__idc_7551); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47667__idc_7551); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47667__idc_7551, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47667__idc_7551); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47667__idc_7551); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47667__idc_7551__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_47590__pinl_33112_res = (SACp_emal_47592__pinl_33089__icc_5332) > (SACp_emal_47591__pinl_33092__icc_5338) ? (SACp_emal_47592__pinl_33089__icc_5332) : (SACp_emal_47591__pinl_33092__icc_5338); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47589__wlbsc_9258_sc_e = ( SACp_emal_47594__emec_46302__icc_7534[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534, ((((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534) - 1)->data1.arena)); } else { if (SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534, ((((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534, ((((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534) - 1)->data1.arena)); } } else { if (((((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534, ((((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534) - 1)->data1.arena)); } else { if (((((SACp_emal_47594__emec_46302__icc_7534__sz * sizeof (*SACp_emal_47594__emec_46302__icc_7534))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534, ((((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47594__emec_46302__icc_7534); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47594__emec_46302__icc_7534__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_47588__wlbsc_9248_sc_e = ( SACp_emal_47596__emec_46303__icc_7534[SACp_emal_47684__isaa_39010_s]); }

    { { { if (((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534, ((((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534) - 1)->data1.arena)); } else { if (SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534, ((((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534, ((((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534) - 1)->data1.arena)); } } else { if (((((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534, ((((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534) - 1)->data1.arena)); } else { if (((((SACp_emal_47596__emec_46303__icc_7534__sz * sizeof (*SACp_emal_47596__emec_46303__icc_7534))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534, ((((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47596__emec_46303__icc_7534); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47596__emec_46303__icc_7534__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { { if (!((4 == SACp_emal_47567__icc_7541__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47567__icc_7541"); }; { if ((((6 + (SACp_emal_47567__icc_7541__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47567__icc_7541__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47567__icc_7541__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47567__icc_7541__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47567__icc_7541__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_47567__icc_7541__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47567__icc_7541__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47567__icc_7541__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_47567__icc_7541__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_47567__icc_7541__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_47567__icc_7541__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_47567__icc_7541__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_47567__icc_7541__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47567__icc_7541__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47567__icc_7541__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47567__icc_7541__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47567__icc_7541__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47567__icc_7541__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47567__icc_7541__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47567__icc_7541__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_emal_47567__icc_7541__dim == (2) + (2)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_47567__icc_7541__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47567__icc_7541__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_47611__pinl_32760__icc_5338;
      SAC_size *=
      SACp_emal_47567__icc_7541__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47567__icc_7541__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_47604__pinl_32843__icc_5338;
      SACp_emal_47567__icc_7541__shp2 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47567__icc_7541__desc) & (-1 ^ (3))))[(6 + (2))]) = SACp_emal_47613__icc_7504__shp0;
      SACp_emal_47567__icc_7541__shp3 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47567__icc_7541__desc) & (-1 ^ (3))))[(6 + (3))]) = SACp_emal_47613__icc_7504__shp1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47567__icc_7541__desc) & (-1 ^ (3))))[4]) = SACp_emal_47567__icc_7541__sz = SAC_size * SACp_emal_47613__icc_7504__sz;
      if (!((SACp_emal_47567__icc_7541__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13471 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void) sizeof ((
# 13471 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13471 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13471 "/home/rubenhensen/sac/hw/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13471 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ) ; else __assert_fail (
# 13471 "/home/rubenhensen/sac/hw/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13471 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   , "/home/rubenhensen/sac/hw/a.out.c", 13471, __extension__ __PRETTY_FUNCTION__); }))
# 13471 "/home/rubenhensen/sac/hw/a.out.c"
   ; SACp_emal_47567__icc_7541 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_47567__icc_7541__sz * sizeof (*SACp_emal_47567__icc_7541)); break; case SAC_HM_multi_threaded: SACp_emal_47567__icc_7541 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_47567__icc_7541__sz * sizeof (*SACp_emal_47567__icc_7541), 0); break; case SAC_HM_any_threaded: SACp_emal_47567__icc_7541 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_47567__icc_7541__sz * sizeof (*SACp_emal_47567__icc_7541), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47567__icc_7541__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47567__icc_7541__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47567__icc_7541__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { if (!(((SACp_emal_47567__icc_7541__dim) - (2) == SACp_emal_47568__icc_7537__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47568__icc_7537"); }; { if ((((6 + (SACp_emal_47568__icc_7537__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47568__icc_7537__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_47568__icc_7537__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47568__icc_7537__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47568__icc_7537__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_47568__icc_7537__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47568__icc_7537__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47568__icc_7537__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_47568__icc_7537__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_47568__icc_7537__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_47568__icc_7537__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_47568__icc_7537__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_47568__icc_7537__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47568__icc_7537__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47568__icc_7537__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47568__icc_7537__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47568__icc_7537__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47568__icc_7537__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47568__icc_7537__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47568__icc_7537__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_47568__icc_7537__dim == (2)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_47568__icc_7537__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47568__icc_7537__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_47613__icc_7504__shp0;
      SACp_emal_47568__icc_7537__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47568__icc_7537__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_47613__icc_7504__shp1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47568__icc_7537__desc) & (-1 ^ (3))))[4]) = SACp_emal_47568__icc_7537__sz = SAC_size * SACp_emal_47613__icc_7504__sz;
      if (!((SACp_emal_47568__icc_7537__sz >= 0))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Array with size <0 found!"); };
    }

   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;
      int SAC_schedule_start1;
      int SAC_schedule_stop1;




      int SAC_SACp_emal_47567__icc_7541_shpfac0;
      int SAC_SACp_emal_47567__icc_7541_shpfac1;




      {
        int SAC_i;
        SAC_SACp_emal_47567__icc_7541_shpfac0 = 1 * SACp_emal_47567__icc_7541__shp1 * SACp_emal_47567__icc_7541__shp2 * SACp_emal_47567__icc_7541__shp3;
        SAC_SACp_emal_47567__icc_7541_shpfac1 = 1 * SACp_emal_47567__icc_7541__shp2 * SACp_emal_47567__icc_7541__shp3;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_47612__pinl_32757__icc_5332;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_47601__wlbsc_9298_sc_e;




      SACp_wlidx_45693__icc_7541
        = SAC_schedule_start0 * SAC_SACp_emal_47567__icc_7541_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47567__icc_7541_shpfac1;

      { int SAC_stop_SACp_eat_346 = SACp_emal_47612__pinl_32757__icc_5332; for (SACp_eat_346 = 0; SACp_eat_346 < SACp_emal_47612__pinl_32757__icc_5332;) {
     



      SACp_wlidx_45693__icc_7541
        = ( SACp_emal_47567__icc_7541__shp1 * SACp_eat_346
         + SAC_schedule_start1 ) * SAC_SACp_emal_47567__icc_7541_shpfac1;

      { int SAC_stop_SACp_eat_345 = SACp_emal_47601__wlbsc_9298_sc_e; for (SACp_eat_345 = 0; SACp_eat_345 < SACp_emal_47601__wlbsc_9298_sc_e;) {
     



      SACp_emal_47568__icc_7537 = SACp_emal_47567__icc_7541+SACp_wlidx_45693__icc_7541;

      { int SAC_i; if (!((SACp_emal_47568__icc_7537__sz == SACp_emal_47613__icc_7504__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47613__icc_7504__sz; SAC_i++) { { SACp_emal_47568__icc_7537[SAC_i] = ( SACp_emal_47613__icc_7504[SAC_i]); } } }
      SACp_wlidx_45693__icc_7541 = SACp_wlidx_45693__icc_7541 + SACp_emal_47568__icc_7537__sz;
      SACp_eat_345 = SACp_eat_345 + 1;
      } }
      SACp_eat_346 = SACp_eat_346 + 1;
      } }
# 13582 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_47612__pinl_32757__icc_5332;
      SAC_schedule_stop0 = SACp_emal_47610__pinl_32780_res;
      SAC_schedule_start1 = SACp_emal_47603__pinl_32863_res;
      SAC_schedule_stop1 = SACp_emal_47602__wlbsc_9308_sc_e;




      SACp_wlidx_45693__icc_7541
        = SAC_schedule_start0 * SAC_SACp_emal_47567__icc_7541_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47567__icc_7541_shpfac1;

      { int SAC_stop_SACp_eat_346 = SACp_emal_47610__pinl_32780_res; for (SACp_eat_346 = SACp_emal_47612__pinl_32757__icc_5332; SACp_eat_346 < SACp_emal_47610__pinl_32780_res;) {
     



      SACp_wlidx_45693__icc_7541
        = ( SACp_emal_47567__icc_7541__shp1 * SACp_eat_346
         + SAC_schedule_start1 ) * SAC_SACp_emal_47567__icc_7541_shpfac1;

      { int SAC_stop_SACp_eat_345 = SACp_emal_47602__wlbsc_9308_sc_e; for (SACp_eat_345 = SACp_emal_47603__pinl_32863_res; SACp_eat_345 < SACp_emal_47602__wlbsc_9308_sc_e;) {
     



      SACp_emal_47568__icc_7537 = SACp_emal_47567__icc_7541+SACp_wlidx_45693__icc_7541;

      { int SAC_i; if (!((SACp_emal_47568__icc_7537__sz == SACp_emal_47613__icc_7504__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47613__icc_7504__sz; SAC_i++) { { SACp_emal_47568__icc_7537[SAC_i] = ( SACp_emal_47613__icc_7504[SAC_i]); } } }
      SACp_wlidx_45693__icc_7541 = SACp_wlidx_45693__icc_7541 + SACp_emal_47568__icc_7537__sz;
      SACp_eat_345 = SACp_eat_345 + 1;
      } }
      SACp_eat_346 = SACp_eat_346 + 1;
      } }
# 13624 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_47612__pinl_32757__icc_5332;
      SAC_schedule_stop0 = SACp_emal_47610__pinl_32780_res;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_47605__pinl_32840__icc_5332;




      SACp_wlidx_45693__icc_7541
        = SAC_schedule_start0 * SAC_SACp_emal_47567__icc_7541_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47567__icc_7541_shpfac1;

      { int SAC_stop_SACp_eat_346 = SACp_emal_47610__pinl_32780_res; for (SACp_eat_346 = SACp_emal_47612__pinl_32757__icc_5332; SACp_eat_346 < SACp_emal_47610__pinl_32780_res;) {
     



      SACp_wlidx_45693__icc_7541
        = ( SACp_emal_47567__icc_7541__shp1 * SACp_eat_346
         + SAC_schedule_start1 ) * SAC_SACp_emal_47567__icc_7541_shpfac1;

      { int SAC_stop_SACp_eat_345 = SACp_emal_47605__pinl_32840__icc_5332; for (SACp_eat_345 = 0; SACp_eat_345 < SACp_emal_47605__pinl_32840__icc_5332;) {
     



      SACp_emal_47568__icc_7537 = SACp_emal_47567__icc_7541+SACp_wlidx_45693__icc_7541;

      { int SAC_i; if (!((SACp_emal_47568__icc_7537__sz == SACp_emal_47613__icc_7504__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_47613__icc_7504__sz; SAC_i++) { { SACp_emal_47568__icc_7537[SAC_i] = ( SACp_emal_47613__icc_7504[SAC_i]); } } }
      SACp_wlidx_45693__icc_7541 = SACp_wlidx_45693__icc_7541 + SACp_emal_47568__icc_7537__sz;
      SACp_eat_345 = SACp_eat_345 + 1;
      } }
      SACp_eat_346 = SACp_eat_346 + 1;
      } }
# 13666 "/home/rubenhensen/sac/hw/a.out.c"
      SAC_schedule_start0 = SACp_emal_47612__pinl_32757__icc_5332;
      SAC_schedule_stop0 = SACp_emal_47611__pinl_32760__icc_5338;
      SAC_schedule_start1 = SACp_emal_47605__pinl_32840__icc_5332;
      SAC_schedule_stop1 = SACp_emal_47604__pinl_32843__icc_5338;




      SACp_wlidx_45693__icc_7541
        = SAC_schedule_start0 * SAC_SACp_emal_47567__icc_7541_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_47567__icc_7541_shpfac1;

      { int SAC_stop_SACp_eat_346 = SACp_emal_47611__pinl_32760__icc_5338; for (SACp_eat_346 = SACp_emal_47612__pinl_32757__icc_5332; SACp_eat_346 < SACp_emal_47611__pinl_32760__icc_5338;) {
     



      SACp_wlidx_45693__icc_7541
        = ( SACp_emal_47567__icc_7541__shp1 * SACp_eat_346
         + SAC_schedule_start1 ) * SAC_SACp_emal_47567__icc_7541_shpfac1;

      { int SAC_stop_SACp_eat_345 = SACp_emal_47604__pinl_32843__icc_5338; for (SACp_eat_345 = SACp_emal_47605__pinl_32840__icc_5332; SACp_eat_345 < SACp_emal_47604__pinl_32843__icc_5338;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7727, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_47583__pinl_22476__flat_1763 = (SACp_eat_346) * (SACp_emal_47681__uprf_33692); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7727, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_47582__pinl_22476__flat_1763__SSA14_2 = (SACp_eat_345) * (SACp_emal_47679__uprf_33697); };



      SACp_emal_47568__icc_7537 = SACp_emal_47567__icc_7541+SACp_wlidx_45693__icc_7541;

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 12, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;
        int SAC_schedule_start1;
        int SAC_schedule_stop1;




        int SAC_SACp_emal_47568__icc_7537_shpfac0;
        int SAC_SACp_emal_47568__icc_7537_shpfac1;




        {
          int SAC_i;
          SAC_SACp_emal_47568__icc_7537_shpfac0 = 1 * SACp_emal_47568__icc_7537__shp1;
          SAC_SACp_emal_47568__icc_7537_shpfac1 = 1;
        }




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_emal_47599__pinl_33006__icc_5332;
        SAC_schedule_start1 = 0;
        SAC_schedule_stop1 = SACp_emal_47588__wlbsc_9248_sc_e;




        SACp_wlidx_45694__icc_7537
          = SAC_schedule_start0 * SAC_SACp_emal_47568__icc_7537_shpfac0
          + SAC_schedule_start1 * SAC_SACp_emal_47568__icc_7537_shpfac1;

        { int SAC_stop_SACp_eat_348 = SACp_emal_47599__pinl_33006__icc_5332; for (SACp_eat_348 = 0; SACp_eat_348 < SACp_emal_47599__pinl_33006__icc_5332;) {
       



        SACp_wlidx_45694__icc_7537
          = ( SACp_emal_47568__icc_7537__shp1 * SACp_eat_348
           + SAC_schedule_start1 ) * SAC_SACp_emal_47568__icc_7537_shpfac1;

        { int SAC_stop_SACp_eat_347 = SACp_emal_47588__wlbsc_9248_sc_e; for (SACp_eat_347 = 0; SACp_eat_347 < SACp_emal_47588__wlbsc_9248_sc_e;) {
       



        if (!((0 == (SACp_emal_47568__icc_7537__dim - SACl_jv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_emal_47568__icc_7537_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal size found!"); };
        { SACp_emal_47568__icc_7537[SACp_wlidx_45694__icc_7537] = SACp_emal_47600__icc_7533; };

        SACp_wlidx_45694__icc_7537 = SACp_wlidx_45694__icc_7537 + 1;
        SACp_eat_347 = SACp_eat_347 + 1;
        } }
        SACp_eat_348 = SACp_eat_348 + 1;
        } }
# 13807 "/home/rubenhensen/sac/hw/a.out.c"
        SAC_schedule_start0 = SACp_emal_47599__pinl_33006__icc_5332;
        SAC_schedule_stop0 = SACp_emal_47597__pinl_33029_res;
        SAC_schedule_start1 = SACp_emal_47590__pinl_33112_res;
        SAC_schedule_stop1 = SACp_emal_47589__wlbsc_9258_sc_e;




        SACp_wlidx_45694__icc_7537
          = SAC_schedule_start0 * SAC_SACp_emal_47568__icc_7537_shpfac0
          + SAC_schedule_start1 * SAC_SACp_emal_47568__icc_7537_shpfac1;

        { int SAC_stop_SACp_eat_348 = SACp_emal_47597__pinl_33029_res; for (SACp_eat_348 = SACp_emal_47599__pinl_33006__icc_5332; SACp_eat_348 < SACp_emal_47597__pinl_33029_res;) {
       



        SACp_wlidx_45694__icc_7537
          = ( SACp_emal_47568__icc_7537__shp1 * SACp_eat_348
           + SAC_schedule_start1 ) * SAC_SACp_emal_47568__icc_7537_shpfac1;

        { int SAC_stop_SACp_eat_347 = SACp_emal_47589__wlbsc_9258_sc_e; for (SACp_eat_347 = SACp_emal_47590__pinl_33112_res; SACp_eat_347 < SACp_emal_47589__wlbsc_9258_sc_e;) {
       



        if (!((0 == (SACp_emal_47568__icc_7537__dim - SACl_jv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_emal_47568__icc_7537_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal size found!"); };
        { SACp_emal_47568__icc_7537[SACp_wlidx_45694__icc_7537] = SACp_emal_47600__icc_7533; };

        SACp_wlidx_45694__icc_7537 = SACp_wlidx_45694__icc_7537 + 1;
        SACp_eat_347 = SACp_eat_347 + 1;
        } }
        SACp_eat_348 = SACp_eat_348 + 1;
        } }
# 13850 "/home/rubenhensen/sac/hw/a.out.c"
        SAC_schedule_start0 = SACp_emal_47599__pinl_33006__icc_5332;
        SAC_schedule_stop0 = SACp_emal_47597__pinl_33029_res;
        SAC_schedule_start1 = 0;
        SAC_schedule_stop1 = SACp_emal_47592__pinl_33089__icc_5332;




        SACp_wlidx_45694__icc_7537
          = SAC_schedule_start0 * SAC_SACp_emal_47568__icc_7537_shpfac0
          + SAC_schedule_start1 * SAC_SACp_emal_47568__icc_7537_shpfac1;

        { int SAC_stop_SACp_eat_348 = SACp_emal_47597__pinl_33029_res; for (SACp_eat_348 = SACp_emal_47599__pinl_33006__icc_5332; SACp_eat_348 < SACp_emal_47597__pinl_33029_res;) {
       



        SACp_wlidx_45694__icc_7537
          = ( SACp_emal_47568__icc_7537__shp1 * SACp_eat_348
           + SAC_schedule_start1 ) * SAC_SACp_emal_47568__icc_7537_shpfac1;

        { int SAC_stop_SACp_eat_347 = SACp_emal_47592__pinl_33089__icc_5332; for (SACp_eat_347 = 0; SACp_eat_347 < SACp_emal_47592__pinl_33089__icc_5332;) {
       



        if (!((0 == (SACp_emal_47568__icc_7537__dim - SACl_jv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_emal_47568__icc_7537_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal size found!"); };
        { SACp_emal_47568__icc_7537[SACp_wlidx_45694__icc_7537] = SACp_emal_47600__icc_7533; };

        SACp_wlidx_45694__icc_7537 = SACp_wlidx_45694__icc_7537 + 1;
        SACp_eat_347 = SACp_eat_347 + 1;
        } }
        SACp_eat_348 = SACp_eat_348 + 1;
        } }
# 13893 "/home/rubenhensen/sac/hw/a.out.c"
        SAC_schedule_start0 = SACp_emal_47599__pinl_33006__icc_5332;
        SAC_schedule_stop0 = SACp_emal_47598__pinl_33009__icc_5338;
        SAC_schedule_start1 = SACp_emal_47592__pinl_33089__icc_5332;
        SAC_schedule_stop1 = SACp_emal_47591__pinl_33092__icc_5338;




        SACp_wlidx_45694__icc_7537
          = SAC_schedule_start0 * SAC_SACp_emal_47568__icc_7537_shpfac0
          + SAC_schedule_start1 * SAC_SACp_emal_47568__icc_7537_shpfac1;

        { int SAC_stop_SACp_eat_348 = SACp_emal_47598__pinl_33009__icc_5338; for (SACp_eat_348 = SACp_emal_47599__pinl_33006__icc_5332; SACp_eat_348 < SACp_emal_47598__pinl_33009__icc_5338;) {
       



        SACp_wlidx_45694__icc_7537
          = ( SACp_emal_47568__icc_7537__shp1 * SACp_eat_348
           + SAC_schedule_start1 ) * SAC_SACp_emal_47568__icc_7537_shpfac1;

        { int SAC_stop_SACp_eat_347 = SACp_emal_47591__pinl_33092__icc_5338; for (SACp_eat_347 = SACp_emal_47592__pinl_33089__icc_5332; SACp_eat_347 < SACp_emal_47591__pinl_33092__icc_5338;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7311, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_emal_47579__pinl_22661__flat_1747 = (SACp_eat_348) + (SACp_emal_47583__pinl_22476__flat_1763); };
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7311, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_emal_47578__pinl_22661__flat_1747__SSA6_2 = (SACp_eat_347) + (SACp_emal_47582__pinl_22476__flat_1763__SSA14_2); };
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_47579__pinl_22661__flat_1747 >= 0) { { SACp_emal_47577__uprf_33267 = SACp_emal_47579__pinl_22661__flat_1747; }; SACp_emal_47577__uprf_33267 = 1; } else { SACp_emal_47577__uprf_33267 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_emal_47579__pinl_22661__flat_1747"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_47578__pinl_22661__flat_1747__SSA6_2 >= 0) { { SACp_emal_47576__uprf_33272 = SACp_emal_47578__pinl_22661__flat_1747__SSA6_2; }; SACp_emal_47576__uprf_33272 = 1; } else { SACp_emal_47576__uprf_33272 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_emal_47578__pinl_22661__flat_1747__SSA6_2"); }
        ; ; { SACp_emal_47577__uprf_33267 = (SACp_emal_47577__uprf_33267) & (SACp_emal_47576__uprf_33272); };
        { ; ; }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_47579__pinl_22661__flat_1747 < SACp_emal_47666__pinl_21813__icc_7279) { SACp_emal_47574__uprf_33254 = 1; } else { SACp_emal_47574__uprf_33254 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_emal_47579__pinl_22661__flat_1747" " (" "%d" ") < " "SACp_emal_47666__pinl_21813__icc_7279" " (" "%d" ")" "' violated", SACp_emal_47579__pinl_22661__flat_1747, SACp_emal_47666__pinl_21813__icc_7279); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_47578__pinl_22661__flat_1747__SSA6_2 < SACp_emal_47664__pinl_21813__icc_7279__SSA6_1) { SACp_emal_47573__uprf_33261 = 1; } else { SACp_emal_47573__uprf_33261 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_emal_47578__pinl_22661__flat_1747__SSA6_2" " (" "%d" ") < " "SACp_emal_47664__pinl_21813__icc_7279__SSA6_1" " (" "%d" ")" "' violated", SACp_emal_47578__pinl_22661__flat_1747__SSA6_2, SACp_emal_47664__pinl_21813__icc_7279__SSA6_1); }
        ; ; { SACp_emal_47574__uprf_33254 = (SACp_emal_47574__uprf_33254) & (SACp_emal_47573__uprf_33261); };
        { ; ; }
        { { if (!((1 == SACp_emal_47571__pinl_22746__idc_6910__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_47571__pinl_22746__idc_6910"); }; { { if ((((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910)) + ((6 + (SACp_emal_47571__pinl_22746__idc_6910__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910)) + ((6 + (SACp_emal_47571__pinl_22746__idc_6910__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910)) + ((6 + (SACp_emal_47571__pinl_22746__idc_6910__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47571__pinl_22746__idc_6910 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_47571__pinl_22746__idc_6910 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910)) + ((6 + (SACp_emal_47571__pinl_22746__idc_6910__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_47571__pinl_22746__idc_6910 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_47571__pinl_22746__idc_6910 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910)) + ((6 + (SACp_emal_47571__pinl_22746__idc_6910__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910)) + ((6 + (SACp_emal_47571__pinl_22746__idc_6910__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910)) + ((6 + (SACp_emal_47571__pinl_22746__idc_6910__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910)) + ((6 + (SACp_emal_47571__pinl_22746__idc_6910__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910)) + ((6 + (SACp_emal_47571__pinl_22746__idc_6910__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_47571__pinl_22746__idc_6910 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_47571__pinl_22746__idc_6910 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_47571__pinl_22746__idc_6910 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_47571__pinl_22746__idc_6910 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_47571__pinl_22746__idc_6910__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910, SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910), ((6 + (SACp_emal_47571__pinl_22746__idc_6910__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47571__pinl_22746__idc_6910__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47571__pinl_22746__idc_6910__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47571__pinl_22746__idc_6910__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_emal_47571__pinl_22746__idc_6910__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
        if (!((SACp_emal_47571__pinl_22746__idc_6910__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_emal_47571__pinl_22746__idc_6910[0] = SACp_emal_47579__pinl_22661__flat_1747; }
        { SACp_emal_47571__pinl_22746__idc_6910[1] = SACp_emal_47578__pinl_22661__flat_1747__SSA6_2; }

        { ; ; }
        { ; ; }
        if (!SACp_emal_47574__uprf_33254) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_emal_47577__uprf_33267) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }



        SACp_emal_47570__ivesli_45770 = ( ( SACp_emal_47683__isaa_39014_a[1]) * ( SACp_emal_47571__pinl_22746__idc_6910[0]) + ( SACp_emal_47571__pinl_22746__idc_6910[1]) );

        { { { if (((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910, ((((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910) - 1)->data1.arena)); } else { if (SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910, ((((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910, ((((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910) - 1)->data1.arena)); } } else { if (((((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910, ((((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910) - 1)->data1.arena)); } else { if (((((SACp_emal_47571__pinl_22746__idc_6910__sz * sizeof (*SACp_emal_47571__pinl_22746__idc_6910))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910, ((((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47571__pinl_22746__idc_6910); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47571__pinl_22746__idc_6910__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_emal_47569__pinl_22704__icc_6889 = ( SACl_a[SACp_emal_47570__ivesli_45770]); }

        { ; ; }
        if (!SACp_emal_47574__uprf_33254) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_emal_47577__uprf_33267) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }



        if (!((0 == (SACp_emal_47568__icc_7537__dim - SACl_jv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_emal_47568__icc_7537_shpfac1))) { SAC_RuntimeWarningLoc ("./week4.sac", 40, 19, "WL expression with illegal size found!"); };
        { SACp_emal_47568__icc_7537[SACp_wlidx_45694__icc_7537] = SACp_emal_47569__pinl_22704__icc_6889; };

        { ; ; }
        SACp_wlidx_45694__icc_7537 = SACp_wlidx_45694__icc_7537 + 1;
        SACp_eat_347 = SACp_eat_347 + 1;
        } }
        SACp_eat_348 = SACp_eat_348 + 1;
        } }
# 14048 "/home/rubenhensen/sac/hw/a.out.c"
      }

     
      _comp_48042_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      if (!SACp_emal_47670__uprf_33661) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_47647__uprf_33570) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_47673__uprf_33672) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_47650__uprf_33583) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 19, "With-loop guard failed"); }
      SACp_wlidx_45693__icc_7541 = SACp_wlidx_45693__icc_7541 + SACp_emal_47568__icc_7537__sz;
      SACp_eat_345 = SACp_eat_345 + 1;
      } }
      SACp_eat_346 = SACp_eat_346 + 1;
      } }
# 14074 "/home/rubenhensen/sac/hw/a.out.c"
    }

   
    _comp_48043_SAC_label:;
    { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47568__icc_7537__desc) & (-1 ^ (3))))); } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_47613__icc_7504); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47613__icc_7504__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { { if (((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a, ((((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a) - 1)->data1.arena)); } else { if (SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a, ((((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a, ((((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a) - 1)->data1.arena)); } } else { if (((((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a, ((((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a) - 1)->data1.arena)); } else { if (((((SACp_emal_47683__isaa_39014_a__sz * sizeof (*SACp_emal_47683__isaa_39014_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a, ((((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_47683__isaa_39014_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_47683__isaa_39014_a__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
    if (!SACp_emal_47659__uprf_33609) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_47643__uprf_33490) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_47662__uprf_33620) { SAC_RuntimeErrorLoc ("./week4.sac", 40, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_47567__icc_7541; *SAC_arg_1__desc__p = SACp_emal_47567__icc_7541__desc; }
    return;
   
  }



}
}
# 14137 "/home/rubenhensen/sac/hw/a.out.c"
void SACof__MAIN_CLStdIO__print__i_X_X (int * SACl_arr, SAC_array_descriptor_t SACl_arr__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_48010_SACl_arr;
    SAC_array_descriptor_t _tcp_48010_SACl_arr__desc = 
# 14147 "/home/rubenhensen/sac/hw/a.out.c" 3 4
   ((void *)0)
# 14147 "/home/rubenhensen/sac/hw/a.out.c"
   ;
    int _tcp_48010_SACl_arr__sz = 0;
    int _tcp_48010_SACl_arr__dim = 0;





    int SACl_arr__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_arr__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_arr__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACl_arr__desc) & (-1 ^ (3))))[(6 + (1))]);
    int SACl_arr__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_arr__desc) & (-1 ^ (3))))[4]);
    const int SACl_arr__dim = 2;

   



    _tcp_48010_SACl_arr__desc = SACl_arr__desc;
    _tcp_48010_SACl_arr__sz = SACl_arr__sz;
    _tcp_48010_SACl_arr__dim = SACl_arr__dim;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_48010_SACl_arr__desc) & (-1 ^ (3))))[3]) = SACl_arr__dim;
    { _tcp_48010_SACl_arr = SACl_arr; }




    SACf_ArrayIO__print__i_P (_tcp_48010_SACl_arr, _tcp_48010_SACl_arr__desc);




    return;
   
  }



}
}




extern void SACARGfreeDataUdt( int, void *);
extern void *SACARGcopyDataUdt( int, int, void *);
void SACARGfreeDataUdt( int size, void *data) {}
void *SACARGcopyDataUdt( int type, int size, void *data) { return ((void *) 0x0); }

int main( int __argc, char *__argv[])
{
  int SAC_res;
 
 
  ;
  ;
  ;
  ;
  { SAC_HM_Setup (1 + SAC_RTSPEC_controller_threads); };
  ;
  ;
  ;
  SAC_commandline_argc = __argc; SAC_commandline_argv = __argv;;

  SACf__MAIN__main (&SAC_res);

  ;
  ;
  ;
  ;
  ;
  ;

  ;

  return( SAC_res);
}
