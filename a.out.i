# 0 "/home/rubenhensen/sac/a.out.c"
# 1 "/home/rubenhensen/sac//"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 0 "<command-line>" 2
# 1 "/home/rubenhensen/sac/a.out.c"
# 278 "/home/rubenhensen/sac/a.out.c"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 1



# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl_gen.h" 1
# 5 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std_gen.h" 1
# 6 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 14 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/nested_h/nested_gen.h" 1
# 15 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/nested_h/nested.h" 1
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 30 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 1
# 26 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h"
# 1 "/usr/include/stdlib.h" 1 3 4
# 26 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 392 "/usr/include/features.h" 3 4
# 1 "/usr/include/features-time64.h" 1 3 4
# 20 "/usr/include/features-time64.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 21 "/usr/include/features-time64.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 2 3 4
# 22 "/usr/include/features-time64.h" 2 3 4
# 393 "/usr/include/features.h" 2 3 4
# 486 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 559 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 560 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 561 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 487 "/usr/include/features.h" 2 3 4
# 510 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 511 "/usr/include/features.h" 2 3 4
# 34 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 2 3 4
# 27 "/usr/include/stdlib.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 209 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4

# 209 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 321 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4







# 1 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 1 3 4
# 41 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 1 3 4
# 42 "/usr/include/stdlib.h" 2 3 4
# 56 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 1 3 4
# 119 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 2 3 4
# 120 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 2 3 4
# 57 "/usr/include/stdlib.h" 2 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;





__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 98 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));



extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 177 "/usr/include/stdlib.h" 3 4
extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 361 "/usr/include/stdlib.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}


__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}
# 386 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern long int a64l (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));




# 1 "/usr/include/x86_64-linux-gnu/sys/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 2 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;






typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;



typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 142 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/time64.h" 1 3 4
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;
typedef long int __suseconds64_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 30 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;


typedef __loff_t loff_t;




typedef __ino_t ino_t;
# 59 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;
# 97 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;




# 1 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 1 3 4






typedef __clock_t clock_t;
# 127 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 1 3 4






typedef __clockid_t clockid_t;
# 129 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 3 4
typedef __time_t time_t;
# 130 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 1 3 4






typedef __timer_t timer_t;
# 131 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 144 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 145 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;




# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 156 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


typedef __uint8_t u_int8_t;
typedef __uint16_t u_int16_t;
typedef __uint32_t u_int32_t;
typedef __uint64_t u_int64_t;


typedef int register_t __attribute__ ((__mode__ (__word__)));
# 176 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 24 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endian.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endianness.h" 1 3 4
# 36 "/usr/include/x86_64-linux-gnu/bits/endian.h" 2 3 4
# 25 "/usr/include/endian.h" 2 3 4
# 35 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline __uint16_t
__bswap_16 (__uint16_t __bsx)
{

  return __builtin_bswap16 (__bsx);



}






static __inline __uint32_t
__bswap_32 (__uint32_t __bsx)
{

  return __builtin_bswap32 (__bsx);



}
# 69 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
__extension__ static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{

  return __builtin_bswap64 (__bsx);



}
# 36 "/usr/include/endian.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 1 3 4
# 32 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3 4
static __inline __uint16_t
__uint16_identity (__uint16_t __x)
{
  return __x;
}

static __inline __uint32_t
__uint32_identity (__uint32_t __x)
{
  return __x;
}

static __inline __uint64_t
__uint64_identity (__uint64_t __x)
{
  return __x;
}
# 37 "/usr/include/endian.h" 2 3 4
# 177 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/sys/select.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select.h" 1 3 4
# 31 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 1 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 1 3 4




typedef struct
{
  unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
} __sigset_t;
# 5 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 2 3 4


typedef __sigset_t sigset_t;
# 34 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 1 3 4







struct timeval
{




  __time_t tv_sec;
  __suseconds_t tv_usec;

};
# 38 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
struct timespec
{



  __time_t tv_sec;




  __syscall_slong_t tv_nsec;
# 31 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
};
# 40 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



typedef __suseconds_t suseconds_t;





typedef long int __fd_mask;
# 59 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 91 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4

# 102 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 127 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 150 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select2.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3 4
extern long int __fdelt_chk (long int __d);
extern long int __fdelt_warn (long int __d)
  __attribute__((__warning__ ("bit outside of fd_set selected")));
# 151 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 180 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 227 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 1 3 4
# 44 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 1 3 4
# 21 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 2 3 4
# 45 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3 4
typedef union
{
  __extension__ unsigned long long int __value64;
  struct
  {
    unsigned int __low;
    unsigned int __high;
  } __value32;
} __atomic_wide_counter;
# 47 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;

typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;
# 76 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
struct __pthread_mutex_s
{
  int __lock;
  unsigned int __count;
  int __owner;

  unsigned int __nusers;



  int __kind;

  short __spins;
  short __elision;
  __pthread_list_t __list;
# 53 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
};
# 77 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4
# 89 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
struct __pthread_rwlock_arch_t
{
  unsigned int __readers;
  unsigned int __writers;
  unsigned int __wrphase_futex;
  unsigned int __writers_futex;
  unsigned int __pad3;
  unsigned int __pad4;

  int __cur_writer;
  int __shared;
  signed char __rwelision;




  unsigned char __pad1[7];


  unsigned long int __pad2;


  unsigned int __flags;
# 55 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
};
# 90 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




struct __pthread_cond_s
{
  __atomic_wide_counter __wseq;
  __atomic_wide_counter __g1_start;
  unsigned int __g_refs[2] ;
  unsigned int __g_size[2];
  unsigned int __g1_orig_size;
  unsigned int __wrefs;
  unsigned int __g_signals[2];
};

typedef unsigned int __tss_t;
typedef unsigned long int __thrd_t;

typedef struct
{
  int __data ;
} __once_flag;
# 24 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 2 3 4



typedef unsigned long int pthread_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;




typedef union
{
  struct __pthread_mutex_s __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;


typedef union
{
  struct __pthread_cond_s __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;





typedef union
{
  struct __pthread_rwlock_arch_t __data;
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 228 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



# 396 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));



extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));







extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) __attribute__ ((__warn_unused_result__));

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (1, 2))) __attribute__ ((__warn_unused_result__));






extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__)) __attribute__ ((__alloc_size__ (2)));


extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));







extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__))
     __attribute__ ((__alloc_size__ (2, 3)))
    __attribute__ ((__malloc__ (__builtin_free, 1)));


extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__ (reallocarray, 1)));



# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));






# 575 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) __attribute__ ((__warn_unused_result__));




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 598 "/usr/include/stdlib.h" 3 4
extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 617 "/usr/include/stdlib.h" 3 4
extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
# 636 "/usr/include/stdlib.h" 3 4
extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 654 "/usr/include/stdlib.h" 3 4
extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
# 682 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 695 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 717 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 738 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 791 "/usr/include/stdlib.h" 3 4
extern int system (const char *__command) __attribute__ ((__warn_unused_result__));
# 808 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));






typedef int (*__compar_fn_t) (const void *, const void *);
# 828 "/usr/include/stdlib.h" 3 4
extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) __attribute__ ((__warn_unused_result__));


# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) void *
bsearch (const void *__key, const void *__base, size_t __nmemb, size_t __size,
  __compar_fn_t __compar)
{
  size_t __l, __u, __idx;
  const void *__p;
  int __comparison;

  __l = 0;
  __u = __nmemb;
  while (__l < __u)
    {
      __idx = (__l + __u) / 2;
      __p = (const void *) (((const char *) __base) + (__idx * __size));
      __comparison = (*__compar) (__key, __p);
      if (__comparison < 0)
 __u = __idx;
      else if (__comparison > 0)
 __l = __idx + 1;
      else
 {

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wcast-qual"

   return (void *) __p;

#pragma GCC diagnostic pop

 }
    }

  return ((void *)0);
}
# 834 "/usr/include/stdlib.h" 2 3 4




extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 848 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));


__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));






extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));


__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
# 880 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));





extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__));



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__))
    __attribute__ ((__access__ (__read_only__, 2)));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__access__ (__write_only__, 1, 3)))
  __attribute__ ((__access__ (__read_only__, 2)));






extern int rpmatch (const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 967 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) __attribute__ ((__warn_unused_result__));
# 1013 "/usr/include/stdlib.h" 3 4
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1023 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}
# 1024 "/usr/include/stdlib.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3 4
extern char *__realpath_chk (const char *__restrict __name,
        char *__restrict __resolved,
        size_t __resolvedlen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern char *__realpath_alias (const char *__restrict __name, char *__restrict __resolved) __asm__ ("" "realpath") __attribute__ ((__nothrow__ , __leaf__))

                                                 __attribute__ ((__warn_unused_result__));
extern char *__realpath_chk_warn (const char *__restrict __name, char *__restrict __resolved, size_t __resolvedlen) __asm__ ("" "__realpath_chk") __attribute__ ((__nothrow__ , __leaf__))


                                                __attribute__ ((__warn_unused_result__))
     __attribute__((__warning__ ("second argument of realpath must be either NULL or at " "least PATH_MAX bytes long buffer")))
                                      ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
__attribute__ ((__nothrow__ , __leaf__)) realpath (const char *__restrict __name, char *__restrict __resolved)
{
  size_t sz = __builtin_object_size (__resolved, 2 > 1);

  if (sz == (size_t) -1)
    return __realpath_alias (__name, __resolved);





  return __realpath_chk (__name, __resolved, sz);
}


extern int __ptsname_r_chk (int __fd, char *__buf, size_t __buflen,
       size_t __nreal) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)))
    __attribute__ ((__access__ (__write_only__, 2, 3)));
extern int __ptsname_r_alias (int __fd, char *__buf, size_t __buflen) __asm__ ("" "ptsname_r") __attribute__ ((__nothrow__ , __leaf__))

     __attribute__ ((__nonnull__ (2))) __attribute__ ((__access__ (__write_only__, 2, 3)));
extern int __ptsname_r_chk_warn (int __fd, char *__buf, size_t __buflen, size_t __nreal) __asm__ ("" "__ptsname_r_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__nonnull__ (2))) __attribute__((__warning__ ("ptsname_r called with buflen bigger than " "size of buf")))
                   ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) ptsname_r (int __fd, char *__buf, size_t __buflen)
{
  return ((((__typeof (__buflen)) 0 < (__typeof (__buflen)) -1 || (__builtin_constant_p (__buflen) && (__buflen) > 0)) && __builtin_constant_p ((((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) && (((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) ? __ptsname_r_alias (__fd, __buf, __buflen) : ((((__typeof (__buflen)) 0 < (__typeof (__buflen)) -1 || (__builtin_constant_p (__buflen) && (__buflen) > 0)) && __builtin_constant_p ((((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) && !(((long unsigned int) (__buflen)) <= (__builtin_object_size (__buf, 2 > 1)) / (sizeof (char)))) ? __ptsname_r_chk_warn (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1)) : __ptsname_r_chk (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1))))

                           ;
}


extern int __wctomb_chk (char *__s, wchar_t __wchar, size_t __buflen)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int __wctomb_alias (char *__s, wchar_t __wchar) __asm__ ("" "wctomb") __attribute__ ((__nothrow__ , __leaf__))
              __attribute__ ((__warn_unused_result__));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) int
__attribute__ ((__nothrow__ , __leaf__)) wctomb (char *__s, wchar_t __wchar)
{







  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1
      && 16 > __builtin_object_size (__s, 2 > 1))
    return __wctomb_chk (__s, __wchar, __builtin_object_size (__s, 2 > 1));
  return __wctomb_alias (__s, __wchar);
}


extern size_t __mbstowcs_chk (wchar_t *__restrict __dst,
         const char *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__))
    __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __mbstowcs_alias (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len) __asm__ ("" "mbstowcs") __attribute__ ((__nothrow__ , __leaf__))



    __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __mbstowcs_chk_warn (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__mbstowcs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("mbstowcs called with dst buffer smaller than len " "* sizeof (wchar_t)")))
                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) mbstowcs (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len)

{
  return ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) && (((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) ? __mbstowcs_alias (__dst, __src, __len) : ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) && !(((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))) ? __mbstowcs_chk_warn (__dst, __src, __len, (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t))) : __mbstowcs_chk (__dst, __src, __len, (__builtin_object_size (__dst, 2 > 1)) / (sizeof (wchar_t)))))

                           ;
}


extern size_t __wcstombs_chk (char *__restrict __dst,
         const wchar_t *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __wcstombs_alias (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len) __asm__ ("" "wcstombs") __attribute__ ((__nothrow__ , __leaf__))



  __attribute__ ((__access__ (__write_only__, 1, 3))) __attribute__ ((__access__ (__read_only__, 2)));
extern size_t __wcstombs_chk_warn (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__wcstombs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("wcstombs called with dst buffer smaller than len")));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) wcstombs (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len)

{
  return ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) && (((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) ? __wcstombs_alias (__dst, __src, __len) : ((((__typeof (__len)) 0 < (__typeof (__len)) -1 || (__builtin_constant_p (__len) && (__len) > 0)) && __builtin_constant_p ((((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) && !(((long unsigned int) (__len)) <= (__builtin_object_size (__dst, 2 > 1)) / (sizeof (char)))) ? __wcstombs_chk_warn (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1)) : __wcstombs_chk (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1))))

                         ;
}
# 1028 "/usr/include/stdlib.h" 2 3 4








# 27 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2
# 1 "/usr/include/inttypes.h" 1 3 4
# 27 "/usr/include/inttypes.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 1 3 4
# 9 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 26 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/stdint.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/wchar.h" 1 3 4
# 29 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 30 "/usr/include/stdint.h" 2 3 4







# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3 4
typedef __uint8_t uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
# 38 "/usr/include/stdint.h" 2 3 4





typedef __int_least8_t int_least8_t;
typedef __int_least16_t int_least16_t;
typedef __int_least32_t int_least32_t;
typedef __int_least64_t int_least64_t;


typedef __uint_least8_t uint_least8_t;
typedef __uint_least16_t uint_least16_t;
typedef __uint_least32_t uint_least32_t;
typedef __uint_least64_t uint_least64_t;





typedef signed char int_fast8_t;

typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
# 71 "/usr/include/stdint.h" 3 4
typedef unsigned char uint_fast8_t;

typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
# 87 "/usr/include/stdint.h" 3 4
typedef long int intptr_t;


typedef unsigned long int uintptr_t;
# 101 "/usr/include/stdint.h" 3 4
typedef __intmax_t intmax_t;
typedef __uintmax_t uintmax_t;
# 10 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 2 3 4
# 28 "/usr/include/inttypes.h" 2 3 4






typedef int __gwchar_t;
# 266 "/usr/include/inttypes.h" 3 4





typedef struct
  {
    long int quot;
    long int rem;
  } imaxdiv_t;
# 290 "/usr/include/inttypes.h" 3 4
extern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern intmax_t strtoimax (const char *__restrict __nptr,
      char **__restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t strtoumax (const char *__restrict __nptr,
       char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern intmax_t wcstoimax (const __gwchar_t *__restrict __nptr,
      __gwchar_t **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t wcstoumax (const __gwchar_t *__restrict __nptr,
       __gwchar_t ** __restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));


# 28 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h" 1
# 35 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h"

# 35 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h"
typedef int bool;
# 29 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_misc.h" 1
# 30 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h" 2



extern size_t SAC_DISTMEM_rank;




extern int SAC_DISTMEM_trace_profile_rank;
# 55 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/distmem_h/distmem.h"
void SAC_DISTMEM_Abort (int exit_code);
# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2





# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/audwl.h" 1
# 37 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/bool.h" 1
# 38 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/errors.h" 1
# 39 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/icm.h" 1
# 40 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/idx.h" 1
# 41 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/prf.h" 1
# 42 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl.h" 1
# 10 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_methods.h" 1
# 11 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_impl.h" 2
# 43 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_methods.h" 1
# 44 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rc_stubs.h" 1
# 45 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rcm_local_async_norc_ptr.h" 1
# 46 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rcm_local_pasync.h" 1
# 47 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rcm_local_pasync_norc_desc.h" 1
# 48 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_commandline.h" 1
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_commandline.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/commandline.h" 1
# 20 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/commandline.h"
extern char **SAC_commandline_argv;
extern int SAC_commandline_argc;
# 17 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_commandline.h" 2
# 49 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/rt_misc.h" 1
# 50 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 1
# 20 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 1 3 4
# 203 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 195 "/usr/include/limits.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 161 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 1 3 4
# 38 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 2 3 4
# 81 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 1 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 2 3 4
# 82 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 2 3 4
# 162 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 196 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/posix2_lim.h" 1 3 4
# 200 "/usr/include/limits.h" 2 3 4
# 204 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-linux-gnu/11/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-linux-gnu/11/include/limits.h" 2 3 4
# 21 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2






# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/icm.h" 1
# 28 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/cuda_transfer_methods.h" 1
# 29 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/runtimecheck.h" 1
# 30 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 1
# 15 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
# 1 "/usr/include/assert.h" 1 3 4
# 66 "/usr/include/assert.h" 3 4




# 69 "/usr/include/assert.h" 3 4
extern void __assert_fail (const char *__assertion, const char *__file,
      unsigned int __line, const char *__function)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));


extern void __assert_perror_fail (int __errnum, const char *__file,
      unsigned int __line, const char *__function)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern void __assert (const char *__assertion, const char *__file, int __line)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 2






# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/mt_h/rt_mt.h" 1
# 128 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/mt_h/rt_mt.h"

# 128 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/mt_h/rt_mt.h"
extern unsigned int SAC_MT_globally_single;


extern unsigned int SAC_RTSPEC_controller_threads;
# 23 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/cuda_transfer_methods.h" 1
# 24 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 2
# 33 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef unsigned long int SAC_HM_size_byte_t;
typedef long int SAC_HM_size_unit_t;
# 59 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
extern void *malloc (size_t size);
extern void free (void *addr);
# 97 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef union header_t {
    struct header_data1_t {
        SAC_HM_size_unit_t size;
        struct arena_t *arena;
    } data1;
    struct header_data2_t {
        union header_t *prevfree;
        union header_t *nextfree;
    } data2;
    struct header_data3_t {
        SAC_HM_size_unit_t prevsize;
        SAC_HM_size_unit_t diag;
    } data3;
    char align[(((((((sizeof (struct header_data1_t)) > (sizeof (struct header_data2_t)) ? (sizeof (struct header_data1_t)) : (sizeof (struct header_data2_t)))) > (sizeof (struct header_data3_t)) ? (((sizeof (struct header_data1_t)) > (sizeof (struct header_data2_t)) ? (sizeof (struct header_data1_t)) : (sizeof (struct header_data2_t)))) : (sizeof (struct header_data3_t)))


                  - 1)
                 / sizeof (double))
                + 1)
               * sizeof (double)];
} SAC_HM_header_t;
# 148 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef struct arena_t {
    int num;
    SAC_HM_header_t freelist[3];
    SAC_HM_header_t *wilderness;
    SAC_HM_size_unit_t binsize;
    SAC_HM_size_unit_t min_chunk_size;







    volatile SAC_HM_header_t *unused_list;


    unsigned long int size;
    unsigned long int cnt_bins;
    unsigned long int cnt_alloc;
    unsigned long int cnt_alloc_var_size;
    unsigned long int cnt_after_freelist;
    unsigned long int cnt_after_splitting;
    unsigned long int cnt_after_wilderness;
    unsigned long int cnt_after_coalascing;
    unsigned long int cnt_after_coalascing_wilderness;
    unsigned long int cnt_after_extension;
    unsigned long int cnt_free;
    unsigned long int cnt_free_var_size;
    unsigned long int cnt_coalascing;
    unsigned long int cnt_coalascing_wilderness;
} SAC_HM_arena_t;
# 300 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"
typedef enum {
    SAC_HM_single_threaded,
    SAC_HM_multi_threaded,
    SAC_HM_any_threaded
} SAC_HM_thread_status_t;
# 313 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h"







extern int SAC_HM_not_yet_initialized;
extern unsigned long int SAC_HM_acquire_top_arena_lock;





extern void SAC_HM_Setup (unsigned int threads);

extern void *SAC_HM_MallocSmallChunk (SAC_HM_size_unit_t units,
                                            SAC_HM_arena_t *arena);
extern void *SAC_HM_MallocLargeChunk (SAC_HM_size_unit_t units,
                                            SAC_HM_arena_t *arena);

extern void SAC_HM_FreeSmallChunk (SAC_HM_header_t *addr, SAC_HM_arena_t *arena);
extern void SAC_HM_FreeLargeChunk (SAC_HM_header_t *addr, SAC_HM_arena_t *arena);

extern void *SAC_HM_MallocAnyChunk_at (SAC_HM_size_byte_t size,
                                             unsigned int thread_id);
extern void *SAC_HM_MallocAnyChunk_st (SAC_HM_size_byte_t size);
extern void *SAC_HM_MallocAnyChunk_mt (SAC_HM_size_byte_t size,
                                             unsigned int thread_id);

extern void *SAC_HM_MallocSmallChunk_at (SAC_HM_size_unit_t units, int arena_num);
extern void *SAC_HM_MallocLargeChunk_at (SAC_HM_size_unit_t units, int arena_num);
extern void *SAC_HM_MallocTopArena_at (SAC_HM_size_unit_t units);
extern void *SAC_HM_MallocTopArena_mt (SAC_HM_size_unit_t units);

extern void *SAC_HM_MallocDesc (SAC_HM_header_t *addr, SAC_HM_size_byte_t size,
                                      SAC_HM_size_byte_t desc_size);

extern void SAC_HM_FreeTopArena_mt (SAC_HM_header_t *addr);
extern void SAC_HM_FreeTopArena_at (SAC_HM_header_t *addr);

extern void SAC_HM_FreeDesc (SAC_HM_header_t *addr);

extern void SAC_HM_ShowDiagnostics (void);
extern void SAC_HM_CheckAllocPatternAnyChunk (SAC_HM_header_t *addr);

extern void *SAC_HM_PlaceArray (void *alloc, void *base, long int offset,
                                      long int cache_size);





extern unsigned int SAC_HM_CurrentThreadId (void);
extern int SAC_HM_DiscoversThreads (void);
# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_trace.h" 1
# 32 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h" 1
# 41 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 1







# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 1
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h"
# 1 "/usr/include/x86_64-linux-gnu/sys/time.h" 1 3 4
# 34 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4

# 52 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4

# 52 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
struct timezone
  {
    int tz_minuteswest;
    int tz_dsttime;
  };
# 67 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
extern int gettimeofday (struct timeval *__restrict __tv,
    void *__restrict __tz) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 86 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
extern int settimeofday (const struct timeval *__tv,
    const struct timezone *__tz)
     __attribute__ ((__nothrow__ , __leaf__));





extern int adjtime (const struct timeval *__delta,
      struct timeval *__olddelta) __attribute__ ((__nothrow__ , __leaf__));
# 114 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
enum __itimer_which
  {

    ITIMER_REAL = 0,


    ITIMER_VIRTUAL = 1,



    ITIMER_PROF = 2

  };



struct itimerval
  {

    struct timeval it_interval;

    struct timeval it_value;
  };






typedef int __itimer_which_t;





extern int getitimer (__itimer_which_t __which,
        struct itimerval *__value) __attribute__ ((__nothrow__ , __leaf__));




extern int setitimer (__itimer_which_t __which,
        const struct itimerval *__restrict __new,
        struct itimerval *__restrict __old) __attribute__ ((__nothrow__ , __leaf__));




extern int utimes (const char *__file, const struct timeval __tvp[2])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 189 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
extern int lutimes (const char *__file, const struct timeval __tvp[2])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int futimes (int __fd, const struct timeval __tvp[2]) __attribute__ ((__nothrow__ , __leaf__));
# 258 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4

# 17 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 2




# 1 "/usr/include/x86_64-linux-gnu/sys/resource.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/resource.h" 1 3 4
# 31 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
enum __rlimit_resource
{

  RLIMIT_CPU = 0,



  RLIMIT_FSIZE = 1,



  RLIMIT_DATA = 2,



  RLIMIT_STACK = 3,



  RLIMIT_CORE = 4,






  __RLIMIT_RSS = 5,



  RLIMIT_NOFILE = 7,
  __RLIMIT_OFILE = RLIMIT_NOFILE,




  RLIMIT_AS = 9,



  __RLIMIT_NPROC = 6,



  __RLIMIT_MEMLOCK = 8,



  __RLIMIT_LOCKS = 10,



  __RLIMIT_SIGPENDING = 11,



  __RLIMIT_MSGQUEUE = 12,





  __RLIMIT_NICE = 13,




  __RLIMIT_RTPRIO = 14,





  __RLIMIT_RTTIME = 15,


  __RLIMIT_NLIMITS = 16,
  __RLIM_NLIMITS = __RLIMIT_NLIMITS


};
# 131 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
typedef __rlim_t rlim_t;







struct rlimit
  {

    rlim_t rlim_cur;

    rlim_t rlim_max;
  };
# 158 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
enum __rusage_who
{

  RUSAGE_SELF = 0,



  RUSAGE_CHILDREN = -1
# 176 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4
};


# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_rusage.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/types/struct_rusage.h" 3 4
struct rusage
  {

    struct timeval ru_utime;

    struct timeval ru_stime;

    __extension__ union
      {
 long int ru_maxrss;
 __syscall_slong_t __ru_maxrss_word;
      };


    __extension__ union
      {
 long int ru_ixrss;
 __syscall_slong_t __ru_ixrss_word;
      };

    __extension__ union
      {
 long int ru_idrss;
 __syscall_slong_t __ru_idrss_word;
      };

    __extension__ union
      {
 long int ru_isrss;
  __syscall_slong_t __ru_isrss_word;
      };


    __extension__ union
      {
 long int ru_minflt;
 __syscall_slong_t __ru_minflt_word;
      };

    __extension__ union
      {
 long int ru_majflt;
 __syscall_slong_t __ru_majflt_word;
      };

    __extension__ union
      {
 long int ru_nswap;
 __syscall_slong_t __ru_nswap_word;
      };


    __extension__ union
      {
 long int ru_inblock;
 __syscall_slong_t __ru_inblock_word;
      };

    __extension__ union
      {
 long int ru_oublock;
 __syscall_slong_t __ru_oublock_word;
      };

    __extension__ union
      {
 long int ru_msgsnd;
 __syscall_slong_t __ru_msgsnd_word;
      };

    __extension__ union
      {
 long int ru_msgrcv;
 __syscall_slong_t __ru_msgrcv_word;
      };

    __extension__ union
      {
 long int ru_nsignals;
 __syscall_slong_t __ru_nsignals_word;
      };



    __extension__ union
      {
 long int ru_nvcsw;
 __syscall_slong_t __ru_nvcsw_word;
      };


    __extension__ union
      {
 long int ru_nivcsw;
 __syscall_slong_t __ru_nivcsw_word;
      };
  };
# 180 "/usr/include/x86_64-linux-gnu/bits/resource.h" 2 3 4







enum __priority_which
{
  PRIO_PROCESS = 0,

  PRIO_PGRP = 1,

  PRIO_USER = 2

};



# 223 "/usr/include/x86_64-linux-gnu/bits/resource.h" 3 4

# 25 "/usr/include/x86_64-linux-gnu/sys/resource.h" 2 3 4







# 42 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
typedef int __rlimit_resource_t;
typedef int __rusage_who_t;
typedef int __priority_which_t;





extern int getrlimit (__rlimit_resource_t __resource,
        struct rlimit *__rlimits) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 70 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
extern int setrlimit (__rlimit_resource_t __resource,
        const struct rlimit *__rlimits) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 89 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
extern int getrusage (__rusage_who_t __who, struct rusage *__usage) __attribute__ ((__nothrow__ , __leaf__));
# 105 "/usr/include/x86_64-linux-gnu/sys/resource.h" 3 4
extern int getpriority (__priority_which_t __which, id_t __who) __attribute__ ((__nothrow__ , __leaf__));



extern int setpriority (__priority_which_t __which, id_t __who, int __prio)
     __attribute__ ((__nothrow__ , __leaf__));


# 22 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 2
# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h"

# 31 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h"
typedef struct timeval SAC_PF_TIMER;

typedef enum {
    PF_ow_fun = 0,
    PF_ow_genarray = 1,
    PF_ow_modarray = 2,
    PF_ow_fold = 3,
    PF_iw_fun = 4,
    PF_iw_genarray = 5,
    PF_iw_modarray = 6,
    PF_iw_fold = 7

    ,
    PF_cuda_knl = 8

    ,
    PF_distmem_exec_rep = 9,
    PF_distmem_exec_dist = 10,
    PF_distmem_exec_side_effects = 11,
    PF_distmem_rep_barrier = 12,
    PF_distmem_dist_barrier = 13,
    PF_distmem_side_effects_barrier = 14,
    PF_distmem_comm = 15

} SAC_PF_record_type;

typedef struct profile_record {
    int funno;
    int funapno;
    SAC_PF_record_type record_type;
    struct profile_record *parent;
    int *cycle_tag;
} SAC_PROFILE_RECORD;
# 9 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 2

# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 143 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4

# 143 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 11 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 2
# 54 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h"

# 54 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h"
extern void SAC_PF_MEM_CUDA_PrintStats (void);
extern void SAC_PF_MEM_CUDA_AllocMemcnt (size_t size);
extern void SAC_PF_MEM_CUDA_FreeMemcnt (size_t size);
extern void SAC_PF_MEM_CUDA_AllocDescnt (size_t size);
extern void SAC_PF_MEM_CUDA_FreeDescnt (size_t size);
extern void SAC_PF_MEM_CUDA_AddToMax (size_t size);
# 42 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h" 2
# 33 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_cachesim.h" 1
# 34 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 2
# 110 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h"
typedef void *SAC_hidden;






typedef intptr_t SAC_referencecount_t;




typedef intptr_t *SAC_array_descriptor_parent_t;
# 137 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h"
typedef intptr_t *SAC_array_descriptor_t;
# 51 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/tuple.h" 1
# 52 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/types.h" 1
# 33 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/types.h"
typedef struct {
    float a, b, c, d;
} __attribute__ ((packed)) floatvec;






typedef char byte;




typedef long long longlong;




typedef unsigned char ubyte;




typedef unsigned long long ulonglong;




typedef unsigned short ushort;




typedef unsigned int uint;




typedef unsigned long ulong;
# 53 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/wl.h" 1
# 54 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2




# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/rt_profile.h" 1
# 59 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2




# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/extras_h/runtimecheck.h" 1
# 64 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2


# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/hwloc_h/cpubind.h" 1
# 42 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/hwloc_h/cpubind.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cpubind.h" 1



# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/config.h" 1
# 5 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cpubind.h" 2
# 43 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/hwloc_h/cpubind.h" 2
# 67 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 94 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/phm_h/phm.h" 1
# 95 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2


# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/rtspec_h/rtspec.h" 1
# 98 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2






# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/commandline.h" 1
# 105 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h" 1
# 20 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/runtime/essentials_h/std.h" 1
# 21 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/fun-attrs.h" 1
# 22 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/message.h" 2

extern void (*SAC_MessageExtensionCallback) (void);

extern void SAC_RuntimeWarning (const char *format, ...);
extern void SAC_RuntimeWarningLoc (const char *filename, int line, int col, const char *format, ...);
extern void SAC_RuntimeError (const char *format, ...) __attribute__ ((noreturn));
extern void SAC_RuntimeErrorLoc (const char *filename, int line, int col, const char *format, ...) __attribute__ ((noreturn));
extern void SAC_RuntimeError_Mult (int cnt, ...) __attribute__ ((noreturn));

extern const char *SAC_PrintShape (SAC_array_descriptor_t desc);
extern void SAC_Print (const char *format, ...);
# 106 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/misc.h" 1
# 24 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/misc.h"
extern void SAC_String2Array (unsigned char *array, const char *string);
# 107 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/trace.h" 1
# 27 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/essentials/trace.h"
extern void SAC_TR_Print (const char *format, ...);

extern void SAC_TR_IncArrayMemcnt (int size);
extern void SAC_TR_DecArrayMemcnt (int size);
extern void SAC_TR_IncHiddenMemcnt (int size);
extern void SAC_TR_DecHiddenMemcnt (int size);
# 108 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile.h" 1
# 109 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_memory.h" 1






# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 8 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_memory.h" 2
# 16 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_memory.h"
typedef struct memory_record {
    unsigned long alloc_mem_count;
    unsigned long free_mem_count;
    unsigned long alloc_desc_count;
    unsigned long free_desc_count;
    unsigned long reuse_mem_count;






} SAC_PF_MEMORY_RECORD;

extern void SAC_PF_MEM_PrintStats (void);
extern void SAC_PF_MEM_PrintRecordStats (SAC_PF_MEMORY_RECORD record);
extern void SAC_PF_MEM_PrintFunStats (const char *func_name, unsigned num_ap,
                                            const SAC_PF_MEMORY_RECORD *records);
extern bool SAC_PF_MEM_IsRecordZero (SAC_PF_MEMORY_RECORD record);
extern void SAC_PF_MEM_AllocMemcnt (size_t size);
extern void SAC_PF_MEM_FreeMemcnt (size_t size);
extern void SAC_PF_MEM_AllocDescnt (size_t size);
extern void SAC_PF_MEM_FreeDescnt (size_t size);
extern void SAC_PF_MEM_ReuseMemcnt (void);
extern void SAC_PF_MEM_AddToMax (size_t size);
# 110 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_ops.h" 1
# 23 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_ops.h"
enum pf_ops {
  P_SAC_ND_PRF_ADD,
  P_SAC_ND_PRF_SUB,
  P_SAC_ND_PRF_MUL,
  P_SAC_ND_PRF_DIV,
  P_SAC_ND_PRF_MOD,
  P_SAC_ND_PRF_APLMOD,
  P_SAC_ND_PRF_MIN,
  P_SAC_ND_PRF_MAX,
  P_SAC_ND_PRF_EQ,
  P_SAC_ND_PRF_NE,
  P_SAC_ND_PRF_LE,
  P_SAC_ND_PRF_LT,
  P_SAC_ND_PRF_GE,
  P_SAC_ND_PRF_GT,
  P_SAC_ND_PRF_AND,
  P_SAC_ND_PRF_OR,
  P_undef
} ;
# 56 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_ops.h"
enum pf_types {
  T_int,
  T_float,
  T_double,
  T_ignore,
  T_nothing
} ;







typedef struct ops_record {
    unsigned long type_ops_count[T_nothing][P_undef];
} SAC_PF_OPS_RECORD;

extern void SAC_PF_OPS_PrintStats (void);
extern void SAC_PF_OPS_PrintRecordStats (SAC_PF_OPS_RECORD record);
extern void SAC_PF_OPS_PrintFunStats (const char *func_name, unsigned num_ap,
                                            const SAC_PF_OPS_RECORD *records);
extern void SAC_PF_OPS_PrintOpsStats (unsigned long *p_ops);
extern bool SAC_PF_OPS_IsRecordZero (SAC_PF_OPS_RECORD record);
extern void SAC_PF_OPS_IncPrf (enum pf_types s, enum pf_ops o);
# 111 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_print.h" 1
# 19 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_print.h"
extern void SAC_PF_PrintHeader (const char *title);
extern void SAC_PF_PrintHeaderNode (const char *title, size_t rank);
extern void SAC_PF_PrintSubHeader (const char *title, size_t lineno);
extern void SAC_PF_PrintSection (const char *title);
extern void SAC_PF_PrintTime (const char *title, const char *space, const SAC_PF_TIMER *time);
extern void SAC_PF_PrintCount (const char *title, const char *space, unsigned long count);
extern void SAC_PF_PrintSize (const char *title, const char *space, unsigned long size, const char *unit);
extern void SAC_PF_PrintTimePercentage (const char *title, const char *space,
                                              const SAC_PF_TIMER *time1, const SAC_PF_TIMER *time2);
# 112 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/profile/profile_cuda.h" 1
# 113 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cpubind.h" 1
# 114 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 1



# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 5 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 2
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdbool.h" 1 3 4
# 6 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 2
# 18 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h"
extern 
# 18 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h" 3 4
      _Bool 
# 18 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/hwloc/cudabind.h"
           SAC_CUDA_HWLOC_init (int cuda_ordinal, char *str, size_t str_size);
# 115 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2




# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/mt/mt_beehive.h" 1
# 184 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/mt/mt_beehive.h"
extern volatile unsigned int SAC_MT_cnt_hives;
extern volatile unsigned int SAC_MT_cnt_worker_bees;
extern volatile unsigned int SAC_MT_cnt_queen_bees;
extern void *SAC_MT_singleton_queen;

extern int SAC_MT_propagate_lock;
extern int SAC_MT_output_lock;
# 120 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 132 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h"
# 1 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/libsac/rtspec/empty.h" 1







extern unsigned int SAC_RTSPEC_controller_threads;
# 133 "/usr/local/include/sac2c/1.3.3-MijasCosta-1165-g41c84/release/sac.h" 2
# 279 "/home/rubenhensen/sac/a.out.c" 2
# 311 "/home/rubenhensen/sac/a.out.c"
typedef SAC_hidden SACt_sacprelude_p__SACarg;

extern SACt_sacprelude_p__SACarg SACARGcopy( SACt_sacprelude_p__SACarg);
extern void SACARGfree( SACt_sacprelude_p__SACarg);

typedef SAC_hidden SACt_World__World;
typedef SAC_hidden SACt_Terminal__Terminal;
typedef SAC_hidden SACt_TermFile__TermFile;
typedef double * SACt_ComplexBasics__complex;
typedef double * SACt_Complex__complex;
typedef SAC_hidden SACt_List__list;
extern void SAC_List_free_list( SACt_List__list);

typedef int SACt_Grey__grey;
typedef int * SACt_Color8__color;
typedef SAC_hidden SACt_String__string;

extern SACt_String__string copy_string( SACt_String__string);
extern void free_string( SACt_String__string);

typedef SAC_hidden SACt_Structures__string;






static void SAC_PF_BeginComm (void) { } static void SAC_PF_EndComm (void) { }
SAC_HM_arena_t SAC_HM_arenas[128][9 + 2] = { { { 0, { {{0, &(SAC_HM_arenas[0][0])}}, {{0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][0].freelist, 131072, 1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, { {{0, &(SAC_HM_arenas[0][1])}}, {{0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][1].freelist, 512, 3 - 1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 2, { {{0, &(SAC_HM_arenas[0][2])}}, {{0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][2].freelist, 512, 5 - 1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 3, { {{0, &(SAC_HM_arenas[0][3])}}, {{0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][3].freelist, 256, 9 - 1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 4, { {{0, &(SAC_HM_arenas[0][4])}}, {{0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][4].freelist, 512, 17 - 1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 5, { {{-1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][5])}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][5].freelist, 2048, 17, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 6, { {{-1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][6])}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][6].freelist, 8196, 129, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 7, { {{-1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][7])}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][7].freelist, 32768, 1025, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 8, { {{-1, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
}}, {{0, &(SAC_HM_arenas[0][8])}}, { { 0, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0) 
# 339 "/home/rubenhensen/sac/a.out.c"
} } }, SAC_HM_arenas[0][8].freelist, 0, 8193, 
# 339 "/home/rubenhensen/sac/a.out.c" 3 4
((void *)0)
# 339 "/home/rubenhensen/sac/a.out.c"
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } } }; const SAC_HM_size_byte_t SAC_HM_initial_master_arena_of_arenas_size = 1048576; const SAC_HM_size_byte_t SAC_HM_initial_worker_arena_of_arenas_size = 65536; const SAC_HM_size_byte_t SAC_HM_initial_top_arena_size = 0; const unsigned int SAC_HM_max_worker_threads = 128 - 1;






extern



void SACprintf_TF (SAC_hidden SACl_FORMAT, ...);

extern



void to_string (SAC_hidden * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, unsigned char * SACl_A, SAC_array_descriptor_t SACl_A__desc, int SACl_LENGTH);

extern



void ARRAYIO__PrintIntArray (SAC_hidden SACl_stream, int SACl_d, int * SACl_s, int * SACl_a);







extern



void SACwf_sacprelude_p__partitionSlicer__i_S__i_S__i_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * * SAC_arg_4__p, SAC_array_descriptor_t * SAC_arg_4__desc__p, int * SACl_min, SAC_array_descriptor_t SACl_min__desc, int * SACl_max, SAC_array_descriptor_t SACl_max__desc, int * SACl_axis, SAC_array_descriptor_t SACl_axis__desc, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc);

extern



void SACwf_sacprelude_p__partitionIntersectMax__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound1, SAC_array_descriptor_t SACl_PWLbound1__desc, int * SACl_ivmin, SAC_array_descriptor_t SACl_ivmin__desc);

extern



void SACwf_sacprelude_p__isPartitionIntersectNull__i_S__i_S__i_S__i_S (
# 386 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 386 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACwf_sacprelude_p__partitionIntersectMin__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound2, SAC_array_descriptor_t SACl_PWLbound2__desc, int * SACl_ivmax, SAC_array_descriptor_t SACl_ivmax__desc);

extern



void SACwf_sacprelude_p__adjustLacFunParams__bl_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 398 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 398 "/home/rubenhensen/sac/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc);

extern



void SACwf__MAIN_CLStdIO__print__i_S (int * SACl_n, SAC_array_descriptor_t SACl_n__desc);

extern



void SACwf__MAIN__main (int * SAC_arg_1__p);

extern



void SACwf_sacprelude_p__prod__i_S (int * SAC_arg_1__p, int * SACl_v, SAC_array_descriptor_t SACl_v__desc);

extern



void SACwf_sacprelude_p__adjustLacFunParamsReshape__bl_S__i_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 422 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 422 "/home/rubenhensen/sac/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc);

extern



void SACwf_sacprelude_p__eq__i_S__i_S (
# 428 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 428 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__f_S__f_S (
# 434 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 434 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, float * SACl_A, SAC_array_descriptor_t SACl_A__desc, float * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__d_S__d_S (
# 440 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 440 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, double * SACl_A, SAC_array_descriptor_t SACl_A__desc, double * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__bl_S__bl_S (
# 446 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 446 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, 
# 446 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 446 "/home/rubenhensen/sac/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 446 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 446 "/home/rubenhensen/sac/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__c_S__c_S (
# 452 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 452 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, unsigned char * SACl_A, SAC_array_descriptor_t SACl_A__desc, unsigned char * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__b_S__b_S (
# 458 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 458 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, byte * SACl_A, SAC_array_descriptor_t SACl_A__desc, byte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__s_S__s_S (
# 464 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 464 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, short * SACl_A, SAC_array_descriptor_t SACl_A__desc, short * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__l_S__l_S (
# 470 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 470 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, long * SACl_A, SAC_array_descriptor_t SACl_A__desc, long * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ll_S__ll_S (
# 476 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 476 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, longlong * SACl_A, SAC_array_descriptor_t SACl_A__desc, longlong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ub_S__ub_S (
# 482 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 482 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ubyte * SACl_A, SAC_array_descriptor_t SACl_A__desc, ubyte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__us_S__us_S (
# 488 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 488 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ushort * SACl_A, SAC_array_descriptor_t SACl_A__desc, ushort * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ui_S__ui_S (
# 494 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 494 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, uint * SACl_A, SAC_array_descriptor_t SACl_A__desc, uint * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ul_S__ul_S (
# 500 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 500 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ulong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__eq__ull_S__ull_S (
# 506 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 506 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ulonglong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulonglong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p__gridFiller__i_S__i_S__i_S__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc, int * SACl_wdth, SAC_array_descriptor_t SACl_wdth__desc, int * SACl_dim, SAC_array_descriptor_t SACl_dim__desc, int * SACl_maxwidth, SAC_array_descriptor_t SACl_maxwidth__desc);

extern



void SACwf_sacprelude_p__isPartitionIntersect1Part__i_S__i_S__i_S__i_S (
# 518 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 518 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACwf_sacprelude_p__partitionMax__i_S__i_S (int * SAC_arg_1__p, int * SACl_x, SAC_array_descriptor_t SACl_x__desc, int * SACl_y, SAC_array_descriptor_t SACl_y__desc);

extern



void SACwf_sacprelude_p__partitionMin__i_S__i_S (int * SAC_arg_1__p, int * SACl_x, SAC_array_descriptor_t SACl_x__desc, int * SACl_y, SAC_array_descriptor_t SACl_y__desc);

extern



void SACwf__MAIN_CLArray___EQ_EQ__i_S__i_S (
# 536 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 536 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACwf_sacprelude_p___PL_PL__i_S (int * SAC_arg_1__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc);

extern



void SACwf_sacprelude_p__sel__i_S__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, int * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__f_S (float * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, float * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__d_S (double * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, double * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__bl_S (
# 566 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 566 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, 
# 566 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 566 "/home/rubenhensen/sac/a.out.c"
* SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__c_S (unsigned char * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, unsigned char * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__b_S (byte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, byte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__s_S (short * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, short * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__l_S (long * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, long * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ll_S (longlong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, longlong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ub_S (ubyte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ubyte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__us_S (ushort * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ushort * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ui_S (uint * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, uint * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ul_S (ulong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACwf_sacprelude_p__sel__i_S__ull_S (ulonglong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulonglong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf__MAIN__main (int * SAC_arg_1__p);

extern



void SACf__MAIN_CL_INIT__init (void);

extern



void SACf__MAIN___rtpf_27_impl_unblock__i_S__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int SACl_od);

extern



void SACf_World_CL_INIT__init_TheWorld__SACt_World__World (SAC_hidden * SACp_OI_object__p, SAC_array_descriptor_t * SACp_OI_object__desc__p);

extern



void SACf_Terminal_CL_INIT__init_TheTerminal__SACt_Terminal__Terminal (SAC_hidden * SACp_OI_object__p, SAC_array_descriptor_t * SACp_OI_object__desc__p);

extern



void SACf_TermFile_CL_INIT__init_stdout__SACt_TermFile__TermFile (SAC_hidden * SACp_OI_object__p, SAC_array_descriptor_t * SACp_OI_object__desc__p);

extern



void SACf_ArrayIO__print__i_P (int * SACl_arr, SAC_array_descriptor_t SACl_arr__desc);

extern



void SACf_ScalarIO__print__i (int SACl_n);

extern



void SACf_ScalarIO__print__bl (
# 680 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 680 "/home/rubenhensen/sac/a.out.c"
SACl_n);

extern



void SACf_ArrayArith___EQ_EQ__i_P__i_P (
# 686 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 686 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_ArrayArith___EQ_EQ__i_P__i (
# 692 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 692 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int SACl_B);

extern



void SACf_ArrayArith___EQ_EQ__i__i_P (
# 698 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 698 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_A, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_ScalarArith___EQ_EQ__i__i (
# 704 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 704 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, int SACl_A, int SACl_B);

extern



void SACf_sacprelude_p__sel__i_X__ull_S (ulonglong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulonglong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ul_S (ulong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ulong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ui_S (uint * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, uint * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__us_S (ushort * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ushort * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ub_S (ubyte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, ubyte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__ll_S (longlong * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, longlong * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__l_S (long * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, long * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__s_S (short * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, short * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__b_S (byte * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, byte * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__c_S (unsigned char * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, unsigned char * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__bl_S (
# 770 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 770 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, 
# 770 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 770 "/home/rubenhensen/sac/a.out.c"
* SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__d_S (double * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, double * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__f_S (float * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, float * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__sel__i_X__i_S (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idx, SAC_array_descriptor_t SACl_idx__desc, int * SACl_array, SAC_array_descriptor_t SACl_array__desc);

extern



void SACf_sacprelude_p__eq__ull_S__ull_S (
# 794 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 794 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ulonglong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulonglong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ul_S__ul_S (
# 800 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 800 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ulong * SACl_A, SAC_array_descriptor_t SACl_A__desc, ulong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ui_S__ui_S (
# 806 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 806 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, uint * SACl_A, SAC_array_descriptor_t SACl_A__desc, uint * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__us_S__us_S (
# 812 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 812 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ushort * SACl_A, SAC_array_descriptor_t SACl_A__desc, ushort * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ub_S__ub_S (
# 818 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 818 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, ubyte * SACl_A, SAC_array_descriptor_t SACl_A__desc, ubyte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__ll_S__ll_S (
# 824 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 824 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, longlong * SACl_A, SAC_array_descriptor_t SACl_A__desc, longlong * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__l_S__l_S (
# 830 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 830 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, long * SACl_A, SAC_array_descriptor_t SACl_A__desc, long * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__s_S__s_S (
# 836 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 836 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, short * SACl_A, SAC_array_descriptor_t SACl_A__desc, short * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__b_S__b_S (
# 842 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 842 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, byte * SACl_A, SAC_array_descriptor_t SACl_A__desc, byte * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__c_S__c_S (
# 848 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 848 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, unsigned char * SACl_A, SAC_array_descriptor_t SACl_A__desc, unsigned char * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__bl_S__bl_S (
# 854 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 854 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, 
# 854 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 854 "/home/rubenhensen/sac/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 854 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 854 "/home/rubenhensen/sac/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__d_S__d_S (
# 860 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 860 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, double * SACl_A, SAC_array_descriptor_t SACl_A__desc, double * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__f_S__f_S (
# 866 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 866 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, float * SACl_A, SAC_array_descriptor_t SACl_A__desc, float * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__eq__i_S__i_S (
# 872 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 872 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p__adjustLacFunParams__bl_S__i_S__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 878 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 878 "/home/rubenhensen/sac/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc);

extern



void SACf_sacprelude_p__adjustLacFunParamsReshape__bl_S__i_S__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 884 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 884 "/home/rubenhensen/sac/a.out.c"
* SACl_p, SAC_array_descriptor_t SACl_p__desc, int * SACl_i, SAC_array_descriptor_t SACl_i__desc, int * SACl_iv, SAC_array_descriptor_t SACl_iv__desc, int * SACl_shp, SAC_array_descriptor_t SACl_shp__desc);

extern



void SACf_sacprelude_p__isPartitionIntersectNull__i_X__i_X__i_X__i_X (
# 890 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 890 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__isPartitionIntersectNull__i__i__i_X__i_X (
# 896 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 896 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_idxmin, int SACl_idxmax, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__partitionMin__i__i (int * SAC_arg_1__p, int SACl_x, int SACl_y);

extern



void SACf_sacprelude_p__partitionMax__i__i (int * SAC_arg_1__p, int SACl_x, int SACl_y);

extern



void SACf_sacprelude_p__isPartitionIntersect1Part__i_X__i_X__i_X__i_X (
# 914 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 914 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_idxmin, SAC_array_descriptor_t SACl_idxmin__desc, int * SACl_idxmax, SAC_array_descriptor_t SACl_idxmax__desc, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__isPartitionIntersect1Part__i__i__i_X__i_X (
# 920 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 920 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int SACl_idxmin, int SACl_idxmax, int * SACl_bound1, SAC_array_descriptor_t SACl_bound1__desc, int * SACl_bound2, SAC_array_descriptor_t SACl_bound2__desc);

extern



void SACf_sacprelude_p__partitionIntersectMax__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound1, SAC_array_descriptor_t SACl_PWLbound1__desc, int * SACl_ivmin, SAC_array_descriptor_t SACl_ivmin__desc);

extern



void SACf_sacprelude_p__partitionIntersectMax__i_X__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound1, SAC_array_descriptor_t SACl_PWLbound1__desc, int SACl_ivmin);

extern



void SACf_sacprelude_p__partitionIntersectMin__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound2, SAC_array_descriptor_t SACl_PWLbound2__desc, int * SACl_ivmax, SAC_array_descriptor_t SACl_ivmax__desc);

extern



void SACf_sacprelude_p__partitionIntersectMin__i_X__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_PWLbound2, SAC_array_descriptor_t SACl_PWLbound2__desc, int SACl_ivmax);

extern



void SACf_sacprelude_p__prod__i_X (int * SAC_arg_1__p, int * SACl_v, SAC_array_descriptor_t SACl_v__desc);

extern



void SACf_sacprelude_p__partitionSlicer__i_X__i_X__i__i_X__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * * SAC_arg_4__p, SAC_array_descriptor_t * SAC_arg_4__desc__p, int * SACl_min, SAC_array_descriptor_t SACl_min__desc, int * SACl_max, SAC_array_descriptor_t SACl_max__desc, int SACl_axis, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc);

extern



void SACf_sacprelude_p__gridFiller__i_X__i_X__i_X__i__i_X (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * * SAC_arg_2__p, SAC_array_descriptor_t * SAC_arg_2__desc__p, int * * SAC_arg_3__p, SAC_array_descriptor_t * SAC_arg_3__desc__p, int * SACl_lb, SAC_array_descriptor_t SACl_lb__desc, int * SACl_ub, SAC_array_descriptor_t SACl_ub__desc, int * SACl_wdth, SAC_array_descriptor_t SACl_wdth__desc, int SACl_dim, int * SACl_maxwidth, SAC_array_descriptor_t SACl_maxwidth__desc);

extern



void SACf_sacprelude_p___PL_PL__i (int * SAC_arg_1__p, int SACl_a);

extern



void SACf__MAIN___rtpf_13_impl_block__i_X_X__i_0 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc);

extern



void SACf__MAIN___rtpf_13_impl_block__i_X_X__i_1 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_s, SAC_array_descriptor_t SACl_s__desc);

extern



void SACf__MAIN_CLArray___EQ_EQ__i_X__i_X (
# 986 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 986 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf__MAIN_CLArray___EQ_EQ__i_X__i (
# 992 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 992 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int SACl_B);

extern



void SACf__MAIN___rtpf_13_impl_block__i_X_X__i_2 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_s, SAC_array_descriptor_t SACl_s__desc);

extern



void SACof__MAIN_CLStdIO__print__i_X_X (int * SACl_arr, SAC_array_descriptor_t SACl_arr__desc);

extern



void SACf_ArrayArith___AM__bl_P__bl_P (
# 1010 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1010 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 1010 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1010 "/home/rubenhensen/sac/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 1010 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1010 "/home/rubenhensen/sac/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_ArrayArith___AM__bl_P__bl (
# 1016 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1016 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 1016 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1016 "/home/rubenhensen/sac/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 1016 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1016 "/home/rubenhensen/sac/a.out.c"
SACl_B);

extern



void SACf_ArrayArith___AM__bl__bl_P (
# 1022 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1022 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 1022 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1022 "/home/rubenhensen/sac/a.out.c"
SACl_A, 
# 1022 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1022 "/home/rubenhensen/sac/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_ScalarArith___AM__bl__bl (
# 1028 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1028 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, 
# 1028 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1028 "/home/rubenhensen/sac/a.out.c"
SACl_A, 
# 1028 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1028 "/home/rubenhensen/sac/a.out.c"
SACl_B);

extern



void SACwf_ArrayArith___AM__bl_S__bl_S (
# 1034 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1034 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, 
# 1034 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1034 "/home/rubenhensen/sac/a.out.c"
* SACl_A, SAC_array_descriptor_t SACl_A__desc, 
# 1034 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1034 "/home/rubenhensen/sac/a.out.c"
* SACl_B, SAC_array_descriptor_t SACl_B__desc);

extern



void SACf_sacprelude_p___ST__i__i (int * SAC_arg_1__p, int SACl_a, int SACl_b);

extern



void SACf_sacprelude_p__and__bl__bl (
# 1046 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1046 "/home/rubenhensen/sac/a.out.c"
* SAC_arg_1__p, 
# 1046 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1046 "/home/rubenhensen/sac/a.out.c"
SACl_a, 
# 1046 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1046 "/home/rubenhensen/sac/a.out.c"
SACl_b);
# 1057 "/home/rubenhensen/sac/a.out.c"
extern SAC_hidden SACo_World__TheWorld;
extern SAC_array_descriptor_t SACo_World__TheWorld__desc;





extern SAC_hidden SACo_Terminal__TheTerminal;
extern SAC_array_descriptor_t SACo_Terminal__TheTerminal__desc;





extern SAC_hidden SACo_TermFile__stdout;
extern SAC_array_descriptor_t SACo_TermFile__stdout__desc;

# 1090 "/home/rubenhensen/sac/a.out.c"
void SACwf__MAIN_CLStdIO__print__i_S (int * SACl_n, SAC_array_descriptor_t SACl_n__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_42018_SACl_n;
    SAC_array_descriptor_t _tcp_42018_SACl_n__desc = 
# 1100 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1100 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42018_SACl_n__shp0;
    int _tcp_42018_SACl_n__shp1;
    int _tcp_42018_SACl_n__sz;
    const int _tcp_42018_SACl_n__dim = 2;




    int SACp_pinl_41789__emal_40310__cwc_746;
   
   




    
# 1116 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1116 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41788__emal_40309__cwc_750;
   
   




    int SACp_pinl_41785__emal_40308__cwc_751;
   
   




    
# 1130 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1130 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41784__emal_40307__cwc_753;
   
   




    int SACp_pinl_41783__emal_40306__asd_40286_n;
   
   




    int SACp_emal_40305__cwc_754;
   
   




    
# 1151 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1151 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40304__cwc_758;
   
   





    int SACl_n__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))[4]);
    int SACl_n__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_40305__cwc_754 = SACl_n__dim; }; }
    ; ; { SACp_emal_40304__cwc_758 = (SACp_emal_40305__cwc_754) == (0); };
    { ; ; }
    if (SACp_emal_40304__cwc_758)
    {
      { ; ; }
      { if (!((SACl_n__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_41783__emal_40306__asd_40286_n = ( SACl_n[0]); } }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_n); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))); } } } } else { } }



      SACf_ScalarIO__print__i (SACp_pinl_41783__emal_40306__asd_40286_n);

    }
    else
    {
      { ; ; }
      { { SACp_pinl_41785__emal_40308__cwc_751 = SACl_n__dim; }; }
      ; ; { SACp_pinl_41784__emal_40307__cwc_753 = (SACp_pinl_41785__emal_40308__cwc_751) > (0); };
      { ; ; }
      if (SACp_pinl_41784__emal_40307__cwc_753)
      {
        { ; ; }
        { { SACp_pinl_41789__emal_40310__cwc_746 = SACl_n__dim; }; }
        ; ; { SACp_pinl_41788__emal_40309__cwc_750 = (SACp_pinl_41789__emal_40310__cwc_746) == (2); };
        { ; ; }
        if (SACp_pinl_41788__emal_40309__cwc_750)
        {
          { ; ; }



          if (!((_tcp_42018_SACl_n__dim == SACl_n__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib/src/stdio/ScalarIO.sac", 281, 1, "Assignment with incompatible types found"); };
          _tcp_42018_SACl_n__desc = SACl_n__desc;
          _tcp_42018_SACl_n__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))[(6 + (0))]);
          _tcp_42018_SACl_n__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACl_n__desc) & (-1 ^ (3))))[(6 + (1))]);
          _tcp_42018_SACl_n__sz = SACl_n__sz;
          ;
          { _tcp_42018_SACl_n = SACl_n; }




          SACof__MAIN_CLStdIO__print__i_X_X (_tcp_42018_SACl_n, _tcp_42018_SACl_n__desc);

        }
        else
        {
          { ; ; }



          SACf_ArrayIO__print__i_P (SACl_n, SACl_n__desc);

        }
      }
      else
      {
        { ; ; }



        SAC_RuntimeError_Mult( 5, "No appropriate instance of function found:" "\n***   _MAIN:StdIO::print :: Terminal::Terminal TermFile::TermFile int[*] -> Terminal::Terminal TermFile::TermFile \n*** instances present:\n***   StdIO::print :: Terminal::Terminal TermFile::TermFile int -> Terminal::Terminal TermFile::TermFile \n***   StdIO::print :: Terminal::Terminal TermFile::TermFile int[+] -> Terminal::Terminal TermFile::TermFile \n***   _MAIN:StdIO::print :: Terminal::Terminal TermFile::TermFile int[.,.] -> Terminal::Terminal TermFile::TermFile ", "shapes of arguments:", "  []", "  []", "  %s", SAC_PrintShape( SACl_n__desc));

      }
    }



    return;
   
  }



}
}
# 1250 "/home/rubenhensen/sac/a.out.c"
void SACwf__MAIN__main (int * SAC_arg_1__p) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int SACp_cwc_840;
   
   


   



    SACf__MAIN__main (&SACp_cwc_840);




    ;




    { *SAC_arg_1__p = SACp_cwc_840; }
    return;
   
  }



}
}
# 1297 "/home/rubenhensen/sac/a.out.c"
void SACwf__MAIN_CLArray___EQ_EQ__i_S__i_S (
# 1297 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 1297 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_42017_SACl_B;
    SAC_array_descriptor_t _tcp_42017_SACl_B__desc = 
# 1307 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1307 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42017_SACl_B__shp0;
    int _tcp_42017_SACl_B__sz;
    const int _tcp_42017_SACl_B__dim = 1;




    int * _tcp_42016_SACl_A;
    SAC_array_descriptor_t _tcp_42016_SACl_A__desc = 
# 1316 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1316 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42016_SACl_A__shp0;
    int _tcp_42016_SACl_A__sz;
    const int _tcp_42016_SACl_A__dim = 1;




    
# 1324 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1324 "/home/rubenhensen/sac/a.out.c"
   * _tcp_42015_SACp_cwc_1304;
    SAC_array_descriptor_t _tcp_42015_SACp_cwc_1304__desc = 
# 1325 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1325 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42015_SACp_cwc_1304__shp0;
    int _tcp_42015_SACp_cwc_1304__sz;
    const int _tcp_42015_SACp_cwc_1304__dim = 1;




    int * _tcp_42014_SACl_A;
    SAC_array_descriptor_t _tcp_42014_SACl_A__desc = 
# 1334 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1334 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42014_SACl_A__shp0;
    int _tcp_42014_SACl_A__sz;
    const int _tcp_42014_SACl_A__dim = 1;




    
# 1342 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1342 "/home/rubenhensen/sac/a.out.c"
   * _tcp_42013_SACp_cwc_1304;
    SAC_array_descriptor_t _tcp_42013_SACp_cwc_1304__desc = 
# 1343 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1343 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42013_SACp_cwc_1304__shp0;
    int _tcp_42013_SACp_cwc_1304__sz;
    const int _tcp_42013_SACp_cwc_1304__dim = 1;




    int SACp_pinl_41945__emal_40327__cwc_1306;
   
   




    
# 1358 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1358 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41944__emal_40326__cwc_1309;
   
   




    int SACp_pinl_41941__emal_40325__cwc_1310;
   
   




    
# 1372 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1372 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41940__emal_40324__cwc_1312;
   
   




    int SACp_pinl_41939__emal_40323__asd_40285_B;
   
   




    int SACp_pinl_41935__emal_40332__cwc_1319;
   
   




    
# 1393 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1393 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41934__emal_40331__cwc_1322;
   
   




    int SACp_pinl_41931__emal_40330__cwc_1323;
   
   




    
# 1407 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1407 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41930__emal_40329__cwc_1325;
   
   




    int SACp_pinl_41929__emal_40328__asd_40284_B;
   
   




    int SACp_pinl_41925__emal_40322__cwc_1313;
   
   




    
# 1428 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1428 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41924__emal_40321__cwc_1316;
   
   




    int SACp_pinl_41923__emal_40320__cwc_1326;
   
   




    
# 1442 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1442 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41922__emal_40319__cwc_1329;
   
   




    int SACp_pinl_41917__emal_40318__cwc_1317;
   
   




    
# 1456 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1456 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41916__emal_40317__cwc_1331;
   
   




    int SACp_pinl_41913__emal_40338__asd_40280_A;
   
   




    int SACp_pinl_41911__emal_40337__cwc_1337;
   
   




    
# 1477 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1477 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41910__emal_40336__cwc_1339;
   
   




    int SACp_pinl_41909__emal_40335__asd_40283_B;
   
   




    int SACp_pinl_41908__emal_40334__asd_40282_A;
   
   




    
# 1498 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1498 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_41907__emal_40333__asd_40281__cwc_1341;
    SAC_array_descriptor_t SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc = 
# 1499 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1499 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__sz = 0;
    int SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__dim = 0;




    
# 1506 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1506 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41901__cwc_1341;
   
   




    int SACp_pinl_41900__emal_40316__cwc_1332;
   
   




    
# 1520 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1520 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41899__emal_40315__cwc_1334;
   
   




    int SACp_pinl_41898__emal_40314__cwc_1340;
   
   




    
# 1534 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1534 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41897__emal_40313__cwc_1343;
   
   




    int SACp_emal_40312__cwc_1335;
   
   




    
# 1548 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1548 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40311__cwc_1345;
   
   




    
# 1555 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1555 "/home/rubenhensen/sac/a.out.c"
   * SACp_cwc_1304;
    SAC_array_descriptor_t SACp_cwc_1304__desc = 
# 1556 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1556 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_cwc_1304__sz = 0;
    int SACp_cwc_1304__dim = 0;





    int SACl_B__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[4]);
    int SACl_B__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[3]);




    int SACl_A__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[4]);
    int SACl_A__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[3]);

   
    { { SACp_emal_40312__cwc_1335 = SACl_A__dim; }; }
    ; ; { SACp_emal_40311__cwc_1345 = (SACp_emal_40312__cwc_1335) == (0); };
    { ; ; }
    if (SACp_emal_40311__cwc_1345)
    {
      { ; ; }
      { { SACp_pinl_41898__emal_40314__cwc_1340 = SACl_B__dim; }; }
      ; ; { SACp_pinl_41897__emal_40313__cwc_1343 = (SACp_pinl_41898__emal_40314__cwc_1340) == (0); };
      { ; ; }
      if (SACp_pinl_41897__emal_40313__cwc_1343)
      {
        { ; ; }
        { if (!((SACl_B__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_41909__emal_40335__asd_40283_B = ( SACl_B[0]); } }
        { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_B); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))); } } } } else { } }
        { if (!((SACl_A__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_41908__emal_40334__asd_40282_A = ( SACl_A[0]); } }
        { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_A); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))); } } } } else { } }



        SACf_ScalarArith___EQ_EQ__i__i (&SACp_pinl_41901__cwc_1341, SACp_pinl_41908__emal_40334__asd_40282_A, SACp_pinl_41909__emal_40335__asd_40283_B);




        ;

        { { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_pinl_41907__emal_40333__asd_40281__cwc_1341"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 1600 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 1600 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1600 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 1600 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1600 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 1600 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 1600 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 1600, __extension__ __PRETTY_FUNCTION__); }))
# 1600 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc) & (-1 ^ (3))))[3]) = SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__dim = 0; }



        if (!((SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__dim == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 46753, "Assignment with incompatible types found"); };
        {
          int SAC_i;
          int SAC_size = 1;
          (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc) & (-1 ^ (3))))[4]) = SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__sz = SAC_size * 1;
          if (!((SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 46753, "Array with size <0 found!"); };
        }

        { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 1612 "/home/rubenhensen/sac/a.out.c" 3 4
       ((void) sizeof ((
# 1612 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1612 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ? 1 : 0), __extension__ ({ if (
# 1612 "/home/rubenhensen/sac/a.out.c"
       SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 1612 "/home/rubenhensen/sac/a.out.c" 3 4
       ) ; else __assert_fail (
# 1612 "/home/rubenhensen/sac/a.out.c"
       "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 1612 "/home/rubenhensen/sac/a.out.c" 3 4
       , "/home/rubenhensen/sac/a.out.c", 1612, __extension__ __PRETTY_FUNCTION__); }))
# 1612 "/home/rubenhensen/sac/a.out.c"
       ; SACp_pinl_41907__emal_40333__asd_40281__cwc_1341 = (
# 1612 "/home/rubenhensen/sac/a.out.c" 3 4
       _Bool 
# 1612 "/home/rubenhensen/sac/a.out.c"
       *)SAC_HM_MallocAnyChunk_st (SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__sz * sizeof (*SACp_pinl_41907__emal_40333__asd_40281__cwc_1341)); break; case SAC_HM_multi_threaded: SACp_pinl_41907__emal_40333__asd_40281__cwc_1341 = (
# 1612 "/home/rubenhensen/sac/a.out.c" 3 4
       _Bool 
# 1612 "/home/rubenhensen/sac/a.out.c"
       *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__sz * sizeof (*SACp_pinl_41907__emal_40333__asd_40281__cwc_1341), 0); break; case SAC_HM_any_threaded: SACp_pinl_41907__emal_40333__asd_40281__cwc_1341 = (
# 1612 "/home/rubenhensen/sac/a.out.c" 3 4
       _Bool 
# 1612 "/home/rubenhensen/sac/a.out.c"
       *)SAC_HM_MallocAnyChunk_at (SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__sz * sizeof (*SACp_pinl_41907__emal_40333__asd_40281__cwc_1341), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc) & (-1 ^ (3))))[1]) = 0; } }
        { if (!((SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_41907__emal_40333__asd_40281__cwc_1341[0] = SACp_pinl_41901__cwc_1341; } }
        { ; ; }



        SACp_cwc_1304__desc = SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__desc;
        SACp_cwc_1304__sz = SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__sz;
        SACp_cwc_1304__dim = SACp_pinl_41907__emal_40333__asd_40281__cwc_1341__dim;
        ;
        { SACp_cwc_1304 = SACp_pinl_41907__emal_40333__asd_40281__cwc_1341; }

      }
      else
      {
        { ; ; }
        { { SACp_pinl_41911__emal_40337__cwc_1337 = SACl_B__dim; }; }
        ; ; { SACp_pinl_41910__emal_40336__cwc_1339 = (SACp_pinl_41911__emal_40337__cwc_1337) > (0); };
        { ; ; }
        if (SACp_pinl_41910__emal_40336__cwc_1339)
        {
          { ; ; }
          { if (!((SACl_A__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_41913__emal_40338__asd_40280_A = ( SACl_A[0]); } }
          { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_A); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))); } } } } else { } }



          SACf_ArrayArith___EQ_EQ__i__i_P (&SACp_cwc_1304, &SACp_cwc_1304__desc, SACp_pinl_41913__emal_40338__asd_40280_A, SACl_B, SACl_B__desc);




          SACp_cwc_1304__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[4]);
          SACp_cwc_1304__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[3]);

        }
        else
        {
          { ; ; }



          SAC_RuntimeError_Mult( 4, "No appropriate instance of function found:" "\n***   _MAIN:Array::== :: int[*] int[*] -> bool[*] \n*** instances present:\n***   ArrayArith::== :: int[+] int[+] -> bool[+] \n***   ArrayArith::== :: int[+] int -> bool[+] \n***   ArrayArith::== :: int int[+] -> bool[+] \n***   ScalarArith::== :: int int -> bool \n***   _MAIN:Array::== :: int[.] int -> bool[.] \n***   _MAIN:Array::== :: int[.] int[.] -> bool[.] ", "shapes of arguments:", "  %s", SAC_PrintShape( SACl_A__desc), "  %s", SAC_PrintShape( SACl_B__desc));

        }
      }
    }
    else
    {
      { ; ; }
      { { SACp_pinl_41900__emal_40316__cwc_1332 = SACl_A__dim; }; }
      ; ; { SACp_pinl_41899__emal_40315__cwc_1334 = (SACp_pinl_41900__emal_40316__cwc_1332) > (0); };
      { ; ; }
      if (SACp_pinl_41899__emal_40315__cwc_1334)
      {
        { ; ; }
        { { SACp_pinl_41917__emal_40318__cwc_1317 = SACl_A__dim; }; }
        ; ; { SACp_pinl_41916__emal_40317__cwc_1331 = (SACp_pinl_41917__emal_40318__cwc_1317) == (1); };
        { ; ; }
        if (SACp_pinl_41916__emal_40317__cwc_1331)
        {
          { ; ; }
          { { SACp_pinl_41923__emal_40320__cwc_1326 = SACl_B__dim; }; }
          ; ; { SACp_pinl_41922__emal_40319__cwc_1329 = (SACp_pinl_41923__emal_40320__cwc_1326) == (0); };
          { ; ; }
          if (SACp_pinl_41922__emal_40319__cwc_1329)
          {
            { ; ; }
            { if (!((SACl_B__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_41929__emal_40328__asd_40284_B = ( SACl_B[0]); } }
            { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_B); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))); } } } } else { } }



            if (!((_tcp_42014_SACl_A__dim == SACl_A__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 46753, "Assignment with incompatible types found"); };
            _tcp_42014_SACl_A__desc = SACl_A__desc;
            _tcp_42014_SACl_A__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[(6 + (0))]);
            _tcp_42014_SACl_A__sz = SACl_A__sz;
            ;
            { _tcp_42014_SACl_A = SACl_A; }




            SACf__MAIN_CLArray___EQ_EQ__i_X__i (&_tcp_42013_SACp_cwc_1304, &_tcp_42013_SACp_cwc_1304__desc, _tcp_42014_SACl_A, _tcp_42014_SACl_A__desc, SACp_pinl_41929__emal_40328__asd_40284_B);




            _tcp_42013_SACp_cwc_1304__shp0 = (((SAC_array_descriptor_t) (((intptr_t)_tcp_42013_SACp_cwc_1304__desc) & (-1 ^ (3))))[(6 + (0))]);
            _tcp_42013_SACp_cwc_1304__sz = (((SAC_array_descriptor_t) (((intptr_t)_tcp_42013_SACp_cwc_1304__desc) & (-1 ^ (3))))[4]);




            SACp_cwc_1304__desc = _tcp_42013_SACp_cwc_1304__desc;
            SACp_cwc_1304__sz = _tcp_42013_SACp_cwc_1304__sz;
            SACp_cwc_1304__dim = _tcp_42013_SACp_cwc_1304__dim;
            (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[3]) = _tcp_42013_SACp_cwc_1304__dim;
            { SACp_cwc_1304 = _tcp_42013_SACp_cwc_1304; }

          }
          else
          {
            { ; ; }
            { { SACp_pinl_41931__emal_40330__cwc_1323 = SACl_B__dim; }; }
            ; ; { SACp_pinl_41930__emal_40329__cwc_1325 = (SACp_pinl_41931__emal_40330__cwc_1323) > (0); };
            { ; ; }
            if (SACp_pinl_41930__emal_40329__cwc_1325)
            {
              { ; ; }
              { { SACp_pinl_41935__emal_40332__cwc_1319 = SACl_B__dim; }; }
              ; ; { SACp_pinl_41934__emal_40331__cwc_1322 = (SACp_pinl_41935__emal_40332__cwc_1319) == (1); };
              { ; ; }
              if (SACp_pinl_41934__emal_40331__cwc_1322)
              {
                { ; ; }



                if (!((_tcp_42017_SACl_B__dim == SACl_B__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 46753, "Assignment with incompatible types found"); };
                _tcp_42017_SACl_B__desc = SACl_B__desc;
                _tcp_42017_SACl_B__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[(6 + (0))]);
                _tcp_42017_SACl_B__sz = SACl_B__sz;
                ;
                { _tcp_42017_SACl_B = SACl_B; }




                if (!((_tcp_42016_SACl_A__dim == SACl_A__dim))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 46753, "Assignment with incompatible types found"); };
                _tcp_42016_SACl_A__desc = SACl_A__desc;
                _tcp_42016_SACl_A__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[(6 + (0))]);
                _tcp_42016_SACl_A__sz = SACl_A__sz;
                ;
                { _tcp_42016_SACl_A = SACl_A; }




                SACf__MAIN_CLArray___EQ_EQ__i_X__i_X (&_tcp_42015_SACp_cwc_1304, &_tcp_42015_SACp_cwc_1304__desc, _tcp_42016_SACl_A, _tcp_42016_SACl_A__desc, _tcp_42017_SACl_B, _tcp_42017_SACl_B__desc);




                _tcp_42015_SACp_cwc_1304__shp0 = (((SAC_array_descriptor_t) (((intptr_t)_tcp_42015_SACp_cwc_1304__desc) & (-1 ^ (3))))[(6 + (0))]);
                _tcp_42015_SACp_cwc_1304__sz = (((SAC_array_descriptor_t) (((intptr_t)_tcp_42015_SACp_cwc_1304__desc) & (-1 ^ (3))))[4]);




                SACp_cwc_1304__desc = _tcp_42015_SACp_cwc_1304__desc;
                SACp_cwc_1304__sz = _tcp_42015_SACp_cwc_1304__sz;
                SACp_cwc_1304__dim = _tcp_42015_SACp_cwc_1304__dim;
                (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[3]) = _tcp_42015_SACp_cwc_1304__dim;
                { SACp_cwc_1304 = _tcp_42015_SACp_cwc_1304; }

              }
              else
              {
                { ; ; }



                SACf_ArrayArith___EQ_EQ__i_P__i_P (&SACp_cwc_1304, &SACp_cwc_1304__desc, SACl_A, SACl_A__desc, SACl_B, SACl_B__desc);




                SACp_cwc_1304__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_1304__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[3]);

              }
            }
            else
            {
              { ; ; }



              SAC_RuntimeError_Mult( 4, "No appropriate instance of function found:" "\n***   _MAIN:Array::== :: int[*] int[*] -> bool[*] \n*** instances present:\n***   ArrayArith::== :: int[+] int[+] -> bool[+] \n***   ArrayArith::== :: int[+] int -> bool[+] \n***   ArrayArith::== :: int int[+] -> bool[+] \n***   ScalarArith::== :: int int -> bool \n***   _MAIN:Array::== :: int[.] int -> bool[.] \n***   _MAIN:Array::== :: int[.] int[.] -> bool[.] ", "shapes of arguments:", "  %s", SAC_PrintShape( SACl_A__desc), "  %s", SAC_PrintShape( SACl_B__desc));

            }
          }
        }
        else
        {
          { ; ; }
          { { SACp_pinl_41925__emal_40322__cwc_1313 = SACl_B__dim; }; }
          ; ; { SACp_pinl_41924__emal_40321__cwc_1316 = (SACp_pinl_41925__emal_40322__cwc_1313) == (0); };
          { ; ; }
          if (SACp_pinl_41924__emal_40321__cwc_1316)
          {
            { ; ; }
            { if (!((SACl_B__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_pinl_41939__emal_40323__asd_40285_B = ( SACl_B[0]); } }
            { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_B); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))); } } } } else { } }



            SACf_ArrayArith___EQ_EQ__i_P__i (&SACp_cwc_1304, &SACp_cwc_1304__desc, SACl_A, SACl_A__desc, SACp_pinl_41939__emal_40323__asd_40285_B);




            SACp_cwc_1304__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[4]);
            SACp_cwc_1304__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[3]);

          }
          else
          {
            { ; ; }
            { { SACp_pinl_41941__emal_40325__cwc_1310 = SACl_B__dim; }; }
            ; ; { SACp_pinl_41940__emal_40324__cwc_1312 = (SACp_pinl_41941__emal_40325__cwc_1310) > (0); };
            { ; ; }
            if (SACp_pinl_41940__emal_40324__cwc_1312)
            {
              { ; ; }
              { { SACp_pinl_41945__emal_40327__cwc_1306 = SACl_B__dim; }; }
              ; ; { SACp_pinl_41944__emal_40326__cwc_1309 = (SACp_pinl_41945__emal_40327__cwc_1306) == (1); };
              { ; ; }
              if (SACp_pinl_41944__emal_40326__cwc_1309)
              {
                { ; ; }



                SACf_ArrayArith___EQ_EQ__i_P__i_P (&SACp_cwc_1304, &SACp_cwc_1304__desc, SACl_A, SACl_A__desc, SACl_B, SACl_B__desc);




                SACp_cwc_1304__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_1304__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[3]);

              }
              else
              {
                { ; ; }



                SACf_ArrayArith___EQ_EQ__i_P__i_P (&SACp_cwc_1304, &SACp_cwc_1304__desc, SACl_A, SACl_A__desc, SACl_B, SACl_B__desc);




                SACp_cwc_1304__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[4]);
                SACp_cwc_1304__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_cwc_1304__desc) & (-1 ^ (3))))[3]);

              }
            }
            else
            {
              { ; ; }



              SAC_RuntimeError_Mult( 4, "No appropriate instance of function found:" "\n***   _MAIN:Array::== :: int[*] int[*] -> bool[*] \n*** instances present:\n***   ArrayArith::== :: int[+] int[+] -> bool[+] \n***   ArrayArith::== :: int[+] int -> bool[+] \n***   ArrayArith::== :: int int[+] -> bool[+] \n***   ScalarArith::== :: int int -> bool \n***   _MAIN:Array::== :: int[.] int -> bool[.] \n***   _MAIN:Array::== :: int[.] int[.] -> bool[.] ", "shapes of arguments:", "  %s", SAC_PrintShape( SACl_A__desc), "  %s", SAC_PrintShape( SACl_B__desc));

            }
          }
        }
      }
      else
      {
        { ; ; }



        SAC_RuntimeError_Mult( 4, "No appropriate instance of function found:" "\n***   _MAIN:Array::== :: int[*] int[*] -> bool[*] \n*** instances present:\n***   ArrayArith::== :: int[+] int[+] -> bool[+] \n***   ArrayArith::== :: int[+] int -> bool[+] \n***   ArrayArith::== :: int int[+] -> bool[+] \n***   ScalarArith::== :: int int -> bool \n***   _MAIN:Array::== :: int[.] int -> bool[.] \n***   _MAIN:Array::== :: int[.] int[.] -> bool[.] ", "shapes of arguments:", "  %s", SAC_PrintShape( SACl_A__desc), "  %s", SAC_PrintShape( SACl_B__desc));

      }
    }



    { *SAC_arg_1__p = SACp_cwc_1304; *SAC_arg_1__desc__p = SACp_cwc_1304__desc; }
    return;
   
  }



}
}
# 1905 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN__main (int * SAC_arg_1__p) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679;
    SAC_array_descriptor_t _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__desc = 
# 1915 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1915 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__shp0;
    int _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__shp1;
    int _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__sz;
    const int _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__dim = 2;




    int * _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679;
    SAC_array_descriptor_t _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__desc = 
# 1925 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1925 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__shp0;
    int _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__shp1;
    int _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__sz;
    const int _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__dim = 2;




    int * _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679;
    SAC_array_descriptor_t _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__desc = 
# 1935 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1935 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__shp0;
    int _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__shp1;
    int _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__sz;
    const int _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__dim = 2;




    int * _tcp_42009_SACp_emal_40499__pinl_7973__icc_6679;
    SAC_array_descriptor_t _tcp_42009_SACp_emal_40499__pinl_7973__icc_6679__desc = 
# 1945 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1945 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42009_SACp_emal_40499__pinl_7973__icc_6679__sz = 0;
    int _tcp_42009_SACp_emal_40499__pinl_7973__icc_6679__dim = 0;




    int * _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679;
    SAC_array_descriptor_t _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__desc = 
# 1953 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1953 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__shp0;
    int _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__shp1;
    int _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__sz;
    const int _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__dim = 2;




    int * _tcp_42007_SACp_emal_40499__pinl_7973__icc_6679;
    SAC_array_descriptor_t _tcp_42007_SACp_emal_40499__pinl_7973__icc_6679__desc = 
# 1963 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 1963 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42007_SACp_emal_40499__pinl_7973__icc_6679__sz = 0;
    int _tcp_42007_SACp_emal_40499__pinl_7973__icc_6679__dim = 0;




    
# 1970 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1970 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41987__emal_40505__hce_69__SSA0_1;
   
   




    
# 1977 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1977 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41985__emal_40506__hce_70__SSA0_1;
   
   




    
# 1984 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1984 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41983__emal_40508__hce_71__SSA0_1;
   
   




    
# 1991 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1991 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41982__emal_40507__hce_71;
   
   




    
# 1998 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 1998 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41979__emal_40509__hce_53__SSA0_1;
   
   




    
# 2005 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2005 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41977__emal_40510__hce_67__SSA0_1;
   
   




    
# 2012 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2012 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41975__emal_40511__hce_68__SSA0_1;
   
   




    
# 2019 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2019 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41973__emal_40512__hce_69__SSA0_1;
   
   




    
# 2026 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2026 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41971__emal_40513__hce_70__SSA0_1;
   
   




    
# 2033 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2033 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41969__emal_40515__hce_71__SSA0_1;
   
   




    
# 2040 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2040 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41968__emal_40514__hce_71;
   
   




    
# 2047 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2047 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41965__emal_40516__hce_49__SSA0_1;
   
   




    
# 2054 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2054 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41963__emal_40517__hce_52__SSA0_1;
   
   




    
# 2061 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2061 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41961__emal_40518__hce_53__SSA0_1;
   
   




    
# 2068 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2068 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41959__emal_40519__hce_67__SSA0_1;
   
   




    
# 2075 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2075 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41957__emal_40520__hce_68__SSA0_1;
   
   




    
# 2082 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2082 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41955__emal_40521__hce_69__SSA0_1;
   
   




    
# 2089 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2089 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41953__emal_40523__hce_71__SSA0_1;
   
   




    
# 2096 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2096 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41952__emal_40522__hce_71;
   
   




    
# 2103 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2103 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41949__emal_40524__hce_49__SSA0_1;
   
   




    
# 2110 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2110 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_41947__emal_40525__hce_52__SSA0_1;
   
   




    int SACp_emal_40504__isaa_29429__rso_452_TheWorld;
   
   




    
# 2124 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2124 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40503__pinl_7932__icc_3220_pred;
   
   




    int * SACp_emal_40501__pinl_7919__icc_3228;
    SAC_array_descriptor_t SACp_emal_40501__pinl_7919__icc_3228__desc = 
# 2132 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2132 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40501__pinl_7919__icc_3228__shp0 = 240;
    const int SACp_emal_40501__pinl_7919__icc_3228__sz = 240;
    const int SACp_emal_40501__pinl_7919__icc_3228__dim = 1;




    int * SACp_emal_40499__pinl_7973__icc_6679;
    SAC_array_descriptor_t SACp_emal_40499__pinl_7973__icc_6679__desc = 
# 2141 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2141 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40499__pinl_7973__icc_6679__shp0 = 20;
    const int SACp_emal_40499__pinl_7973__icc_6679__shp1 = 12;
    const int SACp_emal_40499__pinl_7973__icc_6679__sz = 240;
    const int SACp_emal_40499__pinl_7973__icc_6679__dim = 2;

    const int SACp_emal_40498__flat_79 = 2;



    int * SACp_emal_40497__flat_78;
    SAC_array_descriptor_t SACp_emal_40497__flat_78__desc = 
# 2152 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2152 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40497__flat_78__shp0 = 2;
    const int SACp_emal_40497__flat_78__sz = 2;
    const int SACp_emal_40497__flat_78__dim = 1;




    int * SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound;
    SAC_array_descriptor_t SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__desc = 
# 2161 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2161 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__shp0 = 1;
    const int SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__sz = 1;
    const int SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim = 1;




    int SACp_emal_40495__pinl_9872__eat_493__SSA6_1;
   
   




    
# 2176 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2176 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40494__pinl_9699__flat_420;
   
   




    int * SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res;
    SAC_array_descriptor_t SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__desc = 
# 2184 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2184 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__shp0 = 4;
    const int SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz = 4;
    const int SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim = 1;




    int * SACp_emal_40492__pinl_9325_shp;
    SAC_array_descriptor_t SACp_emal_40492__pinl_9325_shp__desc = 
# 2193 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2193 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40492__pinl_9325_shp__shp0 = 2;
    const int SACp_emal_40492__pinl_9325_shp__sz = 2;
    const int SACp_emal_40492__pinl_9325_shp__dim = 1;




    int * SACp_emal_40491__pinl_9313__flat_225;
    SAC_array_descriptor_t SACp_emal_40491__pinl_9313__flat_225__desc = 
# 2202 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2202 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40491__pinl_9313__flat_225__shp0 = 2;
    const int SACp_emal_40491__pinl_9313__flat_225__sz = 2;
    const int SACp_emal_40491__pinl_9313__flat_225__dim = 1;




    int SACp_emal_40490__uprf_28654;
   
   




    int SACp_emal_40489__uprf_28659;
   
   




    int SACp_emal_40488__esd_33685;
   
   




    
# 2231 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2231 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40487__uprf_28647;
   
   




    int SACp_emal_40486__esd_33684;
   
   




    
# 2245 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2245 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40485__uprf_28650;
   
   




    
# 2252 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2252 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_40484__pinl_9292__icc_3022;
    SAC_array_descriptor_t SACp_emal_40484__pinl_9292__icc_3022__desc = 
# 2253 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2253 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40484__pinl_9292__icc_3022__shp0 = 2;
    const int SACp_emal_40484__pinl_9292__icc_3022__sz = 2;
    const int SACp_emal_40484__pinl_9292__icc_3022__dim = 1;




    
# 2261 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2261 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40483__pinl_9310__flat_222;
   
   




    int SACp_emal_40482__pinl_9479__icc_6051;
   
   




    int SACp_emal_40481__ctz_21635;
   
   




    
# 2282 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2282 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40480__pinl_9489__flat_3875;
   
   




    int SACp_emal_40479__pinl_9479__icc_6051__SSA7_1;
   
   




    int SACp_emal_40478__ctz_21635__SSA7_1;
   
   




    
# 2303 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2303 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40477__pinl_9489__flat_3875__SSA7_2;
   
   




    int SACp_emal_40475__isaa_29470__pinl_10963__rtpf_29_res;
   
   




    int * SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res;
    SAC_array_descriptor_t SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc = 
# 2318 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2318 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__shp0;
    int SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__sz;
    const int SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim = 1;




    int * SACp_emal_40473__pinl_11000_shp;
    SAC_array_descriptor_t SACp_emal_40473__pinl_11000_shp__desc = 
# 2327 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2327 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40473__pinl_11000_shp__shp0 = 2;
    const int SACp_emal_40473__pinl_11000_shp__sz = 2;
    const int SACp_emal_40473__pinl_11000_shp__dim = 1;




    
# 2335 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2335 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40471__pinl_10981__flat_415;
   
   




    int SACp_emal_40468__pinl_11341__icc_6045;
   
   




    int SACp_emal_40467__ctz_21625;
   
   




    
# 2356 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2356 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40466__pinl_11354__flat_3875;
   
   




    int SACp_emal_40465__pinl_11341__icc_6045__SSA9_1;
   
   




    int SACp_emal_40464__ctz_21625__SSA9_1;
   
   




    
# 2377 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2377 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40463__pinl_11354__flat_3875__SSA9_2;
   
   




    
# 2384 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2384 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40460__pinl_11153__flat_3875;
   
   




    
# 2391 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2391 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40458__pinl_11153__flat_3875__SSA9_2;
   
   




    int * SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res;
    SAC_array_descriptor_t SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__desc = 
# 2399 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2399 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__shp0 = 3;
    const int SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz = 3;
    const int SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim = 1;




    int * SACp_emal_40455__pinl_12216_shp;
    SAC_array_descriptor_t SACp_emal_40455__pinl_12216_shp__desc = 
# 2408 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2408 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40455__pinl_12216_shp__shp0 = 1;
    const int SACp_emal_40455__pinl_12216_shp__sz = 1;
    const int SACp_emal_40455__pinl_12216_shp__dim = 1;




    int * SACp_emal_40454__pinl_12199__flat_217;
    SAC_array_descriptor_t SACp_emal_40454__pinl_12199__flat_217__desc = 
# 2417 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2417 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40454__pinl_12199__flat_217__shp0 = 1;
    const int SACp_emal_40454__pinl_12199__flat_217__sz = 1;
    const int SACp_emal_40454__pinl_12199__flat_217__dim = 1;




    int SACp_emal_40453__uprf_28643;
   
   




    int SACp_emal_40452__esd_33676;
   
   




    
# 2439 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2439 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40451__uprf_28639;
   
   




    
# 2446 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2446 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_40450__pinl_12180__icc_3018;
    SAC_array_descriptor_t SACp_emal_40450__pinl_12180__icc_3018__desc = 
# 2447 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2447 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40450__pinl_12180__icc_3018__shp0 = 1;
    const int SACp_emal_40450__pinl_12180__icc_3018__sz = 1;
    const int SACp_emal_40450__pinl_12180__icc_3018__dim = 1;




    
# 2455 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2455 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40449__pinl_12196__flat_214;
   
   




    int * SACp_emal_40448__pinl_12204__flat_225;
    SAC_array_descriptor_t SACp_emal_40448__pinl_12204__flat_225__desc = 
# 2463 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2463 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40448__pinl_12204__flat_225__shp0 = 2;
    const int SACp_emal_40448__pinl_12204__flat_225__sz = 2;
    const int SACp_emal_40448__pinl_12204__flat_225__dim = 1;




    int * SACp_emal_40447__pinl_12203__flat_224;
    SAC_array_descriptor_t SACp_emal_40447__pinl_12203__flat_224__desc = 
# 2472 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2472 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40447__pinl_12203__flat_224__shp0 = 1;
    const int SACp_emal_40447__pinl_12203__flat_224__sz = 1;
    const int SACp_emal_40447__pinl_12203__flat_224__dim = 1;




    int SACp_emal_40446__uprf_28635;
   
   




    int SACp_emal_40445__esd_33674;
   
   




    
# 2494 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2494 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40444__uprf_28631;
   
   




    
# 2501 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2501 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_40443__pinl_12183__icc_3022;
    SAC_array_descriptor_t SACp_emal_40443__pinl_12183__icc_3022__desc = 
# 2502 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2502 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40443__pinl_12183__icc_3022__shp0 = 1;
    const int SACp_emal_40443__pinl_12183__icc_3022__sz = 1;
    const int SACp_emal_40443__pinl_12183__icc_3022__dim = 1;




    
# 2510 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2510 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40442__pinl_12201__flat_222;
   
   




    int SACp_emal_40441__pinl_12370__icc_6051;
   
   




    int SACp_emal_40440__ctz_21613;
   
   




    
# 2531 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2531 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40439__pinl_12380__flat_3875;
   
   




    int SACp_emal_40438__isaa_29532__pinl_12828__rtpf_29_res;
   
   




    int * SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res;
    SAC_array_descriptor_t SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc = 
# 2546 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2546 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__shp0;
    int SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__sz;
    const int SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim = 1;




    int * SACp_emal_40436__pinl_12865_shp;
    SAC_array_descriptor_t SACp_emal_40436__pinl_12865_shp__desc = 
# 2555 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2555 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40436__pinl_12865_shp__shp0 = 1;
    const int SACp_emal_40436__pinl_12865_shp__sz = 1;
    const int SACp_emal_40436__pinl_12865_shp__dim = 1;




    
# 2563 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2563 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40434__pinl_12846__flat_415;
   
   




    int * SACp_emal_40433__pinl_12852__flat_421;
    SAC_array_descriptor_t SACp_emal_40433__pinl_12852__flat_421__desc = 
# 2571 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2571 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40433__pinl_12852__flat_421__shp0;
    int SACp_emal_40433__pinl_12852__flat_421__sz;
    const int SACp_emal_40433__pinl_12852__flat_421__dim = 1;




    int * SACp_emal_40432__pinl_12851__flat_420;
    SAC_array_descriptor_t SACp_emal_40432__pinl_12851__flat_420__desc = 
# 2580 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2580 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40432__pinl_12851__flat_420__shp0 = 1;
    const int SACp_emal_40432__pinl_12851__flat_420__sz = 1;
    const int SACp_emal_40432__pinl_12851__flat_420__dim = 1;




    int SACp_emal_40431__uprf_34467;
   
   




    
# 2595 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2595 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40429__uprf_34463;
   
   




    
# 2602 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2602 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_40428__pinl_12836__icc_3182;
    SAC_array_descriptor_t SACp_emal_40428__pinl_12836__icc_3182__desc = 
# 2603 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2603 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40428__pinl_12836__icc_3182__shp0 = 1;
    const int SACp_emal_40428__pinl_12836__icc_3182__sz = 1;
    const int SACp_emal_40428__pinl_12836__icc_3182__dim = 1;




    
# 2611 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2611 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40427__pinl_12849__flat_418;
   
   




    int SACp_emal_40425__pinl_13206__icc_6045;
   
   




    int SACp_emal_40424__ctz_21603;
   
   




    
# 2632 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2632 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40423__pinl_13219__flat_3875;
   
   




    
# 2639 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2639 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40421__pinl_13018__flat_3875;
   
   




    int SACp_emal_40420__isaa_29574__flat_88;
   
   




    int * SACp_emal_40419__isaa_29575__flat_88;
    SAC_array_descriptor_t SACp_emal_40419__isaa_29575__flat_88__desc = 
# 2654 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2654 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40419__isaa_29575__flat_88__shp0;
    int SACp_emal_40419__isaa_29575__flat_88__sz;
    const int SACp_emal_40419__isaa_29575__flat_88__dim = 1;




    int * SACp_emal_40418__isaa_29577__pinl_13636__flat_283;
    SAC_array_descriptor_t SACp_emal_40418__isaa_29577__pinl_13636__flat_283__desc = 
# 2663 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2663 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40418__isaa_29577__pinl_13636__flat_283__shp0 = 1;
    const int SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz = 1;
    const int SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim = 1;




    
# 2671 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2671 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40417__pinl_13511__icc_5619_pred;
   
   




    
# 2678 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2678 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40416__uprf_20741;
   
   




    int SACp_emal_40415__uprf_20740;
   
   




    int * SACp_emal_40414__pinl_13602__idc_6817;
    SAC_array_descriptor_t SACp_emal_40414__pinl_13602__idc_6817__desc = 
# 2693 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2693 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40414__pinl_13602__idc_6817__shp0 = 1;
    const int SACp_emal_40414__pinl_13602__idc_6817__sz = 1;
    const int SACp_emal_40414__pinl_13602__idc_6817__dim = 1;




    int SACp_emal_40413__pinl_19663__icc_5140;
   
   




    int SACp_emal_40412__pinl_19666__icc_5146;
   
   




    int * SACp_emal_40409__pinl_13575__icc_6808;
    SAC_array_descriptor_t SACp_emal_40409__pinl_13575__icc_6808__desc = 
# 2716 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2716 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40409__pinl_13575__icc_6808__shp0;
    int SACp_emal_40409__pinl_13575__icc_6808__sz;
    const int SACp_emal_40409__pinl_13575__icc_6808__dim = 1;




    
# 2724 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2724 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40408__pinl_13513__icc_5618_pred;
   
   




    int * SACp_emal_40407__pinl_13535_new_shape;
    SAC_array_descriptor_t SACp_emal_40407__pinl_13535_new_shape__desc = 
# 2732 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2732 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40407__pinl_13535_new_shape__shp0;
    int SACp_emal_40407__pinl_13535_new_shape__sz;
    const int SACp_emal_40407__pinl_13535_new_shape__dim = 1;




    
# 2740 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2740 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40406__pinl_13544__icc_5583_pred;
   
   




    
# 2747 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2747 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40405__pinl_13551__icc_5588_pred;
   
   




    int * SACp_emal_40404__pinl_13533__flat_421;
    SAC_array_descriptor_t SACp_emal_40404__pinl_13533__flat_421__desc = 
# 2755 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2755 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40404__pinl_13533__flat_421__shp0;
    int SACp_emal_40404__pinl_13533__flat_421__sz;
    const int SACp_emal_40404__pinl_13533__flat_421__dim = 1;




    
# 2763 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2763 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40403__pinl_13553__icc_5582_pred;
   
   




    
# 2770 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2770 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40402__pinl_13555__icc_5584_pred;
   
   




    
# 2777 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2777 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40401__pinl_13558__icc_5585_pred;
   
   




    int * SACp_emal_40398__pinl_13537_new_idx;
    SAC_array_descriptor_t SACp_emal_40398__pinl_13537_new_idx__desc = 
# 2785 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2785 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40398__pinl_13537_new_idx__shp0;
    int SACp_emal_40398__pinl_13537_new_idx__sz;
    const int SACp_emal_40398__pinl_13537_new_idx__dim = 1;




    
# 2793 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2793 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40397__pinl_13560__icc_5589_pred;
   
   




    
# 2800 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2800 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40396__pinl_13562__icc_5590_pred;
   
   




    
# 2807 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2807 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40395__pinl_13564__icc_5591_pred;
   
   




    int SACp_emal_40394__ivesli_39695;
   
   




    
# 2821 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2821 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40393__pinl_13522__icc_5594;
   
   




    
# 2828 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2828 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_40392__pinl_13526__icc_5600;
    SAC_array_descriptor_t SACp_emal_40392__pinl_13526__icc_5600__desc = 
# 2829 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2829 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40392__pinl_13526__icc_5600__sz = 0;
    int SACp_emal_40392__pinl_13526__icc_5600__dim = 0;




    
# 2836 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2836 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40391__flat_87;
   
   




    int * SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res;
    SAC_array_descriptor_t SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__desc = 
# 2844 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2844 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__shp0 = 2;
    const int SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz = 2;
    const int SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim = 1;




    int SACp_emal_40389__uprf_28622;
   
   




    int SACp_emal_40388__uprf_28627;
   
   




    int SACp_emal_40387__esd_33665;
   
   




    
# 2873 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2873 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40386__uprf_28615;
   
   




    int SACp_emal_40385__esd_33664;
   
   




    
# 2887 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2887 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40384__uprf_28618;
   
   




    
# 2894 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2894 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_40383__pinl_14301__icc_3018;
    SAC_array_descriptor_t SACp_emal_40383__pinl_14301__icc_3018__desc = 
# 2895 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2895 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40383__pinl_14301__icc_3018__shp0 = 2;
    const int SACp_emal_40383__pinl_14301__icc_3018__sz = 2;
    const int SACp_emal_40383__pinl_14301__icc_3018__dim = 1;




    
# 2903 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2903 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40382__pinl_14317__flat_214;
   
   




    int SACp_emal_40381__isaa_29641__pinl_14949__rtpf_29_res;
   
   




    int * SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res;
    SAC_array_descriptor_t SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc = 
# 2918 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2918 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__shp0;
    int SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__sz;
    const int SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim = 1;




    
# 2926 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2926 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40378__pinl_14967__flat_415;
   
   




    int * SACp_emal_40377__pinl_14972__flat_420;
    SAC_array_descriptor_t SACp_emal_40377__pinl_14972__flat_420__desc = 
# 2934 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2934 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40377__pinl_14972__flat_420__shp0 = 2;
    const int SACp_emal_40377__pinl_14972__flat_420__sz = 2;
    const int SACp_emal_40377__pinl_14972__flat_420__dim = 1;




    int SACp_emal_40376__uprf_34454;
   
   




    int SACp_emal_40375__uprf_34459;
   
   




    
# 2956 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2956 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40373__uprf_34447;
   
   




    
# 2963 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2963 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40371__uprf_34450;
   
   




    
# 2970 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2970 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_40370__pinl_14957__icc_3182;
    SAC_array_descriptor_t SACp_emal_40370__pinl_14957__icc_3182__desc = 
# 2971 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2971 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40370__pinl_14957__icc_3182__shp0 = 2;
    const int SACp_emal_40370__pinl_14957__icc_3182__sz = 2;
    const int SACp_emal_40370__pinl_14957__icc_3182__dim = 1;




    
# 2979 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 2979 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40369__pinl_14970__flat_418;
   
   




    int SACp_emal_40368__isaa_29668__flat_95;
   
   




    int * SACp_emal_40367__isaa_29669__flat_95;
    SAC_array_descriptor_t SACp_emal_40367__isaa_29669__flat_95__desc = 
# 2994 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 2994 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40367__isaa_29669__flat_95__shp0;
    int SACp_emal_40367__isaa_29669__flat_95__sz;
    const int SACp_emal_40367__isaa_29669__flat_95__dim = 1;




    int * SACp_emal_40366__isaa_29671__pinl_15637__flat_283;
    SAC_array_descriptor_t SACp_emal_40366__isaa_29671__pinl_15637__flat_283__desc = 
# 3003 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3003 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40366__isaa_29671__pinl_15637__flat_283__shp0 = 1;
    const int SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz = 1;
    const int SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim = 1;




    
# 3011 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3011 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40365__pinl_15512__icc_5619_pred;
   
   




    
# 3018 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3018 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40364__uprf_20360;
   
   




    int SACp_emal_40363__uprf_20359;
   
   




    int * SACp_emal_40362__pinl_15603__idc_6817;
    SAC_array_descriptor_t SACp_emal_40362__pinl_15603__idc_6817__desc = 
# 3033 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3033 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40362__pinl_15603__idc_6817__shp0 = 1;
    const int SACp_emal_40362__pinl_15603__idc_6817__sz = 1;
    const int SACp_emal_40362__pinl_15603__idc_6817__dim = 1;




    int SACp_emal_40361__pinl_20151__icc_5140;
   
   




    int SACp_emal_40360__pinl_20154__icc_5146;
   
   




    int * SACp_emal_40357__pinl_15576__icc_6808;
    SAC_array_descriptor_t SACp_emal_40357__pinl_15576__icc_6808__desc = 
# 3056 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3056 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40357__pinl_15576__icc_6808__shp0;
    int SACp_emal_40357__pinl_15576__icc_6808__sz;
    const int SACp_emal_40357__pinl_15576__icc_6808__dim = 1;




    
# 3064 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3064 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40356__pinl_15514__icc_5618_pred;
   
   




    int * SACp_emal_40355__pinl_15536_new_shape;
    SAC_array_descriptor_t SACp_emal_40355__pinl_15536_new_shape__desc = 
# 3072 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3072 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40355__pinl_15536_new_shape__shp0;
    int SACp_emal_40355__pinl_15536_new_shape__sz;
    const int SACp_emal_40355__pinl_15536_new_shape__dim = 1;




    
# 3080 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3080 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40354__pinl_15545__icc_5583_pred;
   
   




    
# 3087 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3087 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40353__pinl_15552__icc_5588_pred;
   
   




    int * SACp_emal_40352__pinl_15534__flat_421;
    SAC_array_descriptor_t SACp_emal_40352__pinl_15534__flat_421__desc = 
# 3095 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3095 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40352__pinl_15534__flat_421__shp0;
    int SACp_emal_40352__pinl_15534__flat_421__sz;
    const int SACp_emal_40352__pinl_15534__flat_421__dim = 1;




    
# 3103 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3103 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40351__pinl_15554__icc_5582_pred;
   
   




    
# 3110 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3110 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40350__pinl_15556__icc_5584_pred;
   
   




    
# 3117 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3117 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40349__pinl_15559__icc_5585_pred;
   
   




    int * SACp_emal_40346__pinl_15538_new_idx;
    SAC_array_descriptor_t SACp_emal_40346__pinl_15538_new_idx__desc = 
# 3125 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3125 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40346__pinl_15538_new_idx__shp0;
    int SACp_emal_40346__pinl_15538_new_idx__sz;
    const int SACp_emal_40346__pinl_15538_new_idx__dim = 1;




    
# 3133 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3133 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40345__pinl_15561__icc_5589_pred;
   
   




    
# 3140 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3140 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40344__pinl_15563__icc_5590_pred;
   
   




    
# 3147 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3147 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40343__pinl_15565__icc_5591_pred;
   
   




    int SACp_emal_40342__ivesli_39694;
   
   




    
# 3161 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3161 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40341__pinl_15523__icc_5594;
   
   




    
# 3168 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3168 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_40340__pinl_15527__icc_5600;
    SAC_array_descriptor_t SACp_emal_40340__pinl_15527__icc_5600__desc = 
# 3169 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3169 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40340__pinl_15527__icc_5600__sz = 0;
    int SACp_emal_40340__pinl_15527__icc_5600__dim = 0;




    
# 3176 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3176 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40339__flat_94;
   
   




    
# 3183 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3183 "/home/rubenhensen/sac/a.out.c"
   * SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601;
    SAC_array_descriptor_t SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601__desc = 
# 3184 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3184 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601__sz = 0;
    int SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601__dim = 0;




    
# 3191 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3191 "/home/rubenhensen/sac/a.out.c"
   * SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601;
    SAC_array_descriptor_t SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601__desc = 
# 3192 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3192 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601__sz = 0;
    int SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601__dim = 0;




    int SACp_wlidx_39658__pinl_15527__icc_5600;
   
   




    int SACp_wlidx_39657__pinl_15576__icc_6808;
   
   




    int SACp_wlidx_39656__pinl_13526__icc_5600;
   
   




    int SACp_wlidx_39655__pinl_13575__icc_6808;
   
   




    int SACp_wlidx_39654__pinl_7919__icc_3228;
   
   




    int SACp_pinl_7926_i;
   
   




    int * SACp_pinl_7925__flat_560;
    SAC_array_descriptor_t SACp_pinl_7925__flat_560__desc = 
# 3242 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3242 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_7925__flat_560__shp0 = 1;
    const int SACp_pinl_7925__flat_560__sz = 1;
    const int SACp_pinl_7925__flat_560__dim = 1;




    
# 3250 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3250 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_9331__hce_49;
   
   




    
# 3257 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3257 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_9328__hce_52;
   
   




    int * SACp_pinl_9278__rtpf_15_res;
    SAC_array_descriptor_t SACp_pinl_9278__rtpf_15_res__desc = 
# 3265 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3265 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_9278__rtpf_15_res__shp0;
    int SACp_pinl_9278__rtpf_15_res__shp1;
    int SACp_pinl_9278__rtpf_15_res__shp2;
    int SACp_pinl_9278__rtpf_15_res__shp3;
    int SACp_pinl_9278__rtpf_15_res__sz;
    const int SACp_pinl_9278__rtpf_15_res__dim = 4;




    
# 3276 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3276 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_11005__hce_67;
   
   




    
# 3283 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3283 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_11004__hce_68;
   
   




    
# 3290 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3290 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_11003__hce_69;
   
   




    
# 3297 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3297 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_11001__hce_71;
   
   




    int * SACp_pinl_10963__rtpf_29_res;
    SAC_array_descriptor_t SACp_pinl_10963__rtpf_29_res__desc = 
# 3305 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3305 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_10963__rtpf_29_res__sz = 0;
    int SACp_pinl_10963__rtpf_29_res__dim = 0;




    
# 3312 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3312 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_12222__hce_49;
   
   




    
# 3319 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3319 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_12219__hce_52;
   
   




    
# 3326 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3326 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_12218__hce_53;
   
   




    int * SACp_pinl_12169__rtpf_15_res;
    SAC_array_descriptor_t SACp_pinl_12169__rtpf_15_res__desc = 
# 3334 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3334 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_12169__rtpf_15_res__shp0;
    int SACp_pinl_12169__rtpf_15_res__shp1;
    int SACp_pinl_12169__rtpf_15_res__shp2;
    int SACp_pinl_12169__rtpf_15_res__sz;
    const int SACp_pinl_12169__rtpf_15_res__dim = 3;




    
# 3344 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3344 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_12870__hce_67;
   
   




    
# 3351 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3351 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_12869__hce_68;
   
   




    
# 3358 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3358 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_12868__hce_69;
   
   




    
# 3365 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3365 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_12867__hce_70;
   
   




    
# 3372 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3372 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_12866__hce_71;
   
   




    int * SACp_pinl_12828__rtpf_29_res;
    SAC_array_descriptor_t SACp_pinl_12828__rtpf_29_res__desc = 
# 3380 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3380 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_12828__rtpf_29_res__sz = 0;
    int SACp_pinl_12828__rtpf_29_res__dim = 0;




    int SACp_pinl_13586__eat_6625;
   
   




    int * SACp_pinl_13584_iv;
    SAC_array_descriptor_t SACp_pinl_13584_iv__desc = 
# 3395 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3395 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_13584_iv__shp0 = 1;
    const int SACp_pinl_13584_iv__sz = 1;
    const int SACp_pinl_13584_iv__dim = 1;




    int * SACp_pinl_13536_iv;
    SAC_array_descriptor_t SACp_pinl_13536_iv__desc = 
# 3404 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3404 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_13536_iv__shp0;
    int SACp_pinl_13536_iv__sz;
    const int SACp_pinl_13536_iv__dim = 1;




    
# 3412 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3412 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_13516__ea_6942__flat_6601;
    SAC_array_descriptor_t SACp_pinl_13516__ea_6942__flat_6601__desc = 
# 3413 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3413 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_13516__ea_6942__flat_6601__sz = 0;
    int SACp_pinl_13516__ea_6942__flat_6601__dim = 0;




    int * SACp_pinl_13509_iv;
    SAC_array_descriptor_t SACp_pinl_13509_iv__desc = 
# 3421 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3421 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_13509_iv__shp0;
    int SACp_pinl_13509_iv__sz;
    const int SACp_pinl_13509_iv__dim = 1;




    
# 3429 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3429 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_13503__icc_5622;
    SAC_array_descriptor_t SACp_pinl_13503__icc_5622__desc = 
# 3430 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3430 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_13503__icc_5622__sz = 0;
    int SACp_pinl_13503__icc_5622__dim = 0;




    
# 3437 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3437 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_14339__hce_53;
   
   




    int * SACp_pinl_14290__rtpf_15_res;
    SAC_array_descriptor_t SACp_pinl_14290__rtpf_15_res__desc = 
# 3445 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3445 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_14290__rtpf_15_res__shp0;
    int SACp_pinl_14290__rtpf_15_res__shp1;
    int SACp_pinl_14290__rtpf_15_res__sz;
    const int SACp_pinl_14290__rtpf_15_res__dim = 2;




    
# 3454 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3454 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_14989__hce_69;
   
   




    
# 3461 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3461 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_14988__hce_70;
   
   




    
# 3468 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3468 "/home/rubenhensen/sac/a.out.c"
   SACp_pinl_14987__hce_71;
   
   




    int * SACp_pinl_14949__rtpf_29_res;
    SAC_array_descriptor_t SACp_pinl_14949__rtpf_29_res__desc = 
# 3476 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3476 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_14949__rtpf_29_res__sz = 0;
    int SACp_pinl_14949__rtpf_29_res__dim = 0;




    int SACp_pinl_15587__eat_6625;
   
   




    int * SACp_pinl_15585_iv;
    SAC_array_descriptor_t SACp_pinl_15585_iv__desc = 
# 3491 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3491 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_15585_iv__shp0 = 1;
    const int SACp_pinl_15585_iv__sz = 1;
    const int SACp_pinl_15585_iv__dim = 1;




    int * SACp_pinl_15537_iv;
    SAC_array_descriptor_t SACp_pinl_15537_iv__desc = 
# 3500 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3500 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_15537_iv__shp0;
    int SACp_pinl_15537_iv__sz;
    const int SACp_pinl_15537_iv__dim = 1;




    
# 3508 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3508 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_15517__ea_6942__flat_6601;
    SAC_array_descriptor_t SACp_pinl_15517__ea_6942__flat_6601__desc = 
# 3509 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3509 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_15517__ea_6942__flat_6601__sz = 0;
    int SACp_pinl_15517__ea_6942__flat_6601__dim = 0;




    int * SACp_pinl_15510_iv;
    SAC_array_descriptor_t SACp_pinl_15510_iv__desc = 
# 3517 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3517 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_15510_iv__shp0;
    int SACp_pinl_15510_iv__sz;
    const int SACp_pinl_15510_iv__dim = 1;




    
# 3525 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3525 "/home/rubenhensen/sac/a.out.c"
   * SACp_pinl_15504__icc_5622;
    SAC_array_descriptor_t SACp_pinl_15504__icc_5622__desc = 
# 3526 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3526 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_15504__icc_5622__sz = 0;
    int SACp_pinl_15504__icc_5622__dim = 0;




    int * SACp_flat_97;
    SAC_array_descriptor_t SACp_flat_97__desc = 
# 3534 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3534 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_flat_97__sz = 0;
    int SACp_flat_97__dim = 0;




    
# 3541 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3541 "/home/rubenhensen/sac/a.out.c"
   * SACp_flat_95;
    SAC_array_descriptor_t SACp_flat_95__desc = 
# 3542 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3542 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_flat_95__sz = 0;
    int SACp_flat_95__dim = 0;




    int * SACp_flat_90;
    SAC_array_descriptor_t SACp_flat_90__desc = 
# 3550 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3550 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_flat_90__sz = 0;
    int SACp_flat_90__dim = 0;




    
# 3557 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3557 "/home/rubenhensen/sac/a.out.c"
   * SACp_flat_88;
    SAC_array_descriptor_t SACp_flat_88__desc = 
# 3558 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3558 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_flat_88__sz = 0;
    int SACp_flat_88__dim = 0;




    int * SACp_flat_77;
    SAC_array_descriptor_t SACp_flat_77__desc = 
# 3566 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 3566 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_flat_77__sz = 0;
    int SACp_flat_77__dim = 0;


   
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 4, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_40504__isaa_29429__rso_452_TheWorld = 0; }; }



    SACf__MAIN_CL_INIT__init ();

    { { SACp_emal_40503__pinl_7932__icc_3220_pred = 
# 3586 "/home/rubenhensen/sac/a.out.c" 3 4
   1
# 3586 "/home/rubenhensen/sac/a.out.c"
   ; }; }
    { { if (!((1 == SACp_emal_40501__pinl_7919__icc_3228__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40501__pinl_7919__icc_3228"); }; { { if ((((SACp_emal_40501__pinl_7919__icc_3228__sz * sizeof (*SACp_emal_40501__pinl_7919__icc_3228)) + ((6 + (SACp_emal_40501__pinl_7919__icc_3228__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40501__pinl_7919__icc_3228__sz * sizeof (*SACp_emal_40501__pinl_7919__icc_3228)) + ((6 + (SACp_emal_40501__pinl_7919__icc_3228__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40501__pinl_7919__icc_3228__sz * sizeof (*SACp_emal_40501__pinl_7919__icc_3228)) + ((6 + (SACp_emal_40501__pinl_7919__icc_3228__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40501__pinl_7919__icc_3228 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40501__pinl_7919__icc_3228 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40501__pinl_7919__icc_3228__sz * sizeof (*SACp_emal_40501__pinl_7919__icc_3228)) + ((6 + (SACp_emal_40501__pinl_7919__icc_3228__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40501__pinl_7919__icc_3228 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40501__pinl_7919__icc_3228 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40501__pinl_7919__icc_3228__sz * sizeof (*SACp_emal_40501__pinl_7919__icc_3228)) + ((6 + (SACp_emal_40501__pinl_7919__icc_3228__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40501__pinl_7919__icc_3228__sz * sizeof (*SACp_emal_40501__pinl_7919__icc_3228)) + ((6 + (SACp_emal_40501__pinl_7919__icc_3228__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40501__pinl_7919__icc_3228__sz * sizeof (*SACp_emal_40501__pinl_7919__icc_3228)) + ((6 + (SACp_emal_40501__pinl_7919__icc_3228__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40501__pinl_7919__icc_3228__sz * sizeof (*SACp_emal_40501__pinl_7919__icc_3228)) + ((6 + (SACp_emal_40501__pinl_7919__icc_3228__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40501__pinl_7919__icc_3228__sz * sizeof (*SACp_emal_40501__pinl_7919__icc_3228)) + ((6 + (SACp_emal_40501__pinl_7919__icc_3228__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40501__pinl_7919__icc_3228 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40501__pinl_7919__icc_3228 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40501__pinl_7919__icc_3228 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40501__pinl_7919__icc_3228 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40501__pinl_7919__icc_3228__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40501__pinl_7919__icc_3228, SACp_emal_40501__pinl_7919__icc_3228__sz * sizeof (*SACp_emal_40501__pinl_7919__icc_3228), ((6 + (SACp_emal_40501__pinl_7919__icc_3228__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40501__pinl_7919__icc_3228__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40501__pinl_7919__icc_3228__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40501__pinl_7919__icc_3228__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40501__pinl_7919__icc_3228__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 237, 3, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40501__pinl_7919__icc_3228__shp0 == 240))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 237, 3, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 237, 3, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_40501__pinl_7919__icc_3228_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_40501__pinl_7919__icc_3228_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = 240;




      SACp_wlidx_39654__pinl_7919__icc_3228
        = SAC_schedule_start0 * SAC_SACp_emal_40501__pinl_7919__icc_3228_shpfac0;

      { int SAC_stop_SACp_pinl_7926_i = 240; for (SACp_pinl_7926_i = 0; SACp_pinl_7926_i < 240;) {
     



      if (!((0 == (SACp_emal_40501__pinl_7919__icc_3228__dim - SACp_pinl_7925__flat_560__sz)))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40501__pinl_7919__icc_3228_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayBasics.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_40501__pinl_7919__icc_3228[SACp_wlidx_39654__pinl_7919__icc_3228] = SACp_pinl_7926_i; };

      SACp_wlidx_39654__pinl_7919__icc_3228 = SACp_wlidx_39654__pinl_7919__icc_3228 + 1;
      SACp_pinl_7926_i = SACp_pinl_7926_i + 1;
      } }
# 3657 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42019_SAC_label:;
    { ; ; }
    { ; ; }
    { if (!((2 == SACp_emal_40499__pinl_7973__icc_6679__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40499__pinl_7973__icc_6679"); }; { if ((((6 + (SACp_emal_40499__pinl_7973__icc_6679__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40499__pinl_7973__icc_6679__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40499__pinl_7973__icc_6679__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40499__pinl_7973__icc_6679__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40499__pinl_7973__icc_6679__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40499__pinl_7973__icc_6679__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40499__pinl_7973__icc_6679__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40499__pinl_7973__icc_6679__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40499__pinl_7973__icc_6679__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40499__pinl_7973__icc_6679__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40499__pinl_7973__icc_6679__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40499__pinl_7973__icc_6679__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40499__pinl_7973__icc_6679__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40499__pinl_7973__icc_6679__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40499__pinl_7973__icc_6679__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40499__pinl_7973__icc_6679__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40499__pinl_7973__icc_6679__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[1]) = 0; }
    { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40501__pinl_7919__icc_3228__desc) & (-1 ^ (3))))); } }



    SACp_emal_40501__pinl_7919__icc_3228__desc = SACp_emal_40499__pinl_7973__icc_6679__desc;

    { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[0]) = 6; }



    if (!((SACp_emal_40499__pinl_7973__icc_6679__dim == (2)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40499__pinl_7973__icc_6679__shp0 == 20))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40499__pinl_7973__icc_6679__shp1 == 12))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Assignment with incompatible types found"); };
    ;

    { SACp_emal_40499__pinl_7973__icc_6679 = SACp_emal_40501__pinl_7919__icc_3228; }
    ;



    if (!((_tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__dim == (2)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 17, 5, "Assignment with incompatible types found"); };
    _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__desc = SACp_emal_40499__pinl_7973__icc_6679__desc;
    _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__shp0 = SACp_emal_40499__pinl_7973__icc_6679__shp0;
    _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__shp1 = SACp_emal_40499__pinl_7973__icc_6679__shp1;
    _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__sz = SACp_emal_40499__pinl_7973__icc_6679__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40499__pinl_7973__icc_6679__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_40499__pinl_7973__icc_6679__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[4]) = SACp_emal_40499__pinl_7973__icc_6679__sz;
    { _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679 = SACp_emal_40499__pinl_7973__icc_6679; }




    SACof__MAIN_CLStdIO__print__i_X_X (_tcp_42012_SACp_emal_40499__pinl_7973__icc_6679, _tcp_42012_SACp_emal_40499__pinl_7973__icc_6679__desc);

    { { if (!((1 == SACp_emal_40497__flat_78__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40497__flat_78"); }; { { if ((((SACp_emal_40497__flat_78__sz * sizeof (*SACp_emal_40497__flat_78)) + ((6 + (SACp_emal_40497__flat_78__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40497__flat_78__sz * sizeof (*SACp_emal_40497__flat_78)) + ((6 + (SACp_emal_40497__flat_78__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40497__flat_78__sz * sizeof (*SACp_emal_40497__flat_78)) + ((6 + (SACp_emal_40497__flat_78__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40497__flat_78 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40497__flat_78 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40497__flat_78__sz * sizeof (*SACp_emal_40497__flat_78)) + ((6 + (SACp_emal_40497__flat_78__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40497__flat_78 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40497__flat_78 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40497__flat_78__sz * sizeof (*SACp_emal_40497__flat_78)) + ((6 + (SACp_emal_40497__flat_78__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40497__flat_78__sz * sizeof (*SACp_emal_40497__flat_78)) + ((6 + (SACp_emal_40497__flat_78__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40497__flat_78__sz * sizeof (*SACp_emal_40497__flat_78)) + ((6 + (SACp_emal_40497__flat_78__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40497__flat_78__sz * sizeof (*SACp_emal_40497__flat_78)) + ((6 + (SACp_emal_40497__flat_78__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40497__flat_78__sz * sizeof (*SACp_emal_40497__flat_78)) + ((6 + (SACp_emal_40497__flat_78__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40497__flat_78 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40497__flat_78 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40497__flat_78 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40497__flat_78 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40497__flat_78__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40497__flat_78, SACp_emal_40497__flat_78__sz * sizeof (*SACp_emal_40497__flat_78), ((6 + (SACp_emal_40497__flat_78__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40497__flat_78__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40497__flat_78__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40497__flat_78__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40497__flat_78__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 19, 22, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40497__flat_78__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 19, 22, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40497__flat_78[0] = 2; }
    { SACp_emal_40497__flat_78[1] = 3; }

    { { if (!((1 == SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound"); }; { { if ((((SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__sz * sizeof (*SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound)) + ((6 + (SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__sz * sizeof (*SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound)) + ((6 + (SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__sz * sizeof (*SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound)) + ((6 + (SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__sz * sizeof (*SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound)) + ((6 + (SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__sz * sizeof (*SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound)) + ((6 + (SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__sz * sizeof (*SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound)) + ((6 + (SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__sz * sizeof (*SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound)) + ((6 + (SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__sz * sizeof (*SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound)) + ((6 + (SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__sz * sizeof (*SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound)) + ((6 + (SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound, SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__sz * sizeof (*SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound), ((6 + (SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 181, 2597, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 181, 2597, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound[0] = 2; }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 181, 2515, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_40495__pinl_9872__eat_493__SSA6_1 = 1; }; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_40494__pinl_9699__flat_420 = 
# 3745 "/home/rubenhensen/sac/a.out.c" 3 4
   0
# 3745 "/home/rubenhensen/sac/a.out.c"
   ; }; }



    if (!((_tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__dim == (2)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__desc = SACp_emal_40499__pinl_7973__icc_6679__desc;
    _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__shp0 = SACp_emal_40499__pinl_7973__icc_6679__shp0;
    _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__shp1 = SACp_emal_40499__pinl_7973__icc_6679__shp1;
    _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__sz = SACp_emal_40499__pinl_7973__icc_6679__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40499__pinl_7973__icc_6679__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_40499__pinl_7973__icc_6679__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[4]) = SACp_emal_40499__pinl_7973__icc_6679__sz;
    { _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679 = SACp_emal_40499__pinl_7973__icc_6679; }




    SACf__MAIN___rtpf_13_impl_block__i_X_X__i_2 (&SACp_pinl_9278__rtpf_15_res, &SACp_pinl_9278__rtpf_15_res__desc, _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679, _tcp_42011_SACp_emal_40499__pinl_7973__icc_6679__desc, SACp_emal_40497__flat_78, SACp_emal_40497__flat_78__desc);




    SACp_pinl_9278__rtpf_15_res__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9278__rtpf_15_res__desc) & (-1 ^ (3))))[(6 + (0))]);
    SACp_pinl_9278__rtpf_15_res__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9278__rtpf_15_res__desc) & (-1 ^ (3))))[(6 + (1))]);
    SACp_pinl_9278__rtpf_15_res__shp2 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9278__rtpf_15_res__desc) & (-1 ^ (3))))[(6 + (2))]);
    SACp_pinl_9278__rtpf_15_res__shp3 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9278__rtpf_15_res__desc) & (-1 ^ (3))))[(6 + (3))]);
    SACp_pinl_9278__rtpf_15_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_9278__rtpf_15_res__desc) & (-1 ^ (3))))[4]);

    { { if (!((1 == SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res"); }; { { if ((((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res)) + ((6 + (SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res)) + ((6 + (SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res)) + ((6 + (SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res)) + ((6 + (SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res)) + ((6 + (SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res)) + ((6 + (SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res)) + ((6 + (SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res)) + ((6 + (SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res)) + ((6 + (SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res, SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res), ((6 + (SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__shp0 == 4))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res[0] = SACp_pinl_9278__rtpf_15_res__shp0; };
    { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res[1] = SACp_pinl_9278__rtpf_15_res__shp1; };
    { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res[2] = SACp_pinl_9278__rtpf_15_res__shp2; };
    { SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res[3] = SACp_pinl_9278__rtpf_15_res__shp3; };

    { { if (!((1 == SACp_emal_40492__pinl_9325_shp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40492__pinl_9325_shp"); }; { { if ((((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp)) + ((6 + (SACp_emal_40492__pinl_9325_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp)) + ((6 + (SACp_emal_40492__pinl_9325_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp)) + ((6 + (SACp_emal_40492__pinl_9325_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40492__pinl_9325_shp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40492__pinl_9325_shp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp)) + ((6 + (SACp_emal_40492__pinl_9325_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40492__pinl_9325_shp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40492__pinl_9325_shp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp)) + ((6 + (SACp_emal_40492__pinl_9325_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp)) + ((6 + (SACp_emal_40492__pinl_9325_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp)) + ((6 + (SACp_emal_40492__pinl_9325_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp)) + ((6 + (SACp_emal_40492__pinl_9325_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp)) + ((6 + (SACp_emal_40492__pinl_9325_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40492__pinl_9325_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40492__pinl_9325_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40492__pinl_9325_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40492__pinl_9325_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40492__pinl_9325_shp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp, SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp), ((6 + (SACp_emal_40492__pinl_9325_shp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40492__pinl_9325_shp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40492__pinl_9325_shp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40492__pinl_9325_shp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40492__pinl_9325_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40492__pinl_9325_shp__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 3806 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 3806 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40492__pinl_9325_shp[SAC_i] = ( SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res[SAC_off + SAC_i]); };
      }
    }

    { { if (!((1 == SACp_emal_40491__pinl_9313__flat_225__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40491__pinl_9313__flat_225"); }; { { if ((((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225)) + ((6 + (SACp_emal_40491__pinl_9313__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225)) + ((6 + (SACp_emal_40491__pinl_9313__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225)) + ((6 + (SACp_emal_40491__pinl_9313__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40491__pinl_9313__flat_225 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40491__pinl_9313__flat_225 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225)) + ((6 + (SACp_emal_40491__pinl_9313__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40491__pinl_9313__flat_225 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40491__pinl_9313__flat_225 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225)) + ((6 + (SACp_emal_40491__pinl_9313__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225)) + ((6 + (SACp_emal_40491__pinl_9313__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225)) + ((6 + (SACp_emal_40491__pinl_9313__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225)) + ((6 + (SACp_emal_40491__pinl_9313__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225)) + ((6 + (SACp_emal_40491__pinl_9313__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40491__pinl_9313__flat_225 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40491__pinl_9313__flat_225 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40491__pinl_9313__flat_225 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40491__pinl_9313__flat_225 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40491__pinl_9313__flat_225__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225, SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225), ((6 + (SACp_emal_40491__pinl_9313__flat_225__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40491__pinl_9313__flat_225__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40491__pinl_9313__flat_225__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40491__pinl_9313__flat_225__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40491__pinl_9313__flat_225__dim == (1)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40491__pinl_9313__flat_225__shp0 == 2))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 3837 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 3837 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40491__pinl_9313__flat_225[SAC_i] = ( SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res[SAC_off + SAC_i]); };
      }
    }

    { { { if (((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res) - 1)->data1.arena)); } else { if (SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res) - 1)->data1.arena)); } } else { if (((((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res) - 1)->data1.arena)); } else { if (((((SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__sz * sizeof (*SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40493__isaa_29454__pinl_9278__rtpf_15_res__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40490__uprf_28654 = ( SACp_emal_40491__pinl_9313__flat_225[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40489__uprf_28659 = ( SACp_emal_40491__pinl_9313__flat_225[SACp_emal_40495__pinl_9872__eat_493__SSA6_1]); }

    { { { if (((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225, ((((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225) - 1)->data1.arena)); } else { if (SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225, ((((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225, ((((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225) - 1)->data1.arena)); } } else { if (((((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225, ((((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225) - 1)->data1.arena)); } else { if (((((SACp_emal_40491__pinl_9313__flat_225__sz * sizeof (*SACp_emal_40491__pinl_9313__flat_225))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225, ((((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40491__pinl_9313__flat_225); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40491__pinl_9313__flat_225__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40488__esd_33685 = (-2) + (SACp_emal_40490__uprf_28654); };
    ; ; { SACp_emal_40487__uprf_28647 = (SACp_emal_40488__esd_33685) == (0); };
    { ; ; }
    ; ; { SACp_emal_40486__esd_33684 = (-3) + (SACp_emal_40489__uprf_28659); };
    ; ; { SACp_emal_40485__uprf_28650 = (SACp_emal_40486__esd_33684) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_40484__pinl_9292__icc_3022__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40484__pinl_9292__icc_3022"); }; { { if ((((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022)) + ((6 + (SACp_emal_40484__pinl_9292__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022)) + ((6 + (SACp_emal_40484__pinl_9292__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022)) + ((6 + (SACp_emal_40484__pinl_9292__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40484__pinl_9292__icc_3022 = (
# 3876 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40484__pinl_9292__icc_3022 = (
# 3876 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022)) + ((6 + (SACp_emal_40484__pinl_9292__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40484__pinl_9292__icc_3022 = (
# 3876 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40484__pinl_9292__icc_3022 = (
# 3876 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022)) + ((6 + (SACp_emal_40484__pinl_9292__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022)) + ((6 + (SACp_emal_40484__pinl_9292__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022)) + ((6 + (SACp_emal_40484__pinl_9292__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022)) + ((6 + (SACp_emal_40484__pinl_9292__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022)) + ((6 + (SACp_emal_40484__pinl_9292__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40484__pinl_9292__icc_3022 = (
# 3876 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40484__pinl_9292__icc_3022 = (
# 3876 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40484__pinl_9292__icc_3022 = (
# 3876 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40484__pinl_9292__icc_3022 = (
# 3876 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 3876 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40484__pinl_9292__icc_3022__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022, SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022), ((6 + (SACp_emal_40484__pinl_9292__icc_3022__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40484__pinl_9292__icc_3022__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40484__pinl_9292__icc_3022__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40484__pinl_9292__icc_3022__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40484__pinl_9292__icc_3022__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40484__pinl_9292__icc_3022__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40484__pinl_9292__icc_3022[0] = SACp_emal_40487__uprf_28647; }
    { SACp_emal_40484__pinl_9292__icc_3022[1] = SACp_emal_40485__uprf_28650; }

    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40484__pinl_9292__icc_3022__sz; SAC_i++) { if (( SACp_emal_40484__pinl_9292__icc_3022[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_40483__pinl_9310__flat_222 = SAC_all; }
    { { { if (((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022, ((((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022) - 1)->data1.arena)); } else { if (SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022, ((((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022, ((((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022) - 1)->data1.arena)); } } else { if (((((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022, ((((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022) - 1)->data1.arena)); } else { if (((((SACp_emal_40484__pinl_9292__icc_3022__sz * sizeof (*SACp_emal_40484__pinl_9292__icc_3022))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022, ((((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40484__pinl_9292__icc_3022); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40484__pinl_9292__icc_3022__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_40483__pinl_9310__flat_222)
    {
      ;
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_9328__hce_52 = SACp_emal_40503__pinl_7932__icc_3220_pred; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Type pattern error in application of block: feature `od:s' in return value does not match argument s"); SACp_pinl_41947__emal_40525__hce_52__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_9328__hce_52 = SACp_pinl_41947__emal_40525__hce_52__SSA0_1; }

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40482__pinl_9479__icc_6051 = ( SACp_emal_40492__pinl_9325_shp[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    ; ; { SACp_emal_40481__ctz_21635 = (-10) + (SACp_emal_40482__pinl_9479__icc_6051); };
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
    ;

    }
    ; ; { SACp_emal_40480__pinl_9489__flat_3875 = (SACp_emal_40481__ctz_21635) == (0); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40479__pinl_9479__icc_6051__SSA7_1 = ( SACp_emal_40492__pinl_9325_shp[SACp_emal_40495__pinl_9872__eat_493__SSA6_1]); }

    { { { if (((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp, ((((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp) - 1)->data1.arena)); } else { if (SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp, ((((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp, ((((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp) - 1)->data1.arena)); } } else { if (((((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp, ((((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp) - 1)->data1.arena)); } else { if (((((SACp_emal_40492__pinl_9325_shp__sz * sizeof (*SACp_emal_40492__pinl_9325_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp, ((((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40492__pinl_9325_shp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40492__pinl_9325_shp__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40478__ctz_21635__SSA7_1 = (-4) + (SACp_emal_40479__pinl_9479__icc_6051__SSA7_1); };
    ; ; { SACp_emal_40477__pinl_9489__flat_3875__SSA7_2 = (SACp_emal_40478__ctz_21635__SSA7_1) == (0); };
    { ; ; }
    ; ; { SACp_emal_40480__pinl_9489__flat_3875 = (SACp_emal_40480__pinl_9489__flat_3875) & (SACp_emal_40477__pinl_9489__flat_3875__SSA7_2); };
    { ; ; }
    if (SACp_emal_40480__pinl_9489__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_9331__hce_49 = SACp_pinl_9328__hce_52; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Type pattern post-condition of block failed"); SACp_pinl_41949__emal_40524__hce_49__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_9331__hce_49 = SACp_pinl_41949__emal_40524__hce_49__SSA0_1; }

    }
    if (!SACp_pinl_9331__hce_49) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 36, 1, "Type pattern post-condition of block failed"); }
    ;



    SACp_flat_77__desc = SACp_pinl_9278__rtpf_15_res__desc;
    SACp_flat_77__sz = SACp_pinl_9278__rtpf_15_res__sz;
    SACp_flat_77__dim = SACp_pinl_9278__rtpf_15_res__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_77__desc) & (-1 ^ (3))))[3]) = SACp_pinl_9278__rtpf_15_res__dim;
    { SACp_flat_77 = SACp_pinl_9278__rtpf_15_res; }

    { (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_77__desc) & (-1 ^ (3))))[0]) += 1; }



    SACwf__MAIN_CLStdIO__print__i_S (SACp_flat_77, SACp_flat_77__desc);




    SACf__MAIN___rtpf_27_impl_unblock__i_S__i (&SACp_pinl_10963__rtpf_29_res, &SACp_pinl_10963__rtpf_29_res__desc, SACp_flat_77, SACp_flat_77__desc, SACp_emal_40498__flat_79);




    SACp_pinl_10963__rtpf_29_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_10963__rtpf_29_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_40475__isaa_29470__pinl_10963__rtpf_29_res = SACp_pinl_10963__rtpf_29_res__dim; }; }
    { { if (!((1 == SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res"); }; { if ((((6 + (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_10963__rtpf_29_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__sz = SAC_size;
      if (!((SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 4050 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 4050 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4050 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 4050 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4050 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 4050 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 4050 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 4050, __extension__ __PRETTY_FUNCTION__); }))
# 4050 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__sz * sizeof (*SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res)); break; case SAC_HM_multi_threaded: SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__sz * sizeof (*SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res), 0); break; case SAC_HM_any_threaded: SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__sz * sizeof (*SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_10963__rtpf_29_res__dim; SAC_i++) {
      { SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { if (!((1 == SACp_emal_40473__pinl_11000_shp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40473__pinl_11000_shp"); }; { { if ((((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp)) + ((6 + (SACp_emal_40473__pinl_11000_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp)) + ((6 + (SACp_emal_40473__pinl_11000_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp)) + ((6 + (SACp_emal_40473__pinl_11000_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40473__pinl_11000_shp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40473__pinl_11000_shp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp)) + ((6 + (SACp_emal_40473__pinl_11000_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40473__pinl_11000_shp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40473__pinl_11000_shp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp)) + ((6 + (SACp_emal_40473__pinl_11000_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp)) + ((6 + (SACp_emal_40473__pinl_11000_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp)) + ((6 + (SACp_emal_40473__pinl_11000_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp)) + ((6 + (SACp_emal_40473__pinl_11000_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp)) + ((6 + (SACp_emal_40473__pinl_11000_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40473__pinl_11000_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40473__pinl_11000_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40473__pinl_11000_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40473__pinl_11000_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40473__pinl_11000_shp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp, SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp), ((6 + (SACp_emal_40473__pinl_11000_shp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40473__pinl_11000_shp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40473__pinl_11000_shp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40473__pinl_11000_shp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40473__pinl_11000_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40473__pinl_11000_shp__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4074 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 4074 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40473__pinl_11000_shp[SAC_i] = ( SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40474__isaa_29471__pinl_10963__rtpf_29_res__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40475__isaa_29470__pinl_10963__rtpf_29_res = (2) - (SACp_emal_40475__isaa_29470__pinl_10963__rtpf_29_res); };
    ; ; { SACp_emal_40471__pinl_10981__flat_415 = (SACp_emal_40475__isaa_29470__pinl_10963__rtpf_29_res) == (0); };
    { ; ; }
    if (SACp_emal_40471__pinl_10981__flat_415)
    {
      { { SACp_pinl_41952__emal_40522__hce_71 = 
# 4096 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 4096 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_11001__hce_71 = SACp_pinl_41952__emal_40522__hce_71; }

    }
    else
    {
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern error in application of unblock: feature `id:ishp' in return value does not match feature `id' in a"); SACp_pinl_41953__emal_40523__hce_71__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_11001__hce_71 = SACp_pinl_41953__emal_40523__hce_71__SSA0_1; }

    }
    if (SACp_emal_40471__pinl_10981__flat_415)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_11003__hce_69 = SACp_pinl_11001__hce_71; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern error in application of unblock: feature `od:shp' in return value does not match argument od"); SACp_pinl_41955__emal_40521__hce_69__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_11003__hce_69 = SACp_pinl_41955__emal_40521__hce_69__SSA0_1; }

    }
    ; ; { SACp_emal_40482__pinl_9479__icc_6051 = (SACp_emal_40482__pinl_9479__icc_6051) * (SACp_emal_40490__uprf_28654); };
    { ; ; }
    ; ; { SACp_emal_40479__pinl_9479__icc_6051__SSA7_1 = (SACp_emal_40479__pinl_9479__icc_6051__SSA7_1) * (SACp_emal_40489__uprf_28659); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40468__pinl_11341__icc_6045 = ( SACp_emal_40473__pinl_11000_shp[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    ; ; { SACp_emal_40467__ctz_21625 = (SACp_emal_40482__pinl_9479__icc_6051) - (SACp_emal_40468__pinl_11341__icc_6045); };
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
    ;

    }
    ; ; { SACp_emal_40466__pinl_11354__flat_3875 = (SACp_emal_40467__ctz_21625) == (0); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40465__pinl_11341__icc_6045__SSA9_1 = ( SACp_emal_40473__pinl_11000_shp[SACp_emal_40495__pinl_9872__eat_493__SSA6_1]); }

    { { { if (((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp, ((((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp) - 1)->data1.arena)); } else { if (SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp, ((((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp, ((((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp) - 1)->data1.arena)); } } else { if (((((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp, ((((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp) - 1)->data1.arena)); } else { if (((((SACp_emal_40473__pinl_11000_shp__sz * sizeof (*SACp_emal_40473__pinl_11000_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp, ((((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40473__pinl_11000_shp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40473__pinl_11000_shp__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40464__ctz_21625__SSA9_1 = (SACp_emal_40479__pinl_9479__icc_6051__SSA7_1) - (SACp_emal_40465__pinl_11341__icc_6045__SSA9_1); };
    ; ; { SACp_emal_40463__pinl_11354__flat_3875__SSA9_2 = (SACp_emal_40464__ctz_21625__SSA9_1) == (0); };
    { ; ; }
    ; ; { SACp_emal_40466__pinl_11354__flat_3875 = (SACp_emal_40466__pinl_11354__flat_3875) & (SACp_emal_40463__pinl_11354__flat_3875__SSA9_2); };
    { ; ; }
    if (SACp_emal_40466__pinl_11354__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_11004__hce_68 = SACp_pinl_11003__hce_69; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern post-condition of unblock failed"); SACp_pinl_41957__emal_40520__hce_68__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_11004__hce_68 = SACp_pinl_41957__emal_40520__hce_68__SSA0_1; }

    }
    ; ; { SACp_emal_40468__pinl_11341__icc_6045 = (SACp_emal_40468__pinl_11341__icc_6045) - (SACp_emal_40482__pinl_9479__icc_6051); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
    ;

    }
    ; ; { SACp_emal_40460__pinl_11153__flat_3875 = (SACp_emal_40468__pinl_11341__icc_6045) == (0); };
    { ; ; }
    ; ; { SACp_emal_40465__pinl_11341__icc_6045__SSA9_1 = (SACp_emal_40465__pinl_11341__icc_6045__SSA9_1) - (SACp_emal_40479__pinl_9479__icc_6051__SSA7_1); };
    { ; ; }
    ; ; { SACp_emal_40458__pinl_11153__flat_3875__SSA9_2 = (SACp_emal_40465__pinl_11341__icc_6045__SSA9_1) == (0); };
    { ; ; }
    ; ; { SACp_emal_40460__pinl_11153__flat_3875 = (SACp_emal_40460__pinl_11153__flat_3875) & (SACp_emal_40458__pinl_11153__flat_3875__SSA9_2); };
    { ; ; }
    if (SACp_emal_40460__pinl_11153__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_11005__hce_67 = SACp_pinl_11004__hce_68; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern post-condition of unblock failedType pattern post-condition of unblock failed"); SACp_pinl_41959__emal_40519__hce_67__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_11005__hce_67 = SACp_pinl_41959__emal_40519__hce_67__SSA0_1; }

    }
    if (!SACp_pinl_11005__hce_67) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 49, 1, "Type pattern post-condition of unblock failed"); }
    ;



    SACwf__MAIN_CLStdIO__print__i_S (SACp_pinl_10963__rtpf_29_res, SACp_pinl_10963__rtpf_29_res__desc);




    if (!((_tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__dim == (2)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__desc = SACp_emal_40499__pinl_7973__icc_6679__desc;
    _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__shp0 = SACp_emal_40499__pinl_7973__icc_6679__shp0;
    _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__shp1 = SACp_emal_40499__pinl_7973__icc_6679__shp1;
    _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__sz = SACp_emal_40499__pinl_7973__icc_6679__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40499__pinl_7973__icc_6679__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_40499__pinl_7973__icc_6679__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[4]) = SACp_emal_40499__pinl_7973__icc_6679__sz;
    { _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679 = SACp_emal_40499__pinl_7973__icc_6679; }




    SACf__MAIN___rtpf_13_impl_block__i_X_X__i_1 (&SACp_pinl_12169__rtpf_15_res, &SACp_pinl_12169__rtpf_15_res__desc, _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679, _tcp_42010_SACp_emal_40499__pinl_7973__icc_6679__desc, SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound, SACp_emal_40496__pinl_9927__wlbsc_7696_sc_bound__desc);




    SACp_pinl_12169__rtpf_15_res__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12169__rtpf_15_res__desc) & (-1 ^ (3))))[(6 + (0))]);
    SACp_pinl_12169__rtpf_15_res__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12169__rtpf_15_res__desc) & (-1 ^ (3))))[(6 + (1))]);
    SACp_pinl_12169__rtpf_15_res__shp2 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12169__rtpf_15_res__desc) & (-1 ^ (3))))[(6 + (2))]);
    SACp_pinl_12169__rtpf_15_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12169__rtpf_15_res__desc) & (-1 ^ (3))))[4]);

    { { if (!((1 == SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res"); }; { { if ((((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res)) + ((6 + (SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res)) + ((6 + (SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res)) + ((6 + (SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res)) + ((6 + (SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res)) + ((6 + (SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res)) + ((6 + (SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res)) + ((6 + (SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res)) + ((6 + (SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res)) + ((6 + (SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res, SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res), ((6 + (SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__shp0 == 3))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res[0] = SACp_pinl_12169__rtpf_15_res__shp0; };
    { SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res[1] = SACp_pinl_12169__rtpf_15_res__shp1; };
    { SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res[2] = SACp_pinl_12169__rtpf_15_res__shp2; };

    { { if (!((1 == SACp_emal_40455__pinl_12216_shp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40455__pinl_12216_shp"); }; { { if ((((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp)) + ((6 + (SACp_emal_40455__pinl_12216_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp)) + ((6 + (SACp_emal_40455__pinl_12216_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp)) + ((6 + (SACp_emal_40455__pinl_12216_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40455__pinl_12216_shp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40455__pinl_12216_shp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp)) + ((6 + (SACp_emal_40455__pinl_12216_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40455__pinl_12216_shp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40455__pinl_12216_shp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp)) + ((6 + (SACp_emal_40455__pinl_12216_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp)) + ((6 + (SACp_emal_40455__pinl_12216_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp)) + ((6 + (SACp_emal_40455__pinl_12216_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp)) + ((6 + (SACp_emal_40455__pinl_12216_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp)) + ((6 + (SACp_emal_40455__pinl_12216_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40455__pinl_12216_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40455__pinl_12216_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40455__pinl_12216_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40455__pinl_12216_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40455__pinl_12216_shp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp, SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp), ((6 + (SACp_emal_40455__pinl_12216_shp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40455__pinl_12216_shp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40455__pinl_12216_shp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40455__pinl_12216_shp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40455__pinl_12216_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40455__pinl_12216_shp__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4338 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 4338 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40455__pinl_12216_shp[SAC_i] = ( SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res[SAC_off + SAC_i]); };
      }
    }

    { { if (!((1 == SACp_emal_40454__pinl_12199__flat_217__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40454__pinl_12199__flat_217"); }; { { if ((((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217)) + ((6 + (SACp_emal_40454__pinl_12199__flat_217__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217)) + ((6 + (SACp_emal_40454__pinl_12199__flat_217__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217)) + ((6 + (SACp_emal_40454__pinl_12199__flat_217__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40454__pinl_12199__flat_217 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40454__pinl_12199__flat_217 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217)) + ((6 + (SACp_emal_40454__pinl_12199__flat_217__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40454__pinl_12199__flat_217 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40454__pinl_12199__flat_217 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217)) + ((6 + (SACp_emal_40454__pinl_12199__flat_217__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217)) + ((6 + (SACp_emal_40454__pinl_12199__flat_217__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217)) + ((6 + (SACp_emal_40454__pinl_12199__flat_217__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217)) + ((6 + (SACp_emal_40454__pinl_12199__flat_217__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217)) + ((6 + (SACp_emal_40454__pinl_12199__flat_217__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40454__pinl_12199__flat_217 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40454__pinl_12199__flat_217 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40454__pinl_12199__flat_217 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40454__pinl_12199__flat_217 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40454__pinl_12199__flat_217__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217, SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217), ((6 + (SACp_emal_40454__pinl_12199__flat_217__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40454__pinl_12199__flat_217__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40454__pinl_12199__flat_217__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40454__pinl_12199__flat_217__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40454__pinl_12199__flat_217__dim == (1)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40454__pinl_12199__flat_217__shp0 == 1))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4369 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 4369 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40454__pinl_12199__flat_217[SAC_i] = ( SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res[SAC_off + SAC_i]); };
      }
    }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40453__uprf_28643 = ( SACp_emal_40454__pinl_12199__flat_217[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    { { { if (((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217, ((((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217) - 1)->data1.arena)); } else { if (SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217, ((((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217, ((((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217) - 1)->data1.arena)); } } else { if (((((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217, ((((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217) - 1)->data1.arena)); } else { if (((((SACp_emal_40454__pinl_12199__flat_217__sz * sizeof (*SACp_emal_40454__pinl_12199__flat_217))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217, ((((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40454__pinl_12199__flat_217); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40454__pinl_12199__flat_217__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40452__esd_33676 = (-12) + (SACp_emal_40453__uprf_28643); };
    ; ; { SACp_emal_40451__uprf_28639 = (SACp_emal_40452__esd_33676) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_40450__pinl_12180__icc_3018__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40450__pinl_12180__icc_3018"); }; { { if ((((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018)) + ((6 + (SACp_emal_40450__pinl_12180__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018)) + ((6 + (SACp_emal_40450__pinl_12180__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018)) + ((6 + (SACp_emal_40450__pinl_12180__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40450__pinl_12180__icc_3018 = (
# 4397 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40450__pinl_12180__icc_3018 = (
# 4397 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018)) + ((6 + (SACp_emal_40450__pinl_12180__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40450__pinl_12180__icc_3018 = (
# 4397 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40450__pinl_12180__icc_3018 = (
# 4397 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018)) + ((6 + (SACp_emal_40450__pinl_12180__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018)) + ((6 + (SACp_emal_40450__pinl_12180__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018)) + ((6 + (SACp_emal_40450__pinl_12180__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018)) + ((6 + (SACp_emal_40450__pinl_12180__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018)) + ((6 + (SACp_emal_40450__pinl_12180__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40450__pinl_12180__icc_3018 = (
# 4397 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40450__pinl_12180__icc_3018 = (
# 4397 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40450__pinl_12180__icc_3018 = (
# 4397 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40450__pinl_12180__icc_3018 = (
# 4397 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4397 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40450__pinl_12180__icc_3018__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018, SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018), ((6 + (SACp_emal_40450__pinl_12180__icc_3018__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40450__pinl_12180__icc_3018__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40450__pinl_12180__icc_3018__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40450__pinl_12180__icc_3018__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40450__pinl_12180__icc_3018__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40450__pinl_12180__icc_3018__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40450__pinl_12180__icc_3018[0] = SACp_emal_40451__uprf_28639; }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40450__pinl_12180__icc_3018__sz; SAC_i++) { if (( SACp_emal_40450__pinl_12180__icc_3018[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_40449__pinl_12196__flat_214 = SAC_all; }
    { { { if (((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018, ((((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018) - 1)->data1.arena)); } else { if (SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018, ((((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018, ((((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018) - 1)->data1.arena)); } } else { if (((((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018, ((((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018) - 1)->data1.arena)); } else { if (((((SACp_emal_40450__pinl_12180__icc_3018__sz * sizeof (*SACp_emal_40450__pinl_12180__icc_3018))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018, ((((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40450__pinl_12180__icc_3018); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40450__pinl_12180__icc_3018__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_40449__pinl_12196__flat_214)
    {
      ;
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12218__hce_53 = SACp_emal_40503__pinl_7932__icc_3220_pred; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Type pattern error in application of block: feature `id:ishp' in return value does not match feature `ishp' in a"); SACp_pinl_41961__emal_40518__hce_53__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12218__hce_53 = SACp_pinl_41961__emal_40518__hce_53__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_40448__pinl_12204__flat_225__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40448__pinl_12204__flat_225"); }; { { if ((((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225)) + ((6 + (SACp_emal_40448__pinl_12204__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225)) + ((6 + (SACp_emal_40448__pinl_12204__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225)) + ((6 + (SACp_emal_40448__pinl_12204__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40448__pinl_12204__flat_225 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40448__pinl_12204__flat_225 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225)) + ((6 + (SACp_emal_40448__pinl_12204__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40448__pinl_12204__flat_225 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40448__pinl_12204__flat_225 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225)) + ((6 + (SACp_emal_40448__pinl_12204__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225)) + ((6 + (SACp_emal_40448__pinl_12204__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225)) + ((6 + (SACp_emal_40448__pinl_12204__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225)) + ((6 + (SACp_emal_40448__pinl_12204__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225)) + ((6 + (SACp_emal_40448__pinl_12204__flat_225__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40448__pinl_12204__flat_225 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40448__pinl_12204__flat_225 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40448__pinl_12204__flat_225 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40448__pinl_12204__flat_225 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40448__pinl_12204__flat_225__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225, SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225), ((6 + (SACp_emal_40448__pinl_12204__flat_225__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40448__pinl_12204__flat_225__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40448__pinl_12204__flat_225__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40448__pinl_12204__flat_225__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40448__pinl_12204__flat_225__dim == (1)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40448__pinl_12204__flat_225__shp0 == 2))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4457 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 4457 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40448__pinl_12204__flat_225[SAC_i] = ( SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res[SAC_off + SAC_i]); };
      }
    }

    { { { if (((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res) - 1)->data1.arena)); } else { if (SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res) - 1)->data1.arena)); } } else { if (((((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res) - 1)->data1.arena)); } else { if (((((SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__sz * sizeof (*SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40456__isaa_29519__pinl_12169__rtpf_15_res__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_40447__pinl_12203__flat_224__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40447__pinl_12203__flat_224"); }; { { if ((((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224)) + ((6 + (SACp_emal_40447__pinl_12203__flat_224__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224)) + ((6 + (SACp_emal_40447__pinl_12203__flat_224__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224)) + ((6 + (SACp_emal_40447__pinl_12203__flat_224__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40447__pinl_12203__flat_224 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40447__pinl_12203__flat_224 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224)) + ((6 + (SACp_emal_40447__pinl_12203__flat_224__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40447__pinl_12203__flat_224 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40447__pinl_12203__flat_224 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224)) + ((6 + (SACp_emal_40447__pinl_12203__flat_224__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224)) + ((6 + (SACp_emal_40447__pinl_12203__flat_224__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224)) + ((6 + (SACp_emal_40447__pinl_12203__flat_224__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224)) + ((6 + (SACp_emal_40447__pinl_12203__flat_224__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224)) + ((6 + (SACp_emal_40447__pinl_12203__flat_224__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40447__pinl_12203__flat_224 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40447__pinl_12203__flat_224 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40447__pinl_12203__flat_224 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40447__pinl_12203__flat_224 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40447__pinl_12203__flat_224__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224, SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224), ((6 + (SACp_emal_40447__pinl_12203__flat_224__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40447__pinl_12203__flat_224__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40447__pinl_12203__flat_224__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40447__pinl_12203__flat_224__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40447__pinl_12203__flat_224__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40447__pinl_12203__flat_224__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4490 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 4490 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_40448__pinl_12204__flat_225__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_40448__pinl_12204__flat_225__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40447__pinl_12203__flat_224[SAC_i] = ( SACp_emal_40448__pinl_12204__flat_225[SAC_off + SAC_i]); };
      }
    }

    { { { if (((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225, ((((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225) - 1)->data1.arena)); } else { if (SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225, ((((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225, ((((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225) - 1)->data1.arena)); } } else { if (((((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225, ((((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225) - 1)->data1.arena)); } else { if (((((SACp_emal_40448__pinl_12204__flat_225__sz * sizeof (*SACp_emal_40448__pinl_12204__flat_225))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225, ((((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40448__pinl_12204__flat_225); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40448__pinl_12204__flat_225__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40446__uprf_28635 = ( SACp_emal_40447__pinl_12203__flat_224[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    { { { if (((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224, ((((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224) - 1)->data1.arena)); } else { if (SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224, ((((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224, ((((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224) - 1)->data1.arena)); } } else { if (((((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224, ((((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224) - 1)->data1.arena)); } else { if (((((SACp_emal_40447__pinl_12203__flat_224__sz * sizeof (*SACp_emal_40447__pinl_12203__flat_224))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224, ((((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40447__pinl_12203__flat_224); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40447__pinl_12203__flat_224__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40445__esd_33674 = (-2) + (SACp_emal_40446__uprf_28635); };
    ; ; { SACp_emal_40444__uprf_28631 = (SACp_emal_40445__esd_33674) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_40443__pinl_12183__icc_3022__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40443__pinl_12183__icc_3022"); }; { { if ((((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022)) + ((6 + (SACp_emal_40443__pinl_12183__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022)) + ((6 + (SACp_emal_40443__pinl_12183__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022)) + ((6 + (SACp_emal_40443__pinl_12183__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40443__pinl_12183__icc_3022 = (
# 4518 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40443__pinl_12183__icc_3022 = (
# 4518 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022)) + ((6 + (SACp_emal_40443__pinl_12183__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40443__pinl_12183__icc_3022 = (
# 4518 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40443__pinl_12183__icc_3022 = (
# 4518 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022)) + ((6 + (SACp_emal_40443__pinl_12183__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022)) + ((6 + (SACp_emal_40443__pinl_12183__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022)) + ((6 + (SACp_emal_40443__pinl_12183__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022)) + ((6 + (SACp_emal_40443__pinl_12183__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022)) + ((6 + (SACp_emal_40443__pinl_12183__icc_3022__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40443__pinl_12183__icc_3022 = (
# 4518 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40443__pinl_12183__icc_3022 = (
# 4518 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40443__pinl_12183__icc_3022 = (
# 4518 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40443__pinl_12183__icc_3022 = (
# 4518 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4518 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40443__pinl_12183__icc_3022__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022, SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022), ((6 + (SACp_emal_40443__pinl_12183__icc_3022__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40443__pinl_12183__icc_3022__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40443__pinl_12183__icc_3022__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40443__pinl_12183__icc_3022__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40443__pinl_12183__icc_3022__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40443__pinl_12183__icc_3022__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40443__pinl_12183__icc_3022[0] = SACp_emal_40444__uprf_28631; }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40443__pinl_12183__icc_3022__sz; SAC_i++) { if (( SACp_emal_40443__pinl_12183__icc_3022[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_40442__pinl_12201__flat_222 = SAC_all; }
    { { { if (((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022, ((((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022) - 1)->data1.arena)); } else { if (SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022, ((((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022, ((((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022) - 1)->data1.arena)); } } else { if (((((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022, ((((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022) - 1)->data1.arena)); } else { if (((((SACp_emal_40443__pinl_12183__icc_3022__sz * sizeof (*SACp_emal_40443__pinl_12183__icc_3022))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022, ((((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40443__pinl_12183__icc_3022); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40443__pinl_12183__icc_3022__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_40442__pinl_12201__flat_222)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12219__hce_52 = SACp_pinl_12218__hce_53; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Type pattern error in application of block: feature `od:s' in return value does not match argument s"); SACp_pinl_41963__emal_40517__hce_52__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12219__hce_52 = SACp_pinl_41963__emal_40517__hce_52__SSA0_1; }

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40441__pinl_12370__icc_6051 = ( SACp_emal_40455__pinl_12216_shp[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    { { { if (((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp, ((((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp) - 1)->data1.arena)); } else { if (SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp, ((((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp, ((((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp) - 1)->data1.arena)); } } else { if (((((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp, ((((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp) - 1)->data1.arena)); } else { if (((((SACp_emal_40455__pinl_12216_shp__sz * sizeof (*SACp_emal_40455__pinl_12216_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp, ((((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40455__pinl_12216_shp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40455__pinl_12216_shp__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40440__ctz_21613 = (-10) + (SACp_emal_40441__pinl_12370__icc_6051); };
    ; ; { SACp_emal_40439__pinl_12380__flat_3875 = (SACp_emal_40440__ctz_21613) == (0); };
    { ; ; }
    if (SACp_emal_40439__pinl_12380__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12222__hce_49 = SACp_pinl_12219__hce_52; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Type pattern post-condition of block failed"); SACp_pinl_41965__emal_40516__hce_49__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12222__hce_49 = SACp_pinl_41965__emal_40516__hce_49__SSA0_1; }

    }
    if (!SACp_pinl_12222__hce_49) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 36, 1, "Type pattern post-condition of block failed"); }
    ;



    SACp_flat_90__desc = SACp_pinl_12169__rtpf_15_res__desc;
    SACp_flat_90__sz = SACp_pinl_12169__rtpf_15_res__sz;
    SACp_flat_90__dim = SACp_pinl_12169__rtpf_15_res__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_90__desc) & (-1 ^ (3))))[3]) = SACp_pinl_12169__rtpf_15_res__dim;
    { SACp_flat_90 = SACp_pinl_12169__rtpf_15_res; }




    SACf__MAIN___rtpf_27_impl_unblock__i_S__i (&SACp_pinl_12828__rtpf_29_res, &SACp_pinl_12828__rtpf_29_res__desc, SACp_flat_90, SACp_flat_90__desc, SACp_emal_40495__pinl_9872__eat_493__SSA6_1);




    SACp_pinl_12828__rtpf_29_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_12828__rtpf_29_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_40438__isaa_29532__pinl_12828__rtpf_29_res = SACp_pinl_12828__rtpf_29_res__dim; }; }
    { { if (!((1 == SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res"); }; { if ((((6 + (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_12828__rtpf_29_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__sz = SAC_size;
      if (!((SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 4656 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 4656 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4656 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 4656 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4656 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 4656 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 4656 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 4656, __extension__ __PRETTY_FUNCTION__); }))
# 4656 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__sz * sizeof (*SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res)); break; case SAC_HM_multi_threaded: SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__sz * sizeof (*SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res), 0); break; case SAC_HM_any_threaded: SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__sz * sizeof (*SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_12828__rtpf_29_res__dim; SAC_i++) {
      { SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { if (!((1 == SACp_emal_40436__pinl_12865_shp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40436__pinl_12865_shp"); }; { { if ((((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp)) + ((6 + (SACp_emal_40436__pinl_12865_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp)) + ((6 + (SACp_emal_40436__pinl_12865_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp)) + ((6 + (SACp_emal_40436__pinl_12865_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40436__pinl_12865_shp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40436__pinl_12865_shp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp)) + ((6 + (SACp_emal_40436__pinl_12865_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40436__pinl_12865_shp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40436__pinl_12865_shp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp)) + ((6 + (SACp_emal_40436__pinl_12865_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp)) + ((6 + (SACp_emal_40436__pinl_12865_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp)) + ((6 + (SACp_emal_40436__pinl_12865_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp)) + ((6 + (SACp_emal_40436__pinl_12865_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp)) + ((6 + (SACp_emal_40436__pinl_12865_shp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40436__pinl_12865_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40436__pinl_12865_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40436__pinl_12865_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40436__pinl_12865_shp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40436__pinl_12865_shp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp, SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp), ((6 + (SACp_emal_40436__pinl_12865_shp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40436__pinl_12865_shp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40436__pinl_12865_shp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40436__pinl_12865_shp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40436__pinl_12865_shp__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40436__pinl_12865_shp__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4680 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 4680 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40436__pinl_12865_shp[SAC_i] = ( SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res[SAC_off + SAC_i]); };
      }
    }

    ; ; { SACp_emal_40438__isaa_29532__pinl_12828__rtpf_29_res = (2) - (SACp_emal_40438__isaa_29532__pinl_12828__rtpf_29_res); };
    ; ; { SACp_emal_40434__pinl_12846__flat_415 = (SACp_emal_40438__isaa_29532__pinl_12828__rtpf_29_res) == (0); };
    { ; ; }
    if (SACp_emal_40434__pinl_12846__flat_415)
    {
      { { SACp_pinl_41968__emal_40514__hce_71 = 
# 4701 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 4701 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12866__hce_71 = SACp_pinl_41968__emal_40514__hce_71; }

    }
    else
    {
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern error in application of unblock: feature `id:ishp' in return value does not match feature `id' in a"); SACp_pinl_41969__emal_40515__hce_71__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12866__hce_71 = SACp_pinl_41969__emal_40515__hce_71__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_40433__pinl_12852__flat_421__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40433__pinl_12852__flat_421"); }; { if ((((6 + (SACp_emal_40433__pinl_12852__flat_421__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40433__pinl_12852__flat_421__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40433__pinl_12852__flat_421__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40433__pinl_12852__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40433__pinl_12852__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40433__pinl_12852__flat_421__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40433__pinl_12852__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40433__pinl_12852__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40433__pinl_12852__flat_421__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40433__pinl_12852__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40433__pinl_12852__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40433__pinl_12852__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40433__pinl_12852__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40433__pinl_12852__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40433__pinl_12852__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40433__pinl_12852__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40433__pinl_12852__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40433__pinl_12852__flat_421__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40433__pinl_12852__flat_421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40433__pinl_12852__flat_421__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__dim == (1)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_40433__pinl_12852__flat_421__dim == (1)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40433__pinl_12852__flat_421__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40433__pinl_12852__flat_421__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__sz - (((1) < 0) ? (-(1)) : (1));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40433__pinl_12852__flat_421__desc) & (-1 ^ (3))))[4]) = SACp_emal_40433__pinl_12852__flat_421__sz = SAC_size;
      if (!((SACp_emal_40433__pinl_12852__flat_421__sz >= 0))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 4742 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 4742 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4742 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 4742 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 4742 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 4742 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 4742 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 4742, __extension__ __PRETTY_FUNCTION__); }))
# 4742 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40433__pinl_12852__flat_421 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40433__pinl_12852__flat_421__sz * sizeof (*SACp_emal_40433__pinl_12852__flat_421)); break; case SAC_HM_multi_threaded: SACp_emal_40433__pinl_12852__flat_421 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40433__pinl_12852__flat_421__sz * sizeof (*SACp_emal_40433__pinl_12852__flat_421), 0); break; case SAC_HM_any_threaded: SACp_emal_40433__pinl_12852__flat_421 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40433__pinl_12852__flat_421__sz * sizeof (*SACp_emal_40433__pinl_12852__flat_421), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40433__pinl_12852__flat_421__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40433__pinl_12852__flat_421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40433__pinl_12852__flat_421__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 4749 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 4749 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40433__pinl_12852__flat_421[SAC_i] = ( SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40437__isaa_29533__pinl_12828__rtpf_29_res__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_40432__pinl_12851__flat_420__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40432__pinl_12851__flat_420"); }; { { if ((((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420)) + ((6 + (SACp_emal_40432__pinl_12851__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420)) + ((6 + (SACp_emal_40432__pinl_12851__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420)) + ((6 + (SACp_emal_40432__pinl_12851__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40432__pinl_12851__flat_420 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40432__pinl_12851__flat_420 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420)) + ((6 + (SACp_emal_40432__pinl_12851__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40432__pinl_12851__flat_420 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40432__pinl_12851__flat_420 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420)) + ((6 + (SACp_emal_40432__pinl_12851__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420)) + ((6 + (SACp_emal_40432__pinl_12851__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420)) + ((6 + (SACp_emal_40432__pinl_12851__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420)) + ((6 + (SACp_emal_40432__pinl_12851__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420)) + ((6 + (SACp_emal_40432__pinl_12851__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40432__pinl_12851__flat_420 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40432__pinl_12851__flat_420 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40432__pinl_12851__flat_420 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40432__pinl_12851__flat_420 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40432__pinl_12851__flat_420__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420, SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420), ((6 + (SACp_emal_40432__pinl_12851__flat_420__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40432__pinl_12851__flat_420__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40432__pinl_12851__flat_420__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40432__pinl_12851__flat_420__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40432__pinl_12851__flat_420__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40432__pinl_12851__flat_420__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 4782 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 4782 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_40433__pinl_12852__flat_421__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_40433__pinl_12852__flat_421__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40432__pinl_12851__flat_420[SAC_i] = ( SACp_emal_40433__pinl_12852__flat_421[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_40433__pinl_12852__flat_421); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40433__pinl_12852__flat_421__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40431__uprf_34467 = ( SACp_emal_40432__pinl_12851__flat_420[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    { { { if (((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420, ((((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420) - 1)->data1.arena)); } else { if (SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420, ((((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420, ((((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420) - 1)->data1.arena)); } } else { if (((((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420, ((((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420) - 1)->data1.arena)); } else { if (((((SACp_emal_40432__pinl_12851__flat_420__sz * sizeof (*SACp_emal_40432__pinl_12851__flat_420))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420, ((((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40432__pinl_12851__flat_420); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40432__pinl_12851__flat_420__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40431__uprf_34467 = (SACp_emal_40431__uprf_34467) - (SACp_emal_40453__uprf_28643); };
    { ; ; }
    ; ; { SACp_emal_40429__uprf_34463 = (SACp_emal_40431__uprf_34467) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_40428__pinl_12836__icc_3182__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40428__pinl_12836__icc_3182"); }; { { if ((((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182)) + ((6 + (SACp_emal_40428__pinl_12836__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182)) + ((6 + (SACp_emal_40428__pinl_12836__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182)) + ((6 + (SACp_emal_40428__pinl_12836__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40428__pinl_12836__icc_3182 = (
# 4819 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40428__pinl_12836__icc_3182 = (
# 4819 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182)) + ((6 + (SACp_emal_40428__pinl_12836__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40428__pinl_12836__icc_3182 = (
# 4819 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40428__pinl_12836__icc_3182 = (
# 4819 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182)) + ((6 + (SACp_emal_40428__pinl_12836__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182)) + ((6 + (SACp_emal_40428__pinl_12836__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182)) + ((6 + (SACp_emal_40428__pinl_12836__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182)) + ((6 + (SACp_emal_40428__pinl_12836__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182)) + ((6 + (SACp_emal_40428__pinl_12836__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40428__pinl_12836__icc_3182 = (
# 4819 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40428__pinl_12836__icc_3182 = (
# 4819 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40428__pinl_12836__icc_3182 = (
# 4819 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40428__pinl_12836__icc_3182 = (
# 4819 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 4819 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40428__pinl_12836__icc_3182__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182, SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182), ((6 + (SACp_emal_40428__pinl_12836__icc_3182__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40428__pinl_12836__icc_3182__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40428__pinl_12836__icc_3182__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40428__pinl_12836__icc_3182__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40428__pinl_12836__icc_3182__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40428__pinl_12836__icc_3182__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40428__pinl_12836__icc_3182[0] = SACp_emal_40429__uprf_34463; }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40428__pinl_12836__icc_3182__sz; SAC_i++) { if (( SACp_emal_40428__pinl_12836__icc_3182[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_40427__pinl_12849__flat_418 = SAC_all; }
    { { { if (((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182, ((((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182) - 1)->data1.arena)); } else { if (SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182, ((((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182, ((((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182) - 1)->data1.arena)); } } else { if (((((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182, ((((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182) - 1)->data1.arena)); } else { if (((((SACp_emal_40428__pinl_12836__icc_3182__sz * sizeof (*SACp_emal_40428__pinl_12836__icc_3182))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182, ((((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40428__pinl_12836__icc_3182); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40428__pinl_12836__icc_3182__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_40427__pinl_12849__flat_418)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12867__hce_70 = SACp_pinl_12866__hce_71; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern error in application of unblock: feature `id:ishp' in return value does not match feature `ishp' in a"); SACp_pinl_41971__emal_40513__hce_70__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12867__hce_70 = SACp_pinl_41971__emal_40513__hce_70__SSA0_1; }

    }
    if (SACp_emal_40434__pinl_12846__flat_415)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12868__hce_69 = SACp_pinl_12867__hce_70; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern error in application of unblock: feature `od:shp' in return value does not match argument od"); SACp_pinl_41973__emal_40512__hce_69__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12868__hce_69 = SACp_pinl_41973__emal_40512__hce_69__SSA0_1; }

    }
    ; ; { SACp_emal_40441__pinl_12370__icc_6051 = (SACp_emal_40441__pinl_12370__icc_6051) * (SACp_emal_40446__uprf_28635); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40425__pinl_13206__icc_6045 = ( SACp_emal_40436__pinl_12865_shp[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    { { { if (((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp, ((((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp) - 1)->data1.arena)); } else { if (SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp, ((((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp, ((((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp) - 1)->data1.arena)); } } else { if (((((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp, ((((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp) - 1)->data1.arena)); } else { if (((((SACp_emal_40436__pinl_12865_shp__sz * sizeof (*SACp_emal_40436__pinl_12865_shp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp, ((((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40436__pinl_12865_shp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40436__pinl_12865_shp__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40424__ctz_21603 = (SACp_emal_40441__pinl_12370__icc_6051) - (SACp_emal_40425__pinl_13206__icc_6045); };
    ; ; { SACp_emal_40423__pinl_13219__flat_3875 = (SACp_emal_40424__ctz_21603) == (0); };
    { ; ; }
    if (SACp_emal_40423__pinl_13219__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12869__hce_68 = SACp_pinl_12868__hce_69; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern post-condition of unblock failed"); SACp_pinl_41975__emal_40511__hce_68__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12869__hce_68 = SACp_pinl_41975__emal_40511__hce_68__SSA0_1; }

    }
    ; ; { SACp_emal_40425__pinl_13206__icc_6045 = (SACp_emal_40425__pinl_13206__icc_6045) - (SACp_emal_40441__pinl_12370__icc_6051); };
    { ; ; }
    ; ; { SACp_emal_40421__pinl_13018__flat_3875 = (SACp_emal_40425__pinl_13206__icc_6045) == (0); };
    { ; ; }
    if (SACp_emal_40421__pinl_13018__flat_3875)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12870__hce_67 = SACp_pinl_12869__hce_68; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern post-condition of unblock failedType pattern post-condition of unblock failed"); SACp_pinl_41977__emal_40510__hce_67__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_12870__hce_67 = SACp_pinl_41977__emal_40510__hce_67__SSA0_1; }

    }
    if (!SACp_pinl_12870__hce_67) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 49, 1, "Type pattern post-condition of unblock failed"); }
    ;



    _tcp_42009_SACp_emal_40499__pinl_7973__icc_6679__desc = SACp_emal_40499__pinl_7973__icc_6679__desc;
    _tcp_42009_SACp_emal_40499__pinl_7973__icc_6679__sz = SACp_emal_40499__pinl_7973__icc_6679__sz;
    _tcp_42009_SACp_emal_40499__pinl_7973__icc_6679__dim = SACp_emal_40499__pinl_7973__icc_6679__dim;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42009_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40499__pinl_7973__icc_6679__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42009_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_40499__pinl_7973__icc_6679__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42009_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[4]) = SACp_emal_40499__pinl_7973__icc_6679__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42009_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[3]) = SACp_emal_40499__pinl_7973__icc_6679__dim;
    { _tcp_42009_SACp_emal_40499__pinl_7973__icc_6679 = SACp_emal_40499__pinl_7973__icc_6679; }




    SACwf__MAIN_CLArray___EQ_EQ__i_S__i_S (&SACp_flat_88, &SACp_flat_88__desc, SACp_pinl_12828__rtpf_29_res, SACp_pinl_12828__rtpf_29_res__desc, _tcp_42009_SACp_emal_40499__pinl_7973__icc_6679, _tcp_42009_SACp_emal_40499__pinl_7973__icc_6679__desc);




    SACp_flat_88__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_88__desc) & (-1 ^ (3))))[4]);
    SACp_flat_88__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_88__desc) & (-1 ^ (3))))[3]);

    { { SACp_emal_40420__isaa_29574__flat_88 = SACp_flat_88__dim; }; }
    { { if (!((1 == SACp_emal_40419__isaa_29575__flat_88__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40419__isaa_29575__flat_88"); }; { if ((((6 + (SACp_emal_40419__isaa_29575__flat_88__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40419__isaa_29575__flat_88__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40419__isaa_29575__flat_88__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40419__isaa_29575__flat_88__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40419__isaa_29575__flat_88__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40419__isaa_29575__flat_88__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40419__isaa_29575__flat_88__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40419__isaa_29575__flat_88__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40419__isaa_29575__flat_88__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40419__isaa_29575__flat_88__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40419__isaa_29575__flat_88__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40419__isaa_29575__flat_88__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40419__isaa_29575__flat_88__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40419__isaa_29575__flat_88__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40419__isaa_29575__flat_88__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40419__isaa_29575__flat_88__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40419__isaa_29575__flat_88__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40419__isaa_29575__flat_88__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40419__isaa_29575__flat_88__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40419__isaa_29575__flat_88__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40419__isaa_29575__flat_88__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 21, 17, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40419__isaa_29575__flat_88__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40419__isaa_29575__flat_88__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_flat_88__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40419__isaa_29575__flat_88__desc) & (-1 ^ (3))))[4]) = SACp_emal_40419__isaa_29575__flat_88__sz = SAC_size;
      if (!((SACp_emal_40419__isaa_29575__flat_88__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 21, 17, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5014 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5014 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5014 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5014 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5014 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5014 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5014 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5014, __extension__ __PRETTY_FUNCTION__); }))
# 5014 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40419__isaa_29575__flat_88 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40419__isaa_29575__flat_88__sz * sizeof (*SACp_emal_40419__isaa_29575__flat_88)); break; case SAC_HM_multi_threaded: SACp_emal_40419__isaa_29575__flat_88 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40419__isaa_29575__flat_88__sz * sizeof (*SACp_emal_40419__isaa_29575__flat_88), 0); break; case SAC_HM_any_threaded: SACp_emal_40419__isaa_29575__flat_88 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40419__isaa_29575__flat_88__sz * sizeof (*SACp_emal_40419__isaa_29575__flat_88), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40419__isaa_29575__flat_88__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40419__isaa_29575__flat_88__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40419__isaa_29575__flat_88__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_flat_88__dim; SAC_i++) {
      { SACp_emal_40419__isaa_29575__flat_88[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_88__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { if (!((1 == SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40418__isaa_29577__pinl_13636__flat_283"); }; { { if ((((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283)) + ((6 + (SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283)) + ((6 + (SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283)) + ((6 + (SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40418__isaa_29577__pinl_13636__flat_283 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40418__isaa_29577__pinl_13636__flat_283 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283)) + ((6 + (SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40418__isaa_29577__pinl_13636__flat_283 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40418__isaa_29577__pinl_13636__flat_283 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283)) + ((6 + (SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283)) + ((6 + (SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283)) + ((6 + (SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283)) + ((6 + (SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283)) + ((6 + (SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40418__isaa_29577__pinl_13636__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40418__isaa_29577__pinl_13636__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40418__isaa_29577__pinl_13636__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40418__isaa_29577__pinl_13636__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40418__isaa_29577__pinl_13636__flat_283__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283, SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283), ((6 + (SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40418__isaa_29577__pinl_13636__flat_283__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40418__isaa_29577__pinl_13636__flat_283__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40418__isaa_29577__pinl_13636__flat_283__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 42, 945, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 42, 945, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40418__isaa_29577__pinl_13636__flat_283[0] = SACp_emal_40420__isaa_29574__flat_88; }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40419__isaa_29575__flat_88__sz; SAC_i++) { if (( SACp_emal_40419__isaa_29575__flat_88[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_40419__isaa_29575__flat_88"); } { SACp_emal_40417__pinl_13511__icc_5619_pred = ( SACp_emal_40419__isaa_29575__flat_88[SAC_i]); }; } SACp_emal_40417__pinl_13511__icc_5619_pred = SAC_all; }
    if (SACp_emal_40504__isaa_29429__rso_452_TheWorld <= SACp_emal_40420__isaa_29574__flat_88) { SACp_emal_40416__uprf_20741 = 1; } else { SACp_emal_40416__uprf_20741 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8976, "Scalar constraint `" "SACp_emal_40504__isaa_29429__rso_452_TheWorld" " (" "%d" ") <= " "SACp_emal_40420__isaa_29574__flat_88" " (" "%d" ")" "' violated", SACp_emal_40504__isaa_29429__rso_452_TheWorld, SACp_emal_40420__isaa_29574__flat_88); }
    { ; ; }
    { { SACp_emal_40415__uprf_20740 = SACp_emal_40504__isaa_29429__rso_452_TheWorld; } }
    { { if (!((1 == SACp_emal_40414__pinl_13602__idc_6817__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40414__pinl_13602__idc_6817"); }; { { if ((((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817)) + ((6 + (SACp_emal_40414__pinl_13602__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817)) + ((6 + (SACp_emal_40414__pinl_13602__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817)) + ((6 + (SACp_emal_40414__pinl_13602__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40414__pinl_13602__idc_6817 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40414__pinl_13602__idc_6817 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817)) + ((6 + (SACp_emal_40414__pinl_13602__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40414__pinl_13602__idc_6817 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40414__pinl_13602__idc_6817 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817)) + ((6 + (SACp_emal_40414__pinl_13602__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817)) + ((6 + (SACp_emal_40414__pinl_13602__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817)) + ((6 + (SACp_emal_40414__pinl_13602__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817)) + ((6 + (SACp_emal_40414__pinl_13602__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817)) + ((6 + (SACp_emal_40414__pinl_13602__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40414__pinl_13602__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40414__pinl_13602__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40414__pinl_13602__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40414__pinl_13602__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40414__pinl_13602__idc_6817__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817, SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817), ((6 + (SACp_emal_40414__pinl_13602__idc_6817__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40414__pinl_13602__idc_6817__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40414__pinl_13602__idc_6817__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40414__pinl_13602__idc_6817__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40414__pinl_13602__idc_6817__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40414__pinl_13602__idc_6817__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40414__pinl_13602__idc_6817[0] = SACp_emal_40415__uprf_20740; }

    { ; ; }
    if (!SACp_emal_40416__uprf_20741) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8912, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40413__pinl_19663__icc_5140 = ( SACp_emal_40414__pinl_13602__idc_6817[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    { { { if (((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817, ((((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817) - 1)->data1.arena)); } else { if (SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817, ((((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817, ((((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817) - 1)->data1.arena)); } } else { if (((((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817, ((((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817) - 1)->data1.arena)); } else { if (((((SACp_emal_40414__pinl_13602__idc_6817__sz * sizeof (*SACp_emal_40414__pinl_13602__idc_6817))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817, ((((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40414__pinl_13602__idc_6817); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40414__pinl_13602__idc_6817__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40412__pinl_19666__icc_5146 = ( SACp_emal_40418__isaa_29577__pinl_13636__flat_283[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    { { { if (((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283, ((((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283) - 1)->data1.arena)); } else { if (SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283, ((((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283, ((((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283) - 1)->data1.arena)); } } else { if (((((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283, ((((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283) - 1)->data1.arena)); } else { if (((((SACp_emal_40418__isaa_29577__pinl_13636__flat_283__sz * sizeof (*SACp_emal_40418__isaa_29577__pinl_13636__flat_283))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283, ((((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40418__isaa_29577__pinl_13636__flat_283); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40418__isaa_29577__pinl_13636__flat_283__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_40409__pinl_13575__icc_6808__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40409__pinl_13575__icc_6808"); }; { if ((((6 + (SACp_emal_40409__pinl_13575__icc_6808__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40409__pinl_13575__icc_6808__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40409__pinl_13575__icc_6808__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40409__pinl_13575__icc_6808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40409__pinl_13575__icc_6808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40409__pinl_13575__icc_6808__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40409__pinl_13575__icc_6808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40409__pinl_13575__icc_6808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40409__pinl_13575__icc_6808__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40409__pinl_13575__icc_6808__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40409__pinl_13575__icc_6808__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40409__pinl_13575__icc_6808__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40409__pinl_13575__icc_6808__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40409__pinl_13575__icc_6808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40409__pinl_13575__icc_6808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40409__pinl_13575__icc_6808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40409__pinl_13575__icc_6808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40409__pinl_13575__icc_6808__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40409__pinl_13575__icc_6808__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40409__pinl_13575__icc_6808__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40409__pinl_13575__icc_6808__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40409__pinl_13575__icc_6808__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40409__pinl_13575__icc_6808__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40412__pinl_19666__icc_5146;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40409__pinl_13575__icc_6808__desc) & (-1 ^ (3))))[4]) = SACp_emal_40409__pinl_13575__icc_6808__sz = SAC_size;
      if (!((SACp_emal_40409__pinl_13575__icc_6808__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5088 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5088 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5088 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5088 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5088 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5088 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5088 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5088, __extension__ __PRETTY_FUNCTION__); }))
# 5088 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40409__pinl_13575__icc_6808 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40409__pinl_13575__icc_6808__sz * sizeof (*SACp_emal_40409__pinl_13575__icc_6808)); break; case SAC_HM_multi_threaded: SACp_emal_40409__pinl_13575__icc_6808 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40409__pinl_13575__icc_6808__sz * sizeof (*SACp_emal_40409__pinl_13575__icc_6808), 0); break; case SAC_HM_any_threaded: SACp_emal_40409__pinl_13575__icc_6808 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40409__pinl_13575__icc_6808__sz * sizeof (*SACp_emal_40409__pinl_13575__icc_6808), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40409__pinl_13575__icc_6808__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40409__pinl_13575__icc_6808__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40409__pinl_13575__icc_6808__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_40409__pinl_13575__icc_6808_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_40409__pinl_13575__icc_6808_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_40413__pinl_19663__icc_5140;




      SACp_wlidx_39655__pinl_13575__icc_6808
        = SAC_schedule_start0 * SAC_SACp_emal_40409__pinl_13575__icc_6808_shpfac0;

      { int SAC_stop_SACp_pinl_13586__eat_6625 = SACp_emal_40413__pinl_19663__icc_5140; for (SACp_pinl_13586__eat_6625 = 0; SACp_pinl_13586__eat_6625 < SACp_emal_40413__pinl_19663__icc_5140;) {
     



      if (!((0 == (SACp_emal_40409__pinl_13575__icc_6808__dim - SACp_pinl_13584_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40409__pinl_13575__icc_6808_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "WL expression with illegal size found!"); };
      { SACp_emal_40409__pinl_13575__icc_6808[SACp_wlidx_39655__pinl_13575__icc_6808] = SACp_emal_40495__pinl_9872__eat_493__SSA6_1; };

      SACp_wlidx_39655__pinl_13575__icc_6808 = SACp_wlidx_39655__pinl_13575__icc_6808 + 1;
      SACp_pinl_13586__eat_6625 = SACp_pinl_13586__eat_6625 + 1;
      } }
# 5158 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_40413__pinl_19663__icc_5140;
      SAC_schedule_stop0 = SACp_emal_40412__pinl_19666__icc_5146;




      SACp_wlidx_39655__pinl_13575__icc_6808
        = SAC_schedule_start0 * SAC_SACp_emal_40409__pinl_13575__icc_6808_shpfac0;

      { int SAC_stop_SACp_pinl_13586__eat_6625 = SACp_emal_40412__pinl_19666__icc_5146; for (SACp_pinl_13586__eat_6625 = SACp_emal_40413__pinl_19663__icc_5140; SACp_pinl_13586__eat_6625 < SACp_emal_40412__pinl_19666__icc_5146;) {
     



      if (!((0 == (SACp_emal_40409__pinl_13575__icc_6808__dim - SACp_pinl_13584_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40409__pinl_13575__icc_6808_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_40409__pinl_13575__icc_6808[SACp_wlidx_39655__pinl_13575__icc_6808] = SACp_emal_40504__isaa_29429__rso_452_TheWorld; };

      SACp_wlidx_39655__pinl_13575__icc_6808 = SACp_wlidx_39655__pinl_13575__icc_6808 + 1;
      SACp_pinl_13586__eat_6625 = SACp_pinl_13586__eat_6625 + 1;
      } }
# 5187 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42020_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_40416__uprf_20741) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8912, "With-loop guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40409__pinl_13575__icc_6808__sz; SAC_i++) { if (( SACp_emal_40409__pinl_13575__icc_6808[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_40409__pinl_13575__icc_6808"); } { SACp_emal_40408__pinl_13513__icc_5618_pred = ( SACp_emal_40409__pinl_13575__icc_6808[SAC_i]); }; } SACp_emal_40408__pinl_13513__icc_5618_pred = SAC_all; }
    if (!SACp_emal_40417__pinl_13511__icc_5619_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    if (!SACp_emal_40408__pinl_13513__icc_5618_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    { { if (!((1 == SACp_emal_40407__pinl_13535_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40407__pinl_13535_new_shape"); }; { if ((((6 + (SACp_emal_40407__pinl_13535_new_shape__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40407__pinl_13535_new_shape__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40407__pinl_13535_new_shape__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40407__pinl_13535_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40407__pinl_13535_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40407__pinl_13535_new_shape__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40407__pinl_13535_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40407__pinl_13535_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40407__pinl_13535_new_shape__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40407__pinl_13535_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40407__pinl_13535_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40407__pinl_13535_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40407__pinl_13535_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40407__pinl_13535_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40407__pinl_13535_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40407__pinl_13535_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40407__pinl_13535_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40407__pinl_13535_new_shape__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40407__pinl_13535_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40407__pinl_13535_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_40419__isaa_29575__flat_88__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_40407__pinl_13535_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40407__pinl_13535_new_shape__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40407__pinl_13535_new_shape__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40419__isaa_29575__flat_88__sz - (((SACp_emal_40412__pinl_19666__icc_5146) < 0) ? (-(SACp_emal_40412__pinl_19666__icc_5146)) : (SACp_emal_40412__pinl_19666__icc_5146));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40407__pinl_13535_new_shape__desc) & (-1 ^ (3))))[4]) = SACp_emal_40407__pinl_13535_new_shape__sz = SAC_size;
      if (!((SACp_emal_40407__pinl_13535_new_shape__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5217 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5217 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5217 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5217 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5217 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5217 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5217 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5217, __extension__ __PRETTY_FUNCTION__); }))
# 5217 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40407__pinl_13535_new_shape = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40407__pinl_13535_new_shape__sz * sizeof (*SACp_emal_40407__pinl_13535_new_shape)); break; case SAC_HM_multi_threaded: SACp_emal_40407__pinl_13535_new_shape = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40407__pinl_13535_new_shape__sz * sizeof (*SACp_emal_40407__pinl_13535_new_shape), 0); break; case SAC_HM_any_threaded: SACp_emal_40407__pinl_13535_new_shape = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40407__pinl_13535_new_shape__sz * sizeof (*SACp_emal_40407__pinl_13535_new_shape), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40407__pinl_13535_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40407__pinl_13535_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40407__pinl_13535_new_shape__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 5224 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 5224 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_40412__pinl_19666__icc_5146;
      SAC_cond = (SACp_emal_40412__pinl_19666__icc_5146 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_40419__isaa_29575__flat_88__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3547, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_40419__isaa_29575__flat_88__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3547, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40407__pinl_13535_new_shape[SAC_i] = ( SACp_emal_40419__isaa_29575__flat_88[SAC_off + SAC_i]); };
      }
    }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40407__pinl_13535_new_shape__sz; SAC_i++) { if (( SACp_emal_40407__pinl_13535_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Non-negativity constraint violated " "for vector " "SACp_emal_40407__pinl_13535_new_shape"); } { SACp_emal_40406__pinl_13544__icc_5583_pred = ( SACp_emal_40407__pinl_13535_new_shape[SAC_i]); }; } SACp_emal_40406__pinl_13544__icc_5583_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40407__pinl_13535_new_shape__sz; SAC_i++) { if (( SACp_emal_40407__pinl_13535_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Non-negativity constraint violated " "for vector " "SACp_emal_40407__pinl_13535_new_shape"); } { SACp_emal_40405__pinl_13551__icc_5588_pred = ( SACp_emal_40407__pinl_13535_new_shape[SAC_i]); }; } SACp_emal_40405__pinl_13551__icc_5588_pred = SAC_all; }
    { { if (!((1 == SACp_emal_40404__pinl_13533__flat_421__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40404__pinl_13533__flat_421"); }; { if ((((6 + (SACp_emal_40404__pinl_13533__flat_421__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40404__pinl_13533__flat_421__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40404__pinl_13533__flat_421__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40404__pinl_13533__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40404__pinl_13533__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40404__pinl_13533__flat_421__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40404__pinl_13533__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40404__pinl_13533__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40404__pinl_13533__flat_421__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40404__pinl_13533__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40404__pinl_13533__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40404__pinl_13533__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40404__pinl_13533__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40404__pinl_13533__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40404__pinl_13533__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40404__pinl_13533__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40404__pinl_13533__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40404__pinl_13533__flat_421__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40404__pinl_13533__flat_421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40404__pinl_13533__flat_421__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40404__pinl_13533__flat_421__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_40404__pinl_13533__flat_421__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40404__pinl_13533__flat_421__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40407__pinl_13535_new_shape__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40404__pinl_13533__flat_421__desc) & (-1 ^ (3))))[4]) = SACp_emal_40404__pinl_13533__flat_421__sz = SAC_size * SACp_emal_40407__pinl_13535_new_shape__sz;
      if (!((SACp_emal_40404__pinl_13533__flat_421__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5258 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5258 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5258 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5258 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5258 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5258 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5258 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5258, __extension__ __PRETTY_FUNCTION__); }))
# 5258 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40404__pinl_13533__flat_421 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40404__pinl_13533__flat_421__sz * sizeof (*SACp_emal_40404__pinl_13533__flat_421)); break; case SAC_HM_multi_threaded: SACp_emal_40404__pinl_13533__flat_421 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40404__pinl_13533__flat_421__sz * sizeof (*SACp_emal_40404__pinl_13533__flat_421), 0); break; case SAC_HM_any_threaded: SACp_emal_40404__pinl_13533__flat_421 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40404__pinl_13533__flat_421__sz * sizeof (*SACp_emal_40404__pinl_13533__flat_421), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40404__pinl_13533__flat_421__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40404__pinl_13533__flat_421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40404__pinl_13533__flat_421__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_40404__pinl_13533__flat_421__sz; SAC_i++) { { SACp_emal_40404__pinl_13533__flat_421[SAC_i] = (0) * (( SACp_emal_40407__pinl_13535_new_shape[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40404__pinl_13533__flat_421__sz; SAC_i++) { if (( SACp_emal_40404__pinl_13533__flat_421[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Non-negativity constraint violated " "for vector " "SACp_emal_40404__pinl_13533__flat_421"); } { SACp_emal_40403__pinl_13553__icc_5582_pred = ( SACp_emal_40404__pinl_13533__flat_421[SAC_i]); }; } SACp_emal_40403__pinl_13553__icc_5582_pred = SAC_all; }
        if (SACp_emal_40404__pinl_13533__flat_421__dim != SACp_emal_40407__pinl_13535_new_shape__dim) {
      SACp_emal_40402__pinl_13555__icc_5584_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Arrays `" "SACp_emal_40404__pinl_13533__flat_421""' with shape %s ""And `" "SACp_emal_40407__pinl_13535_new_shape""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_40404__pinl_13533__flat_421__desc), SAC_PrintShape (SACp_emal_40407__pinl_13535_new_shape__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_40404__pinl_13533__flat_421__shp0 != SACp_emal_40407__pinl_13535_new_shape__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Arrays `" "SACp_emal_40404__pinl_13533__flat_421""' with shape %s ""And `" "SACp_emal_40407__pinl_13535_new_shape""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_40404__pinl_13533__flat_421__desc), SAC_PrintShape (SACp_emal_40407__pinl_13535_new_shape__desc));
      }
      SACp_emal_40402__pinl_13555__icc_5584_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40404__pinl_13533__flat_421__sz && SAC_i < SACp_emal_40407__pinl_13535_new_shape__sz; SAC_i++) { if (( SACp_emal_40404__pinl_13533__flat_421[SAC_i]) > ( SACp_emal_40407__pinl_13535_new_shape[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Vector constraint `" "SACp_emal_40404__pinl_13533__flat_421" " < " "SACp_emal_40407__pinl_13535_new_shape" "' violated"); } } SACp_emal_40401__pinl_13558__icc_5585_pred = SAC_all; }
    if (!SACp_emal_40405__pinl_13551__icc_5588_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40401__pinl_13558__icc_5585_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40402__pinl_13555__icc_5584_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40406__pinl_13544__icc_5583_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40403__pinl_13553__icc_5582_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    { { if (!((1 == SACp_pinl_13509_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_13509_iv"); }; { if ((((6 + (SACp_pinl_13509_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_13509_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_13509_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_13509_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_13509_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_13509_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_13509_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_13509_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_13509_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_13509_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_13509_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_13509_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_13509_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_13509_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_13509_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_13509_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_13509_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13509_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13509_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13509_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_13509_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_13509_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13509_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40409__pinl_13575__icc_6808__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13509_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_13509_iv__sz = SAC_size * SACp_emal_40409__pinl_13575__icc_6808__sz;
      if (!((SACp_pinl_13509_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5295 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5295 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5295 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5295 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5295 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5295 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5295 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5295, __extension__ __PRETTY_FUNCTION__); }))
# 5295 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_13509_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_13509_iv__sz * sizeof (*SACp_pinl_13509_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_13509_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_13509_iv__sz * sizeof (*SACp_pinl_13509_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_13509_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_13509_iv__sz * sizeof (*SACp_pinl_13509_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13509_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13509_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13509_iv__desc) & (-1 ^ (3))))[1]) = 0; } }



    { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_pinl_13503__icc_5622"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5299 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5299 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5299 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5299 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5299 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5299 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5299 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5299, __extension__ __PRETTY_FUNCTION__); }))
# 5299 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_13503__icc_5622__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_pinl_13503__icc_5622__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_pinl_13503__icc_5622__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13503__icc_5622__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13503__icc_5622__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13503__icc_5622__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13503__icc_5622__desc) & (-1 ^ (3))))[3]) = SACp_pinl_13503__icc_5622__dim = 0; }
    { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13503__icc_5622__desc) & (-1 ^ (3))))[0]) = 1; }
    SACp_pinl_13503__icc_5622__sz = 1;
    SACp_pinl_13503__icc_5622__dim = 0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13503__icc_5622__desc) & (-1 ^ (3))))[4]) = 1;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13503__icc_5622__desc) & (-1 ^ (3))))[3]) = 0;
    { { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5305 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5305 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5305 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5305 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5305 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5305 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5305 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5305, __extension__ __PRETTY_FUNCTION__); }))
# 5305 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_13503__icc_5622 = (
# 5305 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5305 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_pinl_13503__icc_5622__sz * sizeof (*SACp_pinl_13503__icc_5622)); break; case SAC_HM_multi_threaded: SACp_pinl_13503__icc_5622 = (
# 5305 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5305 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_13503__icc_5622__sz * sizeof (*SACp_pinl_13503__icc_5622), 0); break; case SAC_HM_any_threaded: SACp_pinl_13503__icc_5622 = (
# 5305 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5305 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_pinl_13503__icc_5622__sz * sizeof (*SACp_pinl_13503__icc_5622), 0); break; } } } { SACp_pinl_13503__icc_5622[0] = SACp_emal_40503__pinl_7932__icc_3220_pred; } }

    { int SAC_d = 0; int SAC_max_d = SACp_pinl_13509_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_13509_iv[SAC_d] = ( SACp_emal_40409__pinl_13575__icc_6808[SAC_d]); SAC_within_bounds = SAC_within_bounds && ( ( SACp_emal_40409__pinl_13575__icc_6808[SAC_d]) < ( SACp_emal_40419__isaa_29575__flat_88[SAC_d]) ); SAC_d++; }
    while (SAC_within_bounds) { SAC_in_gen = 1;
    if (SAC_in_gen) {
    ;
    { { if (!(((SACp_emal_40407__pinl_13535_new_shape__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_40392__pinl_13526__icc_5600"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5312 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5312 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5312 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5312 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5312 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5312 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5312 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5312, __extension__ __PRETTY_FUNCTION__); }))
# 5312 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40392__pinl_13526__icc_5600__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_40407__pinl_13535_new_shape__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_40392__pinl_13526__icc_5600__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_40407__pinl_13535_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_40392__pinl_13526__icc_5600__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_40407__pinl_13535_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[3]) = SACp_emal_40392__pinl_13526__icc_5600__dim = (SACp_emal_40407__pinl_13535_new_shape__sz) + (0); }



   
    if (!((SACp_emal_40407__pinl_13535_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_40392__pinl_13526__icc_5600__dim == SACp_emal_40407__pinl_13535_new_shape__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_40407__pinl_13535_new_shape__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_40407__pinl_13535_new_shape[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[4]) = SACp_emal_40392__pinl_13526__icc_5600__sz = SAC_size;
      if (!((SACp_emal_40392__pinl_13526__icc_5600__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5332 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5332 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5332 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5332 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5332 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5332 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5332 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5332, __extension__ __PRETTY_FUNCTION__); }))
# 5332 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40392__pinl_13526__icc_5600 = (
# 5332 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5332 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_40392__pinl_13526__icc_5600__sz * sizeof (*SACp_emal_40392__pinl_13526__icc_5600)); break; case SAC_HM_multi_threaded: SACp_emal_40392__pinl_13526__icc_5600 = (
# 5332 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5332 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40392__pinl_13526__icc_5600__sz * sizeof (*SACp_emal_40392__pinl_13526__icc_5600), 0); break; case SAC_HM_any_threaded: SACp_emal_40392__pinl_13526__icc_5600 = (
# 5332 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5332 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_40392__pinl_13526__icc_5600__sz * sizeof (*SACp_emal_40392__pinl_13526__icc_5600), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_13536_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_13536_iv"); }; { if ((((6 + (SACp_pinl_13536_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_13536_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_13536_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_13536_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_13536_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_13536_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_13536_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_13536_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_13536_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_13536_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_13536_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_13536_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_13536_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_13536_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_13536_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_13536_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_13536_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13536_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13536_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13536_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_13536_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_13536_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13536_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40404__pinl_13533__flat_421__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13536_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_13536_iv__sz = SAC_size * SACp_emal_40404__pinl_13533__flat_421__sz;
      if (!((SACp_pinl_13536_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5347 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5347 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5347 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5347 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5347 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5347 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5347 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5347, __extension__ __PRETTY_FUNCTION__); }))
# 5347 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_13536_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_13536_iv__sz * sizeof (*SACp_pinl_13536_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_13536_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_13536_iv__sz * sizeof (*SACp_pinl_13536_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_13536_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_13536_iv__sz * sizeof (*SACp_pinl_13536_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13536_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13536_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13536_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_13536_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_13536_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_40392__pinl_13526__icc_5600__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_40392__pinl_13526__icc_5600_shpfac0; SAC_d = SACp_emal_40392__pinl_13526__icc_5600__dim - 1; SACp_wlidx_39656__pinl_13526__icc_5600 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_40392__pinl_13526__icc_5600_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_40404__pinl_13533__flat_421[SAC_d]) <= ( SACp_pinl_13536_iv[SAC_d])) && (( SACp_pinl_13536_iv[SAC_d]) < ( SACp_emal_40407__pinl_13535_new_shape[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!((1 == SACp_emal_40398__pinl_13537_new_idx__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40398__pinl_13537_new_idx"); }; { if ((((6 + (SACp_emal_40398__pinl_13537_new_idx__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40398__pinl_13537_new_idx__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40398__pinl_13537_new_idx__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40398__pinl_13537_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40398__pinl_13537_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40398__pinl_13537_new_idx__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40398__pinl_13537_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40398__pinl_13537_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40398__pinl_13537_new_idx__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40398__pinl_13537_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40398__pinl_13537_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40398__pinl_13537_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40398__pinl_13537_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40398__pinl_13537_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40398__pinl_13537_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40398__pinl_13537_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40398__pinl_13537_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40398__pinl_13537_new_idx__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40398__pinl_13537_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40398__pinl_13537_new_idx__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_pinl_13509_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_pinl_13536_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_40398__pinl_13537_new_idx__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40398__pinl_13537_new_idx__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40398__pinl_13537_new_idx__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_13509_iv__sz + SACp_pinl_13536_iv__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40398__pinl_13537_new_idx__desc) & (-1 ^ (3))))[4]) = SACp_emal_40398__pinl_13537_new_idx__sz = SAC_size;
      if (!((SACp_emal_40398__pinl_13537_new_idx__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5380 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5380 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5380 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5380 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5380 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5380 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5380 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5380, __extension__ __PRETTY_FUNCTION__); }))
# 5380 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40398__pinl_13537_new_idx = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40398__pinl_13537_new_idx__sz * sizeof (*SACp_emal_40398__pinl_13537_new_idx)); break; case SAC_HM_multi_threaded: SACp_emal_40398__pinl_13537_new_idx = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40398__pinl_13537_new_idx__sz * sizeof (*SACp_emal_40398__pinl_13537_new_idx), 0); break; case SAC_HM_any_threaded: SACp_emal_40398__pinl_13537_new_idx = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40398__pinl_13537_new_idx__sz * sizeof (*SACp_emal_40398__pinl_13537_new_idx), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40398__pinl_13537_new_idx__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40398__pinl_13537_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40398__pinl_13537_new_idx__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACp_pinl_13509_iv__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_40398__pinl_13537_new_idx[SAC_i] = ( SACp_pinl_13509_iv[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_pinl_13536_iv__sz; SAC_i++) { { SACp_emal_40398__pinl_13537_new_idx[SAC_off + SAC_i] = ( SACp_pinl_13536_iv[SAC_i]); }; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }
    if ((SACp_emal_40398__pinl_13537_new_idx__dim == 1) && (SACp_emal_40398__pinl_13537_new_idx__shp0 == SACp_flat_88__dim)) { SACp_emal_40397__pinl_13560__icc_5589_pred = 1; } else { SACp_emal_40397__pinl_13560__icc_5589_pred = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays " "SACp_emal_40398__pinl_13537_new_idx" " and " "SACp_flat_88" " do not adhere to shape matches dim constraint"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40398__pinl_13537_new_idx__sz; SAC_i++) { if (( SACp_emal_40398__pinl_13537_new_idx[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Non-negativity constraint violated " "for vector " "SACp_emal_40398__pinl_13537_new_idx"); } { SACp_emal_40396__pinl_13562__icc_5590_pred = ( SACp_emal_40398__pinl_13537_new_idx[SAC_i]); }; } SACp_emal_40396__pinl_13562__icc_5590_pred = SAC_all; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }



    if ((SACp_emal_40398__pinl_13537_new_idx__dim != 1) && (SACp_emal_40398__pinl_13537_new_idx__shp0 != SACp_flat_88__dim)) {
      SACp_emal_40395__pinl_13564__icc_5591_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays `" "SACp_emal_40398__pinl_13537_new_idx""' with shape %s ""And `" "SACp_flat_88""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_40398__pinl_13537_new_idx__desc), SAC_PrintShape (SACp_flat_88__desc));
    }
    else {
      int SAC_all = 1; for (int SAC_i = 0; SAC_i < SACp_flat_88__dim; SAC_i++) {
        if (( SACp_emal_40398__pinl_13537_new_idx[SAC_i]) >= (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_88__desc) & (-1 ^ (3))))[(6 + (SAC_i))])) {
          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays `" "SACp_emal_40398__pinl_13537_new_idx""' with shape %s ""And `" "SACp_flat_88""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_40398__pinl_13537_new_idx__desc), SAC_PrintShape (SACp_flat_88__desc));
        }
      }
      SACp_emal_40395__pinl_13564__icc_5591_pred = SAC_all;
    }

    if (!SACp_emal_40395__pinl_13564__icc_5591_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_40396__pinl_13562__icc_5590_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_40397__pinl_13560__icc_5589_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
    ;

    }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      for (SAC_i = 0; SAC_i < SACp_emal_40398__pinl_13537_new_idx__sz; SAC_i++)
      {

        SAC_l = ( SACp_emal_40419__isaa_29575__flat_88[SAC_i]) * SAC_l + ( SACp_emal_40398__pinl_13537_new_idx[SAC_i]);
      }
      for (SAC_i = SACp_emal_40398__pinl_13537_new_idx__sz; SAC_i < SACp_emal_40419__isaa_29575__flat_88__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_40419__isaa_29575__flat_88[SAC_i]);
      }
      SACp_emal_40394__ivesli_39695 = SAC_l;
    }

    { { free (SACp_emal_40398__pinl_13537_new_idx); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40398__pinl_13537_new_idx__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40393__pinl_13522__icc_5594 = ( SACp_flat_88[SACp_emal_40394__ivesli_39695]); }

    { ; ; }
    if (!SACp_emal_40395__pinl_13564__icc_5591_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_40396__pinl_13562__icc_5590_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_40397__pinl_13560__icc_5589_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_40392__pinl_13526__icc_5600__dim - SACp_pinl_13536_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3641, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_40392__pinl_13526__icc_5600_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3641, "WL expression with illegal size found!"); };
    { SACp_emal_40392__pinl_13526__icc_5600[SACp_wlidx_39656__pinl_13526__icc_5600] = SACp_emal_40393__pinl_13522__icc_5594; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_40392__pinl_13526__icc_5600__dim - SACp_pinl_13536_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_40392__pinl_13526__icc_5600_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "WL expression with illegal size found!"); };
    { SACp_emal_40392__pinl_13526__icc_5600[SACp_wlidx_39656__pinl_13526__icc_5600] = SACp_emal_40494__pinl_9699__flat_420; };

    }
    SACp_wlidx_39656__pinl_13526__icc_5600 = SACp_wlidx_39656__pinl_13526__icc_5600 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_13536_iv[SAC_d] = ( SACp_pinl_13536_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_13536_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_13536_iv[SAC_d] = 0; SAC_d--; SACp_pinl_13536_iv[SAC_d] = ( SACp_pinl_13536_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_13536_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40392__pinl_13526__icc_5600__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_13536_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13536_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_40405__pinl_13551__icc_5588_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40401__pinl_13558__icc_5585_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40402__pinl_13555__icc_5584_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40406__pinl_13544__icc_5583_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40403__pinl_13553__icc_5582_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }



    SACwf_ArrayArith___AM__bl_S__bl_S (&SACp_pinl_13516__ea_6942__flat_6601, &SACp_pinl_13516__ea_6942__flat_6601__desc, SACp_pinl_13503__icc_5622, SACp_pinl_13503__icc_5622__desc, SACp_emal_40392__pinl_13526__icc_5600, SACp_emal_40392__pinl_13526__icc_5600__desc);




    SACp_pinl_13516__ea_6942__flat_6601__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13516__ea_6942__flat_6601__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_13516__ea_6942__flat_6601__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13516__ea_6942__flat_6601__desc) & (-1 ^ (3))))[3]);




    ;




    SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601__desc = SACp_pinl_13516__ea_6942__flat_6601__desc;
    SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601__sz = SACp_pinl_13516__ea_6942__flat_6601__sz;
    SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601__dim = SACp_pinl_13516__ea_6942__flat_6601__dim;
    ;
    { SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601 = SACp_pinl_13516__ea_6942__flat_6601; }




    SACp_pinl_13503__icc_5622__desc = SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601__desc;
    SACp_pinl_13503__icc_5622__sz = SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601__sz;
    SACp_pinl_13503__icc_5622__dim = SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601__dim;
    ;
    { SACp_pinl_13503__icc_5622 = SACp_ufiv_40263__pinl_13516__ea_6942__flat_6601; }

    }
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_13509_iv[SAC_d] = ( SACp_pinl_13509_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_13509_iv[SAC_d]) == ( SACp_emal_40419__isaa_29575__flat_88[SAC_d]))) { SACp_pinl_13509_iv[SAC_d] = ( SACp_emal_40409__pinl_13575__icc_6808[SAC_d]); SAC_d--; SACp_pinl_13509_iv[SAC_d] = ( SACp_pinl_13509_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_13509_iv[SAC_d]) < ( SACp_emal_40419__isaa_29575__flat_88[SAC_d]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_emal_40409__pinl_13575__icc_6808); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40409__pinl_13575__icc_6808__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_flat_88); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_flat_88__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_pinl_13509_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13509_iv__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_40404__pinl_13533__flat_421); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40404__pinl_13533__flat_421__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_40407__pinl_13535_new_shape); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40407__pinl_13535_new_shape__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_40419__isaa_29575__flat_88); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40419__isaa_29575__flat_88__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_40417__pinl_13511__icc_5619_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    if (!SACp_emal_40408__pinl_13513__icc_5618_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { if (!((SACp_pinl_13503__icc_5622__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_40391__flat_87 = ( SACp_pinl_13503__icc_5622[0]); } }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13503__icc_5622__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_13503__icc_5622); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_13503__icc_5622__desc) & (-1 ^ (3))))); } } } } else { } }



    SACf_ScalarIO__print__bl (SACp_emal_40391__flat_87);




    if (!((_tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__dim == (2)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__desc = SACp_emal_40499__pinl_7973__icc_6679__desc;
    _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__shp0 = SACp_emal_40499__pinl_7973__icc_6679__shp0;
    _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__shp1 = SACp_emal_40499__pinl_7973__icc_6679__shp1;
    _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__sz = SACp_emal_40499__pinl_7973__icc_6679__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40499__pinl_7973__icc_6679__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_40499__pinl_7973__icc_6679__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[4]) = SACp_emal_40499__pinl_7973__icc_6679__sz;
    { _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679 = SACp_emal_40499__pinl_7973__icc_6679; }




    SACf__MAIN___rtpf_13_impl_block__i_X_X__i_0 (&SACp_pinl_14290__rtpf_15_res, &SACp_pinl_14290__rtpf_15_res__desc, _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679, _tcp_42008_SACp_emal_40499__pinl_7973__icc_6679__desc);




    SACp_pinl_14290__rtpf_15_res__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14290__rtpf_15_res__desc) & (-1 ^ (3))))[(6 + (0))]);
    SACp_pinl_14290__rtpf_15_res__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14290__rtpf_15_res__desc) & (-1 ^ (3))))[(6 + (1))]);
    SACp_pinl_14290__rtpf_15_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14290__rtpf_15_res__desc) & (-1 ^ (3))))[4]);

    { { if (!((1 == SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res"); }; { { if ((((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res)) + ((6 + (SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res)) + ((6 + (SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res)) + ((6 + (SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res)) + ((6 + (SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res)) + ((6 + (SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res)) + ((6 + (SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res)) + ((6 + (SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res)) + ((6 + (SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res)) + ((6 + (SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res, SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res), ((6 + (SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res[0] = SACp_pinl_14290__rtpf_15_res__shp0; };
    { SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res[1] = SACp_pinl_14290__rtpf_15_res__shp1; };




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40389__uprf_28622 = ( SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40388__uprf_28627 = ( SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res[SACp_emal_40495__pinl_9872__eat_493__SSA6_1]); }

    { { { if (((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res) - 1)->data1.arena)); } else { if (SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res) - 1)->data1.arena)); } } else { if (((((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res) - 1)->data1.arena)); } else { if (((((SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__sz * sizeof (*SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res, ((((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40390__isaa_29634__pinl_14290__rtpf_15_res__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40387__esd_33665 = (-20) + (SACp_emal_40389__uprf_28622); };
    ; ; { SACp_emal_40386__uprf_28615 = (SACp_emal_40387__esd_33665) == (0); };
    { ; ; }
    ; ; { SACp_emal_40385__esd_33664 = (-12) + (SACp_emal_40388__uprf_28627); };
    ; ; { SACp_emal_40384__uprf_28618 = (SACp_emal_40385__esd_33664) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_40383__pinl_14301__icc_3018__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40383__pinl_14301__icc_3018"); }; { { if ((((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018)) + ((6 + (SACp_emal_40383__pinl_14301__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018)) + ((6 + (SACp_emal_40383__pinl_14301__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018)) + ((6 + (SACp_emal_40383__pinl_14301__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40383__pinl_14301__icc_3018 = (
# 5628 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40383__pinl_14301__icc_3018 = (
# 5628 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018)) + ((6 + (SACp_emal_40383__pinl_14301__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40383__pinl_14301__icc_3018 = (
# 5628 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40383__pinl_14301__icc_3018 = (
# 5628 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018)) + ((6 + (SACp_emal_40383__pinl_14301__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018)) + ((6 + (SACp_emal_40383__pinl_14301__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018)) + ((6 + (SACp_emal_40383__pinl_14301__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018)) + ((6 + (SACp_emal_40383__pinl_14301__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018)) + ((6 + (SACp_emal_40383__pinl_14301__icc_3018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40383__pinl_14301__icc_3018 = (
# 5628 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40383__pinl_14301__icc_3018 = (
# 5628 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40383__pinl_14301__icc_3018 = (
# 5628 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40383__pinl_14301__icc_3018 = (
# 5628 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5628 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40383__pinl_14301__icc_3018__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018, SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018), ((6 + (SACp_emal_40383__pinl_14301__icc_3018__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40383__pinl_14301__icc_3018__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40383__pinl_14301__icc_3018__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40383__pinl_14301__icc_3018__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40383__pinl_14301__icc_3018__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40383__pinl_14301__icc_3018__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40383__pinl_14301__icc_3018[0] = SACp_emal_40386__uprf_28615; }
    { SACp_emal_40383__pinl_14301__icc_3018[1] = SACp_emal_40384__uprf_28618; }

    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40383__pinl_14301__icc_3018__sz; SAC_i++) { if (( SACp_emal_40383__pinl_14301__icc_3018[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_40382__pinl_14317__flat_214 = SAC_all; }
    { { { if (((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018, ((((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018) - 1)->data1.arena)); } else { if (SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018, ((((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018, ((((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018) - 1)->data1.arena)); } } else { if (((((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018, ((((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018) - 1)->data1.arena)); } else { if (((((SACp_emal_40383__pinl_14301__icc_3018__sz * sizeof (*SACp_emal_40383__pinl_14301__icc_3018))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018, ((((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40383__pinl_14301__icc_3018); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40383__pinl_14301__icc_3018__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_40382__pinl_14317__flat_214)
    {
      ;
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14339__hce_53 = SACp_emal_40503__pinl_7932__icc_3220_pred; }

    }
    else
    {
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Type pattern error in application of block: feature `id:ishp' in return value does not match feature `ishp' in a"); SACp_pinl_41979__emal_40509__hce_53__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14339__hce_53 = SACp_pinl_41979__emal_40509__hce_53__SSA0_1; }

    }
    if (!SACp_pinl_14339__hce_53) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 36, 1, "Type pattern post-condition of block failed"); }
    ;



    SACp_flat_97__desc = SACp_pinl_14290__rtpf_15_res__desc;
    SACp_flat_97__sz = SACp_pinl_14290__rtpf_15_res__sz;
    SACp_flat_97__dim = SACp_pinl_14290__rtpf_15_res__dim;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_97__desc) & (-1 ^ (3))))[3]) = SACp_pinl_14290__rtpf_15_res__dim;
    { SACp_flat_97 = SACp_pinl_14290__rtpf_15_res; }




    SACf__MAIN___rtpf_27_impl_unblock__i_S__i (&SACp_pinl_14949__rtpf_29_res, &SACp_pinl_14949__rtpf_29_res__desc, SACp_flat_97, SACp_flat_97__desc, SACp_emal_40504__isaa_29429__rso_452_TheWorld);




    SACp_pinl_14949__rtpf_29_res__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_14949__rtpf_29_res__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))[3]);

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_40381__isaa_29641__pinl_14949__rtpf_29_res = SACp_pinl_14949__rtpf_29_res__dim; }; }
    { { if (!((1 == SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res"); }; { if ((((6 + (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_14949__rtpf_29_res__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))[4]) = SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__sz = SAC_size;
      if (!((SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5721 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5721 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5721 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5721 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5721 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5721 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5721 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5721, __extension__ __PRETTY_FUNCTION__); }))
# 5721 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__sz * sizeof (*SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res)); break; case SAC_HM_multi_threaded: SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__sz * sizeof (*SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res), 0); break; case SAC_HM_any_threaded: SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__sz * sizeof (*SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_pinl_14949__rtpf_29_res__dim; SAC_i++) {
      { SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; ; { SACp_emal_40381__isaa_29641__pinl_14949__rtpf_29_res = (2) - (SACp_emal_40381__isaa_29641__pinl_14949__rtpf_29_res); };
    ; ; { SACp_emal_40378__pinl_14967__flat_415 = (SACp_emal_40381__isaa_29641__pinl_14949__rtpf_29_res) == (0); };
    { ; ; }
    if (SACp_emal_40378__pinl_14967__flat_415)
    {
      { { SACp_pinl_41982__emal_40507__hce_71 = 
# 5735 "/home/rubenhensen/sac/a.out.c" 3 4
     1
# 5735 "/home/rubenhensen/sac/a.out.c"
     ; }; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14987__hce_71 = SACp_pinl_41982__emal_40507__hce_71; }

    }
    else
    {
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern error in application of unblock: feature `id:ishp' in return value does not match feature `id' in a"); SACp_pinl_41983__emal_40508__hce_71__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14987__hce_71 = SACp_pinl_41983__emal_40508__hce_71__SSA0_1; }

    }
    { { if (!((1 == SACp_emal_40377__pinl_14972__flat_420__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40377__pinl_14972__flat_420"); }; { { if ((((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420)) + ((6 + (SACp_emal_40377__pinl_14972__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420)) + ((6 + (SACp_emal_40377__pinl_14972__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420)) + ((6 + (SACp_emal_40377__pinl_14972__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40377__pinl_14972__flat_420 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40377__pinl_14972__flat_420 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420)) + ((6 + (SACp_emal_40377__pinl_14972__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40377__pinl_14972__flat_420 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40377__pinl_14972__flat_420 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420)) + ((6 + (SACp_emal_40377__pinl_14972__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420)) + ((6 + (SACp_emal_40377__pinl_14972__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420)) + ((6 + (SACp_emal_40377__pinl_14972__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420)) + ((6 + (SACp_emal_40377__pinl_14972__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420)) + ((6 + (SACp_emal_40377__pinl_14972__flat_420__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40377__pinl_14972__flat_420 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40377__pinl_14972__flat_420 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40377__pinl_14972__flat_420 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40377__pinl_14972__flat_420 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40377__pinl_14972__flat_420__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420, SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420), ((6 + (SACp_emal_40377__pinl_14972__flat_420__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40377__pinl_14972__flat_420__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40377__pinl_14972__flat_420__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40377__pinl_14972__flat_420__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40377__pinl_14972__flat_420__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40377__pinl_14972__flat_420__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 5774 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 5774 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 2;
      SAC_cond = (2 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__sz))) { SAC_RuntimeWarningLoc ("week4.sac", 1, 1, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40377__pinl_14972__flat_420[SAC_i] = ( SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40380__isaa_29642__pinl_14949__rtpf_29_res__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40376__uprf_34454 = ( SACp_emal_40377__pinl_14972__flat_420[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40375__uprf_34459 = ( SACp_emal_40377__pinl_14972__flat_420[SACp_emal_40495__pinl_9872__eat_493__SSA6_1]); }

    { { { if (((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420, ((((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420) - 1)->data1.arena)); } else { if (SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420, ((((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420, ((((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420) - 1)->data1.arena)); } } else { if (((((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420, ((((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420) - 1)->data1.arena)); } else { if (((((SACp_emal_40377__pinl_14972__flat_420__sz * sizeof (*SACp_emal_40377__pinl_14972__flat_420))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420, ((((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40377__pinl_14972__flat_420); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40377__pinl_14972__flat_420__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40376__uprf_34454 = (SACp_emal_40376__uprf_34454) - (SACp_emal_40389__uprf_28622); };
    { ; ; }
    ; ; { SACp_emal_40373__uprf_34447 = (SACp_emal_40376__uprf_34454) == (0); };
    { ; ; }
    ; ; { SACp_emal_40375__uprf_34459 = (SACp_emal_40375__uprf_34459) - (SACp_emal_40388__uprf_28627); };
    { ; ; }
    ; ; { SACp_emal_40371__uprf_34450 = (SACp_emal_40375__uprf_34459) == (0); };
    { ; ; }
    { { if (!((1 == SACp_emal_40370__pinl_14957__icc_3182__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40370__pinl_14957__icc_3182"); }; { { if ((((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182)) + ((6 + (SACp_emal_40370__pinl_14957__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182)) + ((6 + (SACp_emal_40370__pinl_14957__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182)) + ((6 + (SACp_emal_40370__pinl_14957__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40370__pinl_14957__icc_3182 = (
# 5830 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40370__pinl_14957__icc_3182 = (
# 5830 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182)) + ((6 + (SACp_emal_40370__pinl_14957__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40370__pinl_14957__icc_3182 = (
# 5830 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40370__pinl_14957__icc_3182 = (
# 5830 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182)) + ((6 + (SACp_emal_40370__pinl_14957__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182)) + ((6 + (SACp_emal_40370__pinl_14957__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182)) + ((6 + (SACp_emal_40370__pinl_14957__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182)) + ((6 + (SACp_emal_40370__pinl_14957__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182)) + ((6 + (SACp_emal_40370__pinl_14957__icc_3182__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40370__pinl_14957__icc_3182 = (
# 5830 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40370__pinl_14957__icc_3182 = (
# 5830 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40370__pinl_14957__icc_3182 = (
# 5830 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40370__pinl_14957__icc_3182 = (
# 5830 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 5830 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40370__pinl_14957__icc_3182__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182, SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182), ((6 + (SACp_emal_40370__pinl_14957__icc_3182__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40370__pinl_14957__icc_3182__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40370__pinl_14957__icc_3182__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40370__pinl_14957__icc_3182__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40370__pinl_14957__icc_3182__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40370__pinl_14957__icc_3182__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40370__pinl_14957__icc_3182[0] = SACp_emal_40373__uprf_34447; }
    { SACp_emal_40370__pinl_14957__icc_3182[1] = SACp_emal_40371__uprf_34450; }

    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40370__pinl_14957__icc_3182__sz; SAC_i++) { if (( SACp_emal_40370__pinl_14957__icc_3182[SAC_i]) == 0) { SAC_all = 0; break; } } SACp_emal_40369__pinl_14970__flat_418 = SAC_all; }
    { { { if (((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182, ((((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182) - 1)->data1.arena)); } else { if (SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182, ((((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182, ((((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182) - 1)->data1.arena)); } } else { if (((((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182, ((((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182) - 1)->data1.arena)); } else { if (((((SACp_emal_40370__pinl_14957__icc_3182__sz * sizeof (*SACp_emal_40370__pinl_14957__icc_3182))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182, ((((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40370__pinl_14957__icc_3182); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40370__pinl_14957__icc_3182__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_40369__pinl_14970__flat_418)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14988__hce_70 = SACp_pinl_14987__hce_71; }

    }
    else
    {
      { ; ; }
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern error in application of unblock: feature `id:ishp' in return value does not match feature `ishp' in a"); SACp_pinl_41985__emal_40506__hce_70__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14988__hce_70 = SACp_pinl_41985__emal_40506__hce_70__SSA0_1; }

    }
    if (SACp_emal_40378__pinl_14967__flat_415)
    {
      { ; ; }



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14989__hce_69 = SACp_pinl_14988__hce_70; }

    }
    else
    {
      ;
      { ; ; }
      SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Type pattern error in application of unblock: feature `od:shp' in return value does not match argument od"); SACp_pinl_41987__emal_40505__hce_69__SSA0_1 = 0;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
      ;
      ;
      ;
      { SACp_pinl_14989__hce_69 = SACp_pinl_41987__emal_40505__hce_69__SSA0_1; }

    }
    if (!SACp_pinl_14989__hce_69) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 49, 1, "Type pattern post-condition of unblock failed"); }
    ;



    _tcp_42007_SACp_emal_40499__pinl_7973__icc_6679__desc = SACp_emal_40499__pinl_7973__icc_6679__desc;
    _tcp_42007_SACp_emal_40499__pinl_7973__icc_6679__sz = SACp_emal_40499__pinl_7973__icc_6679__sz;
    _tcp_42007_SACp_emal_40499__pinl_7973__icc_6679__dim = SACp_emal_40499__pinl_7973__icc_6679__dim;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42007_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40499__pinl_7973__icc_6679__shp0;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42007_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_40499__pinl_7973__icc_6679__shp1;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42007_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[4]) = SACp_emal_40499__pinl_7973__icc_6679__sz;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42007_SACp_emal_40499__pinl_7973__icc_6679__desc) & (-1 ^ (3))))[3]) = SACp_emal_40499__pinl_7973__icc_6679__dim;
    { _tcp_42007_SACp_emal_40499__pinl_7973__icc_6679 = SACp_emal_40499__pinl_7973__icc_6679; }




    SACwf__MAIN_CLArray___EQ_EQ__i_S__i_S (&SACp_flat_95, &SACp_flat_95__desc, SACp_pinl_14949__rtpf_29_res, SACp_pinl_14949__rtpf_29_res__desc, _tcp_42007_SACp_emal_40499__pinl_7973__icc_6679, _tcp_42007_SACp_emal_40499__pinl_7973__icc_6679__desc);




    SACp_flat_95__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_95__desc) & (-1 ^ (3))))[4]);
    SACp_flat_95__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_95__desc) & (-1 ^ (3))))[3]);

    { { SACp_emal_40368__isaa_29668__flat_95 = SACp_flat_95__dim; }; }
    { { if (!((1 == SACp_emal_40367__isaa_29669__flat_95__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40367__isaa_29669__flat_95"); }; { if ((((6 + (SACp_emal_40367__isaa_29669__flat_95__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40367__isaa_29669__flat_95__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40367__isaa_29669__flat_95__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40367__isaa_29669__flat_95__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40367__isaa_29669__flat_95__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40367__isaa_29669__flat_95__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40367__isaa_29669__flat_95__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40367__isaa_29669__flat_95__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40367__isaa_29669__flat_95__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40367__isaa_29669__flat_95__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40367__isaa_29669__flat_95__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40367__isaa_29669__flat_95__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40367__isaa_29669__flat_95__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40367__isaa_29669__flat_95__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40367__isaa_29669__flat_95__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40367__isaa_29669__flat_95__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40367__isaa_29669__flat_95__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40367__isaa_29669__flat_95__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40367__isaa_29669__flat_95__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40367__isaa_29669__flat_95__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40367__isaa_29669__flat_95__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 22, 17, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40367__isaa_29669__flat_95__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40367__isaa_29669__flat_95__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_flat_95__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40367__isaa_29669__flat_95__desc) & (-1 ^ (3))))[4]) = SACp_emal_40367__isaa_29669__flat_95__sz = SAC_size;
      if (!((SACp_emal_40367__isaa_29669__flat_95__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 22, 17, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 5946 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 5946 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5946 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 5946 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 5946 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 5946 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 5946 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 5946, __extension__ __PRETTY_FUNCTION__); }))
# 5946 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40367__isaa_29669__flat_95 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40367__isaa_29669__flat_95__sz * sizeof (*SACp_emal_40367__isaa_29669__flat_95)); break; case SAC_HM_multi_threaded: SACp_emal_40367__isaa_29669__flat_95 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40367__isaa_29669__flat_95__sz * sizeof (*SACp_emal_40367__isaa_29669__flat_95), 0); break; case SAC_HM_any_threaded: SACp_emal_40367__isaa_29669__flat_95 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40367__isaa_29669__flat_95__sz * sizeof (*SACp_emal_40367__isaa_29669__flat_95), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40367__isaa_29669__flat_95__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40367__isaa_29669__flat_95__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40367__isaa_29669__flat_95__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACp_flat_95__dim; SAC_i++) {
      { SACp_emal_40367__isaa_29669__flat_95[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_95__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    { { if (!((1 == SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40366__isaa_29671__pinl_15637__flat_283"); }; { { if ((((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283)) + ((6 + (SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283)) + ((6 + (SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283)) + ((6 + (SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40366__isaa_29671__pinl_15637__flat_283 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40366__isaa_29671__pinl_15637__flat_283 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283)) + ((6 + (SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40366__isaa_29671__pinl_15637__flat_283 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40366__isaa_29671__pinl_15637__flat_283 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283)) + ((6 + (SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283)) + ((6 + (SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283)) + ((6 + (SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283)) + ((6 + (SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283)) + ((6 + (SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40366__isaa_29671__pinl_15637__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40366__isaa_29671__pinl_15637__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40366__isaa_29671__pinl_15637__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40366__isaa_29671__pinl_15637__flat_283 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40366__isaa_29671__pinl_15637__flat_283__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283, SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283), ((6 + (SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40366__isaa_29671__pinl_15637__flat_283__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40366__isaa_29671__pinl_15637__flat_283__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40366__isaa_29671__pinl_15637__flat_283__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 42, 945, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 42, 945, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40366__isaa_29671__pinl_15637__flat_283[0] = SACp_emal_40368__isaa_29668__flat_95; }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40367__isaa_29669__flat_95__sz; SAC_i++) { if (( SACp_emal_40367__isaa_29669__flat_95[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_40367__isaa_29669__flat_95"); } { SACp_emal_40365__pinl_15512__icc_5619_pred = ( SACp_emal_40367__isaa_29669__flat_95[SAC_i]); }; } SACp_emal_40365__pinl_15512__icc_5619_pred = SAC_all; }
    if (SACp_emal_40504__isaa_29429__rso_452_TheWorld <= SACp_emal_40368__isaa_29668__flat_95) { SACp_emal_40364__uprf_20360 = 1; } else { SACp_emal_40364__uprf_20360 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8976, "Scalar constraint `" "SACp_emal_40504__isaa_29429__rso_452_TheWorld" " (" "%d" ") <= " "SACp_emal_40368__isaa_29668__flat_95" " (" "%d" ")" "' violated", SACp_emal_40504__isaa_29429__rso_452_TheWorld, SACp_emal_40368__isaa_29668__flat_95); }
    { ; ; }
    { { SACp_emal_40363__uprf_20359 = SACp_emal_40504__isaa_29429__rso_452_TheWorld; } }
    { { if (!((1 == SACp_emal_40362__pinl_15603__idc_6817__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40362__pinl_15603__idc_6817"); }; { { if ((((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817)) + ((6 + (SACp_emal_40362__pinl_15603__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817)) + ((6 + (SACp_emal_40362__pinl_15603__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817)) + ((6 + (SACp_emal_40362__pinl_15603__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40362__pinl_15603__idc_6817 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40362__pinl_15603__idc_6817 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817)) + ((6 + (SACp_emal_40362__pinl_15603__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40362__pinl_15603__idc_6817 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40362__pinl_15603__idc_6817 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817)) + ((6 + (SACp_emal_40362__pinl_15603__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817)) + ((6 + (SACp_emal_40362__pinl_15603__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817)) + ((6 + (SACp_emal_40362__pinl_15603__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817)) + ((6 + (SACp_emal_40362__pinl_15603__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817)) + ((6 + (SACp_emal_40362__pinl_15603__idc_6817__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40362__pinl_15603__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40362__pinl_15603__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40362__pinl_15603__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40362__pinl_15603__idc_6817 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40362__pinl_15603__idc_6817__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817, SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817), ((6 + (SACp_emal_40362__pinl_15603__idc_6817__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40362__pinl_15603__idc_6817__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40362__pinl_15603__idc_6817__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40362__pinl_15603__idc_6817__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40362__pinl_15603__idc_6817__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40362__pinl_15603__idc_6817__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40362__pinl_15603__idc_6817[0] = SACp_emal_40363__uprf_20359; }

    { ; ; }
    if (!SACp_emal_40364__uprf_20360) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8912, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40361__pinl_20151__icc_5140 = ( SACp_emal_40362__pinl_15603__idc_6817[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    { { { if (((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817, ((((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817) - 1)->data1.arena)); } else { if (SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817, ((((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817, ((((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817) - 1)->data1.arena)); } } else { if (((((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817, ((((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817) - 1)->data1.arena)); } else { if (((((SACp_emal_40362__pinl_15603__idc_6817__sz * sizeof (*SACp_emal_40362__pinl_15603__idc_6817))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817, ((((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40362__pinl_15603__idc_6817); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40362__pinl_15603__idc_6817__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40360__pinl_20154__icc_5146 = ( SACp_emal_40366__isaa_29671__pinl_15637__flat_283[SACp_emal_40504__isaa_29429__rso_452_TheWorld]); }

    { { { if (((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283, ((((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283) - 1)->data1.arena)); } else { if (SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283, ((((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283, ((((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283) - 1)->data1.arena)); } } else { if (((((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283, ((((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283) - 1)->data1.arena)); } else { if (((((SACp_emal_40366__isaa_29671__pinl_15637__flat_283__sz * sizeof (*SACp_emal_40366__isaa_29671__pinl_15637__flat_283))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283, ((((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40366__isaa_29671__pinl_15637__flat_283); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40366__isaa_29671__pinl_15637__flat_283__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_40357__pinl_15576__icc_6808__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40357__pinl_15576__icc_6808"); }; { if ((((6 + (SACp_emal_40357__pinl_15576__icc_6808__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40357__pinl_15576__icc_6808__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40357__pinl_15576__icc_6808__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40357__pinl_15576__icc_6808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40357__pinl_15576__icc_6808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40357__pinl_15576__icc_6808__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40357__pinl_15576__icc_6808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40357__pinl_15576__icc_6808__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40357__pinl_15576__icc_6808__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40357__pinl_15576__icc_6808__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40357__pinl_15576__icc_6808__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40357__pinl_15576__icc_6808__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40357__pinl_15576__icc_6808__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40357__pinl_15576__icc_6808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40357__pinl_15576__icc_6808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40357__pinl_15576__icc_6808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40357__pinl_15576__icc_6808__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40357__pinl_15576__icc_6808__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40357__pinl_15576__icc_6808__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40357__pinl_15576__icc_6808__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40357__pinl_15576__icc_6808__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40357__pinl_15576__icc_6808__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40357__pinl_15576__icc_6808__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40360__pinl_20154__icc_5146;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40357__pinl_15576__icc_6808__desc) & (-1 ^ (3))))[4]) = SACp_emal_40357__pinl_15576__icc_6808__sz = SAC_size;
      if (!((SACp_emal_40357__pinl_15576__icc_6808__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6020 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 6020 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6020 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6020 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6020 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 6020 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6020 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 6020, __extension__ __PRETTY_FUNCTION__); }))
# 6020 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40357__pinl_15576__icc_6808 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40357__pinl_15576__icc_6808__sz * sizeof (*SACp_emal_40357__pinl_15576__icc_6808)); break; case SAC_HM_multi_threaded: SACp_emal_40357__pinl_15576__icc_6808 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40357__pinl_15576__icc_6808__sz * sizeof (*SACp_emal_40357__pinl_15576__icc_6808), 0); break; case SAC_HM_any_threaded: SACp_emal_40357__pinl_15576__icc_6808 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40357__pinl_15576__icc_6808__sz * sizeof (*SACp_emal_40357__pinl_15576__icc_6808), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40357__pinl_15576__icc_6808__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40357__pinl_15576__icc_6808__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40357__pinl_15576__icc_6808__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8906, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_40357__pinl_15576__icc_6808_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_40357__pinl_15576__icc_6808_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_40361__pinl_20151__icc_5140;




      SACp_wlidx_39657__pinl_15576__icc_6808
        = SAC_schedule_start0 * SAC_SACp_emal_40357__pinl_15576__icc_6808_shpfac0;

      { int SAC_stop_SACp_pinl_15587__eat_6625 = SACp_emal_40361__pinl_20151__icc_5140; for (SACp_pinl_15587__eat_6625 = 0; SACp_pinl_15587__eat_6625 < SACp_emal_40361__pinl_20151__icc_5140;) {
     



      if (!((0 == (SACp_emal_40357__pinl_15576__icc_6808__dim - SACp_pinl_15585_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40357__pinl_15576__icc_6808_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8921, "WL expression with illegal size found!"); };
      { SACp_emal_40357__pinl_15576__icc_6808[SACp_wlidx_39657__pinl_15576__icc_6808] = SACp_emal_40495__pinl_9872__eat_493__SSA6_1; };

      SACp_wlidx_39657__pinl_15576__icc_6808 = SACp_wlidx_39657__pinl_15576__icc_6808 + 1;
      SACp_pinl_15587__eat_6625 = SACp_pinl_15587__eat_6625 + 1;
      } }
# 6090 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_40361__pinl_20151__icc_5140;
      SAC_schedule_stop0 = SACp_emal_40360__pinl_20154__icc_5146;




      SACp_wlidx_39657__pinl_15576__icc_6808
        = SAC_schedule_start0 * SAC_SACp_emal_40357__pinl_15576__icc_6808_shpfac0;

      { int SAC_stop_SACp_pinl_15587__eat_6625 = SACp_emal_40360__pinl_20154__icc_5146; for (SACp_pinl_15587__eat_6625 = SACp_emal_40361__pinl_20151__icc_5140; SACp_pinl_15587__eat_6625 < SACp_emal_40360__pinl_20154__icc_5146;) {
     



      if (!((0 == (SACp_emal_40357__pinl_15576__icc_6808__dim - SACp_pinl_15585_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40357__pinl_15576__icc_6808_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_40357__pinl_15576__icc_6808[SACp_wlidx_39657__pinl_15576__icc_6808] = SACp_emal_40504__isaa_29429__rso_452_TheWorld; };

      SACp_wlidx_39657__pinl_15576__icc_6808 = SACp_wlidx_39657__pinl_15576__icc_6808 + 1;
      SACp_pinl_15587__eat_6625 = SACp_pinl_15587__eat_6625 + 1;
      } }
# 6119 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42023_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_40364__uprf_20360) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 8912, "With-loop guard failed"); }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40357__pinl_15576__icc_6808__sz; SAC_i++) { if (( SACp_emal_40357__pinl_15576__icc_6808[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 240, 12, "Non-negativity constraint violated " "for vector " "SACp_emal_40357__pinl_15576__icc_6808"); } { SACp_emal_40356__pinl_15514__icc_5618_pred = ( SACp_emal_40357__pinl_15576__icc_6808[SAC_i]); }; } SACp_emal_40356__pinl_15514__icc_5618_pred = SAC_all; }
    if (!SACp_emal_40365__pinl_15512__icc_5619_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    if (!SACp_emal_40356__pinl_15514__icc_5618_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    { { if (!((1 == SACp_emal_40355__pinl_15536_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40355__pinl_15536_new_shape"); }; { if ((((6 + (SACp_emal_40355__pinl_15536_new_shape__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40355__pinl_15536_new_shape__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40355__pinl_15536_new_shape__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40355__pinl_15536_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40355__pinl_15536_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40355__pinl_15536_new_shape__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40355__pinl_15536_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40355__pinl_15536_new_shape__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40355__pinl_15536_new_shape__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40355__pinl_15536_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40355__pinl_15536_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40355__pinl_15536_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40355__pinl_15536_new_shape__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40355__pinl_15536_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40355__pinl_15536_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40355__pinl_15536_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40355__pinl_15536_new_shape__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40355__pinl_15536_new_shape__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40355__pinl_15536_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40355__pinl_15536_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_40367__isaa_29669__flat_95__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_40355__pinl_15536_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40355__pinl_15536_new_shape__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40355__pinl_15536_new_shape__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40367__isaa_29669__flat_95__sz - (((SACp_emal_40360__pinl_20154__icc_5146) < 0) ? (-(SACp_emal_40360__pinl_20154__icc_5146)) : (SACp_emal_40360__pinl_20154__icc_5146));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40355__pinl_15536_new_shape__desc) & (-1 ^ (3))))[4]) = SACp_emal_40355__pinl_15536_new_shape__sz = SAC_size;
      if (!((SACp_emal_40355__pinl_15536_new_shape__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3535, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6150 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 6150 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6150 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6150 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6150 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 6150 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6150 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 6150, __extension__ __PRETTY_FUNCTION__); }))
# 6150 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40355__pinl_15536_new_shape = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40355__pinl_15536_new_shape__sz * sizeof (*SACp_emal_40355__pinl_15536_new_shape)); break; case SAC_HM_multi_threaded: SACp_emal_40355__pinl_15536_new_shape = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40355__pinl_15536_new_shape__sz * sizeof (*SACp_emal_40355__pinl_15536_new_shape), 0); break; case SAC_HM_any_threaded: SACp_emal_40355__pinl_15536_new_shape = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40355__pinl_15536_new_shape__sz * sizeof (*SACp_emal_40355__pinl_15536_new_shape), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40355__pinl_15536_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40355__pinl_15536_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40355__pinl_15536_new_shape__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 6157 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 6157 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_40360__pinl_20154__icc_5146;
      SAC_cond = (SACp_emal_40360__pinl_20154__icc_5146 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_40367__isaa_29669__flat_95__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3547, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_40367__isaa_29669__flat_95__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3547, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40355__pinl_15536_new_shape[SAC_i] = ( SACp_emal_40367__isaa_29669__flat_95[SAC_off + SAC_i]); };
      }
    }

    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40355__pinl_15536_new_shape__sz; SAC_i++) { if (( SACp_emal_40355__pinl_15536_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Non-negativity constraint violated " "for vector " "SACp_emal_40355__pinl_15536_new_shape"); } { SACp_emal_40354__pinl_15545__icc_5583_pred = ( SACp_emal_40355__pinl_15536_new_shape[SAC_i]); }; } SACp_emal_40354__pinl_15545__icc_5583_pred = SAC_all; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40355__pinl_15536_new_shape__sz; SAC_i++) { if (( SACp_emal_40355__pinl_15536_new_shape[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Non-negativity constraint violated " "for vector " "SACp_emal_40355__pinl_15536_new_shape"); } { SACp_emal_40353__pinl_15552__icc_5588_pred = ( SACp_emal_40355__pinl_15536_new_shape[SAC_i]); }; } SACp_emal_40353__pinl_15552__icc_5588_pred = SAC_all; }
    { { if (!((1 == SACp_emal_40352__pinl_15534__flat_421__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40352__pinl_15534__flat_421"); }; { if ((((6 + (SACp_emal_40352__pinl_15534__flat_421__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40352__pinl_15534__flat_421__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40352__pinl_15534__flat_421__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40352__pinl_15534__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40352__pinl_15534__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40352__pinl_15534__flat_421__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40352__pinl_15534__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40352__pinl_15534__flat_421__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40352__pinl_15534__flat_421__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40352__pinl_15534__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40352__pinl_15534__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40352__pinl_15534__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40352__pinl_15534__flat_421__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40352__pinl_15534__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40352__pinl_15534__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40352__pinl_15534__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40352__pinl_15534__flat_421__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40352__pinl_15534__flat_421__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40352__pinl_15534__flat_421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40352__pinl_15534__flat_421__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40352__pinl_15534__flat_421__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_40352__pinl_15534__flat_421__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40352__pinl_15534__flat_421__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40355__pinl_15536_new_shape__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40352__pinl_15534__flat_421__desc) & (-1 ^ (3))))[4]) = SACp_emal_40352__pinl_15534__flat_421__sz = SAC_size * SACp_emal_40355__pinl_15536_new_shape__sz;
      if (!((SACp_emal_40352__pinl_15534__flat_421__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6191 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 6191 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6191 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6191 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6191 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 6191 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6191 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 6191, __extension__ __PRETTY_FUNCTION__); }))
# 6191 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40352__pinl_15534__flat_421 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40352__pinl_15534__flat_421__sz * sizeof (*SACp_emal_40352__pinl_15534__flat_421)); break; case SAC_HM_multi_threaded: SACp_emal_40352__pinl_15534__flat_421 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40352__pinl_15534__flat_421__sz * sizeof (*SACp_emal_40352__pinl_15534__flat_421), 0); break; case SAC_HM_any_threaded: SACp_emal_40352__pinl_15534__flat_421 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40352__pinl_15534__flat_421__sz * sizeof (*SACp_emal_40352__pinl_15534__flat_421), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40352__pinl_15534__flat_421__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40352__pinl_15534__flat_421__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40352__pinl_15534__flat_421__desc) & (-1 ^ (3))))[1]) = 0; } }
    ; { int SAC_i; for (SAC_i = 0; SAC_i < SACp_emal_40352__pinl_15534__flat_421__sz; SAC_i++) { { SACp_emal_40352__pinl_15534__flat_421[SAC_i] = (0) * (( SACp_emal_40355__pinl_15536_new_shape[SAC_i])); }; } }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40352__pinl_15534__flat_421__sz; SAC_i++) { if (( SACp_emal_40352__pinl_15534__flat_421[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "Non-negativity constraint violated " "for vector " "SACp_emal_40352__pinl_15534__flat_421"); } { SACp_emal_40351__pinl_15554__icc_5582_pred = ( SACp_emal_40352__pinl_15534__flat_421[SAC_i]); }; } SACp_emal_40351__pinl_15554__icc_5582_pred = SAC_all; }
        if (SACp_emal_40352__pinl_15534__flat_421__dim != SACp_emal_40355__pinl_15536_new_shape__dim) {
      SACp_emal_40350__pinl_15556__icc_5584_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Arrays `" "SACp_emal_40352__pinl_15534__flat_421""' with shape %s ""And `" "SACp_emal_40355__pinl_15536_new_shape""' with shape %s ""do not adhere to same dim constraint", SAC_PrintShape (SACp_emal_40352__pinl_15534__flat_421__desc), SAC_PrintShape (SACp_emal_40355__pinl_15536_new_shape__desc));
    }
    else {
      int SAC_all = 1; if (0 || (SACp_emal_40352__pinl_15534__flat_421__shp0 != SACp_emal_40355__pinl_15536_new_shape__shp0))
      {

        SAC_all = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Arrays `" "SACp_emal_40352__pinl_15534__flat_421""' with shape %s ""And `" "SACp_emal_40355__pinl_15536_new_shape""' with shape %s ""do not adhere to same shape constraint", SAC_PrintShape (SACp_emal_40352__pinl_15534__flat_421__desc), SAC_PrintShape (SACp_emal_40355__pinl_15536_new_shape__desc));
      }
      SACp_emal_40350__pinl_15556__icc_5584_pred = SAC_all;
    }

    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40352__pinl_15534__flat_421__sz && SAC_i < SACp_emal_40355__pinl_15536_new_shape__sz; SAC_i++) { if (( SACp_emal_40352__pinl_15534__flat_421[SAC_i]) > ( SACp_emal_40355__pinl_15536_new_shape[SAC_i])) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3709, "Vector constraint `" "SACp_emal_40352__pinl_15534__flat_421" " < " "SACp_emal_40355__pinl_15536_new_shape" "' violated"); } } SACp_emal_40349__pinl_15559__icc_5585_pred = SAC_all; }
    if (!SACp_emal_40353__pinl_15552__icc_5588_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40349__pinl_15559__icc_5585_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40350__pinl_15556__icc_5584_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40354__pinl_15545__icc_5583_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40351__pinl_15554__icc_5582_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    { { if (!((1 == SACp_pinl_15510_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_15510_iv"); }; { if ((((6 + (SACp_pinl_15510_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_15510_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_15510_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_15510_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_15510_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_15510_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_15510_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_15510_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_15510_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_15510_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_15510_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_15510_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_15510_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_15510_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_15510_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_15510_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_15510_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15510_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15510_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15510_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_15510_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_15510_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15510_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40357__pinl_15576__icc_6808__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15510_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_15510_iv__sz = SAC_size * SACp_emal_40357__pinl_15576__icc_6808__sz;
      if (!((SACp_pinl_15510_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 3, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6228 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 6228 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6228 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6228 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6228 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 6228 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6228 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 6228, __extension__ __PRETTY_FUNCTION__); }))
# 6228 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_15510_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_15510_iv__sz * sizeof (*SACp_pinl_15510_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_15510_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_15510_iv__sz * sizeof (*SACp_pinl_15510_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_15510_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_15510_iv__sz * sizeof (*SACp_pinl_15510_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15510_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15510_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15510_iv__desc) & (-1 ^ (3))))[1]) = 0; } }



    { if (!((0 >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_pinl_15504__icc_5622"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6232 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 6232 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6232 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6232 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6232 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 6232 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6232 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 6232, __extension__ __PRETTY_FUNCTION__); }))
# 6232 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_15504__icc_5622__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (0)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_pinl_15504__icc_5622__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (0)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_pinl_15504__icc_5622__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (0)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15504__icc_5622__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15504__icc_5622__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15504__icc_5622__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15504__icc_5622__desc) & (-1 ^ (3))))[3]) = SACp_pinl_15504__icc_5622__dim = 0; }
    { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15504__icc_5622__desc) & (-1 ^ (3))))[0]) = 1; }
    SACp_pinl_15504__icc_5622__sz = 1;
    SACp_pinl_15504__icc_5622__dim = 0;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15504__icc_5622__desc) & (-1 ^ (3))))[4]) = 1;
    (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15504__icc_5622__desc) & (-1 ^ (3))))[3]) = 0;
    { { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6238 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 6238 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6238 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6238 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6238 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 6238 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6238 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 6238, __extension__ __PRETTY_FUNCTION__); }))
# 6238 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_15504__icc_5622 = (
# 6238 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6238 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_pinl_15504__icc_5622__sz * sizeof (*SACp_pinl_15504__icc_5622)); break; case SAC_HM_multi_threaded: SACp_pinl_15504__icc_5622 = (
# 6238 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6238 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_15504__icc_5622__sz * sizeof (*SACp_pinl_15504__icc_5622), 0); break; case SAC_HM_any_threaded: SACp_pinl_15504__icc_5622 = (
# 6238 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6238 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_pinl_15504__icc_5622__sz * sizeof (*SACp_pinl_15504__icc_5622), 0); break; } } } { SACp_pinl_15504__icc_5622[0] = SACp_emal_40503__pinl_7932__icc_3220_pred; } }

    { int SAC_d = 0; int SAC_max_d = SACp_pinl_15510_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_15510_iv[SAC_d] = ( SACp_emal_40357__pinl_15576__icc_6808[SAC_d]); SAC_within_bounds = SAC_within_bounds && ( ( SACp_emal_40357__pinl_15576__icc_6808[SAC_d]) < ( SACp_emal_40367__isaa_29669__flat_95[SAC_d]) ); SAC_d++; }
    while (SAC_within_bounds) { SAC_in_gen = 1;
    if (SAC_in_gen) {
    ;
    { { if (!(((SACp_emal_40355__pinl_15536_new_shape__sz) + (0) >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_40340__pinl_15527__icc_5600"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6245 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 6245 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6245 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6245 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6245 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 6245 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6245 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 6245, __extension__ __PRETTY_FUNCTION__); }))
# 6245 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40340__pinl_15527__icc_5600__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + ((SACp_emal_40355__pinl_15536_new_shape__sz) + (0))*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_40340__pinl_15527__icc_5600__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + ((SACp_emal_40355__pinl_15536_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_40340__pinl_15527__icc_5600__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + ((SACp_emal_40355__pinl_15536_new_shape__sz) + (0))*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[3]) = SACp_emal_40340__pinl_15527__icc_5600__dim = (SACp_emal_40355__pinl_15536_new_shape__sz) + (0); }



   
    if (!((SACp_emal_40355__pinl_15536_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Shape of genarray with-loop has (dim != 1)!"); };
    if (!((SACp_emal_40340__pinl_15527__icc_5600__dim == SACp_emal_40355__pinl_15536_new_shape__sz + (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_40355__pinl_15536_new_shape__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_40355__pinl_15536_new_shape[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[4]) = SACp_emal_40340__pinl_15527__icc_5600__sz = SAC_size;
      if (!((SACp_emal_40340__pinl_15527__icc_5600__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6265 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 6265 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6265 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6265 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6265 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 6265 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6265 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 6265, __extension__ __PRETTY_FUNCTION__); }))
# 6265 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40340__pinl_15527__icc_5600 = (
# 6265 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6265 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_40340__pinl_15527__icc_5600__sz * sizeof (*SACp_emal_40340__pinl_15527__icc_5600)); break; case SAC_HM_multi_threaded: SACp_emal_40340__pinl_15527__icc_5600 = (
# 6265 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6265 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40340__pinl_15527__icc_5600__sz * sizeof (*SACp_emal_40340__pinl_15527__icc_5600), 0); break; case SAC_HM_any_threaded: SACp_emal_40340__pinl_15527__icc_5600 = (
# 6265 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6265 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_40340__pinl_15527__icc_5600__sz * sizeof (*SACp_emal_40340__pinl_15527__icc_5600), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[1]) = 0; } }
    { { if (!((1 == SACp_pinl_15537_iv__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_pinl_15537_iv"); }; { if ((((6 + (SACp_pinl_15537_iv__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_15537_iv__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_pinl_15537_iv__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_15537_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_pinl_15537_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_pinl_15537_iv__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_pinl_15537_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_pinl_15537_iv__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_pinl_15537_iv__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_pinl_15537_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_pinl_15537_iv__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_pinl_15537_iv__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_pinl_15537_iv__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_pinl_15537_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_pinl_15537_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_pinl_15537_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_pinl_15537_iv__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15537_iv__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15537_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15537_iv__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_pinl_15537_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_pinl_15537_iv__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15537_iv__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40352__pinl_15534__flat_421__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15537_iv__desc) & (-1 ^ (3))))[4]) = SACp_pinl_15537_iv__sz = SAC_size * SACp_emal_40352__pinl_15534__flat_421__sz;
      if (!((SACp_pinl_15537_iv__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6280 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 6280 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6280 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6280 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6280 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 6280 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6280 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 6280, __extension__ __PRETTY_FUNCTION__); }))
# 6280 "/home/rubenhensen/sac/a.out.c"
   ; SACp_pinl_15537_iv = (int *)SAC_HM_MallocAnyChunk_st (SACp_pinl_15537_iv__sz * sizeof (*SACp_pinl_15537_iv)); break; case SAC_HM_multi_threaded: SACp_pinl_15537_iv = (int *)SAC_HM_MallocAnyChunk_mt (SACp_pinl_15537_iv__sz * sizeof (*SACp_pinl_15537_iv), 0); break; case SAC_HM_any_threaded: SACp_pinl_15537_iv = (int *)SAC_HM_MallocAnyChunk_at (SACp_pinl_15537_iv__sz * sizeof (*SACp_pinl_15537_iv), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15537_iv__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15537_iv__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15537_iv__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3611, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_d = 0; int SAC_max_d = SACp_pinl_15537_iv__sz - 1; int SAC_within_bounds = 1; int SAC_in_gen;
    while (SAC_d <= SAC_max_d) { SACp_pinl_15537_iv[SAC_d] = 0; SAC_d++; } SAC_within_bounds = SACp_emal_40340__pinl_15527__icc_5600__sz > 0;
    int SAC_off_inc0 = 1; int SAC_SACp_emal_40340__pinl_15527__icc_5600_shpfac0; SAC_d = SACp_emal_40340__pinl_15527__icc_5600__dim - 1; SACp_wlidx_39658__pinl_15527__icc_5600 = 0; while (SAC_d > SAC_max_d) { SAC_off_inc0 *= (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); SAC_d--; } SAC_SACp_emal_40340__pinl_15527__icc_5600_shpfac0 = SAC_off_inc0;
    while (SAC_within_bounds) { SAC_in_gen = 1;
    SAC_d = SAC_max_d; while (SAC_d >= 0) { SAC_in_gen = SAC_in_gen && (( SACp_emal_40352__pinl_15534__flat_421[SAC_d]) <= ( SACp_pinl_15537_iv[SAC_d])) && (( SACp_pinl_15537_iv[SAC_d]) < ( SACp_emal_40355__pinl_15536_new_shape[SAC_d])); SAC_d--; }
    if (SAC_in_gen) {
    { { if (!((1 == SACp_emal_40346__pinl_15538_new_idx__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40346__pinl_15538_new_idx"); }; { if ((((6 + (SACp_emal_40346__pinl_15538_new_idx__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40346__pinl_15538_new_idx__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40346__pinl_15538_new_idx__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40346__pinl_15538_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40346__pinl_15538_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40346__pinl_15538_new_idx__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40346__pinl_15538_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40346__pinl_15538_new_idx__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40346__pinl_15538_new_idx__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40346__pinl_15538_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40346__pinl_15538_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40346__pinl_15538_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40346__pinl_15538_new_idx__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40346__pinl_15538_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40346__pinl_15538_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40346__pinl_15538_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40346__pinl_15538_new_idx__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40346__pinl_15538_new_idx__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40346__pinl_15538_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40346__pinl_15538_new_idx__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_pinl_15510_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "1st argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_pinl_15537_iv__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "2nd argument of _cat_VxV_ is not a vector!"); };
    if (!((SACp_emal_40346__pinl_15538_new_idx__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40346__pinl_15538_new_idx__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40346__pinl_15538_new_idx__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_pinl_15510_iv__sz + SACp_pinl_15537_iv__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40346__pinl_15538_new_idx__desc) & (-1 ^ (3))))[4]) = SACp_emal_40346__pinl_15538_new_idx__sz = SAC_size;
      if (!((SACp_emal_40346__pinl_15538_new_idx__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 6313 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 6313 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6313 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 6313 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 6313 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 6313 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 6313 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 6313, __extension__ __PRETTY_FUNCTION__); }))
# 6313 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40346__pinl_15538_new_idx = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40346__pinl_15538_new_idx__sz * sizeof (*SACp_emal_40346__pinl_15538_new_idx)); break; case SAC_HM_multi_threaded: SACp_emal_40346__pinl_15538_new_idx = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40346__pinl_15538_new_idx__sz * sizeof (*SACp_emal_40346__pinl_15538_new_idx), 0); break; case SAC_HM_any_threaded: SACp_emal_40346__pinl_15538_new_idx = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40346__pinl_15538_new_idx__sz * sizeof (*SACp_emal_40346__pinl_15538_new_idx), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40346__pinl_15538_new_idx__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40346__pinl_15538_new_idx__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40346__pinl_15538_new_idx__desc) & (-1 ^ (3))))[1]) = 0; } }
    { int SAC_i, SAC_off; SAC_off = SACp_pinl_15510_iv__sz; for (SAC_i = 0; SAC_i < SAC_off; SAC_i++) { { SACp_emal_40346__pinl_15538_new_idx[SAC_i] = ( SACp_pinl_15510_iv[SAC_i]); }; } for (SAC_i = 0; SAC_i < SACp_pinl_15537_iv__sz; SAC_i++) { { SACp_emal_40346__pinl_15538_new_idx[SAC_off + SAC_i] = ( SACp_pinl_15537_iv[SAC_i]); }; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }
    if ((SACp_emal_40346__pinl_15538_new_idx__dim == 1) && (SACp_emal_40346__pinl_15538_new_idx__shp0 == SACp_flat_95__dim)) { SACp_emal_40345__pinl_15561__icc_5589_pred = 1; } else { SACp_emal_40345__pinl_15561__icc_5589_pred = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays " "SACp_emal_40346__pinl_15538_new_idx" " and " "SACp_flat_95" " do not adhere to shape matches dim constraint"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40346__pinl_15538_new_idx__sz; SAC_i++) { if (( SACp_emal_40346__pinl_15538_new_idx[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Non-negativity constraint violated " "for vector " "SACp_emal_40346__pinl_15538_new_idx"); } { SACp_emal_40344__pinl_15563__icc_5590_pred = ( SACp_emal_40346__pinl_15538_new_idx[SAC_i]); }; } SACp_emal_40344__pinl_15563__icc_5590_pred = SAC_all; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3643, "Assignment with incompatible types found"); };
    ;

    }



    if ((SACp_emal_40346__pinl_15538_new_idx__dim != 1) && (SACp_emal_40346__pinl_15538_new_idx__shp0 != SACp_flat_95__dim)) {
      SACp_emal_40343__pinl_15565__icc_5591_pred = 0;
      SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays `" "SACp_emal_40346__pinl_15538_new_idx""' with shape %s ""And `" "SACp_flat_95""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_40346__pinl_15538_new_idx__desc), SAC_PrintShape (SACp_flat_95__desc));
    }
    else {
      int SAC_all = 1; for (int SAC_i = 0; SAC_i < SACp_flat_95__dim; SAC_i++) {
        if (( SACp_emal_40346__pinl_15538_new_idx[SAC_i]) >= (((SAC_array_descriptor_t) (((intptr_t)SACp_flat_95__desc) & (-1 ^ (3))))[(6 + (SAC_i))])) {
          SAC_all = 0;
          SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Arrays `" "SACp_emal_40346__pinl_15538_new_idx""' with shape %s ""And `" "SACp_flat_95""' with shape %s ""do not adhere to val less than shape constraint", SAC_PrintShape (SACp_emal_40346__pinl_15538_new_idx__desc), SAC_PrintShape (SACp_flat_95__desc));
        }
      }
      SACp_emal_40343__pinl_15565__icc_5591_pred = SAC_all;
    }

    if (!SACp_emal_40343__pinl_15565__icc_5591_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_40344__pinl_15563__icc_5590_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_40345__pinl_15561__icc_5589_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
    ;

    }



    {
      int SAC_i, SAC_l;
      SAC_l = 0;
      for (SAC_i = 0; SAC_i < SACp_emal_40346__pinl_15538_new_idx__sz; SAC_i++)
      {

        SAC_l = ( SACp_emal_40367__isaa_29669__flat_95[SAC_i]) * SAC_l + ( SACp_emal_40346__pinl_15538_new_idx[SAC_i]);
      }
      for (SAC_i = SACp_emal_40346__pinl_15538_new_idx__sz; SAC_i < SACp_emal_40367__isaa_29669__flat_95__sz; SAC_i++)
      {

        SAC_l *= ( SACp_emal_40367__isaa_29669__flat_95[SAC_i]);
      }
      SACp_emal_40342__ivesli_39694 = SAC_l;
    }

    { { free (SACp_emal_40346__pinl_15538_new_idx); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40346__pinl_15538_new_idx__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40341__pinl_15523__icc_5594 = ( SACp_flat_95[SACp_emal_40342__ivesli_39694]); }

    { ; ; }
    if (!SACp_emal_40343__pinl_15565__icc_5591_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_40344__pinl_15563__icc_5590_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    if (!SACp_emal_40345__pinl_15561__icc_5589_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3678, "Primitive function _sel_VxA_ guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    if (!((0 == (SACp_emal_40340__pinl_15527__icc_5600__dim - SACp_pinl_15537_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3641, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_40340__pinl_15527__icc_5600_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3641, "WL expression with illegal size found!"); };
    { SACp_emal_40340__pinl_15527__icc_5600[SACp_wlidx_39658__pinl_15527__icc_5600] = SACp_emal_40341__pinl_15523__icc_5594; };

    { ; ; }
    } else {



    if (!((0 == (SACp_emal_40340__pinl_15527__icc_5600__dim - SACp_pinl_15537_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "WL expression with illegal dimension found!"); };
    if (!((1 == SAC_SACp_emal_40340__pinl_15527__icc_5600_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3626, "WL expression with illegal size found!"); };
    { SACp_emal_40340__pinl_15527__icc_5600[SACp_wlidx_39658__pinl_15527__icc_5600] = SACp_emal_40494__pinl_9699__flat_420; };

    }
    SACp_wlidx_39658__pinl_15527__icc_5600 = SACp_wlidx_39658__pinl_15527__icc_5600 + SAC_off_inc0;
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_15537_iv[SAC_d] = ( SACp_pinl_15537_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_15537_iv[SAC_d]) == (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[(6 + (SAC_d))]))) { SACp_pinl_15537_iv[SAC_d] = 0; SAC_d--; SACp_pinl_15537_iv[SAC_d] = ( SACp_pinl_15537_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_15537_iv[SAC_d]) < (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40340__pinl_15527__icc_5600__desc) & (-1 ^ (3))))[(6 + (SAC_d))]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_pinl_15537_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15537_iv__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (!SACp_emal_40353__pinl_15552__icc_5588_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40349__pinl_15559__icc_5585_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40350__pinl_15556__icc_5584_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40354__pinl_15545__icc_5583_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }
    if (!SACp_emal_40351__pinl_15554__icc_5582_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 3617, "With-loop guard failed"); }



    SACwf_ArrayArith___AM__bl_S__bl_S (&SACp_pinl_15517__ea_6942__flat_6601, &SACp_pinl_15517__ea_6942__flat_6601__desc, SACp_pinl_15504__icc_5622, SACp_pinl_15504__icc_5622__desc, SACp_emal_40340__pinl_15527__icc_5600, SACp_emal_40340__pinl_15527__icc_5600__desc);




    SACp_pinl_15517__ea_6942__flat_6601__sz = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15517__ea_6942__flat_6601__desc) & (-1 ^ (3))))[4]);
    SACp_pinl_15517__ea_6942__flat_6601__dim = (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15517__ea_6942__flat_6601__desc) & (-1 ^ (3))))[3]);




    ;




    SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601__desc = SACp_pinl_15517__ea_6942__flat_6601__desc;
    SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601__sz = SACp_pinl_15517__ea_6942__flat_6601__sz;
    SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601__dim = SACp_pinl_15517__ea_6942__flat_6601__dim;
    ;
    { SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601 = SACp_pinl_15517__ea_6942__flat_6601; }




    SACp_pinl_15504__icc_5622__desc = SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601__desc;
    SACp_pinl_15504__icc_5622__sz = SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601__sz;
    SACp_pinl_15504__icc_5622__dim = SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601__dim;
    ;
    { SACp_pinl_15504__icc_5622 = SACp_ufiv_40264__pinl_15517__ea_6942__flat_6601; }

    }
    SAC_d = SAC_max_d; if (SAC_d >= 0) { SACp_pinl_15510_iv[SAC_d] = ( SACp_pinl_15510_iv[SAC_d]) + 1; while ((SAC_d > 0) && (( SACp_pinl_15510_iv[SAC_d]) == ( SACp_emal_40367__isaa_29669__flat_95[SAC_d]))) { SACp_pinl_15510_iv[SAC_d] = ( SACp_emal_40357__pinl_15576__icc_6808[SAC_d]); SAC_d--; SACp_pinl_15510_iv[SAC_d] = ( SACp_pinl_15510_iv[SAC_d]) + 1; } SAC_within_bounds = ( SACp_pinl_15510_iv[SAC_d]) < ( SACp_emal_40367__isaa_29669__flat_95[SAC_d]); } else { SAC_within_bounds = 0; }
    }
    }
    { { free (SACp_emal_40357__pinl_15576__icc_6808); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40357__pinl_15576__icc_6808__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_flat_95); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_flat_95__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_pinl_15510_iv); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15510_iv__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_40352__pinl_15534__flat_421); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40352__pinl_15534__flat_421__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_40355__pinl_15536_new_shape); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40355__pinl_15536_new_shape__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_40367__isaa_29669__flat_95); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40367__isaa_29669__flat_95__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_40365__pinl_15512__icc_5619_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    if (!SACp_emal_40356__pinl_15514__icc_5618_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 239, 9, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { if (!((SACp_pinl_15504__icc_5622__sz == (1)))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; { SACp_emal_40339__flat_94 = ( SACp_pinl_15504__icc_5622[0]); } }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15504__icc_5622__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_15504__icc_5622); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_15504__icc_5622__desc) & (-1 ^ (3))))); } } } } else { } }



    SACf_ScalarIO__print__bl (SACp_emal_40339__flat_94);




    { *SAC_arg_1__p = SACp_emal_40504__isaa_29429__rso_452_TheWorld; }
    return;
   
  }



}
}
# 6521 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN_CL_INIT__init (void) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
   



    SACf_World_CL_INIT__init_TheWorld__SACt_World__World (&SACo_World__TheWorld, &SACo_World__TheWorld__desc);




    SACf_Terminal_CL_INIT__init_TheTerminal__SACt_Terminal__Terminal (&SACo_Terminal__TheTerminal, &SACo_Terminal__TheTerminal__desc);




    SACf_TermFile_CL_INIT__init_stdout__SACt_TermFile__TermFile (&SACo_TermFile__stdout, &SACo_TermFile__stdout__desc);




    return;
   
  }



}
}
# 6563 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_27_impl_unblock__i_S__i (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int SACl_od) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    
# 6572 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6572 "/home/rubenhensen/sac/a.out.c"
   SACp_emrb_41773_mem;
   
   




    int SACp_emal_40595__isaa_30561_od;
   
   




    int SACp_emal_40594__isaa_30564_a;
   
   




    int * SACp_emal_40593__isaa_30565_a;
    SAC_array_descriptor_t SACp_emal_40593__isaa_30565_a__desc = 
# 6594 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6594 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40593__isaa_30565_a__shp0;
    int SACp_emal_40593__isaa_30565_a__sz;
    const int SACp_emal_40593__isaa_30565_a__dim = 1;




    int SACp_emal_40592__mse_30569__isaa_30563_od;
   
   




    int * SACp_emal_40591__isaa_30568_oshp;
    SAC_array_descriptor_t SACp_emal_40591__isaa_30568_oshp__desc = 
# 6610 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6610 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40591__isaa_30568_oshp__shp0 = 1;
    const int SACp_emal_40591__isaa_30568_oshp__sz = 1;
    const int SACp_emal_40591__isaa_30568_oshp__dim = 1;




    int * SACp_emal_40590_oshp;
    SAC_array_descriptor_t SACp_emal_40590_oshp__desc = 
# 6619 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6619 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40590_oshp__shp0;
    int SACp_emal_40590_oshp__sz;
    const int SACp_emal_40590_oshp__dim = 1;




    int * SACp_emal_40589__flat_435;
    SAC_array_descriptor_t SACp_emal_40589__flat_435__desc = 
# 6628 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6628 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40589__flat_435__shp0;
    int SACp_emal_40589__flat_435__sz;
    const int SACp_emal_40589__flat_435__dim = 1;




    int * SACp_emal_40588_s;
    SAC_array_descriptor_t SACp_emal_40588_s__desc = 
# 6637 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6637 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40588_s__shp0;
    int SACp_emal_40588_s__sz;
    const int SACp_emal_40588_s__dim = 1;




    int SACp_emal_40587__dl_23435;
   
   




    int SACp_emal_40586__dl_23437;
   
   




    int SACp_emal_40585__cf_23413;
   
   




    int * SACp_emal_40582__flat_441;
    SAC_array_descriptor_t SACp_emal_40582__flat_441__desc = 
# 6667 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6667 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40582__flat_441__shp0;
    int SACp_emal_40582__flat_441__sz;
    const int SACp_emal_40582__flat_441__dim = 1;




    int SACp_emal_40581__mse_30579__dl_23429;
   
   




    int * SACp_emal_40580_ishp;
    SAC_array_descriptor_t SACp_emal_40580_ishp__desc = 
# 6683 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6683 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40580_ishp__shp0;
    int SACp_emal_40580_ishp__sz;
    const int SACp_emal_40580_ishp__dim = 1;




    
# 6691 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6691 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40579__uprf_23387;
   
   




    int SACp_emal_40578__uprf_23386;
   
   




    int * SACp_emal_40577__pinl_16418__idc_6150;
    SAC_array_descriptor_t SACp_emal_40577__pinl_16418__idc_6150__desc = 
# 6706 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6706 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40577__pinl_16418__idc_6150__shp0 = 1;
    const int SACp_emal_40577__pinl_16418__idc_6150__sz = 1;
    const int SACp_emal_40577__pinl_16418__idc_6150__dim = 1;




    int SACp_emal_40576__pinl_23035__icc_5140;
   
   




    int SACp_emal_40575__pinl_23038__icc_5146;
   
   




    int * SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound;
    SAC_array_descriptor_t SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__desc = 
# 6729 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6729 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__shp0 = 1;
    const int SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz = 1;
    const int SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim = 1;




    
# 6737 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6737 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40571__uprf_23379;
   
   




    
# 6744 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6744 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40570__uprf_23373;
   
   




    
# 6751 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6751 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40569__uprf_23364;
   
   




    
# 6758 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6758 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40568__uprf_23358;
   
   




    int * SACp_emal_40567__pinl_16430__idc_6156;
    SAC_array_descriptor_t SACp_emal_40567__pinl_16430__idc_6156__desc = 
# 6766 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6766 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40567__pinl_16430__idc_6156__shp0 = 1;
    const int SACp_emal_40567__pinl_16430__idc_6156__sz = 1;
    const int SACp_emal_40567__pinl_16430__idc_6156__dim = 1;




    int SACp_emal_40566__ivesli_39700;
   
   




    int SACp_emal_40565__pinl_16383__icc_6129;
   
   




    int SACp_emal_40564__ivesli_39699;
   
   




    int SACp_emal_40563__pinl_16386__icc_6135;
   
   




    int * SACp_emal_40561__pinl_16390__icc_6141;
    SAC_array_descriptor_t SACp_emal_40561__pinl_16390__icc_6141__desc = 
# 6803 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6803 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40561__pinl_16390__icc_6141__shp0;
    int SACp_emal_40561__pinl_16390__icc_6141__sz;
    const int SACp_emal_40561__pinl_16390__icc_6141__dim = 1;




    int SACp_emal_40560__pinl_16487__flat_2100;
   
   




    
# 6818 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6818 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40559__uprf_23335;
   
   




    int * SACp_emal_40558__pinl_16538__idc_6012;
    SAC_array_descriptor_t SACp_emal_40558__pinl_16538__idc_6012__desc = 
# 6826 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6826 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40558__pinl_16538__idc_6012__shp0 = 1;
    const int SACp_emal_40558__pinl_16538__idc_6012__sz = 1;
    const int SACp_emal_40558__pinl_16538__idc_6012__dim = 1;




    
# 6834 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6834 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40557__uprf_23329;
   
   




    int SACp_emal_40556__uprf_23328;
   
   




    int * SACp_emal_40555__pinl_16549__idc_6018;
    SAC_array_descriptor_t SACp_emal_40555__pinl_16549__idc_6018__desc = 
# 6849 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6849 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40555__pinl_16549__idc_6018__shp0 = 1;
    const int SACp_emal_40555__pinl_16549__idc_6018__sz = 1;
    const int SACp_emal_40555__pinl_16549__idc_6018__dim = 1;




    int SACp_emal_40554__pinl_23096__icc_5140;
   
   




    int SACp_emal_40553__pinl_23099__icc_5146;
   
   




    int SACp_emal_40552__pinl_23154_res;
   
   




    int SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e;
   
   




    
# 6885 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6885 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40548__uprf_23321;
   
   




    
# 6892 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6892 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40547__uprf_23315;
   
   




    int * SACp_emal_40546__pinl_16555__idc_6021;
    SAC_array_descriptor_t SACp_emal_40546__pinl_16555__idc_6021__desc = 
# 6900 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6900 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40546__pinl_16555__idc_6021__shp0 = 1;
    const int SACp_emal_40546__pinl_16555__idc_6021__sz = 1;
    const int SACp_emal_40546__pinl_16555__idc_6021__dim = 1;




    int SACp_emal_40545__ivesli_39698;
   
   




    int SACp_emal_40544__pinl_16469__icc_5972;
   
   




    int * SACp_emal_40543__pinl_16474__icc_5978;
    SAC_array_descriptor_t SACp_emal_40543__pinl_16474__icc_5978__desc = 
# 6923 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6923 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40543__pinl_16474__icc_5978__shp0;
    int SACp_emal_40543__pinl_16474__icc_5978__sz;
    const int SACp_emal_40543__pinl_16474__icc_5978__dim = 1;




    
# 6931 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6931 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40541__uprf_28767;
   
   




    
# 6938 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6938 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40540__uprf_28761;
   
   




    int * SACp_emal_40539__pinl_23262__idc_4697;
    SAC_array_descriptor_t SACp_emal_40539__pinl_23262__idc_4697__desc = 
# 6946 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6946 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40539__pinl_23262__idc_4697__shp0 = 1;
    const int SACp_emal_40539__pinl_23262__idc_4697__sz = 1;
    const int SACp_emal_40539__pinl_23262__idc_4697__dim = 1;




    int SACp_emal_40538__ivesli_39697;
   
   




    int SACp_emal_40537__pinl_23221__icc_4676;
   
   




    int SACp_emal_40535__uprf_23295;
   
   




    
# 6975 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6975 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40534__uprf_23289;
   
   




    
# 6982 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 6982 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40533__uprf_23283;
   
   




    int * SACp_emal_40532__pinl_16575__idc_6032;
    SAC_array_descriptor_t SACp_emal_40532__pinl_16575__idc_6032__desc = 
# 6990 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 6990 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_40532__pinl_16575__idc_6032__shp0 = 1;
    const int SACp_emal_40532__pinl_16575__idc_6032__sz = 1;
    const int SACp_emal_40532__pinl_16575__idc_6032__dim = 1;




    int SACp_emal_40531__ivesli_39696;
   
   




    int SACp_emal_40530__pinl_16483__icc_5996;
   
   




    int * SACp_emal_40529__pinl_16486__icc_5999;
    SAC_array_descriptor_t SACp_emal_40529__pinl_16486__icc_5999__desc = 
# 7013 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7013 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40529__pinl_16486__icc_5999__shp0;
    int SACp_emal_40529__pinl_16486__icc_5999__sz;
    const int SACp_emal_40529__pinl_16486__icc_5999__dim = 1;




    
# 7021 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 7021 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40528__pinl_16629__icc_3185_pred;
   
   




    
# 7028 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 7028 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_40527__pinl_16631__icc_3186_pred;
   
   




    int * SACp_emal_40526__pinl_16628__icc_3189;
    SAC_array_descriptor_t SACp_emal_40526__pinl_16628__icc_3189__desc = 
# 7036 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7036 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_40526__pinl_16628__icc_3189__sz = 0;
    int SACp_emal_40526__pinl_16628__icc_3189__dim = 0;




    int SACp_wlidx_39661__pinl_16486__icc_5999;
   
   




    int SACp_wlidx_39660__pinl_16474__icc_5978;
   
   




    int SACp_wlidx_39659__pinl_16390__icc_6141;
   
   




    int * SACp_pinl_23220__icc_4675;
    SAC_array_descriptor_t SACp_pinl_23220__icc_4675__desc = 
# 7065 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7065 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_23220__icc_4675__sz = 0;
    int SACp_pinl_23220__icc_4675__dim = 0;




    int * SACp_pinl_23219__icc_4674;
    SAC_array_descriptor_t SACp_pinl_23219__icc_4674__desc = 
# 7073 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7073 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_23219__icc_4674__shp0;
    int SACp_pinl_23219__icc_4674__sz;
    const int SACp_pinl_23219__icc_4674__dim = 1;




    int SACp_pinl_16402__eat_486;
   
   




    int * SACp_pinl_16400_iv;
    SAC_array_descriptor_t SACp_pinl_16400_iv__desc = 
# 7089 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7089 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_16400_iv__shp0 = 1;
    const int SACp_pinl_16400_iv__sz = 1;
    const int SACp_pinl_16400_iv__dim = 1;




    int SACp_pinl_16513__eat_483;
   
   




    int SACp_pinl_16512__eat_482;
   
   




    int * SACp_pinl_16510_iv__SSA0_1;
    SAC_array_descriptor_t SACp_pinl_16510_iv__SSA0_1__desc = 
# 7112 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7112 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_16510_iv__SSA0_1__shp0 = 1;
    const int SACp_pinl_16510_iv__SSA0_1__sz = 1;
    const int SACp_pinl_16510_iv__SSA0_1__dim = 1;




    int * SACp_pinl_16507_iv;
    SAC_array_descriptor_t SACp_pinl_16507_iv__desc = 
# 7121 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7121 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_16507_iv__shp0 = 1;
    const int SACp_pinl_16507_iv__sz = 1;
    const int SACp_pinl_16507_iv__dim = 1;




    int * SACp_pinl_16628__icc_3189;
    SAC_array_descriptor_t SACp_pinl_16628__icc_3189__desc = 
# 7130 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 7130 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_pinl_16628__icc_3189__sz = 0;
    int SACp_pinl_16628__icc_3189__dim = 0;





   




    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    int SACl_a__dim = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[3]);

   
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_40595__isaa_30561_od = 0; }; }
    { { SACp_emal_40594__isaa_30564_a = SACl_a__dim; }; }
    { { if (!((1 == SACp_emal_40593__isaa_30565_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40593__isaa_30565_a"); }; { if ((((6 + (SACp_emal_40593__isaa_30565_a__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40593__isaa_30565_a__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40593__isaa_30565_a__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40593__isaa_30565_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40593__isaa_30565_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40593__isaa_30565_a__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40593__isaa_30565_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40593__isaa_30565_a__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40593__isaa_30565_a__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40593__isaa_30565_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40593__isaa_30565_a__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40593__isaa_30565_a__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40593__isaa_30565_a__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40593__isaa_30565_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40593__isaa_30565_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40593__isaa_30565_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40593__isaa_30565_a__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40593__isaa_30565_a__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40593__isaa_30565_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40593__isaa_30565_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40593__isaa_30565_a__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40593__isaa_30565_a__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40593__isaa_30565_a__desc) & (-1 ^ (3))))[(6 + (0))]) = SACl_a__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40593__isaa_30565_a__desc) & (-1 ^ (3))))[4]) = SACp_emal_40593__isaa_30565_a__sz = SAC_size;
      if (!((SACp_emal_40593__isaa_30565_a__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7172 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 7172 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7172 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7172 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7172 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 7172 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7172 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 7172, __extension__ __PRETTY_FUNCTION__); }))
# 7172 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40593__isaa_30565_a = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40593__isaa_30565_a__sz * sizeof (*SACp_emal_40593__isaa_30565_a)); break; case SAC_HM_multi_threaded: SACp_emal_40593__isaa_30565_a = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40593__isaa_30565_a__sz * sizeof (*SACp_emal_40593__isaa_30565_a), 0); break; case SAC_HM_any_threaded: SACp_emal_40593__isaa_30565_a = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40593__isaa_30565_a__sz * sizeof (*SACp_emal_40593__isaa_30565_a), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40593__isaa_30565_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40593__isaa_30565_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40593__isaa_30565_a__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    for (int SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
      { SACp_emal_40593__isaa_30565_a[SAC_i] = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]); };
    }

    ; { SACp_emal_40592__mse_30569__isaa_30563_od = ((SACl_od) < 0) ? -(SACl_od) : (SACl_od); };
    { { if (!((1 == SACp_emal_40591__isaa_30568_oshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40591__isaa_30568_oshp"); }; { { if ((((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp)) + ((6 + (SACp_emal_40591__isaa_30568_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp)) + ((6 + (SACp_emal_40591__isaa_30568_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp)) + ((6 + (SACp_emal_40591__isaa_30568_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40591__isaa_30568_oshp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40591__isaa_30568_oshp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp)) + ((6 + (SACp_emal_40591__isaa_30568_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40591__isaa_30568_oshp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40591__isaa_30568_oshp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp)) + ((6 + (SACp_emal_40591__isaa_30568_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp)) + ((6 + (SACp_emal_40591__isaa_30568_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp)) + ((6 + (SACp_emal_40591__isaa_30568_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp)) + ((6 + (SACp_emal_40591__isaa_30568_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp)) + ((6 + (SACp_emal_40591__isaa_30568_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40591__isaa_30568_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40591__isaa_30568_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40591__isaa_30568_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40591__isaa_30568_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40591__isaa_30568_oshp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp, SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp), ((6 + (SACp_emal_40591__isaa_30568_oshp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40591__isaa_30568_oshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40591__isaa_30568_oshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40591__isaa_30568_oshp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40591__isaa_30568_oshp__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40591__isaa_30568_oshp__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40591__isaa_30568_oshp[0] = SACp_emal_40592__mse_30569__isaa_30563_od; }

    { { if (!((1 == SACp_emal_40590_oshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40590_oshp"); }; { if ((((6 + (SACp_emal_40590_oshp__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40590_oshp__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40590_oshp__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40590_oshp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40590_oshp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40590_oshp__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40590_oshp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40590_oshp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40590_oshp__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40590_oshp__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40590_oshp__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40590_oshp__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40590_oshp__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40590_oshp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40590_oshp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40590_oshp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40590_oshp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40590_oshp__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40590_oshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40590_oshp__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_40593__isaa_30565_a__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_40590_oshp__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40590_oshp__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40590_oshp__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACl_od) < 0) ? (-(SACl_od)) : (SACl_od));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40590_oshp__desc) & (-1 ^ (3))))[4]) = SACp_emal_40590_oshp__sz = SAC_size;
      if (!((SACp_emal_40590_oshp__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7214 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 7214 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7214 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7214 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7214 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 7214 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7214 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 7214, __extension__ __PRETTY_FUNCTION__); }))
# 7214 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40590_oshp = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40590_oshp__sz * sizeof (*SACp_emal_40590_oshp)); break; case SAC_HM_multi_threaded: SACp_emal_40590_oshp = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40590_oshp__sz * sizeof (*SACp_emal_40590_oshp), 0); break; case SAC_HM_any_threaded: SACp_emal_40590_oshp = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40590_oshp__sz * sizeof (*SACp_emal_40590_oshp), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40590_oshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40590_oshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40590_oshp__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 7221 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 7221 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACl_od;
      SAC_cond = (SACl_od < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_40593__isaa_30565_a__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_40593__isaa_30565_a__sz))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40590_oshp[SAC_i] = ( SACp_emal_40593__isaa_30565_a[SAC_off + SAC_i]); };
      }
    }

    { { if (!((1 == SACp_emal_40589__flat_435__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40589__flat_435"); }; { if ((((6 + (SACp_emal_40589__flat_435__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40589__flat_435__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40589__flat_435__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40589__flat_435__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40589__flat_435__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40589__flat_435__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40589__flat_435__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40589__flat_435__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40589__flat_435__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40589__flat_435__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40589__flat_435__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40589__flat_435__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40589__flat_435__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40589__flat_435__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40589__flat_435__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40589__flat_435__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40589__flat_435__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40589__flat_435__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40589__flat_435__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40589__flat_435__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_40593__isaa_30565_a__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_40589__flat_435__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40589__flat_435__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40589__flat_435__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40593__isaa_30565_a__sz - (((SACl_od) < 0) ? (-(SACl_od)) : (SACl_od));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40589__flat_435__desc) & (-1 ^ (3))))[4]) = SACp_emal_40589__flat_435__sz = SAC_size;
      if (!((SACp_emal_40589__flat_435__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7255 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 7255 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7255 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7255 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7255 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 7255 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7255 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 7255, __extension__ __PRETTY_FUNCTION__); }))
# 7255 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40589__flat_435 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40589__flat_435__sz * sizeof (*SACp_emal_40589__flat_435)); break; case SAC_HM_multi_threaded: SACp_emal_40589__flat_435 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40589__flat_435__sz * sizeof (*SACp_emal_40589__flat_435), 0); break; case SAC_HM_any_threaded: SACp_emal_40589__flat_435 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40589__flat_435__sz * sizeof (*SACp_emal_40589__flat_435), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40589__flat_435__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40589__flat_435__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40589__flat_435__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 7262 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 7262 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = SACl_od;
      SAC_cond = (SACl_od < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_40593__isaa_30565_a__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_40593__isaa_30565_a__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40589__flat_435[SAC_i] = ( SACp_emal_40593__isaa_30565_a[SAC_off + SAC_i]); };
      }
    }

    { { if (!((1 == SACp_emal_40588_s__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40588_s"); }; { if ((((6 + (SACp_emal_40588_s__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40588_s__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40588_s__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40588_s__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40588_s__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40588_s__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40588_s__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40588_s__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40588_s__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40588_s__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40588_s__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40588_s__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40588_s__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40588_s__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40588_s__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40588_s__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40588_s__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40588_s__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40588_s__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40588_s__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_40589__flat_435__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_40588_s__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40588_s__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40588_s__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACl_od) < 0) ? (-(SACl_od)) : (SACl_od));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40588_s__desc) & (-1 ^ (3))))[4]) = SACp_emal_40588_s__sz = SAC_size;
      if (!((SACp_emal_40588_s__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7297 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 7297 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7297 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7297 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7297 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 7297 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7297 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 7297, __extension__ __PRETTY_FUNCTION__); }))
# 7297 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40588_s = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40588_s__sz * sizeof (*SACp_emal_40588_s)); break; case SAC_HM_multi_threaded: SACp_emal_40588_s = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40588_s__sz * sizeof (*SACp_emal_40588_s), 0); break; case SAC_HM_any_threaded: SACp_emal_40588_s = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40588_s__sz * sizeof (*SACp_emal_40588_s), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40588_s__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40588_s__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40588_s__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 7304 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 7304 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACl_od;
      SAC_cond = (SACl_od < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_40589__flat_435__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_40589__flat_435__sz))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40588_s[SAC_i] = ( SACp_emal_40589__flat_435[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_40589__flat_435); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40589__flat_435__desc) & (-1 ^ (3))))); } } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_40587__dl_23435 = 1; }; }
    ; ; { SACp_emal_40586__dl_23437 = (2) * (SACl_od); };
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "Assignment with incompatible types found"); };
    ;

    }
    ; { SACp_emal_40585__cf_23413 = -(SACl_od); };
    ;
    ; ; { SACp_emal_40585__cf_23413 = (SACp_emal_40585__cf_23413) * (2); };
    ; ; { SACp_emal_40585__cf_23413 = (SACp_emal_40585__cf_23413) + (SACp_emal_40594__isaa_30564_a); };
    { ; ; }
    { { if (!((1 == SACp_emal_40582__flat_441__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40582__flat_441"); }; { if ((((6 + (SACp_emal_40582__flat_441__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40582__flat_441__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40582__flat_441__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40582__flat_441__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40582__flat_441__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40582__flat_441__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40582__flat_441__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40582__flat_441__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40582__flat_441__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40582__flat_441__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40582__flat_441__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40582__flat_441__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40582__flat_441__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40582__flat_441__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40582__flat_441__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40582__flat_441__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40582__flat_441__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40582__flat_441__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40582__flat_441__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40582__flat_441__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "1st argument of _drop_SxV_ is not a scalar!"); };
    if (!((SACp_emal_40593__isaa_30565_a__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "2nd argument of _drop_SxV_ is not a vector!"); };
    if (!((SACp_emal_40582__flat_441__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40582__flat_441__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40582__flat_441__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40593__isaa_30565_a__sz - (((SACp_emal_40586__dl_23437) < 0) ? (-(SACp_emal_40586__dl_23437)) : (SACp_emal_40586__dl_23437));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40582__flat_441__desc) & (-1 ^ (3))))[4]) = SACp_emal_40582__flat_441__sz = SAC_size;
      if (!((SACp_emal_40582__flat_441__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7362 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 7362 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7362 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7362 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7362 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 7362 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7362 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 7362, __extension__ __PRETTY_FUNCTION__); }))
# 7362 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40582__flat_441 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40582__flat_441__sz * sizeof (*SACp_emal_40582__flat_441)); break; case SAC_HM_multi_threaded: SACp_emal_40582__flat_441 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40582__flat_441__sz * sizeof (*SACp_emal_40582__flat_441), 0); break; case SAC_HM_any_threaded: SACp_emal_40582__flat_441 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40582__flat_441__sz * sizeof (*SACp_emal_40582__flat_441), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40582__flat_441__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40582__flat_441__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40582__flat_441__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 7369 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 7369 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = SACp_emal_40586__dl_23437;
      SAC_cond = (SACp_emal_40586__dl_23437 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_40593__isaa_30565_a__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_40593__isaa_30565_a__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40582__flat_441[SAC_i] = ( SACp_emal_40593__isaa_30565_a[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_40593__isaa_30565_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40593__isaa_30565_a__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    ; { SACp_emal_40581__mse_30579__dl_23429 = ((SACp_emal_40585__cf_23413) < 0) ? -(SACp_emal_40585__cf_23413) : (SACp_emal_40585__cf_23413); };
    { { if (!((1 == SACp_emal_40580_ishp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40580_ishp"); }; { if ((((6 + (SACp_emal_40580_ishp__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40580_ishp__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40580_ishp__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40580_ishp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40580_ishp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40580_ishp__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40580_ishp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40580_ishp__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40580_ishp__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40580_ishp__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40580_ishp__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40580_ishp__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40580_ishp__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40580_ishp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40580_ishp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40580_ishp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40580_ishp__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40580_ishp__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40580_ishp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40580_ishp__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "1st argument of _take_SxV_ is not a scalar!"); };
    if (!((SACp_emal_40582__flat_441__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "2nd argument of _take_SxV_ is not a vector!"); };
    if (!((SACp_emal_40580_ishp__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40580_ishp__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40580_ishp__desc) & (-1 ^ (3))))[(6 + (0))]) = (((SACp_emal_40585__cf_23413) < 0) ? (-(SACp_emal_40585__cf_23413)) : (SACp_emal_40585__cf_23413));
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40580_ishp__desc) & (-1 ^ (3))))[4]) = SACp_emal_40580_ishp__sz = SAC_size;
      if (!((SACp_emal_40580_ishp__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 1, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7407 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 7407 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7407 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7407 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7407 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 7407 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7407 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 7407, __extension__ __PRETTY_FUNCTION__); }))
# 7407 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40580_ishp = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40580_ishp__sz * sizeof (*SACp_emal_40580_ishp)); break; case SAC_HM_multi_threaded: SACp_emal_40580_ishp = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40580_ishp__sz * sizeof (*SACp_emal_40580_ishp), 0); break; case SAC_HM_any_threaded: SACp_emal_40580_ishp = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40580_ishp__sz * sizeof (*SACp_emal_40580_ishp), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40580_ishp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40580_ishp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40580_ishp__desc) & (-1 ^ (3))))[1]) = 0; } }



   
    {
      int SAC_cnt, SAC_off;
      
# 7414 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 7414 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = SACp_emal_40585__cf_23413;
      SAC_cond = (SACp_emal_40585__cf_23413 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_40582__flat_441__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_40582__flat_441__sz))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 49, 58, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_40580_ishp[SAC_i] = ( SACp_emal_40582__flat_441[SAC_off + SAC_i]); };
      }
    }

    { { free (SACp_emal_40582__flat_441); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40582__flat_441__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    if (SACp_emal_40595__isaa_30561_od <= SACp_emal_40592__mse_30569__isaa_30563_od) { SACp_emal_40579__uprf_23387 = 1; } else { SACp_emal_40579__uprf_23387 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7780, "Scalar constraint `" "SACp_emal_40595__isaa_30561_od" " (" "%d" ") <= " "SACp_emal_40592__mse_30569__isaa_30563_od" " (" "%d" ")" "' violated", SACp_emal_40595__isaa_30561_od, SACp_emal_40592__mse_30569__isaa_30563_od); }
    { { SACp_emal_40578__uprf_23386 = SACp_emal_40595__isaa_30561_od; } }
    { { if (!((1 == SACp_emal_40577__pinl_16418__idc_6150__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40577__pinl_16418__idc_6150"); }; { { if ((((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150)) + ((6 + (SACp_emal_40577__pinl_16418__idc_6150__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150)) + ((6 + (SACp_emal_40577__pinl_16418__idc_6150__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150)) + ((6 + (SACp_emal_40577__pinl_16418__idc_6150__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40577__pinl_16418__idc_6150 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40577__pinl_16418__idc_6150 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150)) + ((6 + (SACp_emal_40577__pinl_16418__idc_6150__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40577__pinl_16418__idc_6150 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40577__pinl_16418__idc_6150 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150)) + ((6 + (SACp_emal_40577__pinl_16418__idc_6150__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150)) + ((6 + (SACp_emal_40577__pinl_16418__idc_6150__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150)) + ((6 + (SACp_emal_40577__pinl_16418__idc_6150__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150)) + ((6 + (SACp_emal_40577__pinl_16418__idc_6150__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150)) + ((6 + (SACp_emal_40577__pinl_16418__idc_6150__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40577__pinl_16418__idc_6150 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40577__pinl_16418__idc_6150 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40577__pinl_16418__idc_6150 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40577__pinl_16418__idc_6150 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40577__pinl_16418__idc_6150__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150, SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150), ((6 + (SACp_emal_40577__pinl_16418__idc_6150__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40577__pinl_16418__idc_6150__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40577__pinl_16418__idc_6150__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40577__pinl_16418__idc_6150__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40577__pinl_16418__idc_6150__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7710, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40577__pinl_16418__idc_6150__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7710, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40577__pinl_16418__idc_6150[0] = SACp_emal_40578__uprf_23386; }

    { ; ; }
    if (!SACp_emal_40579__uprf_23387) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7701, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40576__pinl_23035__icc_5140 = ( SACp_emal_40577__pinl_16418__idc_6150[SACp_emal_40595__isaa_30561_od]); }

    { { { if (((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150, ((((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150) - 1)->data1.arena)); } else { if (SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150, ((((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150, ((((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150) - 1)->data1.arena)); } } else { if (((((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150, ((((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150) - 1)->data1.arena)); } else { if (((((SACp_emal_40577__pinl_16418__idc_6150__sz * sizeof (*SACp_emal_40577__pinl_16418__idc_6150))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150, ((((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40577__pinl_16418__idc_6150); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40577__pinl_16418__idc_6150__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40575__pinl_23038__icc_5146 = ( SACp_emal_40591__isaa_30568_oshp[SACp_emal_40595__isaa_30561_od]); }

    { { { if (((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp, ((((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp) - 1)->data1.arena)); } else { if (SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp, ((((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp, ((((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp, ((((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp) - 1)->data1.arena)); } else { if (((((SACp_emal_40591__isaa_30568_oshp__sz * sizeof (*SACp_emal_40591__isaa_30568_oshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp, ((((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40591__isaa_30568_oshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40591__isaa_30568_oshp__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound"); }; { { if ((((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound)) + ((6 + (SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound)) + ((6 + (SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound)) + ((6 + (SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound)) + ((6 + (SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound)) + ((6 + (SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound)) + ((6 + (SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound)) + ((6 + (SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound)) + ((6 + (SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound)) + ((6 + (SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound, SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound), ((6 + (SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7780, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7780, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound[0] = SACp_emal_40575__pinl_23038__icc_5146; }

    { { if (!((1 == SACp_emal_40561__pinl_16390__icc_6141__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40561__pinl_16390__icc_6141"); }; { if ((((6 + (SACp_emal_40561__pinl_16390__icc_6141__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40561__pinl_16390__icc_6141__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40561__pinl_16390__icc_6141__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40561__pinl_16390__icc_6141__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40561__pinl_16390__icc_6141__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40561__pinl_16390__icc_6141__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40561__pinl_16390__icc_6141__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40561__pinl_16390__icc_6141__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40561__pinl_16390__icc_6141__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40561__pinl_16390__icc_6141__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40561__pinl_16390__icc_6141__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40561__pinl_16390__icc_6141__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40561__pinl_16390__icc_6141__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40561__pinl_16390__icc_6141__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40561__pinl_16390__icc_6141__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40561__pinl_16390__icc_6141__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40561__pinl_16390__icc_6141__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40561__pinl_16390__icc_6141__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40561__pinl_16390__icc_6141__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40561__pinl_16390__icc_6141__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40561__pinl_16390__icc_6141__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7695, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40561__pinl_16390__icc_6141__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40561__pinl_16390__icc_6141__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40575__pinl_23038__icc_5146;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40561__pinl_16390__icc_6141__desc) & (-1 ^ (3))))[4]) = SACp_emal_40561__pinl_16390__icc_6141__sz = SAC_size;
      if (!((SACp_emal_40561__pinl_16390__icc_6141__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7695, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7495 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 7495 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7495 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7495 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7495 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 7495 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7495 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 7495, __extension__ __PRETTY_FUNCTION__); }))
# 7495 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40561__pinl_16390__icc_6141 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40561__pinl_16390__icc_6141__sz * sizeof (*SACp_emal_40561__pinl_16390__icc_6141)); break; case SAC_HM_multi_threaded: SACp_emal_40561__pinl_16390__icc_6141 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40561__pinl_16390__icc_6141__sz * sizeof (*SACp_emal_40561__pinl_16390__icc_6141), 0); break; case SAC_HM_any_threaded: SACp_emal_40561__pinl_16390__icc_6141 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40561__pinl_16390__icc_6141__sz * sizeof (*SACp_emal_40561__pinl_16390__icc_6141), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40561__pinl_16390__icc_6141__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40561__pinl_16390__icc_6141__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40561__pinl_16390__icc_6141__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7695, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7695, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_40561__pinl_16390__icc_6141_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_40561__pinl_16390__icc_6141_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_40576__pinl_23035__icc_5140;




      SACp_wlidx_39659__pinl_16390__icc_6141
        = SAC_schedule_start0 * SAC_SACp_emal_40561__pinl_16390__icc_6141_shpfac0;

      { int SAC_stop_SACp_pinl_16402__eat_486 = SACp_emal_40576__pinl_23035__icc_5140; for (SACp_pinl_16402__eat_486 = 0; SACp_pinl_16402__eat_486 < SACp_emal_40576__pinl_23035__icc_5140;) {
     



      if (!((0 == (SACp_emal_40561__pinl_16390__icc_6141__dim - SACp_pinl_16400_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7710, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40561__pinl_16390__icc_6141_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7710, "WL expression with illegal size found!"); };
      { SACp_emal_40561__pinl_16390__icc_6141[SACp_wlidx_39659__pinl_16390__icc_6141] = SACp_emal_40587__dl_23435; };

      SACp_wlidx_39659__pinl_16390__icc_6141 = SACp_wlidx_39659__pinl_16390__icc_6141 + 1;
      SACp_pinl_16402__eat_486 = SACp_pinl_16402__eat_486 + 1;
      } }
# 7565 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_40576__pinl_23035__icc_5140;
      SAC_schedule_stop0 = SACp_emal_40575__pinl_23038__icc_5146;




      SACp_wlidx_39659__pinl_16390__icc_6141
        = SAC_schedule_start0 * SAC_SACp_emal_40561__pinl_16390__icc_6141_shpfac0;

      { int SAC_stop_SACp_pinl_16402__eat_486 = SACp_emal_40575__pinl_23038__icc_5146; for (SACp_pinl_16402__eat_486 = SACp_emal_40576__pinl_23035__icc_5140; SACp_pinl_16402__eat_486 < SACp_emal_40575__pinl_23038__icc_5146;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16402__eat_486 >= 0) { { SACp_emal_40571__uprf_23379 = SACp_pinl_16402__eat_486; }; SACp_emal_40571__uprf_23379 = 1; } else { SACp_emal_40571__uprf_23379 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Non-negativity constraint violated " "for scalar " "SACp_pinl_16402__eat_486"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16402__eat_486 < SACp_emal_40592__mse_30569__isaa_30563_od) { SACp_emal_40570__uprf_23373 = 1; } else { SACp_emal_40570__uprf_23373 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Scalar constraint `" "SACp_pinl_16402__eat_486" " (" "%d" ") < " "SACp_emal_40592__mse_30569__isaa_30563_od" " (" "%d" ")" "' violated", SACp_pinl_16402__eat_486, SACp_emal_40592__mse_30569__isaa_30563_od); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16402__eat_486 >= 0) { { SACp_emal_40569__uprf_23364 = SACp_pinl_16402__eat_486; }; SACp_emal_40569__uprf_23364 = 1; } else { SACp_emal_40569__uprf_23364 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Non-negativity constraint violated " "for scalar " "SACp_pinl_16402__eat_486"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16402__eat_486 < SACp_emal_40592__mse_30569__isaa_30563_od) { SACp_emal_40568__uprf_23358 = 1; } else { SACp_emal_40568__uprf_23358 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Scalar constraint `" "SACp_pinl_16402__eat_486" " (" "%d" ") < " "SACp_emal_40592__mse_30569__isaa_30563_od" " (" "%d" ")" "' violated", SACp_pinl_16402__eat_486, SACp_emal_40592__mse_30569__isaa_30563_od); }
      { { if (!((1 == SACp_emal_40567__pinl_16430__idc_6156__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40567__pinl_16430__idc_6156"); }; { { if ((((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156)) + ((6 + (SACp_emal_40567__pinl_16430__idc_6156__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156)) + ((6 + (SACp_emal_40567__pinl_16430__idc_6156__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156)) + ((6 + (SACp_emal_40567__pinl_16430__idc_6156__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40567__pinl_16430__idc_6156 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40567__pinl_16430__idc_6156 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156)) + ((6 + (SACp_emal_40567__pinl_16430__idc_6156__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40567__pinl_16430__idc_6156 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40567__pinl_16430__idc_6156 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156)) + ((6 + (SACp_emal_40567__pinl_16430__idc_6156__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156)) + ((6 + (SACp_emal_40567__pinl_16430__idc_6156__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156)) + ((6 + (SACp_emal_40567__pinl_16430__idc_6156__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156)) + ((6 + (SACp_emal_40567__pinl_16430__idc_6156__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156)) + ((6 + (SACp_emal_40567__pinl_16430__idc_6156__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40567__pinl_16430__idc_6156 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40567__pinl_16430__idc_6156 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40567__pinl_16430__idc_6156 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40567__pinl_16430__idc_6156 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40567__pinl_16430__idc_6156__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156, SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156), ((6 + (SACp_emal_40567__pinl_16430__idc_6156__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40567__pinl_16430__idc_6156__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40567__pinl_16430__idc_6156__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40567__pinl_16430__idc_6156__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_40567__pinl_16430__idc_6156__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7715, "Assignment with incompatible types found"); };
      if (!((SACp_emal_40567__pinl_16430__idc_6156__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7715, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_40567__pinl_16430__idc_6156[0] = SACp_pinl_16402__eat_486; }

      if (!SACp_emal_40570__uprf_23373) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_40571__uprf_23379) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_40566__ivesli_39700 = ( SACp_emal_40567__pinl_16430__idc_6156[0]);

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_40565__pinl_16383__icc_6129 = ( SACp_emal_40588_s[SACp_emal_40566__ivesli_39700]); }

      { ; ; }
      if (!SACp_emal_40570__uprf_23373) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_40571__uprf_23379) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7757, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      if (!SACp_emal_40568__uprf_23358) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_40569__uprf_23364) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_40564__ivesli_39699 = ( SACp_emal_40567__pinl_16430__idc_6156[0]);

      { { { if (((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156, ((((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156) - 1)->data1.arena)); } else { if (SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156, ((((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156, ((((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156) - 1)->data1.arena)); } } else { if (((((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156, ((((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156) - 1)->data1.arena)); } else { if (((((SACp_emal_40567__pinl_16430__idc_6156__sz * sizeof (*SACp_emal_40567__pinl_16430__idc_6156))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156, ((((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40567__pinl_16430__idc_6156); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40567__pinl_16430__idc_6156__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_40563__pinl_16386__icc_6135 = ( SACp_emal_40590_oshp[SACp_emal_40564__ivesli_39699]); }

      { ; ; }
      if (!SACp_emal_40568__uprf_23358) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_40569__uprf_23364) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7739, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      ; ; { SACp_emal_40563__pinl_16386__icc_6135 = (SACp_emal_40563__pinl_16386__icc_6135) * (SACp_emal_40565__pinl_16383__icc_6129); };
      { ; ; }



      if (!((0 == (SACp_emal_40561__pinl_16390__icc_6141__dim - SACp_pinl_16400_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40561__pinl_16390__icc_6141_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_40561__pinl_16390__icc_6141[SACp_wlidx_39659__pinl_16390__icc_6141] = SACp_emal_40563__pinl_16386__icc_6135; };

      { ; ; }
      SACp_wlidx_39659__pinl_16390__icc_6141 = SACp_wlidx_39659__pinl_16390__icc_6141 + 1;
      SACp_pinl_16402__eat_486 = SACp_pinl_16402__eat_486 + 1;
      } }
# 7718 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42026_SAC_label:;
    { ; ; }
    { { free (SACp_emal_40590_oshp); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40590_oshp__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_40588_s); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40588_s__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_40579__uprf_23387) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7701, "With-loop guard failed"); }
    { ; ; }
    ; ; { SACp_emal_40560__pinl_16487__flat_2100 = (SACp_emal_40581__mse_30579__dl_23429) + (SACp_emal_40575__pinl_23038__icc_5146); };
    if (SACp_emal_40560__pinl_16487__flat_2100 >= 0) { { SACp_emal_40559__uprf_23335 = SACp_emal_40560__pinl_16487__flat_2100; }; SACp_emal_40559__uprf_23335 = 1; } else { SACp_emal_40559__uprf_23335 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3141, "Non-negativity constraint violated " "for scalar " "SACp_emal_40560__pinl_16487__flat_2100"); }
    { { if (!((1 == SACp_emal_40558__pinl_16538__idc_6012__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40558__pinl_16538__idc_6012"); }; { { if ((((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012)) + ((6 + (SACp_emal_40558__pinl_16538__idc_6012__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012)) + ((6 + (SACp_emal_40558__pinl_16538__idc_6012__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012)) + ((6 + (SACp_emal_40558__pinl_16538__idc_6012__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40558__pinl_16538__idc_6012 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40558__pinl_16538__idc_6012 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012)) + ((6 + (SACp_emal_40558__pinl_16538__idc_6012__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40558__pinl_16538__idc_6012 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40558__pinl_16538__idc_6012 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012)) + ((6 + (SACp_emal_40558__pinl_16538__idc_6012__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012)) + ((6 + (SACp_emal_40558__pinl_16538__idc_6012__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012)) + ((6 + (SACp_emal_40558__pinl_16538__idc_6012__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012)) + ((6 + (SACp_emal_40558__pinl_16538__idc_6012__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012)) + ((6 + (SACp_emal_40558__pinl_16538__idc_6012__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40558__pinl_16538__idc_6012 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40558__pinl_16538__idc_6012 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40558__pinl_16538__idc_6012 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40558__pinl_16538__idc_6012 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40558__pinl_16538__idc_6012__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012, SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012), ((6 + (SACp_emal_40558__pinl_16538__idc_6012__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40558__pinl_16538__idc_6012__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40558__pinl_16538__idc_6012__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40558__pinl_16538__idc_6012__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40558__pinl_16538__idc_6012__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 2929, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40558__pinl_16538__idc_6012__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 2929, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40558__pinl_16538__idc_6012[0] = SACp_emal_40560__pinl_16487__flat_2100; }

    if (SACp_emal_40595__isaa_30561_od <= SACp_emal_40560__pinl_16487__flat_2100) { SACp_emal_40557__uprf_23329 = 1; } else { SACp_emal_40557__uprf_23329 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3141, "Scalar constraint `" "SACp_emal_40595__isaa_30561_od" " (" "%d" ") <= " "SACp_emal_40560__pinl_16487__flat_2100" " (" "%d" ")" "' violated", SACp_emal_40595__isaa_30561_od, SACp_emal_40560__pinl_16487__flat_2100); }
    { ; ; }
    { { SACp_emal_40556__uprf_23328 = SACp_emal_40595__isaa_30561_od; } }
    { { if (!((1 == SACp_emal_40555__pinl_16549__idc_6018__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40555__pinl_16549__idc_6018"); }; { { if ((((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018)) + ((6 + (SACp_emal_40555__pinl_16549__idc_6018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018)) + ((6 + (SACp_emal_40555__pinl_16549__idc_6018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018)) + ((6 + (SACp_emal_40555__pinl_16549__idc_6018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40555__pinl_16549__idc_6018 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40555__pinl_16549__idc_6018 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018)) + ((6 + (SACp_emal_40555__pinl_16549__idc_6018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40555__pinl_16549__idc_6018 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40555__pinl_16549__idc_6018 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018)) + ((6 + (SACp_emal_40555__pinl_16549__idc_6018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018)) + ((6 + (SACp_emal_40555__pinl_16549__idc_6018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018)) + ((6 + (SACp_emal_40555__pinl_16549__idc_6018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018)) + ((6 + (SACp_emal_40555__pinl_16549__idc_6018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018)) + ((6 + (SACp_emal_40555__pinl_16549__idc_6018__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40555__pinl_16549__idc_6018 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40555__pinl_16549__idc_6018 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40555__pinl_16549__idc_6018 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40555__pinl_16549__idc_6018 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40555__pinl_16549__idc_6018__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018, SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018), ((6 + (SACp_emal_40555__pinl_16549__idc_6018__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40555__pinl_16549__idc_6018__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40555__pinl_16549__idc_6018__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40555__pinl_16549__idc_6018__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40555__pinl_16549__idc_6018__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "Assignment with incompatible types found"); };
    if (!((SACp_emal_40555__pinl_16549__idc_6018__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_40555__pinl_16549__idc_6018[0] = SACp_emal_40556__uprf_23328; }

    { ; ; }
    if (!SACp_emal_40559__uprf_23335) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3074, "With-loop guard failed"); }
    if (!SACp_emal_40557__uprf_23329) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3074, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40554__pinl_23096__icc_5140 = ( SACp_emal_40555__pinl_16549__idc_6018[SACp_emal_40595__isaa_30561_od]); }

    { { { if (((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018, ((((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018) - 1)->data1.arena)); } else { if (SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018, ((((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018, ((((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018) - 1)->data1.arena)); } } else { if (((((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018, ((((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018) - 1)->data1.arena)); } else { if (((((SACp_emal_40555__pinl_16549__idc_6018__sz * sizeof (*SACp_emal_40555__pinl_16549__idc_6018))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018, ((((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40555__pinl_16549__idc_6018); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40555__pinl_16549__idc_6018__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40553__pinl_23099__icc_5146 = ( SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound[SACp_emal_40595__isaa_30561_od]); }

    { { { if (((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound, ((((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound) - 1)->data1.arena)); } else { if (SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound, ((((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound, ((((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound) - 1)->data1.arena)); } } else { if (((((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound, ((((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound) - 1)->data1.arena)); } else { if (((((SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__sz * sizeof (*SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound, ((((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40574__pinl_16457__wlbsc_7630_sc_bound__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_40552__pinl_23154_res = (SACp_emal_40554__pinl_23096__icc_5140) > (SACp_emal_40553__pinl_23099__icc_5146) ? (SACp_emal_40554__pinl_23096__icc_5140) : (SACp_emal_40553__pinl_23099__icc_5146); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3141, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e = ( SACp_emal_40558__pinl_16538__idc_6012[SACp_emal_40595__isaa_30561_od]); }

    { { { if (((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012, ((((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012) - 1)->data1.arena)); } else { if (SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012, ((((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012, ((((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012) - 1)->data1.arena)); } } else { if (((((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012, ((((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012) - 1)->data1.arena)); } else { if (((((SACp_emal_40558__pinl_16538__idc_6012__sz * sizeof (*SACp_emal_40558__pinl_16538__idc_6012))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012, ((((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40558__pinl_16538__idc_6012); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40558__pinl_16538__idc_6012__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_40543__pinl_16474__icc_5978__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40543__pinl_16474__icc_5978"); }; { if ((((6 + (SACp_emal_40543__pinl_16474__icc_5978__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40543__pinl_16474__icc_5978__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40543__pinl_16474__icc_5978__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40543__pinl_16474__icc_5978__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40543__pinl_16474__icc_5978__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40543__pinl_16474__icc_5978__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40543__pinl_16474__icc_5978__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40543__pinl_16474__icc_5978__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40543__pinl_16474__icc_5978__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40543__pinl_16474__icc_5978__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40543__pinl_16474__icc_5978__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40543__pinl_16474__icc_5978__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40543__pinl_16474__icc_5978__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40543__pinl_16474__icc_5978__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40543__pinl_16474__icc_5978__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40543__pinl_16474__icc_5978__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40543__pinl_16474__icc_5978__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40543__pinl_16474__icc_5978__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40543__pinl_16474__icc_5978__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40543__pinl_16474__icc_5978__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40543__pinl_16474__icc_5978__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3068, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_40543__pinl_16474__icc_5978__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40543__pinl_16474__icc_5978__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40543__pinl_16474__icc_5978__desc) & (-1 ^ (3))))[4]) = SACp_emal_40543__pinl_16474__icc_5978__sz = SAC_size;
      if (!((SACp_emal_40543__pinl_16474__icc_5978__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3068, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 7807 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 7807 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7807 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 7807 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 7807 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 7807 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 7807 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 7807, __extension__ __PRETTY_FUNCTION__); }))
# 7807 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40543__pinl_16474__icc_5978 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40543__pinl_16474__icc_5978__sz * sizeof (*SACp_emal_40543__pinl_16474__icc_5978)); break; case SAC_HM_multi_threaded: SACp_emal_40543__pinl_16474__icc_5978 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40543__pinl_16474__icc_5978__sz * sizeof (*SACp_emal_40543__pinl_16474__icc_5978), 0); break; case SAC_HM_any_threaded: SACp_emal_40543__pinl_16474__icc_5978 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40543__pinl_16474__icc_5978__sz * sizeof (*SACp_emal_40543__pinl_16474__icc_5978), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40543__pinl_16474__icc_5978__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40543__pinl_16474__icc_5978__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40543__pinl_16474__icc_5978__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3068, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3068, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_40543__pinl_16474__icc_5978_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_40543__pinl_16474__icc_5978_shpfac0 = 1;
      }




      SAC_schedule_start0 = SACp_emal_40552__pinl_23154_res;
      SAC_schedule_stop0 = SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e;




      SACp_wlidx_39660__pinl_16474__icc_5978
        = SAC_schedule_start0 * SAC_SACp_emal_40543__pinl_16474__icc_5978_shpfac0;

      { int SAC_stop_SACp_pinl_16512__eat_482 = SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e; for (SACp_pinl_16512__eat_482 = SACp_emal_40552__pinl_23154_res; SACp_pinl_16512__eat_482 < SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e;) {
     



      if (!((0 == (SACp_emal_40543__pinl_16474__icc_5978__dim - SACp_pinl_16507_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40543__pinl_16474__icc_5978_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "WL expression with illegal size found!"); };
      { SACp_emal_40543__pinl_16474__icc_5978[SACp_wlidx_39660__pinl_16474__icc_5978] = SACp_emal_40595__isaa_30561_od; };

      SACp_wlidx_39660__pinl_16474__icc_5978 = SACp_wlidx_39660__pinl_16474__icc_5978 + 1;
      SACp_pinl_16512__eat_482 = SACp_pinl_16512__eat_482 + 1;
      } }
# 7877 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_40554__pinl_23096__icc_5140;




      SACp_wlidx_39660__pinl_16474__icc_5978
        = SAC_schedule_start0 * SAC_SACp_emal_40543__pinl_16474__icc_5978_shpfac0;

      { int SAC_stop_SACp_pinl_16512__eat_482 = SACp_emal_40554__pinl_23096__icc_5140; for (SACp_pinl_16512__eat_482 = 0; SACp_pinl_16512__eat_482 < SACp_emal_40554__pinl_23096__icc_5140;) {
     



      if (!((0 == (SACp_emal_40543__pinl_16474__icc_5978__dim - SACp_pinl_16507_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40543__pinl_16474__icc_5978_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3083, "WL expression with illegal size found!"); };
      { SACp_emal_40543__pinl_16474__icc_5978[SACp_wlidx_39660__pinl_16474__icc_5978] = SACp_emal_40595__isaa_30561_od; };

      SACp_wlidx_39660__pinl_16474__icc_5978 = SACp_wlidx_39660__pinl_16474__icc_5978 + 1;
      SACp_pinl_16512__eat_482 = SACp_pinl_16512__eat_482 + 1;
      } }
# 7906 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_40554__pinl_23096__icc_5140;
      SAC_schedule_stop0 = SACp_emal_40553__pinl_23099__icc_5146;




      SACp_wlidx_39660__pinl_16474__icc_5978
        = SAC_schedule_start0 * SAC_SACp_emal_40543__pinl_16474__icc_5978_shpfac0;

      { int SAC_stop_SACp_pinl_16512__eat_482 = SACp_emal_40553__pinl_23099__icc_5146; for (SACp_pinl_16512__eat_482 = SACp_emal_40554__pinl_23096__icc_5140; SACp_pinl_16512__eat_482 < SACp_emal_40553__pinl_23099__icc_5146;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16512__eat_482 >= 0) { { SACp_emal_40548__uprf_23321 = SACp_pinl_16512__eat_482; }; SACp_emal_40548__uprf_23321 = 1; } else { SACp_emal_40548__uprf_23321 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Non-negativity constraint violated " "for scalar " "SACp_pinl_16512__eat_482"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16512__eat_482 < SACp_emal_40575__pinl_23038__icc_5146) { SACp_emal_40547__uprf_23315 = 1; } else { SACp_emal_40547__uprf_23315 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Scalar constraint `" "SACp_pinl_16512__eat_482" " (" "%d" ") < " "SACp_emal_40575__pinl_23038__icc_5146" " (" "%d" ")" "' violated", SACp_pinl_16512__eat_482, SACp_emal_40575__pinl_23038__icc_5146); }
      { { if (!((1 == SACp_emal_40546__pinl_16555__idc_6021__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40546__pinl_16555__idc_6021"); }; { { if ((((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021)) + ((6 + (SACp_emal_40546__pinl_16555__idc_6021__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021)) + ((6 + (SACp_emal_40546__pinl_16555__idc_6021__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021)) + ((6 + (SACp_emal_40546__pinl_16555__idc_6021__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40546__pinl_16555__idc_6021 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40546__pinl_16555__idc_6021 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021)) + ((6 + (SACp_emal_40546__pinl_16555__idc_6021__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40546__pinl_16555__idc_6021 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40546__pinl_16555__idc_6021 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021)) + ((6 + (SACp_emal_40546__pinl_16555__idc_6021__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021)) + ((6 + (SACp_emal_40546__pinl_16555__idc_6021__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021)) + ((6 + (SACp_emal_40546__pinl_16555__idc_6021__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021)) + ((6 + (SACp_emal_40546__pinl_16555__idc_6021__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021)) + ((6 + (SACp_emal_40546__pinl_16555__idc_6021__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40546__pinl_16555__idc_6021 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40546__pinl_16555__idc_6021 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40546__pinl_16555__idc_6021 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40546__pinl_16555__idc_6021 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40546__pinl_16555__idc_6021__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021, SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021), ((6 + (SACp_emal_40546__pinl_16555__idc_6021__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40546__pinl_16555__idc_6021__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40546__pinl_16555__idc_6021__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40546__pinl_16555__idc_6021__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_40546__pinl_16555__idc_6021__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3088, "Assignment with incompatible types found"); };
      if (!((SACp_emal_40546__pinl_16555__idc_6021__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3088, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_40546__pinl_16555__idc_6021[0] = SACp_pinl_16512__eat_482; }

      if (!SACp_emal_40547__uprf_23315) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_40548__uprf_23321) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_40545__ivesli_39698 = ( SACp_emal_40546__pinl_16555__idc_6021[0]);

      { { { if (((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021, ((((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021) - 1)->data1.arena)); } else { if (SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021, ((((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021, ((((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021) - 1)->data1.arena)); } } else { if (((((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021, ((((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021) - 1)->data1.arena)); } else { if (((((SACp_emal_40546__pinl_16555__idc_6021__sz * sizeof (*SACp_emal_40546__pinl_16555__idc_6021))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021, ((((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40546__pinl_16555__idc_6021); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40546__pinl_16555__idc_6021__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_40544__pinl_16469__icc_5972 = ( SACp_emal_40561__pinl_16390__icc_6141[SACp_emal_40545__ivesli_39698]); }

      { ; ; }
      if (!SACp_emal_40547__uprf_23315) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_40548__uprf_23321) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3114, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }



      if (!((0 == (SACp_emal_40543__pinl_16474__icc_5978__dim - SACp_pinl_16507_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40543__pinl_16474__icc_5978_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_40543__pinl_16474__icc_5978[SACp_wlidx_39660__pinl_16474__icc_5978] = SACp_emal_40544__pinl_16469__icc_5972; };

      { ; ; }
      SACp_wlidx_39660__pinl_16474__icc_5978 = SACp_wlidx_39660__pinl_16474__icc_5978 + 1;
      SACp_pinl_16512__eat_482 = SACp_pinl_16512__eat_482 + 1;
      } }
# 8004 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42027_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_40561__pinl_16390__icc_6141); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40561__pinl_16390__icc_6141__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    if (!SACp_emal_40559__uprf_23335) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3074, "With-loop guard failed"); }
    if (!SACp_emal_40557__uprf_23329) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3074, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { { if (!((1 == SACp_emal_40529__pinl_16486__icc_5999__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40529__pinl_16486__icc_5999"); }; { if ((((6 + (SACp_emal_40529__pinl_16486__icc_5999__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40529__pinl_16486__icc_5999__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_40529__pinl_16486__icc_5999__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40529__pinl_16486__icc_5999__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40529__pinl_16486__icc_5999__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_40529__pinl_16486__icc_5999__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40529__pinl_16486__icc_5999__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40529__pinl_16486__icc_5999__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_40529__pinl_16486__icc_5999__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_40529__pinl_16486__icc_5999__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_40529__pinl_16486__icc_5999__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_40529__pinl_16486__icc_5999__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_40529__pinl_16486__icc_5999__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40529__pinl_16486__icc_5999__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40529__pinl_16486__icc_5999__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40529__pinl_16486__icc_5999__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40529__pinl_16486__icc_5999__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40529__pinl_16486__icc_5999__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40529__pinl_16486__icc_5999__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40529__pinl_16486__icc_5999__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_40529__pinl_16486__icc_5999__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3260, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_40529__pinl_16486__icc_5999__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40529__pinl_16486__icc_5999__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40543__pinl_16474__icc_5978__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40529__pinl_16486__icc_5999__desc) & (-1 ^ (3))))[4]) = SACp_emal_40529__pinl_16486__icc_5999__sz = SAC_size * SACp_emal_40543__pinl_16474__icc_5978__sz;
      if (!((SACp_emal_40529__pinl_16486__icc_5999__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3260, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8033 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 8033 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8033 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 8033 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8033 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 8033 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8033 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 8033, __extension__ __PRETTY_FUNCTION__); }))
# 8033 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40529__pinl_16486__icc_5999 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40529__pinl_16486__icc_5999__sz * sizeof (*SACp_emal_40529__pinl_16486__icc_5999)); break; case SAC_HM_multi_threaded: SACp_emal_40529__pinl_16486__icc_5999 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40529__pinl_16486__icc_5999__sz * sizeof (*SACp_emal_40529__pinl_16486__icc_5999), 0); break; case SAC_HM_any_threaded: SACp_emal_40529__pinl_16486__icc_5999 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40529__pinl_16486__icc_5999__sz * sizeof (*SACp_emal_40529__pinl_16486__icc_5999), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40529__pinl_16486__icc_5999__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40529__pinl_16486__icc_5999__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40529__pinl_16486__icc_5999__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3260, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3260, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_40529__pinl_16486__icc_5999_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_40529__pinl_16486__icc_5999_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_40575__pinl_23038__icc_5146;




      SACp_wlidx_39661__pinl_16486__icc_5999
        = SAC_schedule_start0 * SAC_SACp_emal_40529__pinl_16486__icc_5999_shpfac0;

      { int SAC_stop_SACp_pinl_16513__eat_483 = SACp_emal_40575__pinl_23038__icc_5146; for (SACp_pinl_16513__eat_483 = 0; SACp_pinl_16513__eat_483 < SACp_emal_40575__pinl_23038__icc_5146;) {
     
      { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40543__pinl_16474__icc_5978__desc) & (-1 ^ (3))))[0]) += 1; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16513__eat_483 >= 0) { { SACp_emal_40541__uprf_28767 = SACp_pinl_16513__eat_483; }; SACp_emal_40541__uprf_28767 = 1; } else { SACp_emal_40541__uprf_28767 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Non-negativity constraint violated " "for scalar " "SACp_pinl_16513__eat_483"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16513__eat_483 < SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e) { SACp_emal_40540__uprf_28761 = 1; } else { SACp_emal_40540__uprf_28761 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Scalar constraint `" "SACp_pinl_16513__eat_483" " (" "%d" ") < " "SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e" " (" "%d" ")" "' violated", SACp_pinl_16513__eat_483, SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e); }
      { { if (!((1 == SACp_emal_40539__pinl_23262__idc_4697__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40539__pinl_23262__idc_4697"); }; { { if ((((SACp_emal_40539__pinl_23262__idc_4697__sz * sizeof (*SACp_emal_40539__pinl_23262__idc_4697)) + ((6 + (SACp_emal_40539__pinl_23262__idc_4697__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40539__pinl_23262__idc_4697__sz * sizeof (*SACp_emal_40539__pinl_23262__idc_4697)) + ((6 + (SACp_emal_40539__pinl_23262__idc_4697__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40539__pinl_23262__idc_4697__sz * sizeof (*SACp_emal_40539__pinl_23262__idc_4697)) + ((6 + (SACp_emal_40539__pinl_23262__idc_4697__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40539__pinl_23262__idc_4697 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40539__pinl_23262__idc_4697 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40539__pinl_23262__idc_4697__sz * sizeof (*SACp_emal_40539__pinl_23262__idc_4697)) + ((6 + (SACp_emal_40539__pinl_23262__idc_4697__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40539__pinl_23262__idc_4697 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40539__pinl_23262__idc_4697 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40539__pinl_23262__idc_4697__sz * sizeof (*SACp_emal_40539__pinl_23262__idc_4697)) + ((6 + (SACp_emal_40539__pinl_23262__idc_4697__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40539__pinl_23262__idc_4697__sz * sizeof (*SACp_emal_40539__pinl_23262__idc_4697)) + ((6 + (SACp_emal_40539__pinl_23262__idc_4697__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40539__pinl_23262__idc_4697__sz * sizeof (*SACp_emal_40539__pinl_23262__idc_4697)) + ((6 + (SACp_emal_40539__pinl_23262__idc_4697__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40539__pinl_23262__idc_4697__sz * sizeof (*SACp_emal_40539__pinl_23262__idc_4697)) + ((6 + (SACp_emal_40539__pinl_23262__idc_4697__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40539__pinl_23262__idc_4697__sz * sizeof (*SACp_emal_40539__pinl_23262__idc_4697)) + ((6 + (SACp_emal_40539__pinl_23262__idc_4697__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40539__pinl_23262__idc_4697 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40539__pinl_23262__idc_4697 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40539__pinl_23262__idc_4697 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40539__pinl_23262__idc_4697 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40539__pinl_23262__idc_4697__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40539__pinl_23262__idc_4697, SACp_emal_40539__pinl_23262__idc_4697__sz * sizeof (*SACp_emal_40539__pinl_23262__idc_4697), ((6 + (SACp_emal_40539__pinl_23262__idc_4697__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40539__pinl_23262__idc_4697__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40539__pinl_23262__idc_4697__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40539__pinl_23262__idc_4697__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_40539__pinl_23262__idc_4697__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 190, "Assignment with incompatible types found"); };
      if (!((SACp_emal_40539__pinl_23262__idc_4697__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 190, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_40539__pinl_23262__idc_4697[0] = SACp_pinl_16513__eat_483; }

      if (!SACp_emal_40540__uprf_28761) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_40541__uprf_28767) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Primitive function _sel_VxA_ guard failed"); }



      SACp_pinl_23220__icc_4675__desc = SACp_emal_40543__pinl_16474__icc_5978__desc;
      SACp_pinl_23220__icc_4675__sz = SACp_emal_40543__pinl_16474__icc_5978__sz;
      SACp_pinl_23220__icc_4675__dim = SACp_emal_40543__pinl_16474__icc_5978__dim;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_23220__icc_4675__desc) & (-1 ^ (3))))[3]) = SACp_emal_40543__pinl_16474__icc_5978__dim;
      { SACp_pinl_23220__icc_4675 = SACp_emal_40543__pinl_16474__icc_5978; }




      if (!((SACp_pinl_23219__icc_4674__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Assignment with incompatible types found"); };
      SACp_pinl_23219__icc_4674__desc = SACp_emal_40539__pinl_23262__idc_4697__desc;
      SACp_pinl_23219__icc_4674__shp0 = SACp_emal_40539__pinl_23262__idc_4697__shp0;
      SACp_pinl_23219__icc_4674__sz = SACp_emal_40539__pinl_23262__idc_4697__sz;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_23219__icc_4674__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_40539__pinl_23262__idc_4697__shp0;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_23219__icc_4674__desc) & (-1 ^ (3))))[4]) = SACp_emal_40539__pinl_23262__idc_4697__sz;
      { SACp_pinl_23219__icc_4674 = SACp_emal_40539__pinl_23262__idc_4697; }

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Assignment with incompatible types found"); };
      ;

      }



      {
        int SAC_l;
        SAC_l = 0;
        SAC_l *= SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e;
        if (0 < SACp_pinl_23219__icc_4674__sz)
        {

          SAC_l += ( SACp_pinl_23219__icc_4674[0]);
        }
SACp_emal_40538__ivesli_39697 = SAC_l; }

      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_23219__icc_4674__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_23219__icc_4674); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_23219__icc_4674__desc) & (-1 ^ (3))))); } } } } else { } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_40537__pinl_23221__icc_4676 = ( SACp_pinl_23220__icc_4675[SACp_emal_40538__ivesli_39697]); }

      { if (((((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_23220__icc_4675__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACp_pinl_23220__icc_4675); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_pinl_23220__icc_4675__desc) & (-1 ^ (3))))); } } } } else { } }
      { ; ; }
      if (!SACp_emal_40540__uprf_28761) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_40541__uprf_28767) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 67, 179, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }



      if (!((0 == (SACp_emal_40529__pinl_16486__icc_5999__dim - SACp_pinl_16510_iv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3275, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40529__pinl_16486__icc_5999_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3275, "WL expression with illegal size found!"); };
      { SACp_emal_40529__pinl_16486__icc_5999[SACp_wlidx_39661__pinl_16486__icc_5999] = SACp_emal_40537__pinl_23221__icc_4676; };

      { ; ; }
      SACp_wlidx_39661__pinl_16486__icc_5999 = SACp_wlidx_39661__pinl_16486__icc_5999 + 1;
      SACp_pinl_16513__eat_483 = SACp_pinl_16513__eat_483 + 1;
      } }
# 8203 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_40575__pinl_23038__icc_5146;
      SAC_schedule_stop0 = SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e;




      SACp_wlidx_39661__pinl_16486__icc_5999
        = SAC_schedule_start0 * SAC_SACp_emal_40529__pinl_16486__icc_5999_shpfac0;

      { int SAC_stop_SACp_pinl_16513__eat_483 = SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e; for (SACp_pinl_16513__eat_483 = SACp_emal_40575__pinl_23038__icc_5146; SACp_pinl_16513__eat_483 < SACp_emal_40551__pinl_16624__wlbsc_7575_sc_e;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3308, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_40535__uprf_23295 = (SACp_pinl_16513__eat_483) - (SACp_emal_40575__pinl_23038__icc_5146); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_emal_40535__uprf_23295 >= 0) { { SACp_emal_40534__uprf_23289 = SACp_emal_40535__uprf_23295; }; SACp_emal_40534__uprf_23289 = 1; } else { SACp_emal_40534__uprf_23289 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Non-negativity constraint violated " "for scalar " "SACp_emal_40535__uprf_23295"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_emal_40535__uprf_23295 < SACp_emal_40581__mse_30579__dl_23429) { SACp_emal_40533__uprf_23283 = 1; } else { SACp_emal_40533__uprf_23283 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Scalar constraint `" "SACp_emal_40535__uprf_23295" " (" "%d" ") < " "SACp_emal_40581__mse_30579__dl_23429" " (" "%d" ")" "' violated", SACp_emal_40535__uprf_23295, SACp_emal_40581__mse_30579__dl_23429); }
      { { if (!((1 == SACp_emal_40532__pinl_16575__idc_6032__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_40532__pinl_16575__idc_6032"); }; { { if ((((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032)) + ((6 + (SACp_emal_40532__pinl_16575__idc_6032__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032)) + ((6 + (SACp_emal_40532__pinl_16575__idc_6032__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032)) + ((6 + (SACp_emal_40532__pinl_16575__idc_6032__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40532__pinl_16575__idc_6032 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_40532__pinl_16575__idc_6032 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032)) + ((6 + (SACp_emal_40532__pinl_16575__idc_6032__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_40532__pinl_16575__idc_6032 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_40532__pinl_16575__idc_6032 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032)) + ((6 + (SACp_emal_40532__pinl_16575__idc_6032__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032)) + ((6 + (SACp_emal_40532__pinl_16575__idc_6032__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032)) + ((6 + (SACp_emal_40532__pinl_16575__idc_6032__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032)) + ((6 + (SACp_emal_40532__pinl_16575__idc_6032__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032)) + ((6 + (SACp_emal_40532__pinl_16575__idc_6032__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_40532__pinl_16575__idc_6032 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_40532__pinl_16575__idc_6032 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_40532__pinl_16575__idc_6032 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_40532__pinl_16575__idc_6032 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_40532__pinl_16575__idc_6032__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032, SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032), ((6 + (SACp_emal_40532__pinl_16575__idc_6032__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40532__pinl_16575__idc_6032__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40532__pinl_16575__idc_6032__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40532__pinl_16575__idc_6032__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_40532__pinl_16575__idc_6032__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3308, "Assignment with incompatible types found"); };
      if (!((SACp_emal_40532__pinl_16575__idc_6032__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3308, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_40532__pinl_16575__idc_6032[0] = SACp_emal_40535__uprf_23295; }

      { ; ; }
      if (!SACp_emal_40533__uprf_23283) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_40534__uprf_23289) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_40531__ivesli_39696 = ( SACp_emal_40532__pinl_16575__idc_6032[0]);

      { { { if (((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032, ((((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032) - 1)->data1.arena)); } else { if (SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032, ((((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032, ((((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032) - 1)->data1.arena)); } } else { if (((((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032, ((((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032) - 1)->data1.arena)); } else { if (((((SACp_emal_40532__pinl_16575__idc_6032__sz * sizeof (*SACp_emal_40532__pinl_16575__idc_6032))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032, ((((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_40532__pinl_16575__idc_6032); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40532__pinl_16575__idc_6032__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_40530__pinl_16483__icc_5996 = ( SACp_emal_40580_ishp[SACp_emal_40531__ivesli_39696]); }

      { ; ; }
      if (!SACp_emal_40533__uprf_23283) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_40534__uprf_23289) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayTransform.sac", 238, 3297, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }



      if (!((0 == (SACp_emal_40529__pinl_16486__icc_5999__dim - SACp_pinl_16510_iv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_40529__pinl_16486__icc_5999_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayTransform.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_40529__pinl_16486__icc_5999[SACp_wlidx_39661__pinl_16486__icc_5999] = SACp_emal_40530__pinl_16483__icc_5996; };

      { ; ; }
      SACp_wlidx_39661__pinl_16486__icc_5999 = SACp_wlidx_39661__pinl_16486__icc_5999 + 1;
      SACp_pinl_16513__eat_483 = SACp_pinl_16513__eat_483 + 1;
      } }
# 8311 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42028_SAC_label:;
    { { free (SACp_emal_40580_ishp); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40580_ishp__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_40543__pinl_16474__icc_5978); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40543__pinl_16474__icc_5978__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { int SAC_i, SAC_all = 1; for (SAC_i = 0; SAC_i < SACp_emal_40529__pinl_16486__icc_5999__sz; SAC_i++) { if (( SACp_emal_40529__pinl_16486__icc_5999[SAC_i]) < 0) { SAC_all = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Non-negativity constraint violated " "for vector " "SACp_emal_40529__pinl_16486__icc_5999"); } { SACp_emal_40528__pinl_16629__icc_3185_pred = ( SACp_emal_40529__pinl_16486__icc_5999[SAC_i]); }; } SACp_emal_40528__pinl_16629__icc_3185_pred = SAC_all; }



    {
      int SAC_i, SAC_p1 = 1, SAC_p2 = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_40529__pinl_16486__icc_5999__shp0; SAC_i++) {
        SAC_p1 *= ( SACp_emal_40529__pinl_16486__icc_5999[SAC_i]); }
      for (SAC_i = 0; SAC_i < SACl_a__dim; SAC_i++) {
        SAC_p2 *= (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (SAC_i))]);
      }
      if (SAC_p1 == SAC_p2) {
        SACp_emal_40527__pinl_16631__icc_3186_pred = 1;
      }
      else {
        SACp_emal_40527__pinl_16631__icc_3186_pred = 0;
        SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Arrays `" "SACp_emal_40529__pinl_16486__icc_5999""' with shape %s ""And `" "SACl_a""' with shape %s ""do not adhere to prod matches prod shape constraint", SAC_PrintShape (SACp_emal_40529__pinl_16486__icc_5999__desc), SAC_PrintShape (SACl_a__desc));
      }
    }

    if (!SACp_emal_40527__pinl_16631__icc_3186_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Primitive function _reshape_VxA_ guard failed"); }
    if (!SACp_emal_40528__pinl_16629__icc_3185_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Primitive function _reshape_VxA_ guard failed"); }
    if ((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) == 1) {
    { if (!((SACp_emal_40529__pinl_16486__icc_5999__sz >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_40526__pinl_16628__icc_3189"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8345 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 8345 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8345 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 8345 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8345 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 8345 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8345 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 8345, __extension__ __PRETTY_FUNCTION__); }))
# 8345 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40526__pinl_16628__icc_3189__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (SACp_emal_40529__pinl_16486__icc_5999__sz)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_40526__pinl_16628__icc_3189__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (SACp_emal_40529__pinl_16486__icc_5999__sz)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_40526__pinl_16628__icc_3189__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (SACp_emal_40529__pinl_16486__icc_5999__sz)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[3]) = SACp_emal_40526__pinl_16628__icc_3189__dim = SACp_emal_40529__pinl_16486__icc_5999__sz; }
    { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } }



    SACl_a__desc = SACp_emal_40526__pinl_16628__icc_3189__desc;

    { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[0]) = 1; }



   
    if (!((SACp_emal_40529__pinl_16486__icc_5999__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "1st argument of _reshape_VxA_ is not a vector!"); };
    if (!((SACp_emal_40526__pinl_16628__icc_3189__dim == SACp_emal_40529__pinl_16486__icc_5999__sz))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_40529__pinl_16486__icc_5999__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_40529__pinl_16486__icc_5999[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[4]) = SACp_emal_40526__pinl_16628__icc_3189__sz = SAC_size;
      if (!((SACp_emal_40526__pinl_16628__icc_3189__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Array with size <0 found!"); };
    }

    { SACp_emal_40526__pinl_16628__icc_3189 = SACl_a; }
    { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[0]) += 1; }
    } else {
    { { if (!((SACp_emal_40529__pinl_16486__icc_5999__sz >= (0)))) { SAC_RuntimeWarning ("Illegal dimension for array %s found!", "SACp_emal_40526__pinl_16628__icc_3189"); }; { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8375 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 8375 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8375 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 8375 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8375 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 8375 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8375 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 8375, __extension__ __PRETTY_FUNCTION__); }))
# 8375 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40526__pinl_16628__icc_3189__desc = (intptr_t *)SAC_HM_MallocAnyChunk_st (((6 + (SACp_emal_40529__pinl_16486__icc_5999__sz)*1) * sizeof (intptr_t))); break; case SAC_HM_multi_threaded: SACp_emal_40526__pinl_16628__icc_3189__desc = (intptr_t *)SAC_HM_MallocAnyChunk_mt (((6 + (SACp_emal_40529__pinl_16486__icc_5999__sz)*1) * sizeof (intptr_t)), 0); break; case SAC_HM_any_threaded: SACp_emal_40526__pinl_16628__icc_3189__desc = (intptr_t *)SAC_HM_MallocAnyChunk_at (((6 + (SACp_emal_40529__pinl_16486__icc_5999__sz)*1) * sizeof (intptr_t)), 0); break; } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[1]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[3]) = SACp_emal_40526__pinl_16628__icc_3189__dim = SACp_emal_40529__pinl_16486__icc_5999__sz; }



   
    if (!((SACp_emal_40529__pinl_16486__icc_5999__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "1st argument of _reshape_VxA_ is not a vector!"); };
    if (!((SACp_emal_40526__pinl_16628__icc_3189__dim == SACp_emal_40529__pinl_16486__icc_5999__sz))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Assignment with incompatible types found"); };
    {
      int SAC_i;
      int SAC_size = 1;
      for (SAC_i = 0; SAC_i < SACp_emal_40529__pinl_16486__icc_5999__sz; SAC_i++)
      {

SAC_size *=
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[(6 + (SAC_i))]) = ( SACp_emal_40529__pinl_16486__icc_5999[SAC_i]);
      }
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[4]) = SACp_emal_40526__pinl_16628__icc_3189__sz = SAC_size;
      if (!((SACp_emal_40526__pinl_16628__icc_3189__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8395 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 8395 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8395 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 8395 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8395 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 8395 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8395 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 8395, __extension__ __PRETTY_FUNCTION__); }))
# 8395 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_40526__pinl_16628__icc_3189 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_40526__pinl_16628__icc_3189__sz * sizeof (*SACp_emal_40526__pinl_16628__icc_3189)); break; case SAC_HM_multi_threaded: SACp_emal_40526__pinl_16628__icc_3189 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_40526__pinl_16628__icc_3189__sz * sizeof (*SACp_emal_40526__pinl_16628__icc_3189), 0); break; case SAC_HM_any_threaded: SACp_emal_40526__pinl_16628__icc_3189 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_40526__pinl_16628__icc_3189__sz * sizeof (*SACp_emal_40526__pinl_16628__icc_3189), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40526__pinl_16628__icc_3189__desc) & (-1 ^ (3))))[1]) = 0; } }
    }
    { { free (SACp_emal_40529__pinl_16486__icc_5999); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_40529__pinl_16486__icc_5999__desc) & (-1 ^ (3))))); } } }
    SACp_emrb_41773_mem = (SACp_emal_40526__pinl_16628__icc_3189 == SACl_a);
    if (SACp_emrb_41773_mem)
    {
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
      ;
      ;



      SACp_pinl_16628__icc_3189__desc = SACp_emal_40526__pinl_16628__icc_3189__desc;
      SACp_pinl_16628__icc_3189__sz = SACp_emal_40526__pinl_16628__icc_3189__sz;
      SACp_pinl_16628__icc_3189__dim = SACp_emal_40526__pinl_16628__icc_3189__dim;
      ;
      { SACp_pinl_16628__icc_3189 = SACp_emal_40526__pinl_16628__icc_3189; }

    }
    else
    {
      ;
      { int SAC_i; if (!((SACp_emal_40526__pinl_16628__icc_3189__sz == SACl_a__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACl_a__sz; SAC_i++) { { SACp_emal_40526__pinl_16628__icc_3189[SAC_i] = ( SACl_a[SAC_i]); } } }
      { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }



      SACp_pinl_16628__icc_3189__desc = SACp_emal_40526__pinl_16628__icc_3189__desc;
      SACp_pinl_16628__icc_3189__sz = SACp_emal_40526__pinl_16628__icc_3189__sz;
      SACp_pinl_16628__icc_3189__dim = SACp_emal_40526__pinl_16628__icc_3189__dim;
      ;
      { SACp_pinl_16628__icc_3189 = SACp_emal_40526__pinl_16628__icc_3189; }

    }
    if (!SACp_emal_40527__pinl_16631__icc_3186_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Primitive function _reshape_VxA_ guard failed"); }
    if (!SACp_emal_40528__pinl_16629__icc_3185_pred) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 62, 224, "Primitive function _reshape_VxA_ guard failed"); }
    { ; ; }
    { ; ; }



    { *SAC_arg_1__p = SACp_pinl_16628__icc_3189; *SAC_arg_1__desc__p = SACp_pinl_16628__icc_3189__desc; }
    return;
   
  }



}
}
# 8454 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_13_impl_block__i_X_X__i_0 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
    const int SACp_emal_41434__isaa_32470_s = 1;



    int * SACp_emal_41433__isaa_32474_a;
    SAC_array_descriptor_t SACp_emal_41433__isaa_32474_a__desc = 
# 8465 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8465 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41433__isaa_32474_a__shp0 = 2;
    const int SACp_emal_41433__isaa_32474_a__sz = 2;
    const int SACp_emal_41433__isaa_32474_a__dim = 1;

    const int SACp_emal_41432__flat_241 = 0;



    int SACp_emal_41431__uprf_25140;
   
   




    int SACp_emal_41430__uprf_25145;
   
   




    
# 8488 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8488 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41427__uprf_25105;
   
   




    
# 8495 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8495 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41426__uprf_25110;
   
   




    
# 8502 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8502 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41424__uprf_25092;
   
   




    
# 8509 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8509 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41423__uprf_25099;
   
   




    int * SACp_emal_41421__pinl_16861__idc_5298;
    SAC_array_descriptor_t SACp_emal_41421__pinl_16861__idc_5298__desc = 
# 8517 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8517 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41421__pinl_16861__idc_5298__shp0 = 2;
    const int SACp_emal_41421__pinl_16861__idc_5298__sz = 2;
    const int SACp_emal_41421__pinl_16861__idc_5298__dim = 1;




    int SACp_emal_41420__ivesli_39761;
   
   




    int SACp_emal_41419__pinl_16817__icc_5277;
   
   




    int * SACp_emal_41418__pinl_16821__icc_5283;
    SAC_array_descriptor_t SACp_emal_41418__pinl_16821__icc_5283__desc = 
# 8540 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8540 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_41418__pinl_16821__icc_5283__shp0;
    int SACp_emal_41418__pinl_16821__icc_5283__shp1;
    int SACp_emal_41418__pinl_16821__icc_5283__sz;
    const int SACp_emal_41418__pinl_16821__icc_5283__dim = 2;




    
# 8549 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8549 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41417__uprf_25054;
   
   




    
# 8556 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8556 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41415__uprf_25061;
   
   




    int SACp_wlidx_39679__pinl_16821__icc_5283;
   
   




    int SACp_pinl_16833__eat_461;
   
   




    int SACp_pinl_16832__eat_460;
   
   




    int * SACp_pinl_16830_iv;
    SAC_array_descriptor_t SACp_pinl_16830_iv__desc = 
# 8585 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8585 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_16830_iv__shp0 = 2;
    const int SACp_pinl_16830_iv__sz = 2;
    const int SACp_pinl_16830_iv__dim = 1;





    int SACl_a__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_a__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (1))]);
    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    const int SACl_a__dim = 2;

   
    { { if (!((1 == SACp_emal_41433__isaa_32474_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41433__isaa_32474_a"); }; { { if ((((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a)) + ((6 + (SACp_emal_41433__isaa_32474_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a)) + ((6 + (SACp_emal_41433__isaa_32474_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a)) + ((6 + (SACp_emal_41433__isaa_32474_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41433__isaa_32474_a = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41433__isaa_32474_a = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a)) + ((6 + (SACp_emal_41433__isaa_32474_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41433__isaa_32474_a = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41433__isaa_32474_a = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a)) + ((6 + (SACp_emal_41433__isaa_32474_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a)) + ((6 + (SACp_emal_41433__isaa_32474_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a)) + ((6 + (SACp_emal_41433__isaa_32474_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a)) + ((6 + (SACp_emal_41433__isaa_32474_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a)) + ((6 + (SACp_emal_41433__isaa_32474_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41433__isaa_32474_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41433__isaa_32474_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41433__isaa_32474_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41433__isaa_32474_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41433__isaa_32474_a__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a, SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a), ((6 + (SACp_emal_41433__isaa_32474_a__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41433__isaa_32474_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41433__isaa_32474_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41433__isaa_32474_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41433__isaa_32474_a__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41433__isaa_32474_a__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_41433__isaa_32474_a[0] = SACl_a__shp0; };
    { SACp_emal_41433__isaa_32474_a[1] = SACl_a__shp1; };




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41431__uprf_25140 = ( SACp_emal_41433__isaa_32474_a[SACp_emal_41432__flat_241]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41430__uprf_25145 = ( SACp_emal_41433__isaa_32474_a[SACp_emal_41434__isaa_32470_s]); }

    { ; ; }
    { { if (!((2 == SACp_emal_41418__pinl_16821__icc_5283__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41418__pinl_16821__icc_5283"); }; { if ((((6 + (SACp_emal_41418__pinl_16821__icc_5283__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41418__pinl_16821__icc_5283__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41418__pinl_16821__icc_5283__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41418__pinl_16821__icc_5283__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41418__pinl_16821__icc_5283__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_41418__pinl_16821__icc_5283__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41418__pinl_16821__icc_5283__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41418__pinl_16821__icc_5283__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_41418__pinl_16821__icc_5283__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_41418__pinl_16821__icc_5283__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_41418__pinl_16821__icc_5283__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_41418__pinl_16821__icc_5283__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_41418__pinl_16821__icc_5283__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41418__pinl_16821__icc_5283__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41418__pinl_16821__icc_5283__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41418__pinl_16821__icc_5283__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41418__pinl_16821__icc_5283__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41418__pinl_16821__icc_5283__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41418__pinl_16821__icc_5283__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41418__pinl_16821__icc_5283__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41418__pinl_16821__icc_5283__dim == (2)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_41418__pinl_16821__icc_5283__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41418__pinl_16821__icc_5283__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_41431__uprf_25140;
      SAC_size *=
      SACp_emal_41418__pinl_16821__icc_5283__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41418__pinl_16821__icc_5283__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_41430__uprf_25145;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41418__pinl_16821__icc_5283__desc) & (-1 ^ (3))))[4]) = SACp_emal_41418__pinl_16821__icc_5283__sz = SAC_size;
      if (!((SACp_emal_41418__pinl_16821__icc_5283__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 8649 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 8649 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8649 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 8649 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 8649 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 8649 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 8649 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 8649, __extension__ __PRETTY_FUNCTION__); }))
# 8649 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_41418__pinl_16821__icc_5283 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_41418__pinl_16821__icc_5283__sz * sizeof (*SACp_emal_41418__pinl_16821__icc_5283)); break; case SAC_HM_multi_threaded: SACp_emal_41418__pinl_16821__icc_5283 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_41418__pinl_16821__icc_5283__sz * sizeof (*SACp_emal_41418__pinl_16821__icc_5283), 0); break; case SAC_HM_any_threaded: SACp_emal_41418__pinl_16821__icc_5283 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_41418__pinl_16821__icc_5283__sz * sizeof (*SACp_emal_41418__pinl_16821__icc_5283), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41418__pinl_16821__icc_5283__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41418__pinl_16821__icc_5283__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41418__pinl_16821__icc_5283__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;
      int SAC_schedule_start1;
      int SAC_schedule_stop1;




      int SAC_SACp_emal_41418__pinl_16821__icc_5283_shpfac0;
      int SAC_SACp_emal_41418__pinl_16821__icc_5283_shpfac1;




      {
        int SAC_i;
        SAC_SACp_emal_41418__pinl_16821__icc_5283_shpfac0 = 1 * SACp_emal_41418__pinl_16821__icc_5283__shp1;
        SAC_SACp_emal_41418__pinl_16821__icc_5283_shpfac1 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_41431__uprf_25140;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_41430__uprf_25145;




      SACp_wlidx_39679__pinl_16821__icc_5283
        = SAC_schedule_start0 * SAC_SACp_emal_41418__pinl_16821__icc_5283_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41418__pinl_16821__icc_5283_shpfac1;

      { int SAC_stop_SACp_pinl_16833__eat_461 = SACp_emal_41431__uprf_25140; for (SACp_pinl_16833__eat_461 = 0; SACp_pinl_16833__eat_461 < SACp_emal_41431__uprf_25140;) {
     



      SACp_wlidx_39679__pinl_16821__icc_5283
        = ( SACp_emal_41418__pinl_16821__icc_5283__shp1 * SACp_pinl_16833__eat_461
         + SAC_schedule_start1 ) * SAC_SACp_emal_41418__pinl_16821__icc_5283_shpfac1;

      { int SAC_stop_SACp_pinl_16832__eat_460 = SACp_emal_41430__uprf_25145; for (SACp_pinl_16832__eat_460 = 0; SACp_pinl_16832__eat_460 < SACp_emal_41430__uprf_25145;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16833__eat_461 >= 0) { { SACp_emal_41427__uprf_25105 = SACp_pinl_16833__eat_461; }; SACp_emal_41427__uprf_25105 = 1; } else { SACp_emal_41427__uprf_25105 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_pinl_16833__eat_461"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16832__eat_460 >= 0) { { SACp_emal_41426__uprf_25110 = SACp_pinl_16832__eat_460; }; SACp_emal_41426__uprf_25110 = 1; } else { SACp_emal_41426__uprf_25110 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_pinl_16832__eat_460"); }
      ; ; { SACp_emal_41427__uprf_25105 = (SACp_emal_41427__uprf_25105) & (SACp_emal_41426__uprf_25110); };
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16833__eat_461 < SACp_emal_41431__uprf_25140) { SACp_emal_41424__uprf_25092 = 1; } else { SACp_emal_41424__uprf_25092 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_pinl_16833__eat_461" " (" "%d" ") < " "SACp_emal_41431__uprf_25140" " (" "%d" ")" "' violated", SACp_pinl_16833__eat_461, SACp_emal_41431__uprf_25140); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_pinl_16832__eat_460 < SACp_emal_41430__uprf_25145) { SACp_emal_41423__uprf_25099 = 1; } else { SACp_emal_41423__uprf_25099 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_pinl_16832__eat_460" " (" "%d" ") < " "SACp_emal_41430__uprf_25145" " (" "%d" ")" "' violated", SACp_pinl_16832__eat_460, SACp_emal_41430__uprf_25145); }
      ; ; { SACp_emal_41424__uprf_25092 = (SACp_emal_41424__uprf_25092) & (SACp_emal_41423__uprf_25099); };
      { ; ; }
      { { if (!((1 == SACp_emal_41421__pinl_16861__idc_5298__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41421__pinl_16861__idc_5298"); }; { { if ((((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298)) + ((6 + (SACp_emal_41421__pinl_16861__idc_5298__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298)) + ((6 + (SACp_emal_41421__pinl_16861__idc_5298__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298)) + ((6 + (SACp_emal_41421__pinl_16861__idc_5298__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41421__pinl_16861__idc_5298 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41421__pinl_16861__idc_5298 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298)) + ((6 + (SACp_emal_41421__pinl_16861__idc_5298__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41421__pinl_16861__idc_5298 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41421__pinl_16861__idc_5298 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298)) + ((6 + (SACp_emal_41421__pinl_16861__idc_5298__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298)) + ((6 + (SACp_emal_41421__pinl_16861__idc_5298__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298)) + ((6 + (SACp_emal_41421__pinl_16861__idc_5298__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298)) + ((6 + (SACp_emal_41421__pinl_16861__idc_5298__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298)) + ((6 + (SACp_emal_41421__pinl_16861__idc_5298__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41421__pinl_16861__idc_5298 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41421__pinl_16861__idc_5298 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41421__pinl_16861__idc_5298 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41421__pinl_16861__idc_5298 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41421__pinl_16861__idc_5298__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298, SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298), ((6 + (SACp_emal_41421__pinl_16861__idc_5298__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41421__pinl_16861__idc_5298__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41421__pinl_16861__idc_5298__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41421__pinl_16861__idc_5298__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_41421__pinl_16861__idc_5298__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
      if (!((SACp_emal_41421__pinl_16861__idc_5298__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_41421__pinl_16861__idc_5298[0] = SACp_pinl_16833__eat_461; }
      { SACp_emal_41421__pinl_16861__idc_5298[1] = SACp_pinl_16832__eat_460; }

      if (!SACp_emal_41424__uprf_25092) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_41427__uprf_25105) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_41420__ivesli_39761 = ( ( SACp_emal_41433__isaa_32474_a[1]) * ( SACp_emal_41421__pinl_16861__idc_5298[0]) + ( SACp_emal_41421__pinl_16861__idc_5298[1]) );

      { { { if (((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298, ((((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298) - 1)->data1.arena)); } else { if (SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298, ((((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298, ((((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298) - 1)->data1.arena)); } } else { if (((((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298, ((((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298) - 1)->data1.arena)); } else { if (((((SACp_emal_41421__pinl_16861__idc_5298__sz * sizeof (*SACp_emal_41421__pinl_16861__idc_5298))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298, ((((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41421__pinl_16861__idc_5298); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41421__pinl_16861__idc_5298__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_41419__pinl_16817__icc_5277 = ( SACl_a[SACp_emal_41420__ivesli_39761]); }

      { ; ; }
      if (!SACp_emal_41424__uprf_25092) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_41427__uprf_25105) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }



      if (!((0 == (SACp_emal_41418__pinl_16821__icc_5283__dim - SACp_pinl_16830_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41418__pinl_16821__icc_5283_shpfac1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal size found!"); };
      { SACp_emal_41418__pinl_16821__icc_5283[SACp_wlidx_39679__pinl_16821__icc_5283] = SACp_emal_41419__pinl_16817__icc_5277; };

      { ; ; }
      SACp_wlidx_39679__pinl_16821__icc_5283 = SACp_wlidx_39679__pinl_16821__icc_5283 + 1;
      SACp_pinl_16832__eat_460 = SACp_pinl_16832__eat_460 + 1;
      } }
      SACp_pinl_16833__eat_461 = SACp_pinl_16833__eat_461 + 1;
      } }
# 8837 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42029_SAC_label:;
    { ; ; }
    { ; ; }
    { { { if (((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a, ((((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a) - 1)->data1.arena)); } else { if (SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a, ((((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a, ((((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a) - 1)->data1.arena)); } } else { if (((((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a, ((((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a) - 1)->data1.arena)); } else { if (((((SACp_emal_41433__isaa_32474_a__sz * sizeof (*SACp_emal_41433__isaa_32474_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a, ((((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41433__isaa_32474_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41433__isaa_32474_a__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41432__flat_241 <= SACp_emal_41431__uprf_25140) { SACp_emal_41417__uprf_25054 = 1; } else { SACp_emal_41417__uprf_25054 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_41432__flat_241" " (" "%d" ") <= " "SACp_emal_41431__uprf_25140" " (" "%d" ")" "' violated", SACp_emal_41432__flat_241, SACp_emal_41431__uprf_25140); }
    { ; ; }
    if (SACp_emal_41432__flat_241 <= SACp_emal_41430__uprf_25145) { SACp_emal_41415__uprf_25061 = 1; } else { SACp_emal_41415__uprf_25061 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_41432__flat_241" " (" "%d" ") <= " "SACp_emal_41430__uprf_25145" " (" "%d" ")" "' violated", SACp_emal_41432__flat_241, SACp_emal_41430__uprf_25145); }
    { ; ; }
    { ; ; }
    ; ; { SACp_emal_41417__uprf_25054 = (SACp_emal_41417__uprf_25054) & (SACp_emal_41415__uprf_25061); };
    { ; ; }
    if (!SACp_emal_41417__uprf_25054) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_41417__uprf_25054) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_41418__pinl_16821__icc_5283; *SAC_arg_1__desc__p = SACp_emal_41418__pinl_16821__icc_5283__desc; }
    return;
   
  }



}
}
# 8885 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_13_impl_block__i_X_X__i_1 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_s, SAC_array_descriptor_t SACl_s__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
    const int SACp_emal_41530__isaa_32658_s = 1;



    int * SACp_emal_41529__isaa_32662_a;
    SAC_array_descriptor_t SACp_emal_41529__isaa_32662_a__desc = 
# 8896 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8896 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41529__isaa_32662_a__shp0 = 2;
    const int SACp_emal_41529__isaa_32662_a__sz = 2;
    const int SACp_emal_41529__isaa_32662_a__dim = 1;




    int SACp_emal_41528__ivesplit_32752;
   
   




    int SACp_emal_41527__uprf_26672;
   
   




    
# 8918 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8918 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41526__uprf_26674;
   
   




    
# 8925 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8925 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41525__uprf_26668;
   
   




    
# 8932 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8932 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41524__uprf_26662;
   
   




    
# 8939 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8939 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41523__uprf_26656;
   
   




    int * SACp_emal_41522__idc_5884;
    SAC_array_descriptor_t SACp_emal_41522__idc_5884__desc = 
# 8947 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8947 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41522__idc_5884__shp0 = 1;
    const int SACp_emal_41522__idc_5884__sz = 1;
    const int SACp_emal_41522__idc_5884__dim = 1;




    int * SACp_emal_41521_oshp;
    SAC_array_descriptor_t SACp_emal_41521_oshp__desc = 
# 8956 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8956 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41521_oshp__shp0 = 1;
    const int SACp_emal_41521_oshp__sz = 1;
    const int SACp_emal_41521_oshp__dim = 1;




    int SACp_emal_41520__pinl_17485__icc_5769;
   
   




    
# 8971 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8971 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41518__uprf_26620;
   
   




    
# 8978 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8978 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41517__uprf_26614;
   
   




    int * SACp_emal_41516__idc_5892;
    SAC_array_descriptor_t SACp_emal_41516__idc_5892__desc = 
# 8986 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 8986 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41516__idc_5892__shp0 = 1;
    const int SACp_emal_41516__idc_5892__sz = 1;
    const int SACp_emal_41516__idc_5892__dim = 1;




    
# 8994 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 8994 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41515__uprf_26608;
   
   




    int SACp_emal_41514__uprf_26607;
   
   




    
# 9008 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9008 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41513__uprf_26600;
   
   




    
# 9015 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9015 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41512__uprf_26594;
   
   




    int * SACp_emal_41511__idc_5900;
    SAC_array_descriptor_t SACp_emal_41511__idc_5900__desc = 
# 9023 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9023 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41511__idc_5900__shp0 = 1;
    const int SACp_emal_41511__idc_5900__sz = 1;
    const int SACp_emal_41511__idc_5900__dim = 1;




    
# 9031 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9031 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41510__uprf_26586;
   
   




    int SACp_emal_41509__uprf_26585;
   
   




    int * SACp_emal_41508__idc_5904;
    SAC_array_descriptor_t SACp_emal_41508__idc_5904__desc = 
# 9046 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9046 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41508__idc_5904__shp0 = 1;
    const int SACp_emal_41508__idc_5904__sz = 1;
    const int SACp_emal_41508__idc_5904__dim = 1;




    int * SACp_emal_41507__pinl_17656_new_shape;
    SAC_array_descriptor_t SACp_emal_41507__pinl_17656_new_shape__desc = 
# 9055 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9055 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41507__pinl_17656_new_shape__shp0 = 1;
    const int SACp_emal_41507__pinl_17656_new_shape__sz = 1;
    const int SACp_emal_41507__pinl_17656_new_shape__dim = 1;




    int SACp_emal_41506__uprf_26516;
   
   




    
# 9070 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9070 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41505__uprf_26518;
   
   




    
# 9077 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9077 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41504__uprf_26512;
   
   




    int * SACp_emal_41503__pinl_17674__idc_5657;
    SAC_array_descriptor_t SACp_emal_41503__pinl_17674__idc_5657__desc = 
# 9085 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9085 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41503__pinl_17674__idc_5657__shp0 = 1;
    const int SACp_emal_41503__pinl_17674__idc_5657__sz = 1;
    const int SACp_emal_41503__pinl_17674__idc_5657__dim = 1;




    
# 9093 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9093 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41502__uprf_26506;
   
   




    int SACp_emal_41501__uprf_26505;
   
   




    int * SACp_emal_41500__pinl_17681__idc_5661;
    SAC_array_descriptor_t SACp_emal_41500__pinl_17681__idc_5661__desc = 
# 9108 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9108 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41500__pinl_17681__idc_5661__shp0 = 1;
    const int SACp_emal_41500__pinl_17681__idc_5661__sz = 1;
    const int SACp_emal_41500__pinl_17681__idc_5661__dim = 1;




    int SACp_emal_41499__pinl_25215__icc_5140;
   
   




    int SACp_emal_41498__pinl_25218__icc_5146;
   
   




    int * SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound;
    SAC_array_descriptor_t SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__desc = 
# 9131 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9131 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__shp0 = 1;
    const int SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz = 1;
    const int SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim = 1;




    int SACp_emal_41496__uprf_26478;
   
   




    int SACp_emal_41495__uprf_26485;
   
   




    
# 9153 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9153 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41494__uprf_26459;
   
   




    int SACp_emal_41493__uprf_26458;
   
   




    int * SACp_emal_41492__idc_5913;
    SAC_array_descriptor_t SACp_emal_41492__idc_5913__desc = 
# 9168 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9168 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41492__idc_5913__shp0 = 1;
    const int SACp_emal_41492__idc_5913__sz = 1;
    const int SACp_emal_41492__idc_5913__dim = 1;




    int SACp_emal_41491__pinl_25298__icc_5140;
   
   




    int SACp_emal_41490__pinl_25301__icc_5146;
   
   




    int * SACp_emal_41487__icc_5811;
    SAC_array_descriptor_t SACp_emal_41487__icc_5811__desc = 
# 9191 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9191 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_41487__icc_5811__shp0;
    int SACp_emal_41487__icc_5811__sz;
    const int SACp_emal_41487__icc_5811__dim = 1;




    int SACp_emal_41486__pinl_25384__icc_5146;
   
   




    int * SACp_emal_41485__isaa_32678__icc_5824;
    SAC_array_descriptor_t SACp_emal_41485__isaa_32678__icc_5824__desc = 
# 9207 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9207 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41485__isaa_32678__icc_5824__shp0 = 2;
    const int SACp_emal_41485__isaa_32678__icc_5824__sz = 2;
    const int SACp_emal_41485__isaa_32678__icc_5824__dim = 1;




    
# 9215 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9215 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41484__uprf_26365;
   
   




    int SACp_emal_41483__uprf_26364;
   
   




    
# 9229 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9229 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41482__uprf_26372;
   
   




    int SACp_emal_41481__uprf_26371;
   
   




    int * SACp_emal_41479__idc_5926;
    SAC_array_descriptor_t SACp_emal_41479__idc_5926__desc = 
# 9244 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9244 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41479__idc_5926__shp0 = 2;
    const int SACp_emal_41479__idc_5926__sz = 2;
    const int SACp_emal_41479__idc_5926__dim = 1;




    int SACp_emal_41478__pinl_25547__icc_5140;
   
   




    int SACp_emal_41477__pinl_25550__icc_5146;
   
   




    int SACp_emal_41476__pinl_25570_res;
   
   




    int * SACp_emal_41475__emec_40297__icc_5834;
    SAC_array_descriptor_t SACp_emal_41475__emec_40297__icc_5834__desc = 
# 9274 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9274 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41475__emec_40297__icc_5834__shp0 = 2;
    const int SACp_emal_41475__emec_40297__icc_5834__sz = 2;
    const int SACp_emal_41475__emec_40297__icc_5834__dim = 1;




    int * SACp_emal_41473__emec_40296__icc_5834;
    SAC_array_descriptor_t SACp_emal_41473__emec_40296__icc_5834__desc = 
# 9283 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9283 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41473__emec_40296__icc_5834__shp0 = 2;
    const int SACp_emal_41473__emec_40296__icc_5834__sz = 2;
    const int SACp_emal_41473__emec_40296__icc_5834__dim = 1;




    int SACp_emal_41471__pinl_25630__icc_5140;
   
   




    int SACp_emal_41470__pinl_25633__icc_5146;
   
   




    int SACp_emal_41469__pinl_25653_res;
   
   




    int SACp_emal_41468__wlbsc_7479_sc_e;
   
   




    int SACp_emal_41467__wlbsc_7469_sc_e;
   
   




    int * SACp_emal_41464__icc_5837;
    SAC_array_descriptor_t SACp_emal_41464__icc_5837__desc = 
# 9327 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9327 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_41464__icc_5837__shp0;
    int SACp_emal_41464__icc_5837__shp1;
    int SACp_emal_41464__icc_5837__sz;
    const int SACp_emal_41464__icc_5837__dim = 2;




    int SACp_emal_41463__pinl_25713__icc_5140;
   
   




    int SACp_emal_41462__pinl_25716__icc_5146;
   
   




    int SACp_emal_41461__pinl_25962__icc_5140;
   
   




    int SACp_emal_41460__pinl_25965__icc_5146;
   
   




    int SACp_emal_41455__pinl_17859__flat_1763;
   
   




    int SACp_emal_41450__pinl_18041__flat_1747;
   
   




    
# 9378 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9378 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41449__uprf_26215;
   
   




    
# 9385 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9385 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41448__uprf_26202;
   
   




    
# 9392 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9392 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41445__uprf_26220;
   
   




    
# 9399 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 9399 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41443__uprf_26209;
   
   




    int * SACp_emal_41441__pinl_18127__idc_5664;
    SAC_array_descriptor_t SACp_emal_41441__pinl_18127__idc_5664__desc = 
# 9407 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9407 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41441__pinl_18127__idc_5664__shp0 = 2;
    const int SACp_emal_41441__pinl_18127__idc_5664__sz = 2;
    const int SACp_emal_41441__pinl_18127__idc_5664__dim = 1;




    int SACp_emal_41440__ivesli_39762;
   
   




    int SACp_emal_41439__pinl_18084__icc_5643;
   
   




    int * SACp_emal_41438__pinl_18088__icc_5649;
    SAC_array_descriptor_t SACp_emal_41438__pinl_18088__icc_5649__desc = 
# 9430 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9430 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_41438__pinl_18088__icc_5649__shp0;
    int SACp_emal_41438__pinl_18088__icc_5649__sz;
    const int SACp_emal_41438__pinl_18088__icc_5649__dim = 1;




    int * SACp_emal_41436__icc_5870;
    SAC_array_descriptor_t SACp_emal_41436__icc_5870__desc = 
# 9439 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9439 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_41436__icc_5870__shp0;
    int SACp_emal_41436__icc_5870__shp1;
    int SACp_emal_41436__icc_5870__sz;
    const int SACp_emal_41436__icc_5870__dim = 2;




    int * SACp_emal_41435__icc_5874;
    SAC_array_descriptor_t SACp_emal_41435__icc_5874__desc = 
# 9449 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9449 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_41435__icc_5874__shp0;
    int SACp_emal_41435__icc_5874__shp1;
    int SACp_emal_41435__icc_5874__shp2;
    int SACp_emal_41435__icc_5874__sz;
    const int SACp_emal_41435__icc_5874__dim = 3;




    int SACp_wlidx_39685__pinl_18088__icc_5649;
   
   




    int SACp_wlidx_39684__icc_5870;
   
   




    int SACp_wlidx_39683__icc_5874;
   
   




    int SACp_wlidx_39682__icc_5837;
   
   




    int SACp_wlidx_39681__icc_5811;
   
   




    int SACp_pinl_18099__eat_471;
   
   




    int * SACp_pinl_18097_iv;
    SAC_array_descriptor_t SACp_pinl_18097_iv__desc = 
# 9502 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9502 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_pinl_18097_iv__shp0 = 1;
    const int SACp_pinl_18097_iv__sz = 1;
    const int SACp_pinl_18097_iv__dim = 1;




    int SACp_eat_481;
   
   




    int SACp_eat_479;
   
   




    int SACp_eat_478;
   
   




    int SACp_eat_477;
   
   




    int SACp_eat_475;
   
   




    int * SACl_jv__SSA0_1;
    SAC_array_descriptor_t SACl_jv__SSA0_1__desc = 
# 9546 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9546 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACl_jv__SSA0_1__shp0 = 1;
    const int SACl_jv__SSA0_1__sz = 1;
    const int SACl_jv__SSA0_1__dim = 1;




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 9555 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9555 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACl_iv__shp0 = 1;
    const int SACl_iv__sz = 1;
    const int SACl_iv__dim = 1;




    int * SACp_hse_36;
    SAC_array_descriptor_t SACp_hse_36__desc = 
# 9564 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9564 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_hse_36__shp0 = 2;
    const int SACp_hse_36__sz = 2;
    const int SACp_hse_36__dim = 1;




    int * SACp_hse_35;
    SAC_array_descriptor_t SACp_hse_35__desc = 
# 9573 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 9573 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_hse_35__shp0 = 1;
    const int SACp_hse_35__sz = 1;
    const int SACp_hse_35__dim = 1;





    const int SACl_s__shp0 = 1;
    const int SACl_s__sz = 1;
    const int SACl_s__dim = 1;




    int SACl_a__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_a__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (1))]);
    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    const int SACl_a__dim = 2;

   
    { { if (!((1 == SACp_emal_41529__isaa_32662_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41529__isaa_32662_a"); }; { { if ((((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a)) + ((6 + (SACp_emal_41529__isaa_32662_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a)) + ((6 + (SACp_emal_41529__isaa_32662_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a)) + ((6 + (SACp_emal_41529__isaa_32662_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41529__isaa_32662_a = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41529__isaa_32662_a = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a)) + ((6 + (SACp_emal_41529__isaa_32662_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41529__isaa_32662_a = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41529__isaa_32662_a = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a)) + ((6 + (SACp_emal_41529__isaa_32662_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a)) + ((6 + (SACp_emal_41529__isaa_32662_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a)) + ((6 + (SACp_emal_41529__isaa_32662_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a)) + ((6 + (SACp_emal_41529__isaa_32662_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a)) + ((6 + (SACp_emal_41529__isaa_32662_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41529__isaa_32662_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41529__isaa_32662_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41529__isaa_32662_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41529__isaa_32662_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41529__isaa_32662_a__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a, SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a), ((6 + (SACp_emal_41529__isaa_32662_a__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41529__isaa_32662_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41529__isaa_32662_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41529__isaa_32662_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41529__isaa_32662_a__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41529__isaa_32662_a__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_41529__isaa_32662_a[0] = SACl_a__shp0; };
    { SACp_emal_41529__isaa_32662_a[1] = SACl_a__shp1; };

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_41528__ivesplit_32752 = 0; }; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41527__uprf_26672 = ( SACl_s[SACp_emal_41528__ivesplit_32752]); }

    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_s__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACl_s__sz * sizeof (*SACl_s)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { if (SACl_s__sz * sizeof (*SACl_s) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } } else { if (((((SACl_s__sz * sizeof (*SACl_s))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { if (((((SACl_s__sz * sizeof (*SACl_s))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_s); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_s); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_s); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_s); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_s__desc) & (-1 ^ (3))))); } } } } else { } }
    if (SACp_emal_41527__uprf_26672 >= 0) { { SACp_emal_41526__uprf_26674 = SACp_emal_41527__uprf_26672; }; SACp_emal_41526__uprf_26674 = 1; } else { SACp_emal_41526__uprf_26674 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Non-negativity constraint violated " "for scalar " "SACp_emal_41527__uprf_26672"); }
    if (SACp_emal_41527__uprf_26672 >= 0) { { SACp_emal_41525__uprf_26668 = SACp_emal_41527__uprf_26672; }; SACp_emal_41525__uprf_26668 = 1; } else { SACp_emal_41525__uprf_26668 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_41527__uprf_26672"); }
    if (SACp_emal_41527__uprf_26672 >= 0) { { SACp_emal_41524__uprf_26662 = SACp_emal_41527__uprf_26672; }; SACp_emal_41524__uprf_26662 = 1; } else { SACp_emal_41524__uprf_26662 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Non-negativity constraint violated " "for scalar " "SACp_emal_41527__uprf_26672"); }
    if (SACp_emal_41527__uprf_26672 >= 0) { { SACp_emal_41523__uprf_26656 = SACp_emal_41527__uprf_26672; }; SACp_emal_41523__uprf_26656 = 1; } else { SACp_emal_41523__uprf_26656 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_41527__uprf_26672"); }
    { { if (!((1 == SACp_emal_41522__idc_5884__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41522__idc_5884"); }; { { if ((((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884)) + ((6 + (SACp_emal_41522__idc_5884__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884)) + ((6 + (SACp_emal_41522__idc_5884__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884)) + ((6 + (SACp_emal_41522__idc_5884__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41522__idc_5884 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41522__idc_5884 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884)) + ((6 + (SACp_emal_41522__idc_5884__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41522__idc_5884 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41522__idc_5884 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884)) + ((6 + (SACp_emal_41522__idc_5884__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884)) + ((6 + (SACp_emal_41522__idc_5884__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884)) + ((6 + (SACp_emal_41522__idc_5884__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884)) + ((6 + (SACp_emal_41522__idc_5884__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884)) + ((6 + (SACp_emal_41522__idc_5884__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41522__idc_5884 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41522__idc_5884 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41522__idc_5884 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41522__idc_5884 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41522__idc_5884__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41522__idc_5884, SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884), ((6 + (SACp_emal_41522__idc_5884__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41522__idc_5884__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41522__idc_5884__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41522__idc_5884__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41522__idc_5884__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 57, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41522__idc_5884__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 57, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41522__idc_5884[0] = SACp_emal_41527__uprf_26672; }

    { { if (!((1 == SACp_emal_41521_oshp__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41521_oshp"); }; { { if ((((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp)) + ((6 + (SACp_emal_41521_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp)) + ((6 + (SACp_emal_41521_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp)) + ((6 + (SACp_emal_41521_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41521_oshp = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41521_oshp = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp)) + ((6 + (SACp_emal_41521_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41521_oshp = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41521_oshp = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp)) + ((6 + (SACp_emal_41521_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp)) + ((6 + (SACp_emal_41521_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp)) + ((6 + (SACp_emal_41521_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp)) + ((6 + (SACp_emal_41521_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp)) + ((6 + (SACp_emal_41521_oshp__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41521_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41521_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41521_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41521_oshp = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41521_oshp__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41521_oshp, SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp), ((6 + (SACp_emal_41521_oshp__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41521_oshp__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41521_oshp__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41521_oshp__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41521_oshp__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41521_oshp__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 9661 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 9661 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_cnt = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = - SAC_cnt;
        SAC_off = SACp_emal_41529__isaa_32662_a__sz - SAC_cnt;
      }
      else {
        SAC_off = 0;
      }
      if (!((SAC_cnt <= SACp_emal_41529__isaa_32662_a__sz))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 54, "1st argument of _take_SxV_ is out of range!"); };
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_41521_oshp[SAC_i] = ( SACp_emal_41529__isaa_32662_a[SAC_off + SAC_i]); };
      }
    }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7947, "Assignment with incompatible types found"); };
    ;

    }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7947, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41520__pinl_17485__icc_5769 = ( SACp_emal_41521_oshp[SACp_emal_41528__ivesplit_32752]); }

    { { { if (((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41521_oshp, ((((SAC_HM_header_t *)SACp_emal_41521_oshp) - 1)->data1.arena)); } else { if (SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41521_oshp) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41521_oshp, ((((SAC_HM_header_t *)SACp_emal_41521_oshp) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41521_oshp, ((((SAC_HM_header_t *)SACp_emal_41521_oshp) - 1)->data1.arena)); } } else { if (((((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41521_oshp, ((((SAC_HM_header_t *)SACp_emal_41521_oshp) - 1)->data1.arena)); } else { if (((((SACp_emal_41521_oshp__sz * sizeof (*SACp_emal_41521_oshp))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41521_oshp) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41521_oshp, ((((SAC_HM_header_t *)SACp_emal_41521_oshp) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41521_oshp, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41521_oshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41521_oshp); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41521_oshp, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41521_oshp); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41521_oshp); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41521_oshp__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_41520__pinl_17485__icc_5769 = (SACp_emal_41520__pinl_17485__icc_5769) / (SACp_emal_41527__uprf_26672); };
    if (SACp_emal_41520__pinl_17485__icc_5769 >= 0) { { SACp_emal_41518__uprf_26620 = SACp_emal_41520__pinl_17485__icc_5769; }; SACp_emal_41518__uprf_26620 = 1; } else { SACp_emal_41518__uprf_26620 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_41520__pinl_17485__icc_5769"); }
    if (SACp_emal_41520__pinl_17485__icc_5769 >= 0) { { SACp_emal_41517__uprf_26614 = SACp_emal_41520__pinl_17485__icc_5769; }; SACp_emal_41517__uprf_26614 = 1; } else { SACp_emal_41517__uprf_26614 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_41520__pinl_17485__icc_5769"); }
    { { if (!((1 == SACp_emal_41516__idc_5892__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41516__idc_5892"); }; { { if ((((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892)) + ((6 + (SACp_emal_41516__idc_5892__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892)) + ((6 + (SACp_emal_41516__idc_5892__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892)) + ((6 + (SACp_emal_41516__idc_5892__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41516__idc_5892 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41516__idc_5892 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892)) + ((6 + (SACp_emal_41516__idc_5892__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41516__idc_5892 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41516__idc_5892 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892)) + ((6 + (SACp_emal_41516__idc_5892__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892)) + ((6 + (SACp_emal_41516__idc_5892__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892)) + ((6 + (SACp_emal_41516__idc_5892__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892)) + ((6 + (SACp_emal_41516__idc_5892__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892)) + ((6 + (SACp_emal_41516__idc_5892__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41516__idc_5892 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41516__idc_5892 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41516__idc_5892 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41516__idc_5892 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41516__idc_5892__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41516__idc_5892, SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892), ((6 + (SACp_emal_41516__idc_5892__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41516__idc_5892__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41516__idc_5892__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41516__idc_5892__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41516__idc_5892__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 38, 5, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41516__idc_5892__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 38, 5, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41516__idc_5892[0] = SACp_emal_41520__pinl_17485__icc_5769; }

    if (SACp_emal_41528__ivesplit_32752 <= SACp_emal_41527__uprf_26672) { SACp_emal_41515__uprf_26608 = 1; } else { SACp_emal_41515__uprf_26608 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_41528__ivesplit_32752" " (" "%d" ") <= " "SACp_emal_41527__uprf_26672" " (" "%d" ")" "' violated", SACp_emal_41528__ivesplit_32752, SACp_emal_41527__uprf_26672); }
    { { SACp_emal_41514__uprf_26607 = SACp_emal_41528__ivesplit_32752; } }
    if (SACp_emal_41514__uprf_26607 >= 0) { { SACp_emal_41513__uprf_26600 = SACp_emal_41514__uprf_26607; }; SACp_emal_41513__uprf_26600 = 1; } else { SACp_emal_41513__uprf_26600 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Non-negativity constraint violated " "for scalar " "SACp_emal_41514__uprf_26607"); }
    if (SACp_emal_41514__uprf_26607 <= SACp_emal_41527__uprf_26672) { SACp_emal_41512__uprf_26594 = 1; } else { SACp_emal_41512__uprf_26594 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_41514__uprf_26607" " (" "%d" ") <= " "SACp_emal_41527__uprf_26672" " (" "%d" ")" "' violated", SACp_emal_41514__uprf_26607, SACp_emal_41527__uprf_26672); }
    { { if (!((1 == SACp_emal_41511__idc_5900__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41511__idc_5900"); }; { { if ((((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900)) + ((6 + (SACp_emal_41511__idc_5900__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900)) + ((6 + (SACp_emal_41511__idc_5900__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900)) + ((6 + (SACp_emal_41511__idc_5900__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41511__idc_5900 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41511__idc_5900 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900)) + ((6 + (SACp_emal_41511__idc_5900__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41511__idc_5900 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41511__idc_5900 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900)) + ((6 + (SACp_emal_41511__idc_5900__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900)) + ((6 + (SACp_emal_41511__idc_5900__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900)) + ((6 + (SACp_emal_41511__idc_5900__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900)) + ((6 + (SACp_emal_41511__idc_5900__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900)) + ((6 + (SACp_emal_41511__idc_5900__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41511__idc_5900 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41511__idc_5900 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41511__idc_5900 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41511__idc_5900 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41511__idc_5900__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41511__idc_5900, SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900), ((6 + (SACp_emal_41511__idc_5900__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41511__idc_5900__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41511__idc_5900__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41511__idc_5900__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41511__idc_5900__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 33, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41511__idc_5900__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 33, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41511__idc_5900[0] = SACp_emal_41514__uprf_26607; }

    { ; ; }
    if (SACp_emal_41528__ivesplit_32752 <= SACp_emal_41520__pinl_17485__icc_5769) { SACp_emal_41510__uprf_26586 = 1; } else { SACp_emal_41510__uprf_26586 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_41528__ivesplit_32752" " (" "%d" ") <= " "SACp_emal_41520__pinl_17485__icc_5769" " (" "%d" ")" "' violated", SACp_emal_41528__ivesplit_32752, SACp_emal_41520__pinl_17485__icc_5769); }
    { ; ; }
    { { SACp_emal_41509__uprf_26585 = SACp_emal_41528__ivesplit_32752; } }
    { { if (!((1 == SACp_emal_41508__idc_5904__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41508__idc_5904"); }; { { if ((((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904)) + ((6 + (SACp_emal_41508__idc_5904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904)) + ((6 + (SACp_emal_41508__idc_5904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904)) + ((6 + (SACp_emal_41508__idc_5904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41508__idc_5904 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41508__idc_5904 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904)) + ((6 + (SACp_emal_41508__idc_5904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41508__idc_5904 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41508__idc_5904 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904)) + ((6 + (SACp_emal_41508__idc_5904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904)) + ((6 + (SACp_emal_41508__idc_5904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904)) + ((6 + (SACp_emal_41508__idc_5904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904)) + ((6 + (SACp_emal_41508__idc_5904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904)) + ((6 + (SACp_emal_41508__idc_5904__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41508__idc_5904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41508__idc_5904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41508__idc_5904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41508__idc_5904 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41508__idc_5904__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41508__idc_5904, SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904), ((6 + (SACp_emal_41508__idc_5904__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41508__idc_5904__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41508__idc_5904__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41508__idc_5904__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41508__idc_5904__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 28, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41508__idc_5904__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 28, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41508__idc_5904[0] = SACp_emal_41509__uprf_26585; }

    { ; ; }
    { { if (!((1 == SACp_emal_41507__pinl_17656_new_shape__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41507__pinl_17656_new_shape"); }; { { if ((((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape)) + ((6 + (SACp_emal_41507__pinl_17656_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape)) + ((6 + (SACp_emal_41507__pinl_17656_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape)) + ((6 + (SACp_emal_41507__pinl_17656_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41507__pinl_17656_new_shape = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41507__pinl_17656_new_shape = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape)) + ((6 + (SACp_emal_41507__pinl_17656_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41507__pinl_17656_new_shape = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41507__pinl_17656_new_shape = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape)) + ((6 + (SACp_emal_41507__pinl_17656_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape)) + ((6 + (SACp_emal_41507__pinl_17656_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape)) + ((6 + (SACp_emal_41507__pinl_17656_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape)) + ((6 + (SACp_emal_41507__pinl_17656_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape)) + ((6 + (SACp_emal_41507__pinl_17656_new_shape__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41507__pinl_17656_new_shape = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41507__pinl_17656_new_shape = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41507__pinl_17656_new_shape = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41507__pinl_17656_new_shape = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41507__pinl_17656_new_shape__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape, SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape), ((6 + (SACp_emal_41507__pinl_17656_new_shape__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41507__pinl_17656_new_shape__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41507__pinl_17656_new_shape__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41507__pinl_17656_new_shape__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41507__pinl_17656_new_shape__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41507__pinl_17656_new_shape__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    ;

    }



   
    {
      int SAC_cnt, SAC_off;
      
# 9762 "/home/rubenhensen/sac/a.out.c" 3 4
     _Bool 
# 9762 "/home/rubenhensen/sac/a.out.c"
          SAC_cond;
      SAC_off = 1;
      SAC_cond = (1 < 0);
      if (SAC_cond) {
        SAC_cnt = SACp_emal_41529__isaa_32662_a__sz + SAC_off;
        if (!((SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
        SAC_off = 0;
      }
      else {
        SAC_cnt = SACp_emal_41529__isaa_32662_a__sz - SAC_off;
        if (!((-SAC_off <= (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 592, "1st argument of _drop_SxV_ is out of range!"); };
      }
      for (int SAC_i = 0; SAC_i < SAC_cnt; SAC_i++) {
        { SACp_emal_41507__pinl_17656_new_shape[SAC_i] = ( SACp_emal_41529__isaa_32662_a[SAC_off + SAC_i]); };
      }
    }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41506__uprf_26516 = ( SACp_emal_41507__pinl_17656_new_shape[SACp_emal_41528__ivesplit_32752]); }

    { { { if (((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape, ((((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape) - 1)->data1.arena)); } else { if (SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape, ((((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape, ((((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape) - 1)->data1.arena)); } } else { if (((((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape, ((((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape) - 1)->data1.arena)); } else { if (((((SACp_emal_41507__pinl_17656_new_shape__sz * sizeof (*SACp_emal_41507__pinl_17656_new_shape))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape, ((((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41507__pinl_17656_new_shape); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41507__pinl_17656_new_shape__desc) & (-1 ^ (3))))); } } }
    if (SACp_emal_41506__uprf_26516 >= 0) { { SACp_emal_41505__uprf_26518 = SACp_emal_41506__uprf_26516; }; SACp_emal_41505__uprf_26518 = 1; } else { SACp_emal_41505__uprf_26518 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Non-negativity constraint violated " "for scalar " "SACp_emal_41506__uprf_26516"); }
    if (SACp_emal_41506__uprf_26516 >= 0) { { SACp_emal_41504__uprf_26512 = SACp_emal_41506__uprf_26516; }; SACp_emal_41504__uprf_26512 = 1; } else { SACp_emal_41504__uprf_26512 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Non-negativity constraint violated " "for scalar " "SACp_emal_41506__uprf_26516"); }
    { { if (!((1 == SACp_emal_41503__pinl_17674__idc_5657__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41503__pinl_17674__idc_5657"); }; { { if ((((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657)) + ((6 + (SACp_emal_41503__pinl_17674__idc_5657__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657)) + ((6 + (SACp_emal_41503__pinl_17674__idc_5657__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657)) + ((6 + (SACp_emal_41503__pinl_17674__idc_5657__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41503__pinl_17674__idc_5657 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41503__pinl_17674__idc_5657 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657)) + ((6 + (SACp_emal_41503__pinl_17674__idc_5657__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41503__pinl_17674__idc_5657 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41503__pinl_17674__idc_5657 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657)) + ((6 + (SACp_emal_41503__pinl_17674__idc_5657__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657)) + ((6 + (SACp_emal_41503__pinl_17674__idc_5657__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657)) + ((6 + (SACp_emal_41503__pinl_17674__idc_5657__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657)) + ((6 + (SACp_emal_41503__pinl_17674__idc_5657__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657)) + ((6 + (SACp_emal_41503__pinl_17674__idc_5657__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41503__pinl_17674__idc_5657 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41503__pinl_17674__idc_5657 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41503__pinl_17674__idc_5657 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41503__pinl_17674__idc_5657 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41503__pinl_17674__idc_5657__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657, SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657), ((6 + (SACp_emal_41503__pinl_17674__idc_5657__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41503__pinl_17674__idc_5657__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41503__pinl_17674__idc_5657__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41503__pinl_17674__idc_5657__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41503__pinl_17674__idc_5657__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41503__pinl_17674__idc_5657__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 580, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41503__pinl_17674__idc_5657[0] = SACp_emal_41506__uprf_26516; }

    if (SACp_emal_41528__ivesplit_32752 <= SACp_emal_41506__uprf_26516) { SACp_emal_41502__uprf_26506 = 1; } else { SACp_emal_41502__uprf_26506 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Scalar constraint `" "SACp_emal_41528__ivesplit_32752" " (" "%d" ") <= " "SACp_emal_41506__uprf_26516" " (" "%d" ")" "' violated", SACp_emal_41528__ivesplit_32752, SACp_emal_41506__uprf_26516); }
    { ; ; }
    { { SACp_emal_41501__uprf_26505 = SACp_emal_41528__ivesplit_32752; } }
    { { if (!((1 == SACp_emal_41500__pinl_17681__idc_5661__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41500__pinl_17681__idc_5661"); }; { { if ((((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661)) + ((6 + (SACp_emal_41500__pinl_17681__idc_5661__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661)) + ((6 + (SACp_emal_41500__pinl_17681__idc_5661__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661)) + ((6 + (SACp_emal_41500__pinl_17681__idc_5661__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41500__pinl_17681__idc_5661 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41500__pinl_17681__idc_5661 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661)) + ((6 + (SACp_emal_41500__pinl_17681__idc_5661__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41500__pinl_17681__idc_5661 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41500__pinl_17681__idc_5661 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661)) + ((6 + (SACp_emal_41500__pinl_17681__idc_5661__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661)) + ((6 + (SACp_emal_41500__pinl_17681__idc_5661__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661)) + ((6 + (SACp_emal_41500__pinl_17681__idc_5661__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661)) + ((6 + (SACp_emal_41500__pinl_17681__idc_5661__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661)) + ((6 + (SACp_emal_41500__pinl_17681__idc_5661__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41500__pinl_17681__idc_5661 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41500__pinl_17681__idc_5661 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41500__pinl_17681__idc_5661 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41500__pinl_17681__idc_5661 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41500__pinl_17681__idc_5661__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661, SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661), ((6 + (SACp_emal_41500__pinl_17681__idc_5661__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41500__pinl_17681__idc_5661__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41500__pinl_17681__idc_5661__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41500__pinl_17681__idc_5661__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41500__pinl_17681__idc_5661__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41500__pinl_17681__idc_5661__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41500__pinl_17681__idc_5661[0] = SACp_emal_41501__uprf_26505; }

    { ; ; }
    if (!SACp_emal_41504__uprf_26512) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_41502__uprf_26506) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
    if (!SACp_emal_41505__uprf_26518) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41499__pinl_25215__icc_5140 = ( SACp_emal_41500__pinl_17681__idc_5661[SACp_emal_41528__ivesplit_32752]); }

    { { { if (((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661, ((((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661) - 1)->data1.arena)); } else { if (SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661, ((((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661, ((((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661) - 1)->data1.arena)); } } else { if (((((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661, ((((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661) - 1)->data1.arena)); } else { if (((((SACp_emal_41500__pinl_17681__idc_5661__sz * sizeof (*SACp_emal_41500__pinl_17681__idc_5661))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661, ((((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41500__pinl_17681__idc_5661); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41500__pinl_17681__idc_5661__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41498__pinl_25218__icc_5146 = ( SACp_emal_41503__pinl_17674__idc_5657[SACp_emal_41528__ivesplit_32752]); }

    { { { if (((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657, ((((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657) - 1)->data1.arena)); } else { if (SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657, ((((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657, ((((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657) - 1)->data1.arena)); } } else { if (((((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657, ((((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657) - 1)->data1.arena)); } else { if (((((SACp_emal_41503__pinl_17674__idc_5657__sz * sizeof (*SACp_emal_41503__pinl_17674__idc_5657))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657, ((((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41503__pinl_17674__idc_5657); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41503__pinl_17674__idc_5657__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound"); }; { { if ((((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound)) + ((6 + (SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound)) + ((6 + (SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound)) + ((6 + (SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound)) + ((6 + (SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound)) + ((6 + (SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound)) + ((6 + (SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound)) + ((6 + (SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound)) + ((6 + (SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound)) + ((6 + (SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound, SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound), ((6 + (SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 754, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound[0] = SACp_emal_41498__pinl_25218__icc_5146; }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41496__uprf_26478 = ( SACp_emal_41529__isaa_32662_a[SACp_emal_41528__ivesplit_32752]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41495__uprf_26485 = ( SACp_emal_41529__isaa_32662_a[SACp_emal_41530__isaa_32658_s]); }

    if (SACp_emal_41528__ivesplit_32752 <= SACp_emal_41498__pinl_25218__icc_5146) { SACp_emal_41494__uprf_26459 = 1; } else { SACp_emal_41494__uprf_26459 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_41528__ivesplit_32752" " (" "%d" ") <= " "SACp_emal_41498__pinl_25218__icc_5146" " (" "%d" ")" "' violated", SACp_emal_41528__ivesplit_32752, SACp_emal_41498__pinl_25218__icc_5146); }
    { { SACp_emal_41493__uprf_26458 = SACp_emal_41528__ivesplit_32752; } }
    { { if (!((1 == SACp_emal_41492__idc_5913__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41492__idc_5913"); }; { { if ((((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913)) + ((6 + (SACp_emal_41492__idc_5913__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913)) + ((6 + (SACp_emal_41492__idc_5913__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913)) + ((6 + (SACp_emal_41492__idc_5913__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41492__idc_5913 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41492__idc_5913 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913)) + ((6 + (SACp_emal_41492__idc_5913__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41492__idc_5913 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41492__idc_5913 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913)) + ((6 + (SACp_emal_41492__idc_5913__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913)) + ((6 + (SACp_emal_41492__idc_5913__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913)) + ((6 + (SACp_emal_41492__idc_5913__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913)) + ((6 + (SACp_emal_41492__idc_5913__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913)) + ((6 + (SACp_emal_41492__idc_5913__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41492__idc_5913 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41492__idc_5913 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41492__idc_5913 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41492__idc_5913 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41492__idc_5913__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41492__idc_5913, SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913), ((6 + (SACp_emal_41492__idc_5913__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41492__idc_5913__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41492__idc_5913__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41492__idc_5913__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41492__idc_5913__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41492__idc_5913__shp0 == 1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41492__idc_5913[0] = SACp_emal_41493__uprf_26458; }

    { ; ; }
    if (!SACp_emal_41494__uprf_26459) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41491__pinl_25298__icc_5140 = ( SACp_emal_41492__idc_5913[SACp_emal_41528__ivesplit_32752]); }

    { { { if (((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41492__idc_5913, ((((SAC_HM_header_t *)SACp_emal_41492__idc_5913) - 1)->data1.arena)); } else { if (SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41492__idc_5913) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41492__idc_5913, ((((SAC_HM_header_t *)SACp_emal_41492__idc_5913) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41492__idc_5913, ((((SAC_HM_header_t *)SACp_emal_41492__idc_5913) - 1)->data1.arena)); } } else { if (((((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41492__idc_5913, ((((SAC_HM_header_t *)SACp_emal_41492__idc_5913) - 1)->data1.arena)); } else { if (((((SACp_emal_41492__idc_5913__sz * sizeof (*SACp_emal_41492__idc_5913))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41492__idc_5913) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41492__idc_5913, ((((SAC_HM_header_t *)SACp_emal_41492__idc_5913) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41492__idc_5913, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41492__idc_5913); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41492__idc_5913); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41492__idc_5913, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41492__idc_5913); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41492__idc_5913); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41492__idc_5913__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41490__pinl_25301__icc_5146 = ( SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound[SACp_emal_41528__ivesplit_32752]); }

    { { { if (((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound, ((((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound) - 1)->data1.arena)); } else { if (SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound, ((((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound, ((((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound) - 1)->data1.arena)); } } else { if (((((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound, ((((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound) - 1)->data1.arena)); } else { if (((((SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__sz * sizeof (*SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound, ((((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41497__pinl_17714__wlbsc_7403_sc_bound__desc) & (-1 ^ (3))))); } } }
    { { if (!((1 == SACp_emal_41487__icc_5811__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41487__icc_5811"); }; { if ((((6 + (SACp_emal_41487__icc_5811__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41487__icc_5811__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41487__icc_5811__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41487__icc_5811__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41487__icc_5811__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_41487__icc_5811__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41487__icc_5811__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41487__icc_5811__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_41487__icc_5811__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_41487__icc_5811__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_41487__icc_5811__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_41487__icc_5811__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_41487__icc_5811__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41487__icc_5811__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41487__icc_5811__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41487__icc_5811__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41487__icc_5811__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41487__icc_5811__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41487__icc_5811__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41487__icc_5811__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41487__icc_5811__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_41487__icc_5811__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41487__icc_5811__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_41490__pinl_25301__icc_5146;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41487__icc_5811__desc) & (-1 ^ (3))))[4]) = SACp_emal_41487__icc_5811__sz = SAC_size;
      if (!((SACp_emal_41487__icc_5811__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 9917 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 9917 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9917 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 9917 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 9917 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 9917 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 9917 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 9917, __extension__ __PRETTY_FUNCTION__); }))
# 9917 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_41487__icc_5811 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_41487__icc_5811__sz * sizeof (*SACp_emal_41487__icc_5811)); break; case SAC_HM_multi_threaded: SACp_emal_41487__icc_5811 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_41487__icc_5811__sz * sizeof (*SACp_emal_41487__icc_5811), 0); break; case SAC_HM_any_threaded: SACp_emal_41487__icc_5811 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_41487__icc_5811__sz * sizeof (*SACp_emal_41487__icc_5811), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41487__icc_5811__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41487__icc_5811__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41487__icc_5811__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_41487__icc_5811_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_41487__icc_5811_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_41491__pinl_25298__icc_5140;




      SACp_wlidx_39681__icc_5811
        = SAC_schedule_start0 * SAC_SACp_emal_41487__icc_5811_shpfac0;

      { int SAC_stop_SACp_eat_475 = SACp_emal_41491__pinl_25298__icc_5140; for (SACp_eat_475 = 0; SACp_eat_475 < SACp_emal_41491__pinl_25298__icc_5140;) {
     



      if (!((0 == (SACp_emal_41487__icc_5811__dim - SACp_hse_35__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41487__icc_5811_shpfac0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal size found!"); };
      { SACp_emal_41487__icc_5811[SACp_wlidx_39681__icc_5811] = SACp_emal_41528__ivesplit_32752; };

      SACp_wlidx_39681__icc_5811 = SACp_wlidx_39681__icc_5811 + 1;
      SACp_eat_475 = SACp_eat_475 + 1;
      } }
# 9987 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_41491__pinl_25298__icc_5140;
      SAC_schedule_stop0 = SACp_emal_41490__pinl_25301__icc_5146;




      SACp_wlidx_39681__icc_5811
        = SAC_schedule_start0 * SAC_SACp_emal_41487__icc_5811_shpfac0;

      { int SAC_stop_SACp_eat_475 = SACp_emal_41490__pinl_25301__icc_5146; for (SACp_eat_475 = SACp_emal_41491__pinl_25298__icc_5140; SACp_eat_475 < SACp_emal_41490__pinl_25301__icc_5146;) {
     



      if (!((0 == (SACp_emal_41487__icc_5811__dim - SACp_hse_35__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41487__icc_5811_shpfac0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal size found!"); };
      { SACp_emal_41487__icc_5811[SACp_wlidx_39681__icc_5811] = SACp_emal_41528__ivesplit_32752; };

      SACp_wlidx_39681__icc_5811 = SACp_wlidx_39681__icc_5811 + 1;
      SACp_eat_475 = SACp_eat_475 + 1;
      } }
# 10016 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42030_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_41494__uprf_26459) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    { ; ; }
    if (!SACp_emal_41525__uprf_26668) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_41515__uprf_26608) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_41526__uprf_26674) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41486__pinl_25384__icc_5146 = ( SACp_emal_41522__idc_5884[SACp_emal_41528__ivesplit_32752]); }

    { { if (!((1 == SACp_emal_41485__isaa_32678__icc_5824__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41485__isaa_32678__icc_5824"); }; { { if ((((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824)) + ((6 + (SACp_emal_41485__isaa_32678__icc_5824__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824)) + ((6 + (SACp_emal_41485__isaa_32678__icc_5824__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824)) + ((6 + (SACp_emal_41485__isaa_32678__icc_5824__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41485__isaa_32678__icc_5824 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41485__isaa_32678__icc_5824 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824)) + ((6 + (SACp_emal_41485__isaa_32678__icc_5824__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41485__isaa_32678__icc_5824 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41485__isaa_32678__icc_5824 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824)) + ((6 + (SACp_emal_41485__isaa_32678__icc_5824__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824)) + ((6 + (SACp_emal_41485__isaa_32678__icc_5824__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824)) + ((6 + (SACp_emal_41485__isaa_32678__icc_5824__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824)) + ((6 + (SACp_emal_41485__isaa_32678__icc_5824__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824)) + ((6 + (SACp_emal_41485__isaa_32678__icc_5824__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41485__isaa_32678__icc_5824 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41485__isaa_32678__icc_5824 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41485__isaa_32678__icc_5824 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41485__isaa_32678__icc_5824 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41485__isaa_32678__icc_5824__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824, SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824), ((6 + (SACp_emal_41485__isaa_32678__icc_5824__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41485__isaa_32678__icc_5824__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41485__isaa_32678__icc_5824__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41485__isaa_32678__icc_5824__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41485__isaa_32678__icc_5824__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41485__isaa_32678__icc_5824__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41485__isaa_32678__icc_5824[0] = SACp_emal_41486__pinl_25384__icc_5146; }
    { SACp_emal_41485__isaa_32678__icc_5824[1] = SACp_emal_41490__pinl_25301__icc_5146; }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41528__ivesplit_32752 <= SACp_emal_41486__pinl_25384__icc_5146) { SACp_emal_41484__uprf_26365 = 1; } else { SACp_emal_41484__uprf_26365 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_41528__ivesplit_32752" " (" "%d" ") <= " "SACp_emal_41486__pinl_25384__icc_5146" " (" "%d" ")" "' violated", SACp_emal_41528__ivesplit_32752, SACp_emal_41486__pinl_25384__icc_5146); }
    { ; ; }
    { { SACp_emal_41483__uprf_26364 = SACp_emal_41528__ivesplit_32752; } }
    if (SACp_emal_41528__ivesplit_32752 <= SACp_emal_41490__pinl_25301__icc_5146) { SACp_emal_41482__uprf_26372 = 1; } else { SACp_emal_41482__uprf_26372 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_41528__ivesplit_32752" " (" "%d" ") <= " "SACp_emal_41490__pinl_25301__icc_5146" " (" "%d" ")" "' violated", SACp_emal_41528__ivesplit_32752, SACp_emal_41490__pinl_25301__icc_5146); }
    { ; ; }
    { { SACp_emal_41481__uprf_26371 = SACp_emal_41528__ivesplit_32752; } }
    ; ; { SACp_emal_41484__uprf_26365 = (SACp_emal_41484__uprf_26365) & (SACp_emal_41482__uprf_26372); };
    { ; ; }
    { { if (!((1 == SACp_emal_41479__idc_5926__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41479__idc_5926"); }; { { if ((((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926)) + ((6 + (SACp_emal_41479__idc_5926__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926)) + ((6 + (SACp_emal_41479__idc_5926__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926)) + ((6 + (SACp_emal_41479__idc_5926__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41479__idc_5926 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41479__idc_5926 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926)) + ((6 + (SACp_emal_41479__idc_5926__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41479__idc_5926 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41479__idc_5926 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926)) + ((6 + (SACp_emal_41479__idc_5926__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926)) + ((6 + (SACp_emal_41479__idc_5926__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926)) + ((6 + (SACp_emal_41479__idc_5926__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926)) + ((6 + (SACp_emal_41479__idc_5926__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926)) + ((6 + (SACp_emal_41479__idc_5926__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41479__idc_5926 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41479__idc_5926 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41479__idc_5926 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41479__idc_5926 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41479__idc_5926__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41479__idc_5926, SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926), ((6 + (SACp_emal_41479__idc_5926__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41479__idc_5926__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41479__idc_5926__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41479__idc_5926__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41479__idc_5926__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41479__idc_5926__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41479__idc_5926[0] = SACp_emal_41483__uprf_26364; }
    { SACp_emal_41479__idc_5926[1] = SACp_emal_41481__uprf_26371; }

    { ; ; }
    { ; ; }
    if (!SACp_emal_41484__uprf_26365) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41478__pinl_25547__icc_5140 = ( SACp_emal_41479__idc_5926[SACp_emal_41528__ivesplit_32752]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41477__pinl_25550__icc_5146 = ( SACp_emal_41485__isaa_32678__icc_5824[SACp_emal_41528__ivesplit_32752]); }

    ; ; { SACp_emal_41476__pinl_25570_res = (SACp_emal_41478__pinl_25547__icc_5140) > (SACp_emal_41477__pinl_25550__icc_5146) ? (SACp_emal_41478__pinl_25547__icc_5140) : (SACp_emal_41477__pinl_25550__icc_5146); };
    { { if (!((1 == SACp_emal_41475__emec_40297__icc_5834__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41475__emec_40297__icc_5834"); }; { { if ((((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834)) + ((6 + (SACp_emal_41475__emec_40297__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834)) + ((6 + (SACp_emal_41475__emec_40297__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834)) + ((6 + (SACp_emal_41475__emec_40297__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41475__emec_40297__icc_5834 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41475__emec_40297__icc_5834 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834)) + ((6 + (SACp_emal_41475__emec_40297__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41475__emec_40297__icc_5834 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41475__emec_40297__icc_5834 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834)) + ((6 + (SACp_emal_41475__emec_40297__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834)) + ((6 + (SACp_emal_41475__emec_40297__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834)) + ((6 + (SACp_emal_41475__emec_40297__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834)) + ((6 + (SACp_emal_41475__emec_40297__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834)) + ((6 + (SACp_emal_41475__emec_40297__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41475__emec_40297__icc_5834 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41475__emec_40297__icc_5834 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41475__emec_40297__icc_5834 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41475__emec_40297__icc_5834 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41475__emec_40297__icc_5834__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834, SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834), ((6 + (SACp_emal_41475__emec_40297__icc_5834__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41475__emec_40297__icc_5834__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41475__emec_40297__icc_5834__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41475__emec_40297__icc_5834__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41475__emec_40297__icc_5834__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41475__emec_40297__icc_5834__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_41475__emec_40297__icc_5834__sz == SACp_emal_41485__isaa_32678__icc_5824__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41485__isaa_32678__icc_5824__sz; SAC_i++) { { SACp_emal_41475__emec_40297__icc_5834[SAC_i] = ( SACp_emal_41485__isaa_32678__icc_5824[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_41528__ivesplit_32752;
      { SACp_emal_41475__emec_40297__icc_5834[SAC_idx] = SACp_emal_41478__pinl_25547__icc_5140; }
    }

    { { if (!((1 == SACp_emal_41473__emec_40296__icc_5834__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41473__emec_40296__icc_5834"); }; { { if ((((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834)) + ((6 + (SACp_emal_41473__emec_40296__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834)) + ((6 + (SACp_emal_41473__emec_40296__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834)) + ((6 + (SACp_emal_41473__emec_40296__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41473__emec_40296__icc_5834 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41473__emec_40296__icc_5834 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834)) + ((6 + (SACp_emal_41473__emec_40296__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41473__emec_40296__icc_5834 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41473__emec_40296__icc_5834 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834)) + ((6 + (SACp_emal_41473__emec_40296__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834)) + ((6 + (SACp_emal_41473__emec_40296__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834)) + ((6 + (SACp_emal_41473__emec_40296__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834)) + ((6 + (SACp_emal_41473__emec_40296__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834)) + ((6 + (SACp_emal_41473__emec_40296__icc_5834__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41473__emec_40296__icc_5834 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41473__emec_40296__icc_5834 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41473__emec_40296__icc_5834 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41473__emec_40296__icc_5834 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41473__emec_40296__icc_5834__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834, SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834), ((6 + (SACp_emal_41473__emec_40296__icc_5834__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41473__emec_40296__icc_5834__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41473__emec_40296__icc_5834__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41473__emec_40296__icc_5834__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41473__emec_40296__icc_5834__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41473__emec_40296__icc_5834__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_41473__emec_40296__icc_5834__sz == SACp_emal_41485__isaa_32678__icc_5824__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41485__isaa_32678__icc_5824__sz; SAC_i++) { { SACp_emal_41473__emec_40296__icc_5834[SAC_i] = ( SACp_emal_41485__isaa_32678__icc_5824[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_41528__ivesplit_32752;
      { SACp_emal_41473__emec_40296__icc_5834[SAC_idx] = SACp_emal_41476__pinl_25570_res; }
    }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41471__pinl_25630__icc_5140 = ( SACp_emal_41479__idc_5926[SACp_emal_41530__isaa_32658_s]); }

    { { { if (((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41479__idc_5926, ((((SAC_HM_header_t *)SACp_emal_41479__idc_5926) - 1)->data1.arena)); } else { if (SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41479__idc_5926) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41479__idc_5926, ((((SAC_HM_header_t *)SACp_emal_41479__idc_5926) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41479__idc_5926, ((((SAC_HM_header_t *)SACp_emal_41479__idc_5926) - 1)->data1.arena)); } } else { if (((((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41479__idc_5926, ((((SAC_HM_header_t *)SACp_emal_41479__idc_5926) - 1)->data1.arena)); } else { if (((((SACp_emal_41479__idc_5926__sz * sizeof (*SACp_emal_41479__idc_5926))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41479__idc_5926) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41479__idc_5926, ((((SAC_HM_header_t *)SACp_emal_41479__idc_5926) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41479__idc_5926, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41479__idc_5926); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41479__idc_5926); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41479__idc_5926, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41479__idc_5926); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41479__idc_5926); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41479__idc_5926__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41470__pinl_25633__icc_5146 = ( SACp_emal_41485__isaa_32678__icc_5824[SACp_emal_41530__isaa_32658_s]); }

    { { { if (((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824, ((((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824) - 1)->data1.arena)); } else { if (SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824, ((((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824, ((((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824) - 1)->data1.arena)); } } else { if (((((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824, ((((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824) - 1)->data1.arena)); } else { if (((((SACp_emal_41485__isaa_32678__icc_5824__sz * sizeof (*SACp_emal_41485__isaa_32678__icc_5824))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824, ((((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41485__isaa_32678__icc_5824); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41485__isaa_32678__icc_5824__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_41469__pinl_25653_res = (SACp_emal_41471__pinl_25630__icc_5140) > (SACp_emal_41470__pinl_25633__icc_5146) ? (SACp_emal_41471__pinl_25630__icc_5140) : (SACp_emal_41470__pinl_25633__icc_5146); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41468__wlbsc_7479_sc_e = ( SACp_emal_41473__emec_40296__icc_5834[SACp_emal_41530__isaa_32658_s]); }

    { { { if (((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834, ((((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834) - 1)->data1.arena)); } else { if (SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834, ((((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834, ((((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834) - 1)->data1.arena)); } } else { if (((((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834, ((((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834) - 1)->data1.arena)); } else { if (((((SACp_emal_41473__emec_40296__icc_5834__sz * sizeof (*SACp_emal_41473__emec_40296__icc_5834))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834, ((((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41473__emec_40296__icc_5834); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41473__emec_40296__icc_5834__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41467__wlbsc_7469_sc_e = ( SACp_emal_41475__emec_40297__icc_5834[SACp_emal_41530__isaa_32658_s]); }

    { { { if (((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834, ((((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834) - 1)->data1.arena)); } else { if (SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834, ((((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834, ((((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834) - 1)->data1.arena)); } } else { if (((((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834, ((((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834) - 1)->data1.arena)); } else { if (((((SACp_emal_41475__emec_40297__icc_5834__sz * sizeof (*SACp_emal_41475__emec_40297__icc_5834))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834, ((((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41475__emec_40297__icc_5834); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41475__emec_40297__icc_5834__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { { if (!((2 == SACp_emal_41464__icc_5837__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41464__icc_5837"); }; { if ((((6 + (SACp_emal_41464__icc_5837__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41464__icc_5837__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41464__icc_5837__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41464__icc_5837__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41464__icc_5837__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_41464__icc_5837__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41464__icc_5837__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41464__icc_5837__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_41464__icc_5837__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_41464__icc_5837__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_41464__icc_5837__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_41464__icc_5837__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_41464__icc_5837__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41464__icc_5837__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41464__icc_5837__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41464__icc_5837__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41464__icc_5837__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41464__icc_5837__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41464__icc_5837__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41464__icc_5837__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41464__icc_5837__dim == (2)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_41464__icc_5837__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41464__icc_5837__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_41477__pinl_25550__icc_5146;
      SAC_size *=
      SACp_emal_41464__icc_5837__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41464__icc_5837__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_41470__pinl_25633__icc_5146;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41464__icc_5837__desc) & (-1 ^ (3))))[4]) = SACp_emal_41464__icc_5837__sz = SAC_size;
      if (!((SACp_emal_41464__icc_5837__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 10196 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 10196 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10196 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 10196 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10196 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 10196 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 10196 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 10196, __extension__ __PRETTY_FUNCTION__); }))
# 10196 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_41464__icc_5837 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_41464__icc_5837__sz * sizeof (*SACp_emal_41464__icc_5837)); break; case SAC_HM_multi_threaded: SACp_emal_41464__icc_5837 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_41464__icc_5837__sz * sizeof (*SACp_emal_41464__icc_5837), 0); break; case SAC_HM_any_threaded: SACp_emal_41464__icc_5837 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_41464__icc_5837__sz * sizeof (*SACp_emal_41464__icc_5837), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41464__icc_5837__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41464__icc_5837__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41464__icc_5837__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;
      int SAC_schedule_start1;
      int SAC_schedule_stop1;




      int SAC_SACp_emal_41464__icc_5837_shpfac0;
      int SAC_SACp_emal_41464__icc_5837_shpfac1;




      {
        int SAC_i;
        SAC_SACp_emal_41464__icc_5837_shpfac0 = 1 * SACp_emal_41464__icc_5837__shp1;
        SAC_SACp_emal_41464__icc_5837_shpfac1 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_41478__pinl_25547__icc_5140;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_41467__wlbsc_7469_sc_e;




      SACp_wlidx_39682__icc_5837
        = SAC_schedule_start0 * SAC_SACp_emal_41464__icc_5837_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41464__icc_5837_shpfac1;

      { int SAC_stop_SACp_eat_478 = SACp_emal_41478__pinl_25547__icc_5140; for (SACp_eat_478 = 0; SACp_eat_478 < SACp_emal_41478__pinl_25547__icc_5140;) {
     



      SACp_wlidx_39682__icc_5837
        = ( SACp_emal_41464__icc_5837__shp1 * SACp_eat_478
         + SAC_schedule_start1 ) * SAC_SACp_emal_41464__icc_5837_shpfac1;

      { int SAC_stop_SACp_eat_477 = SACp_emal_41467__wlbsc_7469_sc_e; for (SACp_eat_477 = 0; SACp_eat_477 < SACp_emal_41467__wlbsc_7469_sc_e;) {
     



      if (!((0 == (SACp_emal_41464__icc_5837__dim - SACp_hse_36__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41464__icc_5837_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_41464__icc_5837[SACp_wlidx_39682__icc_5837] = SACp_emal_41528__ivesplit_32752; };

      SACp_wlidx_39682__icc_5837 = SACp_wlidx_39682__icc_5837 + 1;
      SACp_eat_477 = SACp_eat_477 + 1;
      } }
      SACp_eat_478 = SACp_eat_478 + 1;
      } }
# 10292 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_41478__pinl_25547__icc_5140;
      SAC_schedule_stop0 = SACp_emal_41476__pinl_25570_res;
      SAC_schedule_start1 = SACp_emal_41469__pinl_25653_res;
      SAC_schedule_stop1 = SACp_emal_41468__wlbsc_7479_sc_e;




      SACp_wlidx_39682__icc_5837
        = SAC_schedule_start0 * SAC_SACp_emal_41464__icc_5837_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41464__icc_5837_shpfac1;

      { int SAC_stop_SACp_eat_478 = SACp_emal_41476__pinl_25570_res; for (SACp_eat_478 = SACp_emal_41478__pinl_25547__icc_5140; SACp_eat_478 < SACp_emal_41476__pinl_25570_res;) {
     



      SACp_wlidx_39682__icc_5837
        = ( SACp_emal_41464__icc_5837__shp1 * SACp_eat_478
         + SAC_schedule_start1 ) * SAC_SACp_emal_41464__icc_5837_shpfac1;

      { int SAC_stop_SACp_eat_477 = SACp_emal_41468__wlbsc_7479_sc_e; for (SACp_eat_477 = SACp_emal_41469__pinl_25653_res; SACp_eat_477 < SACp_emal_41468__wlbsc_7479_sc_e;) {
     



      if (!((0 == (SACp_emal_41464__icc_5837__dim - SACp_hse_36__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41464__icc_5837_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_41464__icc_5837[SACp_wlidx_39682__icc_5837] = SACp_emal_41528__ivesplit_32752; };

      SACp_wlidx_39682__icc_5837 = SACp_wlidx_39682__icc_5837 + 1;
      SACp_eat_477 = SACp_eat_477 + 1;
      } }
      SACp_eat_478 = SACp_eat_478 + 1;
      } }
# 10335 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_41478__pinl_25547__icc_5140;
      SAC_schedule_stop0 = SACp_emal_41476__pinl_25570_res;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_41471__pinl_25630__icc_5140;




      SACp_wlidx_39682__icc_5837
        = SAC_schedule_start0 * SAC_SACp_emal_41464__icc_5837_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41464__icc_5837_shpfac1;

      { int SAC_stop_SACp_eat_478 = SACp_emal_41476__pinl_25570_res; for (SACp_eat_478 = SACp_emal_41478__pinl_25547__icc_5140; SACp_eat_478 < SACp_emal_41476__pinl_25570_res;) {
     



      SACp_wlidx_39682__icc_5837
        = ( SACp_emal_41464__icc_5837__shp1 * SACp_eat_478
         + SAC_schedule_start1 ) * SAC_SACp_emal_41464__icc_5837_shpfac1;

      { int SAC_stop_SACp_eat_477 = SACp_emal_41471__pinl_25630__icc_5140; for (SACp_eat_477 = 0; SACp_eat_477 < SACp_emal_41471__pinl_25630__icc_5140;) {
     



      if (!((0 == (SACp_emal_41464__icc_5837__dim - SACp_hse_36__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41464__icc_5837_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_41464__icc_5837[SACp_wlidx_39682__icc_5837] = SACp_emal_41528__ivesplit_32752; };

      SACp_wlidx_39682__icc_5837 = SACp_wlidx_39682__icc_5837 + 1;
      SACp_eat_477 = SACp_eat_477 + 1;
      } }
      SACp_eat_478 = SACp_eat_478 + 1;
      } }
# 10378 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_41478__pinl_25547__icc_5140;
      SAC_schedule_stop0 = SACp_emal_41477__pinl_25550__icc_5146;
      SAC_schedule_start1 = SACp_emal_41471__pinl_25630__icc_5140;
      SAC_schedule_stop1 = SACp_emal_41470__pinl_25633__icc_5146;




      SACp_wlidx_39682__icc_5837
        = SAC_schedule_start0 * SAC_SACp_emal_41464__icc_5837_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41464__icc_5837_shpfac1;

      { int SAC_stop_SACp_eat_478 = SACp_emal_41477__pinl_25550__icc_5146; for (SACp_eat_478 = SACp_emal_41478__pinl_25547__icc_5140; SACp_eat_478 < SACp_emal_41477__pinl_25550__icc_5146;) {
     



      SACp_wlidx_39682__icc_5837
        = ( SACp_emal_41464__icc_5837__shp1 * SACp_eat_478
         + SAC_schedule_start1 ) * SAC_SACp_emal_41464__icc_5837_shpfac1;

      { int SAC_stop_SACp_eat_477 = SACp_emal_41470__pinl_25633__icc_5146; for (SACp_eat_477 = SACp_emal_41471__pinl_25630__icc_5140; SACp_eat_477 < SACp_emal_41470__pinl_25633__icc_5146;) {
     



      if (!((0 == (SACp_emal_41464__icc_5837__dim - SACp_hse_36__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41464__icc_5837_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_41464__icc_5837[SACp_wlidx_39682__icc_5837] = SACp_emal_41528__ivesplit_32752; };

      SACp_wlidx_39682__icc_5837 = SACp_wlidx_39682__icc_5837 + 1;
      SACp_eat_477 = SACp_eat_477 + 1;
      } }
      SACp_eat_478 = SACp_eat_478 + 1;
      } }
# 10421 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42031_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_41484__uprf_26365) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    { ; ; }
    if (!SACp_emal_41517__uprf_26614) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_41510__uprf_26586) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_41518__uprf_26620) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41463__pinl_25713__icc_5140 = ( SACp_emal_41508__idc_5904[SACp_emal_41528__ivesplit_32752]); }

    { { { if (((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41508__idc_5904, ((((SAC_HM_header_t *)SACp_emal_41508__idc_5904) - 1)->data1.arena)); } else { if (SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41508__idc_5904) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41508__idc_5904, ((((SAC_HM_header_t *)SACp_emal_41508__idc_5904) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41508__idc_5904, ((((SAC_HM_header_t *)SACp_emal_41508__idc_5904) - 1)->data1.arena)); } } else { if (((((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41508__idc_5904, ((((SAC_HM_header_t *)SACp_emal_41508__idc_5904) - 1)->data1.arena)); } else { if (((((SACp_emal_41508__idc_5904__sz * sizeof (*SACp_emal_41508__idc_5904))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41508__idc_5904) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41508__idc_5904, ((((SAC_HM_header_t *)SACp_emal_41508__idc_5904) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41508__idc_5904, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41508__idc_5904); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41508__idc_5904); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41508__idc_5904, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41508__idc_5904); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41508__idc_5904); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41508__idc_5904__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41462__pinl_25716__icc_5146 = ( SACp_emal_41516__idc_5892[SACp_emal_41528__ivesplit_32752]); }

    { { { if (((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41516__idc_5892, ((((SAC_HM_header_t *)SACp_emal_41516__idc_5892) - 1)->data1.arena)); } else { if (SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41516__idc_5892) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41516__idc_5892, ((((SAC_HM_header_t *)SACp_emal_41516__idc_5892) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41516__idc_5892, ((((SAC_HM_header_t *)SACp_emal_41516__idc_5892) - 1)->data1.arena)); } } else { if (((((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41516__idc_5892, ((((SAC_HM_header_t *)SACp_emal_41516__idc_5892) - 1)->data1.arena)); } else { if (((((SACp_emal_41516__idc_5892__sz * sizeof (*SACp_emal_41516__idc_5892))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41516__idc_5892) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41516__idc_5892, ((((SAC_HM_header_t *)SACp_emal_41516__idc_5892) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41516__idc_5892, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41516__idc_5892); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41516__idc_5892); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41516__idc_5892, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41516__idc_5892); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41516__idc_5892); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41516__idc_5892__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_41523__uprf_26656) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_41512__uprf_26594) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_41524__uprf_26662) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_41513__uprf_26600) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41461__pinl_25962__icc_5140 = ( SACp_emal_41511__idc_5900[SACp_emal_41528__ivesplit_32752]); }

    { { { if (((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41511__idc_5900, ((((SAC_HM_header_t *)SACp_emal_41511__idc_5900) - 1)->data1.arena)); } else { if (SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41511__idc_5900) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41511__idc_5900, ((((SAC_HM_header_t *)SACp_emal_41511__idc_5900) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41511__idc_5900, ((((SAC_HM_header_t *)SACp_emal_41511__idc_5900) - 1)->data1.arena)); } } else { if (((((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41511__idc_5900, ((((SAC_HM_header_t *)SACp_emal_41511__idc_5900) - 1)->data1.arena)); } else { if (((((SACp_emal_41511__idc_5900__sz * sizeof (*SACp_emal_41511__idc_5900))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41511__idc_5900) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41511__idc_5900, ((((SAC_HM_header_t *)SACp_emal_41511__idc_5900) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41511__idc_5900, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41511__idc_5900); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41511__idc_5900); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41511__idc_5900, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41511__idc_5900); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41511__idc_5900); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41511__idc_5900__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41460__pinl_25965__icc_5146 = ( SACp_emal_41522__idc_5884[SACp_emal_41528__ivesplit_32752]); }

    { { { if (((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41522__idc_5884, ((((SAC_HM_header_t *)SACp_emal_41522__idc_5884) - 1)->data1.arena)); } else { if (SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41522__idc_5884) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41522__idc_5884, ((((SAC_HM_header_t *)SACp_emal_41522__idc_5884) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41522__idc_5884, ((((SAC_HM_header_t *)SACp_emal_41522__idc_5884) - 1)->data1.arena)); } } else { if (((((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41522__idc_5884, ((((SAC_HM_header_t *)SACp_emal_41522__idc_5884) - 1)->data1.arena)); } else { if (((((SACp_emal_41522__idc_5884__sz * sizeof (*SACp_emal_41522__idc_5884))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41522__idc_5884) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41522__idc_5884, ((((SAC_HM_header_t *)SACp_emal_41522__idc_5884) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41522__idc_5884, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41522__idc_5884); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41522__idc_5884); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41522__idc_5884, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41522__idc_5884); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41522__idc_5884); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41522__idc_5884__desc) & (-1 ^ (3))))); } } }
    { { if (!((3 == SACp_emal_41435__icc_5874__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41435__icc_5874"); }; { if ((((6 + (SACp_emal_41435__icc_5874__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41435__icc_5874__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41435__icc_5874__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41435__icc_5874__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41435__icc_5874__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_41435__icc_5874__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41435__icc_5874__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41435__icc_5874__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_41435__icc_5874__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_41435__icc_5874__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_41435__icc_5874__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_41435__icc_5874__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_41435__icc_5874__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41435__icc_5874__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41435__icc_5874__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41435__icc_5874__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41435__icc_5874__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41435__icc_5874__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41435__icc_5874__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41435__icc_5874__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_emal_41435__icc_5874__dim == (1) + (2)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_41435__icc_5874__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41435__icc_5874__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_41462__pinl_25716__icc_5146;
      SACp_emal_41435__icc_5874__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41435__icc_5874__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_41464__icc_5837__shp0;
      SACp_emal_41435__icc_5874__shp2 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41435__icc_5874__desc) & (-1 ^ (3))))[(6 + (2))]) = SACp_emal_41464__icc_5837__shp1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41435__icc_5874__desc) & (-1 ^ (3))))[4]) = SACp_emal_41435__icc_5874__sz = SAC_size * SACp_emal_41464__icc_5837__sz;
      if (!((SACp_emal_41435__icc_5874__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 10497 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 10497 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10497 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 10497 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 10497 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 10497 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 10497 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 10497, __extension__ __PRETTY_FUNCTION__); }))
# 10497 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_41435__icc_5874 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_41435__icc_5874__sz * sizeof (*SACp_emal_41435__icc_5874)); break; case SAC_HM_multi_threaded: SACp_emal_41435__icc_5874 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_41435__icc_5874__sz * sizeof (*SACp_emal_41435__icc_5874), 0); break; case SAC_HM_any_threaded: SACp_emal_41435__icc_5874 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_41435__icc_5874__sz * sizeof (*SACp_emal_41435__icc_5874), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41435__icc_5874__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41435__icc_5874__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41435__icc_5874__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { if (!(((SACp_emal_41435__icc_5874__dim) - (1) == SACp_emal_41436__icc_5870__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41436__icc_5870"); }; { if ((((6 + (SACp_emal_41436__icc_5870__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41436__icc_5870__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41436__icc_5870__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41436__icc_5870__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41436__icc_5870__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_41436__icc_5870__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41436__icc_5870__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41436__icc_5870__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_41436__icc_5870__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_41436__icc_5870__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_41436__icc_5870__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_41436__icc_5870__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_41436__icc_5870__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41436__icc_5870__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41436__icc_5870__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41436__icc_5870__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41436__icc_5870__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41436__icc_5870__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41436__icc_5870__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41436__icc_5870__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41436__icc_5870__dim == (2)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_41436__icc_5870__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41436__icc_5870__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_41464__icc_5837__shp0;
      SACp_emal_41436__icc_5870__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41436__icc_5870__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_41464__icc_5837__shp1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41436__icc_5870__desc) & (-1 ^ (3))))[4]) = SACp_emal_41436__icc_5870__sz = SAC_size * SACp_emal_41464__icc_5837__sz;
      if (!((SACp_emal_41436__icc_5870__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Array with size <0 found!"); };
    }

   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_41435__icc_5874_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_41435__icc_5874_shpfac0 = 1 * SACp_emal_41435__icc_5874__shp1 * SACp_emal_41435__icc_5874__shp2;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_41463__pinl_25713__icc_5140;




      SACp_wlidx_39683__icc_5874
        = SAC_schedule_start0 * SAC_SACp_emal_41435__icc_5874_shpfac0;

      { int SAC_stop_SACp_eat_479 = SACp_emal_41463__pinl_25713__icc_5140; for (SACp_eat_479 = 0; SACp_eat_479 < SACp_emal_41463__pinl_25713__icc_5140;) {
     



      SACp_emal_41436__icc_5870 = SACp_emal_41435__icc_5874+SACp_wlidx_39683__icc_5874;

      { int SAC_i; if (!((SACp_emal_41436__icc_5870__sz == SACp_emal_41464__icc_5837__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41464__icc_5837__sz; SAC_i++) { { SACp_emal_41436__icc_5870[SAC_i] = ( SACp_emal_41464__icc_5837[SAC_i]); } } }
      SACp_wlidx_39683__icc_5874 = SACp_wlidx_39683__icc_5874 + SACp_emal_41436__icc_5870__sz;
      SACp_eat_479 = SACp_eat_479 + 1;
      } }
# 10582 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_41463__pinl_25713__icc_5140;
      SAC_schedule_stop0 = SACp_emal_41462__pinl_25716__icc_5146;




      SACp_wlidx_39683__icc_5874
        = SAC_schedule_start0 * SAC_SACp_emal_41435__icc_5874_shpfac0;

      { int SAC_stop_SACp_eat_479 = SACp_emal_41462__pinl_25716__icc_5146; for (SACp_eat_479 = SACp_emal_41463__pinl_25713__icc_5140; SACp_eat_479 < SACp_emal_41462__pinl_25716__icc_5146;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7727, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_41455__pinl_17859__flat_1763 = (SACp_eat_479) * (SACp_emal_41527__uprf_26672); };



      SACp_emal_41436__icc_5870 = SACp_emal_41435__icc_5874+SACp_wlidx_39683__icc_5874;

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
      ;

      }
      { if (!(((SACp_emal_41436__icc_5870__dim) - (1) == SACp_emal_41438__pinl_18088__icc_5649__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41438__pinl_18088__icc_5649"); }; { if ((((6 + (SACp_emal_41438__pinl_18088__icc_5649__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41438__pinl_18088__icc_5649__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41438__pinl_18088__icc_5649__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41438__pinl_18088__icc_5649__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41438__pinl_18088__icc_5649__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_41438__pinl_18088__icc_5649__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41438__pinl_18088__icc_5649__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41438__pinl_18088__icc_5649__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_41438__pinl_18088__icc_5649__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_41438__pinl_18088__icc_5649__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_41438__pinl_18088__icc_5649__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_41438__pinl_18088__icc_5649__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_41438__pinl_18088__icc_5649__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41438__pinl_18088__icc_5649__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41438__pinl_18088__icc_5649__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41438__pinl_18088__icc_5649__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41438__pinl_18088__icc_5649__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41438__pinl_18088__icc_5649__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41438__pinl_18088__icc_5649__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41438__pinl_18088__icc_5649__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_41438__pinl_18088__icc_5649__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
      {

        int SAC_size = 1;
        SACp_emal_41438__pinl_18088__icc_5649__shp0 =
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41438__pinl_18088__icc_5649__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_41487__icc_5811__shp0;
        (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41438__pinl_18088__icc_5649__desc) & (-1 ^ (3))))[4]) = SACp_emal_41438__pinl_18088__icc_5649__sz = SAC_size * SACp_emal_41487__icc_5811__sz;
        if (!((SACp_emal_41438__pinl_18088__icc_5649__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Array with size <0 found!"); };
      }

     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;




        int SAC_SACp_emal_41436__icc_5870_shpfac0;




        {
          int SAC_i;
          SAC_SACp_emal_41436__icc_5870_shpfac0 = 1 * SACp_emal_41436__icc_5870__shp1;
        }




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_emal_41461__pinl_25962__icc_5140;




        SACp_wlidx_39684__icc_5870
          = SAC_schedule_start0 * SAC_SACp_emal_41436__icc_5870_shpfac0;

        { int SAC_stop_SACp_eat_481 = SACp_emal_41461__pinl_25962__icc_5140; for (SACp_eat_481 = 0; SACp_eat_481 < SACp_emal_41461__pinl_25962__icc_5140;) {
       



        SACp_emal_41438__pinl_18088__icc_5649 = SACp_emal_41436__icc_5870+SACp_wlidx_39684__icc_5870;

        { int SAC_i; if (!((SACp_emal_41438__pinl_18088__icc_5649__sz == SACp_emal_41487__icc_5811__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41487__icc_5811__sz; SAC_i++) { { SACp_emal_41438__pinl_18088__icc_5649[SAC_i] = ( SACp_emal_41487__icc_5811[SAC_i]); } } }
        SACp_wlidx_39684__icc_5870 = SACp_wlidx_39684__icc_5870 + SACp_emal_41438__pinl_18088__icc_5649__sz;
        SACp_eat_481 = SACp_eat_481 + 1;
        } }
# 10689 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_emal_41461__pinl_25962__icc_5140;
        SAC_schedule_stop0 = SACp_emal_41460__pinl_25965__icc_5146;




        SACp_wlidx_39684__icc_5870
          = SAC_schedule_start0 * SAC_SACp_emal_41436__icc_5870_shpfac0;

        { int SAC_stop_SACp_eat_481 = SACp_emal_41460__pinl_25965__icc_5146; for (SACp_eat_481 = SACp_emal_41461__pinl_25962__icc_5140; SACp_eat_481 < SACp_emal_41460__pinl_25965__icc_5146;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7311, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_emal_41450__pinl_18041__flat_1747 = (SACp_eat_481) + (SACp_emal_41455__pinl_17859__flat_1763); };
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_41450__pinl_18041__flat_1747 >= 0) { { SACp_emal_41449__uprf_26215 = SACp_emal_41450__pinl_18041__flat_1747; }; SACp_emal_41449__uprf_26215 = 1; } else { SACp_emal_41449__uprf_26215 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_emal_41450__pinl_18041__flat_1747"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_41450__pinl_18041__flat_1747 < SACp_emal_41496__uprf_26478) { SACp_emal_41448__uprf_26202 = 1; } else { SACp_emal_41448__uprf_26202 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_emal_41450__pinl_18041__flat_1747" " (" "%d" ") < " "SACp_emal_41496__uprf_26478" " (" "%d" ")" "' violated", SACp_emal_41450__pinl_18041__flat_1747, SACp_emal_41496__uprf_26478); }



        SACp_emal_41438__pinl_18088__icc_5649 = SACp_emal_41436__icc_5870+SACp_wlidx_39684__icc_5870;

        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
        ;

        }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 656, "Assignment with incompatible types found"); };
        ;

        }
       



        {
          int SAC_schedule_start0;
          int SAC_schedule_stop0;




          int SAC_SACp_emal_41438__pinl_18088__icc_5649_shpfac0;




          {
            int SAC_i;
            SAC_SACp_emal_41438__pinl_18088__icc_5649_shpfac0 = 1;
          }




          SAC_schedule_start0 = 0;
          SAC_schedule_stop0 = SACp_emal_41499__pinl_25215__icc_5140;




          SACp_wlidx_39685__pinl_18088__icc_5649
            = SAC_schedule_start0 * SAC_SACp_emal_41438__pinl_18088__icc_5649_shpfac0;

          { int SAC_stop_SACp_pinl_18099__eat_471 = SACp_emal_41499__pinl_25215__icc_5140; for (SACp_pinl_18099__eat_471 = 0; SACp_pinl_18099__eat_471 < SACp_emal_41499__pinl_25215__icc_5140;) {
         



          if (!((0 == (SACp_emal_41438__pinl_18088__icc_5649__dim - SACp_pinl_18097_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal dimension found!"); };
          if (!((1 == SAC_SACp_emal_41438__pinl_18088__icc_5649_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 671, "WL expression with illegal size found!"); };
          { SACp_emal_41438__pinl_18088__icc_5649[SACp_wlidx_39685__pinl_18088__icc_5649] = SACp_emal_41528__ivesplit_32752; };

          SACp_wlidx_39685__pinl_18088__icc_5649 = SACp_wlidx_39685__pinl_18088__icc_5649 + 1;
          SACp_pinl_18099__eat_471 = SACp_pinl_18099__eat_471 + 1;
          } }
# 10801 "/home/rubenhensen/sac/a.out.c"
          SAC_schedule_start0 = SACp_emal_41499__pinl_25215__icc_5140;
          SAC_schedule_stop0 = SACp_emal_41498__pinl_25218__icc_5146;




          SACp_wlidx_39685__pinl_18088__icc_5649
            = SAC_schedule_start0 * SAC_SACp_emal_41438__pinl_18088__icc_5649_shpfac0;

          { int SAC_stop_SACp_pinl_18099__eat_471 = SACp_emal_41498__pinl_25218__icc_5146; for (SACp_pinl_18099__eat_471 = SACp_emal_41499__pinl_25215__icc_5140; SACp_pinl_18099__eat_471 < SACp_emal_41498__pinl_25218__icc_5146;) {
         
          { ; ;



          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
          ;

          }
          if (SACp_pinl_18099__eat_471 >= 0) { { SACp_emal_41445__uprf_26220 = SACp_pinl_18099__eat_471; }; SACp_emal_41445__uprf_26220 = 1; } else { SACp_emal_41445__uprf_26220 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_pinl_18099__eat_471"); }
          ; ; { SACp_emal_41445__uprf_26220 = (SACp_emal_41449__uprf_26215) & (SACp_emal_41445__uprf_26220); };
          { ; ;



          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
          ;

          }
          if (SACp_pinl_18099__eat_471 < SACp_emal_41495__uprf_26485) { SACp_emal_41443__uprf_26209 = 1; } else { SACp_emal_41443__uprf_26209 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_pinl_18099__eat_471" " (" "%d" ") < " "SACp_emal_41495__uprf_26485" " (" "%d" ")" "' violated", SACp_pinl_18099__eat_471, SACp_emal_41495__uprf_26485); }
          ; ; { SACp_emal_41443__uprf_26209 = (SACp_emal_41448__uprf_26202) & (SACp_emal_41443__uprf_26209); };
          { { if (!((1 == SACp_emal_41441__pinl_18127__idc_5664__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41441__pinl_18127__idc_5664"); }; { { if ((((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664)) + ((6 + (SACp_emal_41441__pinl_18127__idc_5664__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664)) + ((6 + (SACp_emal_41441__pinl_18127__idc_5664__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664)) + ((6 + (SACp_emal_41441__pinl_18127__idc_5664__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41441__pinl_18127__idc_5664 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41441__pinl_18127__idc_5664 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664)) + ((6 + (SACp_emal_41441__pinl_18127__idc_5664__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41441__pinl_18127__idc_5664 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41441__pinl_18127__idc_5664 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664)) + ((6 + (SACp_emal_41441__pinl_18127__idc_5664__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664)) + ((6 + (SACp_emal_41441__pinl_18127__idc_5664__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664)) + ((6 + (SACp_emal_41441__pinl_18127__idc_5664__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664)) + ((6 + (SACp_emal_41441__pinl_18127__idc_5664__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664)) + ((6 + (SACp_emal_41441__pinl_18127__idc_5664__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41441__pinl_18127__idc_5664 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41441__pinl_18127__idc_5664 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41441__pinl_18127__idc_5664 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41441__pinl_18127__idc_5664 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41441__pinl_18127__idc_5664__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664, SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664), ((6 + (SACp_emal_41441__pinl_18127__idc_5664__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41441__pinl_18127__idc_5664__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41441__pinl_18127__idc_5664__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41441__pinl_18127__idc_5664__desc) & (-1 ^ (3))))[1]) = 0; }



          if (!((SACp_emal_41441__pinl_18127__idc_5664__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
          if (!((SACp_emal_41441__pinl_18127__idc_5664__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
          ;

          }



          { SACp_emal_41441__pinl_18127__idc_5664[0] = SACp_emal_41450__pinl_18041__flat_1747; }
          { SACp_emal_41441__pinl_18127__idc_5664[1] = SACp_pinl_18099__eat_471; }

          if (!SACp_emal_41443__uprf_26209) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
          if (!SACp_emal_41445__uprf_26220) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
          { ; ;



          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
          ;

          }



          SACp_emal_41440__ivesli_39762 = ( ( SACp_emal_41529__isaa_32662_a[1]) * ( SACp_emal_41441__pinl_18127__idc_5664[0]) + ( SACp_emal_41441__pinl_18127__idc_5664[1]) );

          { { { if (((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664, ((((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664) - 1)->data1.arena)); } else { if (SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664, ((((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664, ((((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664) - 1)->data1.arena)); } } else { if (((((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664, ((((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664) - 1)->data1.arena)); } else { if (((((SACp_emal_41441__pinl_18127__idc_5664__sz * sizeof (*SACp_emal_41441__pinl_18127__idc_5664))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664, ((((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41441__pinl_18127__idc_5664); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41441__pinl_18127__idc_5664__desc) & (-1 ^ (3))))); } } }
          { ; ;



          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
          ;

          }



         
          if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
          { SACp_emal_41439__pinl_18084__icc_5643 = ( SACl_a[SACp_emal_41440__ivesli_39762]); }

          { ; ; }
          if (!SACp_emal_41443__uprf_26209) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
          if (!SACp_emal_41445__uprf_26220) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
          { ; ; }
          { ; ; }



          if (!((0 == (SACp_emal_41438__pinl_18088__icc_5649__dim - SACp_pinl_18097_iv__sz)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal dimension found!"); };
          if (!((1 == SAC_SACp_emal_41438__pinl_18088__icc_5649_shpfac0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 686, "WL expression with illegal size found!"); };
          { SACp_emal_41438__pinl_18088__icc_5649[SACp_wlidx_39685__pinl_18088__icc_5649] = SACp_emal_41439__pinl_18084__icc_5643; };

          { ; ; }
          SACp_wlidx_39685__pinl_18088__icc_5649 = SACp_wlidx_39685__pinl_18088__icc_5649 + 1;
          SACp_pinl_18099__eat_471 = SACp_pinl_18099__eat_471 + 1;
          } }
# 10902 "/home/rubenhensen/sac/a.out.c"
        }

       
        _comp_42032_SAC_label:;
        { ; ; }
        { ; ; }
        { ; ; }
        { ; ; }
        { ; ; }
        if (!SACp_emal_41504__uprf_26512) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
        if (!SACp_emal_41502__uprf_26506) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
        if (!SACp_emal_41505__uprf_26518) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 662, "With-loop guard failed"); }
        SACp_wlidx_39684__icc_5870 = SACp_wlidx_39684__icc_5870 + SACp_emal_41438__pinl_18088__icc_5649__sz;
        SACp_eat_481 = SACp_eat_481 + 1;
        } }
# 10925 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_42033_SAC_label:;
      { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41438__pinl_18088__icc_5649__desc) & (-1 ^ (3))))); } }
      { ; ; }
      { ; ; }
      { ; ; }
      if (!SACp_emal_41523__uprf_26656) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_41512__uprf_26594) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_41524__uprf_26662) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_41513__uprf_26600) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
      SACp_wlidx_39683__icc_5874 = SACp_wlidx_39683__icc_5874 + SACp_emal_41436__icc_5870__sz;
      SACp_eat_479 = SACp_eat_479 + 1;
      } }
# 10948 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42034_SAC_label:;
    { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41436__icc_5870__desc) & (-1 ^ (3))))); } }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_41487__icc_5811); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41487__icc_5811__desc) & (-1 ^ (3))))); } } }
    { { free (SACp_emal_41464__icc_5837); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41464__icc_5837__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { { if (((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a, ((((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a) - 1)->data1.arena)); } else { if (SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a, ((((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a, ((((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a) - 1)->data1.arena)); } } else { if (((((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a, ((((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a) - 1)->data1.arena)); } else { if (((((SACp_emal_41529__isaa_32662_a__sz * sizeof (*SACp_emal_41529__isaa_32662_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a, ((((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41529__isaa_32662_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41529__isaa_32662_a__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
    if (!SACp_emal_41517__uprf_26614) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_41510__uprf_26586) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_41518__uprf_26620) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_41435__icc_5874; *SAC_arg_1__desc__p = SACp_emal_41435__icc_5874__desc; }
    return;
   
  }



}
}
# 11003 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN_CLArray___EQ_EQ__i_X__i_X (
# 11003 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 11003 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int * SACl_B, SAC_array_descriptor_t SACl_B__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * SACp_emal_41549__isaa_33007_B;
    SAC_array_descriptor_t SACp_emal_41549__isaa_33007_B__desc = 
# 11013 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11013 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41549__isaa_33007_B__shp0 = 1;
    const int SACp_emal_41549__isaa_33007_B__sz = 1;
    const int SACp_emal_41549__isaa_33007_B__dim = 1;




    int * SACp_emal_41548__isaa_33010_A;
    SAC_array_descriptor_t SACp_emal_41548__isaa_33010_A__desc = 
# 11022 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11022 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41548__isaa_33010_A__shp0 = 1;
    const int SACp_emal_41548__isaa_33010_A__sz = 1;
    const int SACp_emal_41548__isaa_33010_A__dim = 1;




    
# 11030 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11030 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41547__uprf_26876;
   
   

    const int SACp_emal_41546__ivesplit_33026 = 0;



    int SACp_emal_41545__uprf_26878;
   
   




    int SACp_emal_41544__uprf_26837;
   
   




    
# 11052 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11052 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41542__uprf_26860;
   
   




    
# 11059 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11059 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41541__uprf_26854;
   
   




    
# 11066 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11066 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41540__uprf_26845;
   
   




    
# 11073 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11073 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41539__uprf_26839;
   
   




    int * SACp_emal_41538__idc_6072;
    SAC_array_descriptor_t SACp_emal_41538__idc_6072__desc = 
# 11081 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11081 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41538__idc_6072__shp0 = 1;
    const int SACp_emal_41538__idc_6072__sz = 1;
    const int SACp_emal_41538__idc_6072__dim = 1;




    int SACp_emal_41537__ivesli_39764;
   
   




    int SACp_emal_41536__icc_6045;
   
   




    int SACp_emal_41535__ivesli_39763;
   
   




    int SACp_emal_41534__icc_6051;
   
   




    
# 11117 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11117 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41532__flat_3875;
   
   




    
# 11124 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11124 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_41531__icc_6057;
    SAC_array_descriptor_t SACp_emal_41531__icc_6057__desc = 
# 11125 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11125 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_41531__icc_6057__shp0;
    int SACp_emal_41531__icc_6057__sz;
    const int SACp_emal_41531__icc_6057__dim = 1;




    int SACp_wlidx_39686__icc_6057;
   
   




    int SACp_eat_484;
   
   




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 11148 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11148 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACl_iv__shp0 = 1;
    const int SACl_iv__sz = 1;
    const int SACl_iv__dim = 1;





    int SACl_B__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_B__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[4]);
    const int SACl_B__dim = 1;




    int SACl_A__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_A__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[4]);
    const int SACl_A__dim = 1;

   
    { { if (!((1 == SACp_emal_41549__isaa_33007_B__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41549__isaa_33007_B"); }; { { if ((((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B)) + ((6 + (SACp_emal_41549__isaa_33007_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B)) + ((6 + (SACp_emal_41549__isaa_33007_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B)) + ((6 + (SACp_emal_41549__isaa_33007_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41549__isaa_33007_B = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41549__isaa_33007_B = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B)) + ((6 + (SACp_emal_41549__isaa_33007_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41549__isaa_33007_B = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41549__isaa_33007_B = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B)) + ((6 + (SACp_emal_41549__isaa_33007_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B)) + ((6 + (SACp_emal_41549__isaa_33007_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B)) + ((6 + (SACp_emal_41549__isaa_33007_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B)) + ((6 + (SACp_emal_41549__isaa_33007_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B)) + ((6 + (SACp_emal_41549__isaa_33007_B__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41549__isaa_33007_B = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41549__isaa_33007_B = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41549__isaa_33007_B = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41549__isaa_33007_B = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41549__isaa_33007_B__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B, SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B), ((6 + (SACp_emal_41549__isaa_33007_B__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41549__isaa_33007_B__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41549__isaa_33007_B__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41549__isaa_33007_B__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41549__isaa_33007_B__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7141, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41549__isaa_33007_B__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7141, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_41549__isaa_33007_B[0] = SACl_B__shp0; };

    { { if (!((1 == SACp_emal_41548__isaa_33010_A__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41548__isaa_33010_A"); }; { { if ((((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A)) + ((6 + (SACp_emal_41548__isaa_33010_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A)) + ((6 + (SACp_emal_41548__isaa_33010_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A)) + ((6 + (SACp_emal_41548__isaa_33010_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41548__isaa_33010_A = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41548__isaa_33010_A = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A)) + ((6 + (SACp_emal_41548__isaa_33010_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41548__isaa_33010_A = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41548__isaa_33010_A = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A)) + ((6 + (SACp_emal_41548__isaa_33010_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A)) + ((6 + (SACp_emal_41548__isaa_33010_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A)) + ((6 + (SACp_emal_41548__isaa_33010_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A)) + ((6 + (SACp_emal_41548__isaa_33010_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A)) + ((6 + (SACp_emal_41548__isaa_33010_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41548__isaa_33010_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41548__isaa_33010_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41548__isaa_33010_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41548__isaa_33010_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41548__isaa_33010_A__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A, SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A), ((6 + (SACp_emal_41548__isaa_33010_A__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41548__isaa_33010_A__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41548__isaa_33010_A__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41548__isaa_33010_A__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41548__isaa_33010_A__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7141, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41548__isaa_33010_A__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7141, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_41548__isaa_33010_A[0] = SACl_A__shp0; };

    { { SACp_emal_41547__uprf_26876 = 
# 11199 "/home/rubenhensen/sac/a.out.c" 3 4
   1
# 11199 "/home/rubenhensen/sac/a.out.c"
   ; }; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7218, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41545__uprf_26878 = ( SACp_emal_41549__isaa_33007_B[SACp_emal_41546__ivesplit_33026]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41544__uprf_26837 = ( SACp_emal_41548__isaa_33010_A[SACp_emal_41546__ivesplit_33026]); }

    { ; ; }
    { { if (!((1 == SACp_emal_41531__icc_6057__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41531__icc_6057"); }; { if ((((6 + (SACp_emal_41531__icc_6057__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41531__icc_6057__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41531__icc_6057__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41531__icc_6057__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41531__icc_6057__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_41531__icc_6057__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41531__icc_6057__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41531__icc_6057__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_41531__icc_6057__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_41531__icc_6057__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_41531__icc_6057__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_41531__icc_6057__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_41531__icc_6057__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41531__icc_6057__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41531__icc_6057__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41531__icc_6057__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41531__icc_6057__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41531__icc_6057__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41531__icc_6057__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41531__icc_6057__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41531__icc_6057__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_41531__icc_6057__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41531__icc_6057__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_41545__uprf_26878;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41531__icc_6057__desc) & (-1 ^ (3))))[4]) = SACp_emal_41531__icc_6057__sz = SAC_size;
      if (!((SACp_emal_41531__icc_6057__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 11230 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 11230 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11230 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 11230 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11230 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 11230 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 11230 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 11230, __extension__ __PRETTY_FUNCTION__); }))
# 11230 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_41531__icc_6057 = (
# 11230 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11230 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_41531__icc_6057__sz * sizeof (*SACp_emal_41531__icc_6057)); break; case SAC_HM_multi_threaded: SACp_emal_41531__icc_6057 = (
# 11230 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11230 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_41531__icc_6057__sz * sizeof (*SACp_emal_41531__icc_6057), 0); break; case SAC_HM_any_threaded: SACp_emal_41531__icc_6057 = (
# 11230 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11230 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_41531__icc_6057__sz * sizeof (*SACp_emal_41531__icc_6057), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41531__icc_6057__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41531__icc_6057__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41531__icc_6057__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7203, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_41531__icc_6057_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_41531__icc_6057_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_41545__uprf_26878;




      SACp_wlidx_39686__icc_6057
        = SAC_schedule_start0 * SAC_SACp_emal_41531__icc_6057_shpfac0;

      { int SAC_stop_SACp_eat_484 = SACp_emal_41545__uprf_26878; for (SACp_eat_484 = 0; SACp_eat_484 < SACp_emal_41545__uprf_26878;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_484 >= 0) { { SACp_emal_41542__uprf_26860 = SACp_eat_484; }; SACp_emal_41542__uprf_26860 = 1; } else { SACp_emal_41542__uprf_26860 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Non-negativity constraint violated " "for scalar " "SACp_eat_484"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_484 < SACp_emal_41545__uprf_26878) { SACp_emal_41541__uprf_26854 = 1; } else { SACp_emal_41541__uprf_26854 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Scalar constraint `" "SACp_eat_484" " (" "%d" ") < " "SACp_emal_41545__uprf_26878" " (" "%d" ")" "' violated", SACp_eat_484, SACp_emal_41545__uprf_26878); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_484 >= 0) { { SACp_emal_41540__uprf_26845 = SACp_eat_484; }; SACp_emal_41540__uprf_26845 = 1; } else { SACp_emal_41540__uprf_26845 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Non-negativity constraint violated " "for scalar " "SACp_eat_484"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_484 < SACp_emal_41544__uprf_26837) { SACp_emal_41539__uprf_26839 = 1; } else { SACp_emal_41539__uprf_26839 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Scalar constraint `" "SACp_eat_484" " (" "%d" ") < " "SACp_emal_41544__uprf_26837" " (" "%d" ")" "' violated", SACp_eat_484, SACp_emal_41544__uprf_26837); }
      { { if (!((1 == SACp_emal_41538__idc_6072__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41538__idc_6072"); }; { { if ((((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072)) + ((6 + (SACp_emal_41538__idc_6072__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072)) + ((6 + (SACp_emal_41538__idc_6072__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072)) + ((6 + (SACp_emal_41538__idc_6072__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41538__idc_6072 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41538__idc_6072 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072)) + ((6 + (SACp_emal_41538__idc_6072__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41538__idc_6072 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41538__idc_6072 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072)) + ((6 + (SACp_emal_41538__idc_6072__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072)) + ((6 + (SACp_emal_41538__idc_6072__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072)) + ((6 + (SACp_emal_41538__idc_6072__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072)) + ((6 + (SACp_emal_41538__idc_6072__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072)) + ((6 + (SACp_emal_41538__idc_6072__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41538__idc_6072 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41538__idc_6072 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41538__idc_6072 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41538__idc_6072 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41538__idc_6072__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41538__idc_6072, SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072), ((6 + (SACp_emal_41538__idc_6072__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41538__idc_6072__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41538__idc_6072__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41538__idc_6072__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_41538__idc_6072__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
      if (!((SACp_emal_41538__idc_6072__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7223, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_41538__idc_6072[0] = SACp_eat_484; }

      if (!SACp_emal_41541__uprf_26854) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_41542__uprf_26860) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_41537__ivesli_39764 = ( SACp_emal_41538__idc_6072[0]);

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_41536__icc_6045 = ( SACl_B[SACp_emal_41537__ivesli_39764]); }

      { ; ; }
      if (!SACp_emal_41541__uprf_26854) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_41542__uprf_26860) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7264, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      if (!SACp_emal_41539__uprf_26839) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_41540__uprf_26845) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_41535__ivesli_39763 = ( SACp_emal_41538__idc_6072[0]);

      { { { if (((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41538__idc_6072, ((((SAC_HM_header_t *)SACp_emal_41538__idc_6072) - 1)->data1.arena)); } else { if (SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41538__idc_6072) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41538__idc_6072, ((((SAC_HM_header_t *)SACp_emal_41538__idc_6072) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41538__idc_6072, ((((SAC_HM_header_t *)SACp_emal_41538__idc_6072) - 1)->data1.arena)); } } else { if (((((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41538__idc_6072, ((((SAC_HM_header_t *)SACp_emal_41538__idc_6072) - 1)->data1.arena)); } else { if (((((SACp_emal_41538__idc_6072__sz * sizeof (*SACp_emal_41538__idc_6072))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41538__idc_6072) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41538__idc_6072, ((((SAC_HM_header_t *)SACp_emal_41538__idc_6072) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41538__idc_6072, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41538__idc_6072); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41538__idc_6072); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41538__idc_6072, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41538__idc_6072); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41538__idc_6072); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41538__idc_6072__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_41534__icc_6051 = ( SACl_A[SACp_emal_41535__ivesli_39763]); }

      { ; ; }
      if (!SACp_emal_41539__uprf_26839) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_41540__uprf_26845) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7246, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      ; ; { SACp_emal_41534__icc_6051 = (SACp_emal_41534__icc_6051) - (SACp_emal_41536__icc_6045); };
      { ; ; }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 7235, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_41532__flat_3875 = (SACp_emal_41534__icc_6051) == (0); };
      { ; ; }



      if (!((0 == (SACp_emal_41531__icc_6057__dim - SACl_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41531__icc_6057_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_41531__icc_6057[SACp_wlidx_39686__icc_6057] = SACp_emal_41532__flat_3875; };

      { ; ; }
      SACp_wlidx_39686__icc_6057 = SACp_wlidx_39686__icc_6057 + 1;
      SACp_eat_484 = SACp_eat_484 + 1;
      } }
# 11434 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42035_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { { if (((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B, ((((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B) - 1)->data1.arena)); } else { if (SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B, ((((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B, ((((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B) - 1)->data1.arena)); } } else { if (((((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B, ((((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B) - 1)->data1.arena)); } else { if (((((SACp_emal_41549__isaa_33007_B__sz * sizeof (*SACp_emal_41549__isaa_33007_B))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B, ((((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41549__isaa_33007_B); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41549__isaa_33007_B__desc) & (-1 ^ (3))))); } } }
    { { { if (((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A, ((((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A) - 1)->data1.arena)); } else { if (SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A, ((((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A, ((((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A) - 1)->data1.arena)); } } else { if (((((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A, ((((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A) - 1)->data1.arena)); } else { if (((((SACp_emal_41548__isaa_33010_A__sz * sizeof (*SACp_emal_41548__isaa_33010_A))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A, ((((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41548__isaa_33010_A); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41548__isaa_33010_A__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_B); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_B__desc) & (-1 ^ (3))))); } } } } else { } }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_A); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))); } } } } else { } }



    { *SAC_arg_1__p = SACp_emal_41531__icc_6057; *SAC_arg_1__desc__p = SACp_emal_41531__icc_6057__desc; }
    return;
   
  }



}
}
# 11468 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN_CLArray___EQ_EQ__i_X__i (
# 11468 "/home/rubenhensen/sac/a.out.c" 3 4
_Bool 
# 11468 "/home/rubenhensen/sac/a.out.c"
* * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_A, SAC_array_descriptor_t SACl_A__desc, int SACl_B) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
    const int SACp_emal_41562__isaa_33070_B = 0;



    int * SACp_emal_41561__isaa_33074_A;
    SAC_array_descriptor_t SACp_emal_41561__isaa_33074_A__desc = 
# 11479 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11479 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41561__isaa_33074_A__shp0 = 1;
    const int SACp_emal_41561__isaa_33074_A__sz = 1;
    const int SACp_emal_41561__isaa_33074_A__dim = 1;




    
# 11487 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11487 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41560__uprf_27008;
   
   




    int SACp_emal_41559__uprf_27010;
   
   




    
# 11501 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11501 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41557__uprf_26992;
   
   




    
# 11508 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11508 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41556__uprf_26986;
   
   




    int * SACp_emal_41555__idc_6481;
    SAC_array_descriptor_t SACp_emal_41555__idc_6481__desc = 
# 11516 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11516 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41555__idc_6481__shp0 = 1;
    const int SACp_emal_41555__idc_6481__sz = 1;
    const int SACp_emal_41555__idc_6481__dim = 1;




    int SACp_emal_41554__ivesli_39765;
   
   




    int SACp_emal_41553__icc_6463;
   
   




    
# 11538 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11538 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41551__flat_3965;
   
   




    
# 11545 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11545 "/home/rubenhensen/sac/a.out.c"
   * SACp_emal_41550__icc_6469;
    SAC_array_descriptor_t SACp_emal_41550__icc_6469__desc = 
# 11546 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11546 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_41550__icc_6469__shp0;
    int SACp_emal_41550__icc_6469__sz;
    const int SACp_emal_41550__icc_6469__dim = 1;




    int SACp_wlidx_39687__icc_6469;
   
   




    int SACp_eat_492;
   
   




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 11569 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11569 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACl_iv__shp0 = 1;
    const int SACl_iv__sz = 1;
    const int SACl_iv__dim = 1;





   




    int SACl_A__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_A__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[4]);
    const int SACl_A__dim = 1;

   
    { { if (!((1 == SACp_emal_41561__isaa_33074_A__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41561__isaa_33074_A"); }; { { if ((((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A)) + ((6 + (SACp_emal_41561__isaa_33074_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A)) + ((6 + (SACp_emal_41561__isaa_33074_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A)) + ((6 + (SACp_emal_41561__isaa_33074_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41561__isaa_33074_A = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41561__isaa_33074_A = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A)) + ((6 + (SACp_emal_41561__isaa_33074_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41561__isaa_33074_A = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41561__isaa_33074_A = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A)) + ((6 + (SACp_emal_41561__isaa_33074_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A)) + ((6 + (SACp_emal_41561__isaa_33074_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A)) + ((6 + (SACp_emal_41561__isaa_33074_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A)) + ((6 + (SACp_emal_41561__isaa_33074_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A)) + ((6 + (SACp_emal_41561__isaa_33074_A__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41561__isaa_33074_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41561__isaa_33074_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41561__isaa_33074_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41561__isaa_33074_A = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41561__isaa_33074_A__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A, SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A), ((6 + (SACp_emal_41561__isaa_33074_A__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41561__isaa_33074_A__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41561__isaa_33074_A__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41561__isaa_33074_A__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41561__isaa_33074_A__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9523, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41561__isaa_33074_A__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9523, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_41561__isaa_33074_A[0] = SACl_A__shp0; };

    { { SACp_emal_41560__uprf_27008 = 
# 11603 "/home/rubenhensen/sac/a.out.c" 3 4
   1
# 11603 "/home/rubenhensen/sac/a.out.c"
   ; }; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9597, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41559__uprf_27010 = ( SACp_emal_41561__isaa_33074_A[SACp_emal_41562__isaa_33070_B]); }

    { ; ; }
    { { if (!((1 == SACp_emal_41550__icc_6469__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41550__icc_6469"); }; { if ((((6 + (SACp_emal_41550__icc_6469__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41550__icc_6469__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41550__icc_6469__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41550__icc_6469__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41550__icc_6469__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_41550__icc_6469__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41550__icc_6469__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41550__icc_6469__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_41550__icc_6469__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_41550__icc_6469__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_41550__icc_6469__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_41550__icc_6469__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_41550__icc_6469__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41550__icc_6469__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41550__icc_6469__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41550__icc_6469__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41550__icc_6469__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41550__icc_6469__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41550__icc_6469__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41550__icc_6469__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41550__icc_6469__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9582, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_41550__icc_6469__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41550__icc_6469__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_41559__uprf_27010;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41550__icc_6469__desc) & (-1 ^ (3))))[4]) = SACp_emal_41550__icc_6469__sz = SAC_size;
      if (!((SACp_emal_41550__icc_6469__sz >= 0))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9582, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 11627 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 11627 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11627 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 11627 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 11627 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 11627 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 11627 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 11627, __extension__ __PRETTY_FUNCTION__); }))
# 11627 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_41550__icc_6469 = (
# 11627 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11627 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_st (SACp_emal_41550__icc_6469__sz * sizeof (*SACp_emal_41550__icc_6469)); break; case SAC_HM_multi_threaded: SACp_emal_41550__icc_6469 = (
# 11627 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11627 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_mt (SACp_emal_41550__icc_6469__sz * sizeof (*SACp_emal_41550__icc_6469), 0); break; case SAC_HM_any_threaded: SACp_emal_41550__icc_6469 = (
# 11627 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11627 "/home/rubenhensen/sac/a.out.c"
   *)SAC_HM_MallocAnyChunk_at (SACp_emal_41550__icc_6469__sz * sizeof (*SACp_emal_41550__icc_6469), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41550__icc_6469__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41550__icc_6469__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41550__icc_6469__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9582, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9582, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;




      int SAC_SACp_emal_41550__icc_6469_shpfac0;




      {
        int SAC_i;
        SAC_SACp_emal_41550__icc_6469_shpfac0 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_41559__uprf_27010;




      SACp_wlidx_39687__icc_6469
        = SAC_schedule_start0 * SAC_SACp_emal_41550__icc_6469_shpfac0;

      { int SAC_stop_SACp_eat_492 = SACp_emal_41559__uprf_27010; for (SACp_eat_492 = 0; SACp_eat_492 < SACp_emal_41559__uprf_27010;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_492 >= 0) { { SACp_emal_41557__uprf_26992 = SACp_eat_492; }; SACp_emal_41557__uprf_26992 = 1; } else { SACp_emal_41557__uprf_26992 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Non-negativity constraint violated " "for scalar " "SACp_eat_492"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Assignment with incompatible types found"); };
      ;

      }
      if (SACp_eat_492 < SACp_emal_41559__uprf_27010) { SACp_emal_41556__uprf_26986 = 1; } else { SACp_emal_41556__uprf_26986 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Scalar constraint `" "SACp_eat_492" " (" "%d" ") < " "SACp_emal_41559__uprf_27010" " (" "%d" ")" "' violated", SACp_eat_492, SACp_emal_41559__uprf_27010); }
      { { if (!((1 == SACp_emal_41555__idc_6481__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41555__idc_6481"); }; { { if ((((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481)) + ((6 + (SACp_emal_41555__idc_6481__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481)) + ((6 + (SACp_emal_41555__idc_6481__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481)) + ((6 + (SACp_emal_41555__idc_6481__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41555__idc_6481 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41555__idc_6481 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481)) + ((6 + (SACp_emal_41555__idc_6481__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41555__idc_6481 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41555__idc_6481 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481)) + ((6 + (SACp_emal_41555__idc_6481__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481)) + ((6 + (SACp_emal_41555__idc_6481__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481)) + ((6 + (SACp_emal_41555__idc_6481__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481)) + ((6 + (SACp_emal_41555__idc_6481__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481)) + ((6 + (SACp_emal_41555__idc_6481__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41555__idc_6481 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41555__idc_6481 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41555__idc_6481 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41555__idc_6481 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41555__idc_6481__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41555__idc_6481, SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481), ((6 + (SACp_emal_41555__idc_6481__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41555__idc_6481__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41555__idc_6481__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41555__idc_6481__desc) & (-1 ^ (3))))[1]) = 0; }



      if (!((SACp_emal_41555__idc_6481__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9602, "Assignment with incompatible types found"); };
      if (!((SACp_emal_41555__idc_6481__shp0 == 1))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9602, "Assignment with incompatible types found"); };
      ;

      }



      { SACp_emal_41555__idc_6481[0] = SACp_eat_492; }

      if (!SACp_emal_41556__uprf_26986) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_41557__uprf_26992) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Primitive function _sel_VxA_ guard failed"); }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Assignment with incompatible types found"); };
      ;

      }



      SACp_emal_41554__ivesli_39765 = ( SACp_emal_41555__idc_6481[0]);

      { { { if (((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41555__idc_6481, ((((SAC_HM_header_t *)SACp_emal_41555__idc_6481) - 1)->data1.arena)); } else { if (SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41555__idc_6481) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41555__idc_6481, ((((SAC_HM_header_t *)SACp_emal_41555__idc_6481) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41555__idc_6481, ((((SAC_HM_header_t *)SACp_emal_41555__idc_6481) - 1)->data1.arena)); } } else { if (((((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41555__idc_6481, ((((SAC_HM_header_t *)SACp_emal_41555__idc_6481) - 1)->data1.arena)); } else { if (((((SACp_emal_41555__idc_6481__sz * sizeof (*SACp_emal_41555__idc_6481))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41555__idc_6481) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41555__idc_6481, ((((SAC_HM_header_t *)SACp_emal_41555__idc_6481) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41555__idc_6481, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41555__idc_6481); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41555__idc_6481); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41555__idc_6481, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41555__idc_6481); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41555__idc_6481); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41555__idc_6481__desc) & (-1 ^ (3))))); } } }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Assignment with incompatible types found"); };
      ;

      }



     
      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "1st argument of _idx_sel_ is not a scalar!"); };
      { SACp_emal_41553__icc_6463 = ( SACl_A[SACp_emal_41554__ivesli_39765]); }

      { ; ; }
      if (!SACp_emal_41556__uprf_26986) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Primitive function _sel_VxA_ guard failed"); }
      if (!SACp_emal_41557__uprf_26992) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9625, "Primitive function _sel_VxA_ guard failed"); }
      { ; ; }
      { ; ; }
      ; ; { SACp_emal_41553__icc_6463 = (SACp_emal_41553__icc_6463) - (SACl_B); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 194, 9614, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_41551__flat_3965 = (SACp_emal_41553__icc_6463) == (0); };
      { ; ; }



      if (!((0 == (SACp_emal_41550__icc_6469__dim - SACl_iv__sz)))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41550__icc_6469_shpfac0))) { SAC_RuntimeWarningLoc ("ArrayArith.sac", 1, 1, "WL expression with illegal size found!"); };
      { SACp_emal_41550__icc_6469[SACp_wlidx_39687__icc_6469] = SACp_emal_41551__flat_3965; };

      { ; ; }
      SACp_wlidx_39687__icc_6469 = SACp_wlidx_39687__icc_6469 + 1;
      SACp_eat_492 = SACp_eat_492 + 1;
      } }
# 11777 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42036_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { { { if (((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A, ((((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A) - 1)->data1.arena)); } else { if (SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A, ((((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A, ((((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A) - 1)->data1.arena)); } } else { if (((((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A, ((((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A) - 1)->data1.arena)); } else { if (((((SACp_emal_41561__isaa_33074_A__sz * sizeof (*SACp_emal_41561__isaa_33074_A))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A, ((((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41561__isaa_33074_A); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41561__isaa_33074_A__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    ;
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_A); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_A__desc) & (-1 ^ (3))))); } } } } else { } }



    { *SAC_arg_1__p = SACp_emal_41550__icc_6469; *SAC_arg_1__desc__p = SACp_emal_41550__icc_6469__desc; }
    return;
   
  }



}
}
# 11809 "/home/rubenhensen/sac/a.out.c"
void SACf__MAIN___rtpf_13_impl_block__i_X_X__i_2 (int * * SAC_arg_1__p, SAC_array_descriptor_t * SAC_arg_1__desc__p, int * SACl_a, SAC_array_descriptor_t SACl_a__desc, int * SACl_s, SAC_array_descriptor_t SACl_s__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {
    const int SACp_emal_41680__isaa_33121_s = 1;



    int * SACp_emal_41679__isaa_33125_a;
    SAC_array_descriptor_t SACp_emal_41679__isaa_33125_a__desc = 
# 11820 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11820 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41679__isaa_33125_a__shp0 = 2;
    const int SACp_emal_41679__isaa_33125_a__sz = 2;
    const int SACp_emal_41679__isaa_33125_a__dim = 1;




    int SACp_emal_41678__ivesplit_33177;
   
   




    int SACp_emal_41677__uprf_28111;
   
   




    
# 11842 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11842 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41676__uprf_28113;
   
   




    int SACp_emal_41675__uprf_28116;
   
   




    
# 11856 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11856 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41674__uprf_28118;
   
   




    
# 11863 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11863 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41672__uprf_28102;
   
   




    
# 11870 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11870 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41671__uprf_28107;
   
   




    
# 11877 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11877 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41669__uprf_28091;
   
   




    
# 11884 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11884 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41668__uprf_28096;
   
   




    
# 11891 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11891 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41666__uprf_28080;
   
   




    
# 11898 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11898 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41665__uprf_28085;
   
   




    int * SACp_emal_41663__idc_6617;
    SAC_array_descriptor_t SACp_emal_41663__idc_6617__desc = 
# 11906 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11906 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41663__idc_6617__shp0 = 2;
    const int SACp_emal_41663__idc_6617__sz = 2;
    const int SACp_emal_41663__idc_6617__dim = 1;




    int SACp_emal_41662__pinl_18160__icc_6345;
   
   




    int SACp_emal_41661__pinl_18170__flat_1771;
   
   




    int SACp_emal_41660__pinl_18160__icc_6345__SSA5_1;
   
   




    int SACp_emal_41659__pinl_18170__flat_1771__SSA5_2;
   
   




    
# 11942 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11942 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41658__uprf_28039;
   
   




    
# 11949 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11949 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41657__uprf_28044;
   
   




    
# 11956 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11956 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41655__uprf_28028;
   
   




    
# 11963 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11963 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41654__uprf_28033;
   
   




    int * SACp_emal_41652__idc_6625;
    SAC_array_descriptor_t SACp_emal_41652__idc_6625__desc = 
# 11971 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 11971 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41652__idc_6625__shp0 = 2;
    const int SACp_emal_41652__idc_6625__sz = 2;
    const int SACp_emal_41652__idc_6625__dim = 1;




    
# 11979 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11979 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41651__uprf_28015;
   
   




    int SACp_emal_41650__uprf_28014;
   
   




    
# 11993 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 11993 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41649__uprf_28022;
   
   




    int SACp_emal_41648__uprf_28021;
   
   




    
# 12007 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12007 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41646__uprf_28002;
   
   




    
# 12014 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12014 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41645__uprf_28007;
   
   




    
# 12021 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12021 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41643__uprf_27989;
   
   




    
# 12028 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12028 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41642__uprf_27996;
   
   




    int * SACp_emal_41640__idc_6633;
    SAC_array_descriptor_t SACp_emal_41640__idc_6633__desc = 
# 12036 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12036 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41640__idc_6633__shp0 = 2;
    const int SACp_emal_41640__idc_6633__sz = 2;
    const int SACp_emal_41640__idc_6633__dim = 1;




    
# 12044 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12044 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41639__uprf_27974;
   
   




    int SACp_emal_41638__uprf_27973;
   
   




    
# 12058 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12058 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41637__uprf_27981;
   
   




    int SACp_emal_41636__uprf_27980;
   
   




    int * SACp_emal_41634__idc_6637;
    SAC_array_descriptor_t SACp_emal_41634__idc_6637__desc = 
# 12073 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12073 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41634__idc_6637__shp0 = 2;
    const int SACp_emal_41634__idc_6637__sz = 2;
    const int SACp_emal_41634__idc_6637__dim = 1;




    int SACp_emal_41632__pinl_27029__icc_5146;
   
   




    int SACp_emal_41631__pinl_27112__icc_5146;
   
   




    int * SACp_emal_41630__wlbsc_7896_sc_bound;
    SAC_array_descriptor_t SACp_emal_41630__wlbsc_7896_sc_bound__desc = 
# 12096 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12096 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41630__wlbsc_7896_sc_bound__shp0 = 2;
    const int SACp_emal_41630__wlbsc_7896_sc_bound__sz = 2;
    const int SACp_emal_41630__wlbsc_7896_sc_bound__dim = 1;




    
# 12104 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12104 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41629__uprf_27847;
   
   




    int SACp_emal_41628__uprf_27846;
   
   




    
# 12118 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12118 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41627__uprf_27854;
   
   




    int SACp_emal_41626__uprf_27853;
   
   




    int * SACp_emal_41624__idc_6659;
    SAC_array_descriptor_t SACp_emal_41624__idc_6659__desc = 
# 12133 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12133 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41624__idc_6659__shp0 = 2;
    const int SACp_emal_41624__idc_6659__sz = 2;
    const int SACp_emal_41624__idc_6659__dim = 1;




    int SACp_emal_41623__pinl_27192__icc_5140;
   
   




    int SACp_emal_41622__pinl_27195__icc_5146;
   
   




    int SACp_emal_41621__pinl_27215_res;
   
   




    int * SACp_emal_41620__emec_40303__icc_6567;
    SAC_array_descriptor_t SACp_emal_41620__emec_40303__icc_6567__desc = 
# 12163 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12163 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41620__emec_40303__icc_6567__shp0 = 2;
    const int SACp_emal_41620__emec_40303__icc_6567__sz = 2;
    const int SACp_emal_41620__emec_40303__icc_6567__dim = 1;




    int * SACp_emal_41618__emec_40302__icc_6567;
    SAC_array_descriptor_t SACp_emal_41618__emec_40302__icc_6567__desc = 
# 12172 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12172 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41618__emec_40302__icc_6567__shp0 = 2;
    const int SACp_emal_41618__emec_40302__icc_6567__sz = 2;
    const int SACp_emal_41618__emec_40302__icc_6567__dim = 1;




    int SACp_emal_41616__pinl_27275__icc_5140;
   
   




    int SACp_emal_41615__pinl_27278__icc_5146;
   
   




    int SACp_emal_41614__pinl_27298_res;
   
   




    int SACp_emal_41613__wlbsc_7818_sc_e;
   
   




    int SACp_emal_41612__wlbsc_7808_sc_e;
   
   




    int * SACp_emal_41609__icc_6570;
    SAC_array_descriptor_t SACp_emal_41609__icc_6570__desc = 
# 12216 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12216 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_41609__icc_6570__shp0;
    int SACp_emal_41609__icc_6570__shp1;
    int SACp_emal_41609__icc_6570__sz;
    const int SACp_emal_41609__icc_6570__dim = 2;




    int SACp_emal_41608__pinl_27358__icc_5140;
   
   




    int SACp_emal_41607__pinl_27361__icc_5146;
   
   




    int SACp_emal_41606__pinl_27381_res;
   
   




    int * SACp_emal_41605__emec_40301__icc_6604;
    SAC_array_descriptor_t SACp_emal_41605__emec_40301__icc_6604__desc = 
# 12247 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12247 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41605__emec_40301__icc_6604__shp0 = 2;
    const int SACp_emal_41605__emec_40301__icc_6604__sz = 2;
    const int SACp_emal_41605__emec_40301__icc_6604__dim = 1;




    int * SACp_emal_41603__emec_40300__icc_6604;
    SAC_array_descriptor_t SACp_emal_41603__emec_40300__icc_6604__desc = 
# 12256 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12256 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41603__emec_40300__icc_6604__shp0 = 2;
    const int SACp_emal_41603__emec_40300__icc_6604__sz = 2;
    const int SACp_emal_41603__emec_40300__icc_6604__dim = 1;




    int SACp_emal_41601__pinl_27441__icc_5140;
   
   




    int SACp_emal_41600__pinl_27444__icc_5146;
   
   




    int SACp_emal_41599__pinl_27464_res;
   
   




    int SACp_emal_41598__wlbsc_7768_sc_e;
   
   




    int SACp_emal_41597__wlbsc_7758_sc_e;
   
   




    int SACp_emal_41596__icc_6599;
   
   




    int SACp_emal_41595__pinl_27524__icc_5140;
   
   




    int SACp_emal_41594__pinl_27527__icc_5146;
   
   




    int SACp_emal_41593__pinl_27547_res;
   
   




    int * SACp_emal_41592__emec_40299__icc_6600;
    SAC_array_descriptor_t SACp_emal_41592__emec_40299__icc_6600__desc = 
# 12328 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12328 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41592__emec_40299__icc_6600__shp0 = 2;
    const int SACp_emal_41592__emec_40299__icc_6600__sz = 2;
    const int SACp_emal_41592__emec_40299__icc_6600__dim = 1;




    int * SACp_emal_41590__emec_40298__icc_6600;
    SAC_array_descriptor_t SACp_emal_41590__emec_40298__icc_6600__desc = 
# 12337 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12337 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41590__emec_40298__icc_6600__shp0 = 2;
    const int SACp_emal_41590__emec_40298__icc_6600__sz = 2;
    const int SACp_emal_41590__emec_40298__icc_6600__dim = 1;




    int SACp_emal_41588__pinl_27607__icc_5140;
   
   




    int SACp_emal_41587__pinl_27610__icc_5146;
   
   




    int SACp_emal_41586__pinl_27630_res;
   
   




    int SACp_emal_41585__wlbsc_7718_sc_e;
   
   




    int SACp_emal_41584__wlbsc_7708_sc_e;
   
   




    int SACp_emal_41579__pinl_18492__flat_1763;
   
   




    int SACp_emal_41578__pinl_18492__flat_1763__SSA5_2;
   
   




    int SACp_emal_41575__pinl_18653__flat_1747;
   
   




    int SACp_emal_41574__pinl_18653__flat_1747__SSA5_2;
   
   




    
# 12408 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12408 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41573__uprf_27771;
   
   




    
# 12415 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12415 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41572__uprf_27776;
   
   




    
# 12422 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12422 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41570__uprf_27758;
   
   




    
# 12429 "/home/rubenhensen/sac/a.out.c" 3 4
   _Bool 
# 12429 "/home/rubenhensen/sac/a.out.c"
   SACp_emal_41569__uprf_27765;
   
   




    int * SACp_emal_41567__pinl_18738__idc_6240;
    SAC_array_descriptor_t SACp_emal_41567__pinl_18738__idc_6240__desc = 
# 12437 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12437 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_emal_41567__pinl_18738__idc_6240__shp0 = 2;
    const int SACp_emal_41567__pinl_18738__idc_6240__sz = 2;
    const int SACp_emal_41567__pinl_18738__idc_6240__dim = 1;




    int SACp_emal_41566__ivesli_39766;
   
   




    int SACp_emal_41565__pinl_18696__icc_6219;
   
   




    int * SACp_emal_41564__icc_6603;
    SAC_array_descriptor_t SACp_emal_41564__icc_6603__desc = 
# 12460 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12460 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_41564__icc_6603__shp0;
    int SACp_emal_41564__icc_6603__shp1;
    int SACp_emal_41564__icc_6603__sz;
    const int SACp_emal_41564__icc_6603__dim = 2;




    int * SACp_emal_41563__icc_6607;
    SAC_array_descriptor_t SACp_emal_41563__icc_6607__desc = 
# 12470 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12470 "/home/rubenhensen/sac/a.out.c"
   ;
    int SACp_emal_41563__icc_6607__shp0;
    int SACp_emal_41563__icc_6607__shp1;
    int SACp_emal_41563__icc_6607__shp2;
    int SACp_emal_41563__icc_6607__shp3;
    int SACp_emal_41563__icc_6607__sz;
    const int SACp_emal_41563__icc_6607__dim = 4;




    int SACp_wlidx_39690__icc_6603;
   
   




    int SACp_wlidx_39689__icc_6607;
   
   




    int SACp_wlidx_39688__icc_6570;
   
   




    int SACp_eat_501;
   
   




    int SACp_eat_500;
   
   




    int SACp_eat_499;
   
   




    int SACp_eat_498;
   
   




    int SACp_eat_497;
   
   




    int SACp_eat_496;
   
   




    int * SACl_jv__SSA0_1;
    SAC_array_descriptor_t SACl_jv__SSA0_1__desc = 
# 12545 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12545 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACl_jv__SSA0_1__shp0 = 2;
    const int SACl_jv__SSA0_1__sz = 2;
    const int SACl_jv__SSA0_1__dim = 1;




    int * SACl_iv;
    SAC_array_descriptor_t SACl_iv__desc = 
# 12554 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12554 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACl_iv__shp0 = 2;
    const int SACl_iv__sz = 2;
    const int SACl_iv__dim = 1;




    int * SACp_hse_36;
    SAC_array_descriptor_t SACp_hse_36__desc = 
# 12563 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 12563 "/home/rubenhensen/sac/a.out.c"
   ;
    const int SACp_hse_36__shp0 = 2;
    const int SACp_hse_36__sz = 2;
    const int SACp_hse_36__dim = 1;





    const int SACl_s__shp0 = 2;
    const int SACl_s__sz = 2;
    const int SACl_s__dim = 1;




    int SACl_a__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_a__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[(6 + (1))]);
    int SACl_a__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[4]);
    const int SACl_a__dim = 2;

   
    { { if (!((1 == SACp_emal_41679__isaa_33125_a__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41679__isaa_33125_a"); }; { { if ((((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a)) + ((6 + (SACp_emal_41679__isaa_33125_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a)) + ((6 + (SACp_emal_41679__isaa_33125_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a)) + ((6 + (SACp_emal_41679__isaa_33125_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41679__isaa_33125_a = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41679__isaa_33125_a = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a)) + ((6 + (SACp_emal_41679__isaa_33125_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41679__isaa_33125_a = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41679__isaa_33125_a = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a)) + ((6 + (SACp_emal_41679__isaa_33125_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a)) + ((6 + (SACp_emal_41679__isaa_33125_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a)) + ((6 + (SACp_emal_41679__isaa_33125_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a)) + ((6 + (SACp_emal_41679__isaa_33125_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a)) + ((6 + (SACp_emal_41679__isaa_33125_a__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41679__isaa_33125_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41679__isaa_33125_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41679__isaa_33125_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41679__isaa_33125_a = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41679__isaa_33125_a__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a, SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a), ((6 + (SACp_emal_41679__isaa_33125_a__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41679__isaa_33125_a__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41679__isaa_33125_a__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41679__isaa_33125_a__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41679__isaa_33125_a__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41679__isaa_33125_a__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 1, "Assignment with incompatible types found"); };
    ;

    }



   
    { SACp_emal_41679__isaa_33125_a[0] = SACl_a__shp0; };
    { SACp_emal_41679__isaa_33125_a[1] = SACl_a__shp1; };

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_41678__ivesplit_33177 = 0; }; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41677__uprf_28111 = ( SACl_s[SACp_emal_41678__ivesplit_33177]); }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41677__uprf_28111 >= 0) { { SACp_emal_41676__uprf_28113 = SACp_emal_41677__uprf_28111; }; SACp_emal_41676__uprf_28113 = 1; } else { SACp_emal_41676__uprf_28113 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Non-negativity constraint violated " "for scalar " "SACp_emal_41677__uprf_28111"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41675__uprf_28116 = ( SACl_s[SACp_emal_41680__isaa_33121_s]); }

    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_s__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { { if (((SACl_s__sz * sizeof (*SACl_s)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { if (SACl_s__sz * sizeof (*SACl_s) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } } else { if (((((SACl_s__sz * sizeof (*SACl_s))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { if (((((SACl_s__sz * sizeof (*SACl_s))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, ((((SAC_HM_header_t *)SACl_s) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_s); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_s); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACl_s, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACl_s); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACl_s); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_s__desc) & (-1 ^ (3))))); } } } } else { } }
    if (SACp_emal_41675__uprf_28116 >= 0) { { SACp_emal_41674__uprf_28118 = SACp_emal_41675__uprf_28116; }; SACp_emal_41674__uprf_28118 = 1; } else { SACp_emal_41674__uprf_28118 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Non-negativity constraint violated " "for scalar " "SACp_emal_41675__uprf_28116"); }
    ; ; { SACp_emal_41676__uprf_28113 = (SACp_emal_41676__uprf_28113) & (SACp_emal_41674__uprf_28118); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41677__uprf_28111 >= 0) { { SACp_emal_41672__uprf_28102 = SACp_emal_41677__uprf_28111; }; SACp_emal_41672__uprf_28102 = 1; } else { SACp_emal_41672__uprf_28102 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_41677__uprf_28111"); }
    if (SACp_emal_41675__uprf_28116 >= 0) { { SACp_emal_41671__uprf_28107 = SACp_emal_41675__uprf_28116; }; SACp_emal_41671__uprf_28107 = 1; } else { SACp_emal_41671__uprf_28107 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_41675__uprf_28116"); }
    ; ; { SACp_emal_41672__uprf_28102 = (SACp_emal_41672__uprf_28102) & (SACp_emal_41671__uprf_28107); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41677__uprf_28111 >= 0) { { SACp_emal_41669__uprf_28091 = SACp_emal_41677__uprf_28111; }; SACp_emal_41669__uprf_28091 = 1; } else { SACp_emal_41669__uprf_28091 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Non-negativity constraint violated " "for scalar " "SACp_emal_41677__uprf_28111"); }
    if (SACp_emal_41675__uprf_28116 >= 0) { { SACp_emal_41668__uprf_28096 = SACp_emal_41675__uprf_28116; }; SACp_emal_41668__uprf_28096 = 1; } else { SACp_emal_41668__uprf_28096 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Non-negativity constraint violated " "for scalar " "SACp_emal_41675__uprf_28116"); }
    ; ; { SACp_emal_41669__uprf_28091 = (SACp_emal_41669__uprf_28091) & (SACp_emal_41668__uprf_28096); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41677__uprf_28111 >= 0) { { SACp_emal_41666__uprf_28080 = SACp_emal_41677__uprf_28111; }; SACp_emal_41666__uprf_28080 = 1; } else { SACp_emal_41666__uprf_28080 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_41677__uprf_28111"); }
    if (SACp_emal_41675__uprf_28116 >= 0) { { SACp_emal_41665__uprf_28085 = SACp_emal_41675__uprf_28116; }; SACp_emal_41665__uprf_28085 = 1; } else { SACp_emal_41665__uprf_28085 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Non-negativity constraint violated " "for scalar " "SACp_emal_41675__uprf_28116"); }
    ; ; { SACp_emal_41666__uprf_28080 = (SACp_emal_41666__uprf_28080) & (SACp_emal_41665__uprf_28085); };
    { ; ; }
    { { if (!((1 == SACp_emal_41663__idc_6617__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41663__idc_6617"); }; { { if ((((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617)) + ((6 + (SACp_emal_41663__idc_6617__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617)) + ((6 + (SACp_emal_41663__idc_6617__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617)) + ((6 + (SACp_emal_41663__idc_6617__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41663__idc_6617 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41663__idc_6617 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617)) + ((6 + (SACp_emal_41663__idc_6617__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41663__idc_6617 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41663__idc_6617 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617)) + ((6 + (SACp_emal_41663__idc_6617__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617)) + ((6 + (SACp_emal_41663__idc_6617__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617)) + ((6 + (SACp_emal_41663__idc_6617__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617)) + ((6 + (SACp_emal_41663__idc_6617__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617)) + ((6 + (SACp_emal_41663__idc_6617__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41663__idc_6617 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41663__idc_6617 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41663__idc_6617 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41663__idc_6617 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41663__idc_6617__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41663__idc_6617, SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617), ((6 + (SACp_emal_41663__idc_6617__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41663__idc_6617__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41663__idc_6617__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41663__idc_6617__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41663__idc_6617__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 57, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41663__idc_6617__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 36, 57, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41663__idc_6617[0] = SACp_emal_41677__uprf_28111; }
    { SACp_emal_41663__idc_6617[1] = SACp_emal_41675__uprf_28116; }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7947, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41662__pinl_18160__icc_6345 = ( SACp_emal_41679__isaa_33125_a[SACp_emal_41678__ivesplit_33177]); }

    ; ; { SACp_emal_41661__pinl_18170__flat_1771 = (SACp_emal_41662__pinl_18160__icc_6345) / (SACp_emal_41677__uprf_28111); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7947, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41660__pinl_18160__icc_6345__SSA5_1 = ( SACp_emal_41679__isaa_33125_a[SACp_emal_41680__isaa_33121_s]); }

    ; ; { SACp_emal_41659__pinl_18170__flat_1771__SSA5_2 = (SACp_emal_41660__pinl_18160__icc_6345__SSA5_1) / (SACp_emal_41675__uprf_28116); };
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 50, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41661__pinl_18170__flat_1771 >= 0) { { SACp_emal_41658__uprf_28039 = SACp_emal_41661__pinl_18170__flat_1771; }; SACp_emal_41658__uprf_28039 = 1; } else { SACp_emal_41658__uprf_28039 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_41661__pinl_18170__flat_1771"); }
    if (SACp_emal_41659__pinl_18170__flat_1771__SSA5_2 >= 0) { { SACp_emal_41657__uprf_28044 = SACp_emal_41659__pinl_18170__flat_1771__SSA5_2; }; SACp_emal_41657__uprf_28044 = 1; } else { SACp_emal_41657__uprf_28044 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 50, "Non-negativity constraint violated " "for scalar " "SACp_emal_41659__pinl_18170__flat_1771__SSA5_2"); }
    ; ; { SACp_emal_41658__uprf_28039 = (SACp_emal_41658__uprf_28039) & (SACp_emal_41657__uprf_28044); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41661__pinl_18170__flat_1771 >= 0) { { SACp_emal_41655__uprf_28028 = SACp_emal_41661__pinl_18170__flat_1771; }; SACp_emal_41655__uprf_28028 = 1; } else { SACp_emal_41655__uprf_28028 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_41661__pinl_18170__flat_1771"); }
    if (SACp_emal_41659__pinl_18170__flat_1771__SSA5_2 >= 0) { { SACp_emal_41654__uprf_28033 = SACp_emal_41659__pinl_18170__flat_1771__SSA5_2; }; SACp_emal_41654__uprf_28033 = 1; } else { SACp_emal_41654__uprf_28033 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Non-negativity constraint violated " "for scalar " "SACp_emal_41659__pinl_18170__flat_1771__SSA5_2"); }
    ; ; { SACp_emal_41655__uprf_28028 = (SACp_emal_41655__uprf_28028) & (SACp_emal_41654__uprf_28033); };
    { ; ; }
    { { if (!((1 == SACp_emal_41652__idc_6625__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41652__idc_6625"); }; { { if ((((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625)) + ((6 + (SACp_emal_41652__idc_6625__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625)) + ((6 + (SACp_emal_41652__idc_6625__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625)) + ((6 + (SACp_emal_41652__idc_6625__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41652__idc_6625 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41652__idc_6625 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625)) + ((6 + (SACp_emal_41652__idc_6625__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41652__idc_6625 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41652__idc_6625 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625)) + ((6 + (SACp_emal_41652__idc_6625__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625)) + ((6 + (SACp_emal_41652__idc_6625__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625)) + ((6 + (SACp_emal_41652__idc_6625__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625)) + ((6 + (SACp_emal_41652__idc_6625__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625)) + ((6 + (SACp_emal_41652__idc_6625__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41652__idc_6625 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41652__idc_6625 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41652__idc_6625 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41652__idc_6625 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41652__idc_6625__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41652__idc_6625, SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625), ((6 + (SACp_emal_41652__idc_6625__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41652__idc_6625__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41652__idc_6625__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41652__idc_6625__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41652__idc_6625__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 38, 5, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41652__idc_6625__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 38, 5, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41652__idc_6625[0] = SACp_emal_41661__pinl_18170__flat_1771; }
    { SACp_emal_41652__idc_6625[1] = SACp_emal_41659__pinl_18170__flat_1771__SSA5_2; }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41678__ivesplit_33177 <= SACp_emal_41677__uprf_28111) { SACp_emal_41651__uprf_28015 = 1; } else { SACp_emal_41651__uprf_28015 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_41678__ivesplit_33177" " (" "%d" ") <= " "SACp_emal_41677__uprf_28111" " (" "%d" ")" "' violated", SACp_emal_41678__ivesplit_33177, SACp_emal_41677__uprf_28111); }
    { { SACp_emal_41650__uprf_28014 = SACp_emal_41678__ivesplit_33177; } }
    if (SACp_emal_41678__ivesplit_33177 <= SACp_emal_41675__uprf_28116) { SACp_emal_41649__uprf_28022 = 1; } else { SACp_emal_41649__uprf_28022 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_41678__ivesplit_33177" " (" "%d" ") <= " "SACp_emal_41675__uprf_28116" " (" "%d" ")" "' violated", SACp_emal_41678__ivesplit_33177, SACp_emal_41675__uprf_28116); }
    { { SACp_emal_41648__uprf_28021 = SACp_emal_41678__ivesplit_33177; } }
    ; ; { SACp_emal_41651__uprf_28015 = (SACp_emal_41651__uprf_28015) & (SACp_emal_41649__uprf_28022); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41650__uprf_28014 >= 0) { { SACp_emal_41646__uprf_28002 = SACp_emal_41650__uprf_28014; }; SACp_emal_41646__uprf_28002 = 1; } else { SACp_emal_41646__uprf_28002 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Non-negativity constraint violated " "for scalar " "SACp_emal_41650__uprf_28014"); }
    if (SACp_emal_41648__uprf_28021 >= 0) { { SACp_emal_41645__uprf_28007 = SACp_emal_41648__uprf_28021; }; SACp_emal_41645__uprf_28007 = 1; } else { SACp_emal_41645__uprf_28007 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 39, "Non-negativity constraint violated " "for scalar " "SACp_emal_41648__uprf_28021"); }
    ; ; { SACp_emal_41646__uprf_28002 = (SACp_emal_41646__uprf_28002) & (SACp_emal_41645__uprf_28007); };
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41650__uprf_28014 <= SACp_emal_41677__uprf_28111) { SACp_emal_41643__uprf_27989 = 1; } else { SACp_emal_41643__uprf_27989 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_41650__uprf_28014" " (" "%d" ") <= " "SACp_emal_41677__uprf_28111" " (" "%d" ")" "' violated", SACp_emal_41650__uprf_28014, SACp_emal_41677__uprf_28111); }
    if (SACp_emal_41648__uprf_28021 <= SACp_emal_41675__uprf_28116) { SACp_emal_41642__uprf_27996 = 1; } else { SACp_emal_41642__uprf_27996 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Scalar constraint `" "SACp_emal_41648__uprf_28021" " (" "%d" ") <= " "SACp_emal_41675__uprf_28116" " (" "%d" ")" "' violated", SACp_emal_41648__uprf_28021, SACp_emal_41675__uprf_28116); }
    ; ; { SACp_emal_41643__uprf_27989 = (SACp_emal_41643__uprf_27989) & (SACp_emal_41642__uprf_27996); };
    { ; ; }
    { { if (!((1 == SACp_emal_41640__idc_6633__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41640__idc_6633"); }; { { if ((((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633)) + ((6 + (SACp_emal_41640__idc_6633__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633)) + ((6 + (SACp_emal_41640__idc_6633__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633)) + ((6 + (SACp_emal_41640__idc_6633__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41640__idc_6633 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41640__idc_6633 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633)) + ((6 + (SACp_emal_41640__idc_6633__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41640__idc_6633 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41640__idc_6633 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633)) + ((6 + (SACp_emal_41640__idc_6633__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633)) + ((6 + (SACp_emal_41640__idc_6633__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633)) + ((6 + (SACp_emal_41640__idc_6633__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633)) + ((6 + (SACp_emal_41640__idc_6633__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633)) + ((6 + (SACp_emal_41640__idc_6633__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41640__idc_6633 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41640__idc_6633 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41640__idc_6633 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41640__idc_6633 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41640__idc_6633__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41640__idc_6633, SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633), ((6 + (SACp_emal_41640__idc_6633__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41640__idc_6633__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41640__idc_6633__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41640__idc_6633__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41640__idc_6633__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 33, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41640__idc_6633__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 33, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41640__idc_6633[0] = SACp_emal_41650__uprf_28014; }
    { SACp_emal_41640__idc_6633[1] = SACp_emal_41648__uprf_28021; }

    { ; ; }
    { ; ; }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41678__ivesplit_33177 <= SACp_emal_41661__pinl_18170__flat_1771) { SACp_emal_41639__uprf_27974 = 1; } else { SACp_emal_41639__uprf_27974 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_41678__ivesplit_33177" " (" "%d" ") <= " "SACp_emal_41661__pinl_18170__flat_1771" " (" "%d" ")" "' violated", SACp_emal_41678__ivesplit_33177, SACp_emal_41661__pinl_18170__flat_1771); }
    { ; ; }
    { { SACp_emal_41638__uprf_27973 = SACp_emal_41678__ivesplit_33177; } }
    if (SACp_emal_41678__ivesplit_33177 <= SACp_emal_41659__pinl_18170__flat_1771__SSA5_2) { SACp_emal_41637__uprf_27981 = 1; } else { SACp_emal_41637__uprf_27981 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_41678__ivesplit_33177" " (" "%d" ") <= " "SACp_emal_41659__pinl_18170__flat_1771__SSA5_2" " (" "%d" ")" "' violated", SACp_emal_41678__ivesplit_33177, SACp_emal_41659__pinl_18170__flat_1771__SSA5_2); }
    { ; ; }
    { { SACp_emal_41636__uprf_27980 = SACp_emal_41678__ivesplit_33177; } }
    ; ; { SACp_emal_41639__uprf_27974 = (SACp_emal_41639__uprf_27974) & (SACp_emal_41637__uprf_27981); };
    { ; ; }
    { { if (!((1 == SACp_emal_41634__idc_6637__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41634__idc_6637"); }; { { if ((((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637)) + ((6 + (SACp_emal_41634__idc_6637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637)) + ((6 + (SACp_emal_41634__idc_6637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637)) + ((6 + (SACp_emal_41634__idc_6637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41634__idc_6637 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41634__idc_6637 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637)) + ((6 + (SACp_emal_41634__idc_6637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41634__idc_6637 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41634__idc_6637 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637)) + ((6 + (SACp_emal_41634__idc_6637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637)) + ((6 + (SACp_emal_41634__idc_6637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637)) + ((6 + (SACp_emal_41634__idc_6637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637)) + ((6 + (SACp_emal_41634__idc_6637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637)) + ((6 + (SACp_emal_41634__idc_6637__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41634__idc_6637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41634__idc_6637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41634__idc_6637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41634__idc_6637 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41634__idc_6637__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41634__idc_6637, SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637), ((6 + (SACp_emal_41634__idc_6637__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41634__idc_6637__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41634__idc_6637__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41634__idc_6637__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41634__idc_6637__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 28, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41634__idc_6637__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 28, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41634__idc_6637[0] = SACp_emal_41638__uprf_27973; }
    { SACp_emal_41634__idc_6637[1] = SACp_emal_41636__uprf_27980; }

    { ; ; }
    { ; ; }
    if (!SACp_emal_41672__uprf_28102) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_41651__uprf_28015) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_41676__uprf_28113) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41632__pinl_27029__icc_5146 = ( SACp_emal_41663__idc_6617[SACp_emal_41678__ivesplit_33177]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41631__pinl_27112__icc_5146 = ( SACp_emal_41663__idc_6617[SACp_emal_41680__isaa_33121_s]); }

    { { if (!((1 == SACp_emal_41630__wlbsc_7896_sc_bound__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41630__wlbsc_7896_sc_bound"); }; { { if ((((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound)) + ((6 + (SACp_emal_41630__wlbsc_7896_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound)) + ((6 + (SACp_emal_41630__wlbsc_7896_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound)) + ((6 + (SACp_emal_41630__wlbsc_7896_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41630__wlbsc_7896_sc_bound = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41630__wlbsc_7896_sc_bound = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound)) + ((6 + (SACp_emal_41630__wlbsc_7896_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41630__wlbsc_7896_sc_bound = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41630__wlbsc_7896_sc_bound = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound)) + ((6 + (SACp_emal_41630__wlbsc_7896_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound)) + ((6 + (SACp_emal_41630__wlbsc_7896_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound)) + ((6 + (SACp_emal_41630__wlbsc_7896_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound)) + ((6 + (SACp_emal_41630__wlbsc_7896_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound)) + ((6 + (SACp_emal_41630__wlbsc_7896_sc_bound__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41630__wlbsc_7896_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41630__wlbsc_7896_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41630__wlbsc_7896_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41630__wlbsc_7896_sc_bound = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41630__wlbsc_7896_sc_bound__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound, SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound), ((6 + (SACp_emal_41630__wlbsc_7896_sc_bound__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41630__wlbsc_7896_sc_bound__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41630__wlbsc_7896_sc_bound__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41630__wlbsc_7896_sc_bound__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41630__wlbsc_7896_sc_bound__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41630__wlbsc_7896_sc_bound__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41630__wlbsc_7896_sc_bound[0] = SACp_emal_41632__pinl_27029__icc_5146; }
    { SACp_emal_41630__wlbsc_7896_sc_bound[1] = SACp_emal_41631__pinl_27112__icc_5146; }

    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    if (SACp_emal_41678__ivesplit_33177 <= SACp_emal_41632__pinl_27029__icc_5146) { SACp_emal_41629__uprf_27847 = 1; } else { SACp_emal_41629__uprf_27847 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_41678__ivesplit_33177" " (" "%d" ") <= " "SACp_emal_41632__pinl_27029__icc_5146" " (" "%d" ")" "' violated", SACp_emal_41678__ivesplit_33177, SACp_emal_41632__pinl_27029__icc_5146); }
    { ; ; }
    { { SACp_emal_41628__uprf_27846 = SACp_emal_41678__ivesplit_33177; } }
    if (SACp_emal_41678__ivesplit_33177 <= SACp_emal_41631__pinl_27112__icc_5146) { SACp_emal_41627__uprf_27854 = 1; } else { SACp_emal_41627__uprf_27854 = 0; SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Scalar constraint `" "SACp_emal_41678__ivesplit_33177" " (" "%d" ") <= " "SACp_emal_41631__pinl_27112__icc_5146" " (" "%d" ")" "' violated", SACp_emal_41678__ivesplit_33177, SACp_emal_41631__pinl_27112__icc_5146); }
    { ; ; }
    { { SACp_emal_41626__uprf_27853 = SACp_emal_41678__ivesplit_33177; } }
    ; ; { SACp_emal_41629__uprf_27847 = (SACp_emal_41629__uprf_27847) & (SACp_emal_41627__uprf_27854); };
    { ; ; }
    { { if (!((1 == SACp_emal_41624__idc_6659__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41624__idc_6659"); }; { { if ((((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659)) + ((6 + (SACp_emal_41624__idc_6659__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659)) + ((6 + (SACp_emal_41624__idc_6659__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659)) + ((6 + (SACp_emal_41624__idc_6659__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41624__idc_6659 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41624__idc_6659 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659)) + ((6 + (SACp_emal_41624__idc_6659__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41624__idc_6659 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41624__idc_6659 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659)) + ((6 + (SACp_emal_41624__idc_6659__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659)) + ((6 + (SACp_emal_41624__idc_6659__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659)) + ((6 + (SACp_emal_41624__idc_6659__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659)) + ((6 + (SACp_emal_41624__idc_6659__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659)) + ((6 + (SACp_emal_41624__idc_6659__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41624__idc_6659 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41624__idc_6659 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41624__idc_6659 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41624__idc_6659 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41624__idc_6659__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41624__idc_6659, SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659), ((6 + (SACp_emal_41624__idc_6659__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41624__idc_6659__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41624__idc_6659__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41624__idc_6659__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41624__idc_6659__dim == (1)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41624__idc_6659__shp0 == 2))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }



    { SACp_emal_41624__idc_6659[0] = SACp_emal_41628__uprf_27846; }
    { SACp_emal_41624__idc_6659[1] = SACp_emal_41626__uprf_27853; }

    { ; ; }
    { ; ; }
    if (!SACp_emal_41629__uprf_27847) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41623__pinl_27192__icc_5140 = ( SACp_emal_41624__idc_6659[SACp_emal_41678__ivesplit_33177]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41622__pinl_27195__icc_5146 = ( SACp_emal_41630__wlbsc_7896_sc_bound[SACp_emal_41678__ivesplit_33177]); }

    ; ; { SACp_emal_41621__pinl_27215_res = (SACp_emal_41623__pinl_27192__icc_5140) > (SACp_emal_41622__pinl_27195__icc_5146) ? (SACp_emal_41623__pinl_27192__icc_5140) : (SACp_emal_41622__pinl_27195__icc_5146); };
    { { if (!((1 == SACp_emal_41620__emec_40303__icc_6567__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41620__emec_40303__icc_6567"); }; { { if ((((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567)) + ((6 + (SACp_emal_41620__emec_40303__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567)) + ((6 + (SACp_emal_41620__emec_40303__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567)) + ((6 + (SACp_emal_41620__emec_40303__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41620__emec_40303__icc_6567 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41620__emec_40303__icc_6567 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567)) + ((6 + (SACp_emal_41620__emec_40303__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41620__emec_40303__icc_6567 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41620__emec_40303__icc_6567 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567)) + ((6 + (SACp_emal_41620__emec_40303__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567)) + ((6 + (SACp_emal_41620__emec_40303__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567)) + ((6 + (SACp_emal_41620__emec_40303__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567)) + ((6 + (SACp_emal_41620__emec_40303__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567)) + ((6 + (SACp_emal_41620__emec_40303__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41620__emec_40303__icc_6567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41620__emec_40303__icc_6567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41620__emec_40303__icc_6567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41620__emec_40303__icc_6567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41620__emec_40303__icc_6567__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567, SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567), ((6 + (SACp_emal_41620__emec_40303__icc_6567__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41620__emec_40303__icc_6567__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41620__emec_40303__icc_6567__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41620__emec_40303__icc_6567__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41620__emec_40303__icc_6567__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41620__emec_40303__icc_6567__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_41620__emec_40303__icc_6567__sz == SACp_emal_41630__wlbsc_7896_sc_bound__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41630__wlbsc_7896_sc_bound__sz; SAC_i++) { { SACp_emal_41620__emec_40303__icc_6567[SAC_i] = ( SACp_emal_41630__wlbsc_7896_sc_bound[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_41678__ivesplit_33177;
      { SACp_emal_41620__emec_40303__icc_6567[SAC_idx] = SACp_emal_41623__pinl_27192__icc_5140; }
    }

    { { if (!((1 == SACp_emal_41618__emec_40302__icc_6567__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41618__emec_40302__icc_6567"); }; { { if ((((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567)) + ((6 + (SACp_emal_41618__emec_40302__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567)) + ((6 + (SACp_emal_41618__emec_40302__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567)) + ((6 + (SACp_emal_41618__emec_40302__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41618__emec_40302__icc_6567 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41618__emec_40302__icc_6567 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567)) + ((6 + (SACp_emal_41618__emec_40302__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41618__emec_40302__icc_6567 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41618__emec_40302__icc_6567 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567)) + ((6 + (SACp_emal_41618__emec_40302__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567)) + ((6 + (SACp_emal_41618__emec_40302__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567)) + ((6 + (SACp_emal_41618__emec_40302__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567)) + ((6 + (SACp_emal_41618__emec_40302__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567)) + ((6 + (SACp_emal_41618__emec_40302__icc_6567__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41618__emec_40302__icc_6567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41618__emec_40302__icc_6567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41618__emec_40302__icc_6567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41618__emec_40302__icc_6567 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41618__emec_40302__icc_6567__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567, SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567), ((6 + (SACp_emal_41618__emec_40302__icc_6567__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41618__emec_40302__icc_6567__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41618__emec_40302__icc_6567__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41618__emec_40302__icc_6567__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41618__emec_40302__icc_6567__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41618__emec_40302__icc_6567__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_41618__emec_40302__icc_6567__sz == SACp_emal_41630__wlbsc_7896_sc_bound__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41630__wlbsc_7896_sc_bound__sz; SAC_i++) { { SACp_emal_41618__emec_40302__icc_6567[SAC_i] = ( SACp_emal_41630__wlbsc_7896_sc_bound[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_41678__ivesplit_33177;
      { SACp_emal_41618__emec_40302__icc_6567[SAC_idx] = SACp_emal_41621__pinl_27215_res; }
    }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41616__pinl_27275__icc_5140 = ( SACp_emal_41624__idc_6659[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41624__idc_6659, ((((SAC_HM_header_t *)SACp_emal_41624__idc_6659) - 1)->data1.arena)); } else { if (SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41624__idc_6659) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41624__idc_6659, ((((SAC_HM_header_t *)SACp_emal_41624__idc_6659) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41624__idc_6659, ((((SAC_HM_header_t *)SACp_emal_41624__idc_6659) - 1)->data1.arena)); } } else { if (((((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41624__idc_6659, ((((SAC_HM_header_t *)SACp_emal_41624__idc_6659) - 1)->data1.arena)); } else { if (((((SACp_emal_41624__idc_6659__sz * sizeof (*SACp_emal_41624__idc_6659))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41624__idc_6659) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41624__idc_6659, ((((SAC_HM_header_t *)SACp_emal_41624__idc_6659) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41624__idc_6659, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41624__idc_6659); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41624__idc_6659); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41624__idc_6659, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41624__idc_6659); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41624__idc_6659); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41624__idc_6659__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41615__pinl_27278__icc_5146 = ( SACp_emal_41630__wlbsc_7896_sc_bound[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound, ((((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound) - 1)->data1.arena)); } else { if (SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound, ((((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound, ((((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound) - 1)->data1.arena)); } } else { if (((((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound, ((((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound) - 1)->data1.arena)); } else { if (((((SACp_emal_41630__wlbsc_7896_sc_bound__sz * sizeof (*SACp_emal_41630__wlbsc_7896_sc_bound))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound, ((((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41630__wlbsc_7896_sc_bound); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41630__wlbsc_7896_sc_bound__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_41614__pinl_27298_res = (SACp_emal_41616__pinl_27275__icc_5140) > (SACp_emal_41615__pinl_27278__icc_5146) ? (SACp_emal_41616__pinl_27275__icc_5140) : (SACp_emal_41615__pinl_27278__icc_5146); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41613__wlbsc_7818_sc_e = ( SACp_emal_41618__emec_40302__icc_6567[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567, ((((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567) - 1)->data1.arena)); } else { if (SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567, ((((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567, ((((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567) - 1)->data1.arena)); } } else { if (((((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567, ((((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567) - 1)->data1.arena)); } else { if (((((SACp_emal_41618__emec_40302__icc_6567__sz * sizeof (*SACp_emal_41618__emec_40302__icc_6567))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567, ((((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41618__emec_40302__icc_6567); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41618__emec_40302__icc_6567__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41612__wlbsc_7808_sc_e = ( SACp_emal_41620__emec_40303__icc_6567[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567, ((((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567) - 1)->data1.arena)); } else { if (SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567, ((((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567, ((((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567) - 1)->data1.arena)); } } else { if (((((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567, ((((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567) - 1)->data1.arena)); } else { if (((((SACp_emal_41620__emec_40303__icc_6567__sz * sizeof (*SACp_emal_41620__emec_40303__icc_6567))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567, ((((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41620__emec_40303__icc_6567); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41620__emec_40303__icc_6567__desc) & (-1 ^ (3))))); } } }
    { { if (!((2 == SACp_emal_41609__icc_6570__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41609__icc_6570"); }; { if ((((6 + (SACp_emal_41609__icc_6570__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41609__icc_6570__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41609__icc_6570__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41609__icc_6570__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41609__icc_6570__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_41609__icc_6570__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41609__icc_6570__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41609__icc_6570__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_41609__icc_6570__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_41609__icc_6570__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_41609__icc_6570__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_41609__icc_6570__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_41609__icc_6570__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41609__icc_6570__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41609__icc_6570__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41609__icc_6570__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41609__icc_6570__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41609__icc_6570__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41609__icc_6570__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41609__icc_6570__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41609__icc_6570__dim == (2)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_41609__icc_6570__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41609__icc_6570__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_41622__pinl_27195__icc_5146;
      SAC_size *=
      SACp_emal_41609__icc_6570__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41609__icc_6570__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_41615__pinl_27278__icc_5146;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41609__icc_6570__desc) & (-1 ^ (3))))[4]) = SACp_emal_41609__icc_6570__sz = SAC_size;
      if (!((SACp_emal_41609__icc_6570__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13008 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 13008 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13008 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13008 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13008 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 13008 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13008 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 13008, __extension__ __PRETTY_FUNCTION__); }))
# 13008 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_41609__icc_6570 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_41609__icc_6570__sz * sizeof (*SACp_emal_41609__icc_6570)); break; case SAC_HM_multi_threaded: SACp_emal_41609__icc_6570 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_41609__icc_6570__sz * sizeof (*SACp_emal_41609__icc_6570), 0); break; case SAC_HM_any_threaded: SACp_emal_41609__icc_6570 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_41609__icc_6570__sz * sizeof (*SACp_emal_41609__icc_6570), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41609__icc_6570__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41609__icc_6570__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41609__icc_6570__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;
      int SAC_schedule_start1;
      int SAC_schedule_stop1;




      int SAC_SACp_emal_41609__icc_6570_shpfac0;
      int SAC_SACp_emal_41609__icc_6570_shpfac1;




      {
        int SAC_i;
        SAC_SACp_emal_41609__icc_6570_shpfac0 = 1 * SACp_emal_41609__icc_6570__shp1;
        SAC_SACp_emal_41609__icc_6570_shpfac1 = 1;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_41623__pinl_27192__icc_5140;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_41612__wlbsc_7808_sc_e;




      SACp_wlidx_39688__icc_6570
        = SAC_schedule_start0 * SAC_SACp_emal_41609__icc_6570_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41609__icc_6570_shpfac1;

      { int SAC_stop_SACp_eat_497 = SACp_emal_41623__pinl_27192__icc_5140; for (SACp_eat_497 = 0; SACp_eat_497 < SACp_emal_41623__pinl_27192__icc_5140;) {
     



      SACp_wlidx_39688__icc_6570
        = ( SACp_emal_41609__icc_6570__shp1 * SACp_eat_497
         + SAC_schedule_start1 ) * SAC_SACp_emal_41609__icc_6570_shpfac1;

      { int SAC_stop_SACp_eat_496 = SACp_emal_41612__wlbsc_7808_sc_e; for (SACp_eat_496 = 0; SACp_eat_496 < SACp_emal_41612__wlbsc_7808_sc_e;) {
     



      if (!((0 == (SACp_emal_41609__icc_6570__dim - SACp_hse_36__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41609__icc_6570_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_41609__icc_6570[SACp_wlidx_39688__icc_6570] = SACp_emal_41678__ivesplit_33177; };

      SACp_wlidx_39688__icc_6570 = SACp_wlidx_39688__icc_6570 + 1;
      SACp_eat_496 = SACp_eat_496 + 1;
      } }
      SACp_eat_497 = SACp_eat_497 + 1;
      } }
# 13104 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_41623__pinl_27192__icc_5140;
      SAC_schedule_stop0 = SACp_emal_41621__pinl_27215_res;
      SAC_schedule_start1 = SACp_emal_41614__pinl_27298_res;
      SAC_schedule_stop1 = SACp_emal_41613__wlbsc_7818_sc_e;




      SACp_wlidx_39688__icc_6570
        = SAC_schedule_start0 * SAC_SACp_emal_41609__icc_6570_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41609__icc_6570_shpfac1;

      { int SAC_stop_SACp_eat_497 = SACp_emal_41621__pinl_27215_res; for (SACp_eat_497 = SACp_emal_41623__pinl_27192__icc_5140; SACp_eat_497 < SACp_emal_41621__pinl_27215_res;) {
     



      SACp_wlidx_39688__icc_6570
        = ( SACp_emal_41609__icc_6570__shp1 * SACp_eat_497
         + SAC_schedule_start1 ) * SAC_SACp_emal_41609__icc_6570_shpfac1;

      { int SAC_stop_SACp_eat_496 = SACp_emal_41613__wlbsc_7818_sc_e; for (SACp_eat_496 = SACp_emal_41614__pinl_27298_res; SACp_eat_496 < SACp_emal_41613__wlbsc_7818_sc_e;) {
     



      if (!((0 == (SACp_emal_41609__icc_6570__dim - SACp_hse_36__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41609__icc_6570_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_41609__icc_6570[SACp_wlidx_39688__icc_6570] = SACp_emal_41678__ivesplit_33177; };

      SACp_wlidx_39688__icc_6570 = SACp_wlidx_39688__icc_6570 + 1;
      SACp_eat_496 = SACp_eat_496 + 1;
      } }
      SACp_eat_497 = SACp_eat_497 + 1;
      } }
# 13147 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_41623__pinl_27192__icc_5140;
      SAC_schedule_stop0 = SACp_emal_41621__pinl_27215_res;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_41616__pinl_27275__icc_5140;




      SACp_wlidx_39688__icc_6570
        = SAC_schedule_start0 * SAC_SACp_emal_41609__icc_6570_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41609__icc_6570_shpfac1;

      { int SAC_stop_SACp_eat_497 = SACp_emal_41621__pinl_27215_res; for (SACp_eat_497 = SACp_emal_41623__pinl_27192__icc_5140; SACp_eat_497 < SACp_emal_41621__pinl_27215_res;) {
     



      SACp_wlidx_39688__icc_6570
        = ( SACp_emal_41609__icc_6570__shp1 * SACp_eat_497
         + SAC_schedule_start1 ) * SAC_SACp_emal_41609__icc_6570_shpfac1;

      { int SAC_stop_SACp_eat_496 = SACp_emal_41616__pinl_27275__icc_5140; for (SACp_eat_496 = 0; SACp_eat_496 < SACp_emal_41616__pinl_27275__icc_5140;) {
     



      if (!((0 == (SACp_emal_41609__icc_6570__dim - SACp_hse_36__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41609__icc_6570_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_41609__icc_6570[SACp_wlidx_39688__icc_6570] = SACp_emal_41678__ivesplit_33177; };

      SACp_wlidx_39688__icc_6570 = SACp_wlidx_39688__icc_6570 + 1;
      SACp_eat_496 = SACp_eat_496 + 1;
      } }
      SACp_eat_497 = SACp_eat_497 + 1;
      } }
# 13190 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_41623__pinl_27192__icc_5140;
      SAC_schedule_stop0 = SACp_emal_41622__pinl_27195__icc_5146;
      SAC_schedule_start1 = SACp_emal_41616__pinl_27275__icc_5140;
      SAC_schedule_stop1 = SACp_emal_41615__pinl_27278__icc_5146;




      SACp_wlidx_39688__icc_6570
        = SAC_schedule_start0 * SAC_SACp_emal_41609__icc_6570_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41609__icc_6570_shpfac1;

      { int SAC_stop_SACp_eat_497 = SACp_emal_41622__pinl_27195__icc_5146; for (SACp_eat_497 = SACp_emal_41623__pinl_27192__icc_5140; SACp_eat_497 < SACp_emal_41622__pinl_27195__icc_5146;) {
     



      SACp_wlidx_39688__icc_6570
        = ( SACp_emal_41609__icc_6570__shp1 * SACp_eat_497
         + SAC_schedule_start1 ) * SAC_SACp_emal_41609__icc_6570_shpfac1;

      { int SAC_stop_SACp_eat_496 = SACp_emal_41615__pinl_27278__icc_5146; for (SACp_eat_496 = SACp_emal_41616__pinl_27275__icc_5140; SACp_eat_496 < SACp_emal_41615__pinl_27278__icc_5146;) {
     



      if (!((0 == (SACp_emal_41609__icc_6570__dim - SACp_hse_36__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal dimension found!"); };
      if (!((1 == SAC_SACp_emal_41609__icc_6570_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "WL expression with illegal size found!"); };
      { SACp_emal_41609__icc_6570[SACp_wlidx_39688__icc_6570] = SACp_emal_41678__ivesplit_33177; };

      SACp_wlidx_39688__icc_6570 = SACp_wlidx_39688__icc_6570 + 1;
      SACp_eat_496 = SACp_eat_496 + 1;
      } }
      SACp_eat_497 = SACp_eat_497 + 1;
      } }
# 13233 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42037_SAC_label:;
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    if (!SACp_emal_41629__uprf_27847) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    { ; ; }
    if (!SACp_emal_41655__uprf_28028) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_41639__uprf_27974) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_41658__uprf_28039) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41608__pinl_27358__icc_5140 = ( SACp_emal_41634__idc_6637[SACp_emal_41678__ivesplit_33177]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41607__pinl_27361__icc_5146 = ( SACp_emal_41652__idc_6625[SACp_emal_41678__ivesplit_33177]); }

    ; ; { SACp_emal_41606__pinl_27381_res = (SACp_emal_41608__pinl_27358__icc_5140) > (SACp_emal_41607__pinl_27361__icc_5146) ? (SACp_emal_41608__pinl_27358__icc_5140) : (SACp_emal_41607__pinl_27361__icc_5146); };
    { { if (!((1 == SACp_emal_41605__emec_40301__icc_6604__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41605__emec_40301__icc_6604"); }; { { if ((((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604)) + ((6 + (SACp_emal_41605__emec_40301__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604)) + ((6 + (SACp_emal_41605__emec_40301__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604)) + ((6 + (SACp_emal_41605__emec_40301__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41605__emec_40301__icc_6604 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41605__emec_40301__icc_6604 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604)) + ((6 + (SACp_emal_41605__emec_40301__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41605__emec_40301__icc_6604 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41605__emec_40301__icc_6604 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604)) + ((6 + (SACp_emal_41605__emec_40301__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604)) + ((6 + (SACp_emal_41605__emec_40301__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604)) + ((6 + (SACp_emal_41605__emec_40301__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604)) + ((6 + (SACp_emal_41605__emec_40301__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604)) + ((6 + (SACp_emal_41605__emec_40301__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41605__emec_40301__icc_6604 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41605__emec_40301__icc_6604 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41605__emec_40301__icc_6604 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41605__emec_40301__icc_6604 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41605__emec_40301__icc_6604__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604, SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604), ((6 + (SACp_emal_41605__emec_40301__icc_6604__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41605__emec_40301__icc_6604__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41605__emec_40301__icc_6604__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41605__emec_40301__icc_6604__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41605__emec_40301__icc_6604__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41605__emec_40301__icc_6604__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_41605__emec_40301__icc_6604__sz == SACp_emal_41652__idc_6625__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41652__idc_6625__sz; SAC_i++) { { SACp_emal_41605__emec_40301__icc_6604[SAC_i] = ( SACp_emal_41652__idc_6625[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_41678__ivesplit_33177;
      { SACp_emal_41605__emec_40301__icc_6604[SAC_idx] = SACp_emal_41608__pinl_27358__icc_5140; }
    }

    { { if (!((1 == SACp_emal_41603__emec_40300__icc_6604__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41603__emec_40300__icc_6604"); }; { { if ((((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604)) + ((6 + (SACp_emal_41603__emec_40300__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604)) + ((6 + (SACp_emal_41603__emec_40300__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604)) + ((6 + (SACp_emal_41603__emec_40300__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41603__emec_40300__icc_6604 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41603__emec_40300__icc_6604 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604)) + ((6 + (SACp_emal_41603__emec_40300__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41603__emec_40300__icc_6604 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41603__emec_40300__icc_6604 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604)) + ((6 + (SACp_emal_41603__emec_40300__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604)) + ((6 + (SACp_emal_41603__emec_40300__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604)) + ((6 + (SACp_emal_41603__emec_40300__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604)) + ((6 + (SACp_emal_41603__emec_40300__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604)) + ((6 + (SACp_emal_41603__emec_40300__icc_6604__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41603__emec_40300__icc_6604 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41603__emec_40300__icc_6604 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41603__emec_40300__icc_6604 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41603__emec_40300__icc_6604 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41603__emec_40300__icc_6604__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604, SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604), ((6 + (SACp_emal_41603__emec_40300__icc_6604__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41603__emec_40300__icc_6604__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41603__emec_40300__icc_6604__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41603__emec_40300__icc_6604__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41603__emec_40300__icc_6604__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41603__emec_40300__icc_6604__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_41603__emec_40300__icc_6604__sz == SACp_emal_41652__idc_6625__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41652__idc_6625__sz; SAC_i++) { { SACp_emal_41603__emec_40300__icc_6604[SAC_i] = ( SACp_emal_41652__idc_6625[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_41678__ivesplit_33177;
      { SACp_emal_41603__emec_40300__icc_6604[SAC_idx] = SACp_emal_41606__pinl_27381_res; }
    }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41601__pinl_27441__icc_5140 = ( SACp_emal_41634__idc_6637[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41634__idc_6637, ((((SAC_HM_header_t *)SACp_emal_41634__idc_6637) - 1)->data1.arena)); } else { if (SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41634__idc_6637) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41634__idc_6637, ((((SAC_HM_header_t *)SACp_emal_41634__idc_6637) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41634__idc_6637, ((((SAC_HM_header_t *)SACp_emal_41634__idc_6637) - 1)->data1.arena)); } } else { if (((((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41634__idc_6637, ((((SAC_HM_header_t *)SACp_emal_41634__idc_6637) - 1)->data1.arena)); } else { if (((((SACp_emal_41634__idc_6637__sz * sizeof (*SACp_emal_41634__idc_6637))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41634__idc_6637) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41634__idc_6637, ((((SAC_HM_header_t *)SACp_emal_41634__idc_6637) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41634__idc_6637, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41634__idc_6637); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41634__idc_6637); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41634__idc_6637, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41634__idc_6637); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41634__idc_6637); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41634__idc_6637__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41600__pinl_27444__icc_5146 = ( SACp_emal_41652__idc_6625[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41652__idc_6625, ((((SAC_HM_header_t *)SACp_emal_41652__idc_6625) - 1)->data1.arena)); } else { if (SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41652__idc_6625) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41652__idc_6625, ((((SAC_HM_header_t *)SACp_emal_41652__idc_6625) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41652__idc_6625, ((((SAC_HM_header_t *)SACp_emal_41652__idc_6625) - 1)->data1.arena)); } } else { if (((((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41652__idc_6625, ((((SAC_HM_header_t *)SACp_emal_41652__idc_6625) - 1)->data1.arena)); } else { if (((((SACp_emal_41652__idc_6625__sz * sizeof (*SACp_emal_41652__idc_6625))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41652__idc_6625) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41652__idc_6625, ((((SAC_HM_header_t *)SACp_emal_41652__idc_6625) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41652__idc_6625, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41652__idc_6625); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41652__idc_6625); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41652__idc_6625, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41652__idc_6625); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41652__idc_6625); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41652__idc_6625__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_41599__pinl_27464_res = (SACp_emal_41601__pinl_27441__icc_5140) > (SACp_emal_41600__pinl_27444__icc_5146) ? (SACp_emal_41601__pinl_27441__icc_5140) : (SACp_emal_41600__pinl_27444__icc_5146); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41598__wlbsc_7768_sc_e = ( SACp_emal_41603__emec_40300__icc_6604[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604, ((((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604) - 1)->data1.arena)); } else { if (SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604, ((((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604, ((((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604) - 1)->data1.arena)); } } else { if (((((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604, ((((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604) - 1)->data1.arena)); } else { if (((((SACp_emal_41603__emec_40300__icc_6604__sz * sizeof (*SACp_emal_41603__emec_40300__icc_6604))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604, ((((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41603__emec_40300__icc_6604); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41603__emec_40300__icc_6604__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41597__wlbsc_7758_sc_e = ( SACp_emal_41605__emec_40301__icc_6604[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604, ((((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604) - 1)->data1.arena)); } else { if (SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604, ((((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604, ((((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604) - 1)->data1.arena)); } } else { if (((((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604, ((((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604) - 1)->data1.arena)); } else { if (((((SACp_emal_41605__emec_40301__icc_6604__sz * sizeof (*SACp_emal_41605__emec_40301__icc_6604))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604, ((((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41605__emec_40301__icc_6604); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41605__emec_40301__icc_6604__desc) & (-1 ^ (3))))); } } }
    if (!SACp_emal_41666__uprf_28080) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_41643__uprf_27989) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_41669__uprf_28091) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    if (!SACp_emal_41646__uprf_28002) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "Assignment with incompatible types found"); };
    ;

    }
    { { SACp_emal_41596__icc_6599 = SACp_emal_41678__ivesplit_33177; } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41595__pinl_27524__icc_5140 = ( SACp_emal_41640__idc_6633[SACp_emal_41678__ivesplit_33177]); }




   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41594__pinl_27527__icc_5146 = ( SACp_emal_41663__idc_6617[SACp_emal_41678__ivesplit_33177]); }

    ; ; { SACp_emal_41593__pinl_27547_res = (SACp_emal_41595__pinl_27524__icc_5140) > (SACp_emal_41594__pinl_27527__icc_5146) ? (SACp_emal_41595__pinl_27524__icc_5140) : (SACp_emal_41594__pinl_27527__icc_5146); };
    { { if (!((1 == SACp_emal_41592__emec_40299__icc_6600__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41592__emec_40299__icc_6600"); }; { { if ((((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600)) + ((6 + (SACp_emal_41592__emec_40299__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600)) + ((6 + (SACp_emal_41592__emec_40299__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600)) + ((6 + (SACp_emal_41592__emec_40299__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41592__emec_40299__icc_6600 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41592__emec_40299__icc_6600 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600)) + ((6 + (SACp_emal_41592__emec_40299__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41592__emec_40299__icc_6600 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41592__emec_40299__icc_6600 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600)) + ((6 + (SACp_emal_41592__emec_40299__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600)) + ((6 + (SACp_emal_41592__emec_40299__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600)) + ((6 + (SACp_emal_41592__emec_40299__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600)) + ((6 + (SACp_emal_41592__emec_40299__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600)) + ((6 + (SACp_emal_41592__emec_40299__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41592__emec_40299__icc_6600 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41592__emec_40299__icc_6600 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41592__emec_40299__icc_6600 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41592__emec_40299__icc_6600 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41592__emec_40299__icc_6600__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600, SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600), ((6 + (SACp_emal_41592__emec_40299__icc_6600__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41592__emec_40299__icc_6600__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41592__emec_40299__icc_6600__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41592__emec_40299__icc_6600__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41592__emec_40299__icc_6600__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41592__emec_40299__icc_6600__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_41592__emec_40299__icc_6600__sz == SACp_emal_41663__idc_6617__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41663__idc_6617__sz; SAC_i++) { { SACp_emal_41592__emec_40299__icc_6600[SAC_i] = ( SACp_emal_41663__idc_6617[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 204, 17, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_41678__ivesplit_33177;
      { SACp_emal_41592__emec_40299__icc_6600[SAC_idx] = SACp_emal_41595__pinl_27524__icc_5140; }
    }

    { { if (!((1 == SACp_emal_41590__emec_40298__icc_6600__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41590__emec_40298__icc_6600"); }; { { if ((((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600)) + ((6 + (SACp_emal_41590__emec_40298__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600)) + ((6 + (SACp_emal_41590__emec_40298__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600)) + ((6 + (SACp_emal_41590__emec_40298__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41590__emec_40298__icc_6600 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41590__emec_40298__icc_6600 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600)) + ((6 + (SACp_emal_41590__emec_40298__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41590__emec_40298__icc_6600 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41590__emec_40298__icc_6600 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600)) + ((6 + (SACp_emal_41590__emec_40298__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600)) + ((6 + (SACp_emal_41590__emec_40298__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600)) + ((6 + (SACp_emal_41590__emec_40298__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600)) + ((6 + (SACp_emal_41590__emec_40298__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600)) + ((6 + (SACp_emal_41590__emec_40298__icc_6600__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41590__emec_40298__icc_6600 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41590__emec_40298__icc_6600 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41590__emec_40298__icc_6600 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41590__emec_40298__icc_6600 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41590__emec_40298__icc_6600__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600, SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600), ((6 + (SACp_emal_41590__emec_40298__icc_6600__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41590__emec_40298__icc_6600__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41590__emec_40298__icc_6600__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41590__emec_40298__icc_6600__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41590__emec_40298__icc_6600__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    if (!((SACp_emal_41590__emec_40298__icc_6600__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "Assignment with incompatible types found"); };
    ;

    }
    { int SAC_i; if (!((SACp_emal_41590__emec_40298__icc_6600__sz == SACp_emal_41663__idc_6617__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41663__idc_6617__sz; SAC_i++) { { SACp_emal_41590__emec_40298__icc_6600[SAC_i] = ( SACp_emal_41663__idc_6617[SAC_i]); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 207, 15, "2nd argument of _idx_modarray_AxSxS_ is not a scalar!"); };
    {
      int SAC_idx;
      SAC_idx = SACp_emal_41678__ivesplit_33177;
      { SACp_emal_41590__emec_40298__icc_6600[SAC_idx] = SACp_emal_41593__pinl_27547_res; }
    }

    { ; ; }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 200, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41588__pinl_27607__icc_5140 = ( SACp_emal_41640__idc_6633[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41640__idc_6633, ((((SAC_HM_header_t *)SACp_emal_41640__idc_6633) - 1)->data1.arena)); } else { if (SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41640__idc_6633) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41640__idc_6633, ((((SAC_HM_header_t *)SACp_emal_41640__idc_6633) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41640__idc_6633, ((((SAC_HM_header_t *)SACp_emal_41640__idc_6633) - 1)->data1.arena)); } } else { if (((((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41640__idc_6633, ((((SAC_HM_header_t *)SACp_emal_41640__idc_6633) - 1)->data1.arena)); } else { if (((((SACp_emal_41640__idc_6633__sz * sizeof (*SACp_emal_41640__idc_6633))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41640__idc_6633) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41640__idc_6633, ((((SAC_HM_header_t *)SACp_emal_41640__idc_6633) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41640__idc_6633, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41640__idc_6633); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41640__idc_6633); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41640__idc_6633, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41640__idc_6633); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41640__idc_6633); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41640__idc_6633__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/sac2c-build/sac2c-release/src/sac2c-release-build/runtime_build/src/runtime_libraries-build/sacprelude_p.sac", 201, 12, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41587__pinl_27610__icc_5146 = ( SACp_emal_41663__idc_6617[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41663__idc_6617, ((((SAC_HM_header_t *)SACp_emal_41663__idc_6617) - 1)->data1.arena)); } else { if (SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41663__idc_6617) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41663__idc_6617, ((((SAC_HM_header_t *)SACp_emal_41663__idc_6617) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41663__idc_6617, ((((SAC_HM_header_t *)SACp_emal_41663__idc_6617) - 1)->data1.arena)); } } else { if (((((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41663__idc_6617, ((((SAC_HM_header_t *)SACp_emal_41663__idc_6617) - 1)->data1.arena)); } else { if (((((SACp_emal_41663__idc_6617__sz * sizeof (*SACp_emal_41663__idc_6617))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41663__idc_6617) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41663__idc_6617, ((((SAC_HM_header_t *)SACp_emal_41663__idc_6617) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41663__idc_6617, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41663__idc_6617); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41663__idc_6617); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41663__idc_6617, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41663__idc_6617); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41663__idc_6617); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41663__idc_6617__desc) & (-1 ^ (3))))); } } }
    ; ; { SACp_emal_41586__pinl_27630_res = (SACp_emal_41588__pinl_27607__icc_5140) > (SACp_emal_41587__pinl_27610__icc_5146) ? (SACp_emal_41588__pinl_27607__icc_5140) : (SACp_emal_41587__pinl_27610__icc_5146); };



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41585__wlbsc_7718_sc_e = ( SACp_emal_41590__emec_40298__icc_6600[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600, ((((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600) - 1)->data1.arena)); } else { if (SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600, ((((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600, ((((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600) - 1)->data1.arena)); } } else { if (((((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600, ((((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600) - 1)->data1.arena)); } else { if (((((SACp_emal_41590__emec_40298__icc_6600__sz * sizeof (*SACp_emal_41590__emec_40298__icc_6600))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600, ((((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41590__emec_40298__icc_6600); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41590__emec_40298__icc_6600__desc) & (-1 ^ (3))))); } } }



   
    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "1st argument of _idx_sel_ is not a scalar!"); };
    { SACp_emal_41584__wlbsc_7708_sc_e = ( SACp_emal_41592__emec_40299__icc_6600[SACp_emal_41680__isaa_33121_s]); }

    { { { if (((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600, ((((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600) - 1)->data1.arena)); } else { if (SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600, ((((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600, ((((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600) - 1)->data1.arena)); } } else { if (((((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600, ((((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600) - 1)->data1.arena)); } else { if (((((SACp_emal_41592__emec_40299__icc_6600__sz * sizeof (*SACp_emal_41592__emec_40299__icc_6600))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600, ((((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41592__emec_40299__icc_6600); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41592__emec_40299__icc_6600__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { { if (!((4 == SACp_emal_41563__icc_6607__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41563__icc_6607"); }; { if ((((6 + (SACp_emal_41563__icc_6607__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41563__icc_6607__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41563__icc_6607__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41563__icc_6607__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41563__icc_6607__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_41563__icc_6607__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41563__icc_6607__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41563__icc_6607__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_41563__icc_6607__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_41563__icc_6607__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_41563__icc_6607__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_41563__icc_6607__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_41563__icc_6607__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41563__icc_6607__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41563__icc_6607__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41563__icc_6607__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41563__icc_6607__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41563__icc_6607__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41563__icc_6607__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41563__icc_6607__desc) & (-1 ^ (3))))[1]) = 0; }



   
    if (!((SACp_emal_41563__icc_6607__dim == (2) + (2)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SAC_size *=
      SACp_emal_41563__icc_6607__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41563__icc_6607__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_41607__pinl_27361__icc_5146;
      SAC_size *=
      SACp_emal_41563__icc_6607__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41563__icc_6607__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_41600__pinl_27444__icc_5146;
      SACp_emal_41563__icc_6607__shp2 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41563__icc_6607__desc) & (-1 ^ (3))))[(6 + (2))]) = SACp_emal_41609__icc_6570__shp0;
      SACp_emal_41563__icc_6607__shp3 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41563__icc_6607__desc) & (-1 ^ (3))))[(6 + (3))]) = SACp_emal_41609__icc_6570__shp1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41563__icc_6607__desc) & (-1 ^ (3))))[4]) = SACp_emal_41563__icc_6607__sz = SAC_size * SACp_emal_41609__icc_6570__sz;
      if (!((SACp_emal_41563__icc_6607__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Array with size <0 found!"); };
    }

    { { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: 
# 13471 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void) sizeof ((
# 13471 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13471 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ? 1 : 0), __extension__ ({ if (
# 13471 "/home/rubenhensen/sac/a.out.c"
   SAC_MT_globally_single && "An ST/SEQ call in the MT/XT context!! (1)"
# 13471 "/home/rubenhensen/sac/a.out.c" 3 4
   ) ; else __assert_fail (
# 13471 "/home/rubenhensen/sac/a.out.c"
   "SAC_MT_globally_single && \"An ST/SEQ call in the MT/XT context!! (1)\""
# 13471 "/home/rubenhensen/sac/a.out.c" 3 4
   , "/home/rubenhensen/sac/a.out.c", 13471, __extension__ __PRETTY_FUNCTION__); }))
# 13471 "/home/rubenhensen/sac/a.out.c"
   ; SACp_emal_41563__icc_6607 = (int *)SAC_HM_MallocAnyChunk_st (SACp_emal_41563__icc_6607__sz * sizeof (*SACp_emal_41563__icc_6607)); break; case SAC_HM_multi_threaded: SACp_emal_41563__icc_6607 = (int *)SAC_HM_MallocAnyChunk_mt (SACp_emal_41563__icc_6607__sz * sizeof (*SACp_emal_41563__icc_6607), 0); break; case SAC_HM_any_threaded: SACp_emal_41563__icc_6607 = (int *)SAC_HM_MallocAnyChunk_at (SACp_emal_41563__icc_6607__sz * sizeof (*SACp_emal_41563__icc_6607), 0); break; } } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41563__icc_6607__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41563__icc_6607__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41563__icc_6607__desc) & (-1 ^ (3))))[1]) = 0; } }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { ; ;



    if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    ;

    }
    { if (!(((SACp_emal_41563__icc_6607__dim) - (2) == SACp_emal_41564__icc_6603__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41564__icc_6603"); }; { if ((((6 + (SACp_emal_41564__icc_6603__dim)*1) * sizeof (intptr_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41564__icc_6603__dim)*1) * sizeof (intptr_t))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((6 + (SACp_emal_41564__icc_6603__dim)*1) * sizeof (intptr_t))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41564__icc_6603__desc = (intptr_t *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41564__icc_6603__desc = (intptr_t *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((6 + (SACp_emal_41564__icc_6603__dim)*1) * sizeof (intptr_t))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41564__icc_6603__desc = (intptr_t *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41564__icc_6603__desc = (intptr_t *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((6 + (SACp_emal_41564__icc_6603__dim)*1) * sizeof (intptr_t)) + ((-1) <= 0 ? 0 : ((((6 + (SACp_emal_41564__icc_6603__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((6 + (SACp_emal_41564__icc_6603__dim)*1) * sizeof (intptr_t))) % (-1) : ((-1) - (((6 + (SACp_emal_41564__icc_6603__dim)*1) * sizeof (intptr_t))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((6 + (SACp_emal_41564__icc_6603__dim)*1) * sizeof (intptr_t))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41564__icc_6603__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41564__icc_6603__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41564__icc_6603__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41564__icc_6603__desc = (intptr_t *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41564__icc_6603__desc) & (-1 ^ (3))))[0]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41564__icc_6603__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41564__icc_6603__desc) & (-1 ^ (3))))[1]) = 0; }



    if (!((SACp_emal_41564__icc_6603__dim == (2)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
    {

      int SAC_size = 1;
      SACp_emal_41564__icc_6603__shp0 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41564__icc_6603__desc) & (-1 ^ (3))))[(6 + (0))]) = SACp_emal_41609__icc_6570__shp0;
      SACp_emal_41564__icc_6603__shp1 =
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41564__icc_6603__desc) & (-1 ^ (3))))[(6 + (1))]) = SACp_emal_41609__icc_6570__shp1;
      (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41564__icc_6603__desc) & (-1 ^ (3))))[4]) = SACp_emal_41564__icc_6603__sz = SAC_size * SACp_emal_41609__icc_6570__sz;
      if (!((SACp_emal_41564__icc_6603__sz >= 0))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Array with size <0 found!"); };
    }

   



    {
      int SAC_schedule_start0;
      int SAC_schedule_stop0;
      int SAC_schedule_start1;
      int SAC_schedule_stop1;




      int SAC_SACp_emal_41563__icc_6607_shpfac0;
      int SAC_SACp_emal_41563__icc_6607_shpfac1;




      {
        int SAC_i;
        SAC_SACp_emal_41563__icc_6607_shpfac0 = 1 * SACp_emal_41563__icc_6607__shp1 * SACp_emal_41563__icc_6607__shp2 * SACp_emal_41563__icc_6607__shp3;
        SAC_SACp_emal_41563__icc_6607_shpfac1 = 1 * SACp_emal_41563__icc_6607__shp2 * SACp_emal_41563__icc_6607__shp3;
      }




      SAC_schedule_start0 = 0;
      SAC_schedule_stop0 = SACp_emal_41608__pinl_27358__icc_5140;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_41597__wlbsc_7758_sc_e;




      SACp_wlidx_39689__icc_6607
        = SAC_schedule_start0 * SAC_SACp_emal_41563__icc_6607_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41563__icc_6607_shpfac1;

      { int SAC_stop_SACp_eat_499 = SACp_emal_41608__pinl_27358__icc_5140; for (SACp_eat_499 = 0; SACp_eat_499 < SACp_emal_41608__pinl_27358__icc_5140;) {
     



      SACp_wlidx_39689__icc_6607
        = ( SACp_emal_41563__icc_6607__shp1 * SACp_eat_499
         + SAC_schedule_start1 ) * SAC_SACp_emal_41563__icc_6607_shpfac1;

      { int SAC_stop_SACp_eat_498 = SACp_emal_41597__wlbsc_7758_sc_e; for (SACp_eat_498 = 0; SACp_eat_498 < SACp_emal_41597__wlbsc_7758_sc_e;) {
     



      SACp_emal_41564__icc_6603 = SACp_emal_41563__icc_6607+SACp_wlidx_39689__icc_6607;

      { int SAC_i; if (!((SACp_emal_41564__icc_6603__sz == SACp_emal_41609__icc_6570__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41609__icc_6570__sz; SAC_i++) { { SACp_emal_41564__icc_6603[SAC_i] = ( SACp_emal_41609__icc_6570[SAC_i]); } } }
      SACp_wlidx_39689__icc_6607 = SACp_wlidx_39689__icc_6607 + SACp_emal_41564__icc_6603__sz;
      SACp_eat_498 = SACp_eat_498 + 1;
      } }
      SACp_eat_499 = SACp_eat_499 + 1;
      } }
# 13582 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_41608__pinl_27358__icc_5140;
      SAC_schedule_stop0 = SACp_emal_41606__pinl_27381_res;
      SAC_schedule_start1 = SACp_emal_41599__pinl_27464_res;
      SAC_schedule_stop1 = SACp_emal_41598__wlbsc_7768_sc_e;




      SACp_wlidx_39689__icc_6607
        = SAC_schedule_start0 * SAC_SACp_emal_41563__icc_6607_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41563__icc_6607_shpfac1;

      { int SAC_stop_SACp_eat_499 = SACp_emal_41606__pinl_27381_res; for (SACp_eat_499 = SACp_emal_41608__pinl_27358__icc_5140; SACp_eat_499 < SACp_emal_41606__pinl_27381_res;) {
     



      SACp_wlidx_39689__icc_6607
        = ( SACp_emal_41563__icc_6607__shp1 * SACp_eat_499
         + SAC_schedule_start1 ) * SAC_SACp_emal_41563__icc_6607_shpfac1;

      { int SAC_stop_SACp_eat_498 = SACp_emal_41598__wlbsc_7768_sc_e; for (SACp_eat_498 = SACp_emal_41599__pinl_27464_res; SACp_eat_498 < SACp_emal_41598__wlbsc_7768_sc_e;) {
     



      SACp_emal_41564__icc_6603 = SACp_emal_41563__icc_6607+SACp_wlidx_39689__icc_6607;

      { int SAC_i; if (!((SACp_emal_41564__icc_6603__sz == SACp_emal_41609__icc_6570__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41609__icc_6570__sz; SAC_i++) { { SACp_emal_41564__icc_6603[SAC_i] = ( SACp_emal_41609__icc_6570[SAC_i]); } } }
      SACp_wlidx_39689__icc_6607 = SACp_wlidx_39689__icc_6607 + SACp_emal_41564__icc_6603__sz;
      SACp_eat_498 = SACp_eat_498 + 1;
      } }
      SACp_eat_499 = SACp_eat_499 + 1;
      } }
# 13624 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_41608__pinl_27358__icc_5140;
      SAC_schedule_stop0 = SACp_emal_41606__pinl_27381_res;
      SAC_schedule_start1 = 0;
      SAC_schedule_stop1 = SACp_emal_41601__pinl_27441__icc_5140;




      SACp_wlidx_39689__icc_6607
        = SAC_schedule_start0 * SAC_SACp_emal_41563__icc_6607_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41563__icc_6607_shpfac1;

      { int SAC_stop_SACp_eat_499 = SACp_emal_41606__pinl_27381_res; for (SACp_eat_499 = SACp_emal_41608__pinl_27358__icc_5140; SACp_eat_499 < SACp_emal_41606__pinl_27381_res;) {
     



      SACp_wlidx_39689__icc_6607
        = ( SACp_emal_41563__icc_6607__shp1 * SACp_eat_499
         + SAC_schedule_start1 ) * SAC_SACp_emal_41563__icc_6607_shpfac1;

      { int SAC_stop_SACp_eat_498 = SACp_emal_41601__pinl_27441__icc_5140; for (SACp_eat_498 = 0; SACp_eat_498 < SACp_emal_41601__pinl_27441__icc_5140;) {
     



      SACp_emal_41564__icc_6603 = SACp_emal_41563__icc_6607+SACp_wlidx_39689__icc_6607;

      { int SAC_i; if (!((SACp_emal_41564__icc_6603__sz == SACp_emal_41609__icc_6570__sz))) { SAC_RuntimeWarning ("Assignment with incompatible types found!"); }; for (SAC_i = 0; SAC_i < SACp_emal_41609__icc_6570__sz; SAC_i++) { { SACp_emal_41564__icc_6603[SAC_i] = ( SACp_emal_41609__icc_6570[SAC_i]); } } }
      SACp_wlidx_39689__icc_6607 = SACp_wlidx_39689__icc_6607 + SACp_emal_41564__icc_6603__sz;
      SACp_eat_498 = SACp_eat_498 + 1;
      } }
      SACp_eat_499 = SACp_eat_499 + 1;
      } }
# 13666 "/home/rubenhensen/sac/a.out.c"
      SAC_schedule_start0 = SACp_emal_41608__pinl_27358__icc_5140;
      SAC_schedule_stop0 = SACp_emal_41607__pinl_27361__icc_5146;
      SAC_schedule_start1 = SACp_emal_41601__pinl_27441__icc_5140;
      SAC_schedule_stop1 = SACp_emal_41600__pinl_27444__icc_5146;




      SACp_wlidx_39689__icc_6607
        = SAC_schedule_start0 * SAC_SACp_emal_41563__icc_6607_shpfac0
        + SAC_schedule_start1 * SAC_SACp_emal_41563__icc_6607_shpfac1;

      { int SAC_stop_SACp_eat_499 = SACp_emal_41607__pinl_27361__icc_5146; for (SACp_eat_499 = SACp_emal_41608__pinl_27358__icc_5140; SACp_eat_499 < SACp_emal_41607__pinl_27361__icc_5146;) {
     



      SACp_wlidx_39689__icc_6607
        = ( SACp_emal_41563__icc_6607__shp1 * SACp_eat_499
         + SAC_schedule_start1 ) * SAC_SACp_emal_41563__icc_6607_shpfac1;

      { int SAC_stop_SACp_eat_498 = SACp_emal_41600__pinl_27444__icc_5146; for (SACp_eat_498 = SACp_emal_41601__pinl_27441__icc_5140; SACp_eat_498 < SACp_emal_41600__pinl_27444__icc_5146;) {
     
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7727, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_41579__pinl_18492__flat_1763 = (SACp_eat_499) * (SACp_emal_41677__uprf_28111); };
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7727, "Assignment with incompatible types found"); };
      ;

      }
      ; ; { SACp_emal_41578__pinl_18492__flat_1763__SSA5_2 = (SACp_eat_498) * (SACp_emal_41675__uprf_28116); };



      SACp_emal_41564__icc_6603 = SACp_emal_41563__icc_6607+SACp_wlidx_39689__icc_6607;

      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
      ;

      }
      { ; ;



      if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 12, "Assignment with incompatible types found"); };
      ;

      }
     



      {
        int SAC_schedule_start0;
        int SAC_schedule_stop0;
        int SAC_schedule_start1;
        int SAC_schedule_stop1;




        int SAC_SACp_emal_41564__icc_6603_shpfac0;
        int SAC_SACp_emal_41564__icc_6603_shpfac1;




        {
          int SAC_i;
          SAC_SACp_emal_41564__icc_6603_shpfac0 = 1 * SACp_emal_41564__icc_6603__shp1;
          SAC_SACp_emal_41564__icc_6603_shpfac1 = 1;
        }




        SAC_schedule_start0 = 0;
        SAC_schedule_stop0 = SACp_emal_41595__pinl_27524__icc_5140;
        SAC_schedule_start1 = 0;
        SAC_schedule_stop1 = SACp_emal_41584__wlbsc_7708_sc_e;




        SACp_wlidx_39690__icc_6603
          = SAC_schedule_start0 * SAC_SACp_emal_41564__icc_6603_shpfac0
          + SAC_schedule_start1 * SAC_SACp_emal_41564__icc_6603_shpfac1;

        { int SAC_stop_SACp_eat_501 = SACp_emal_41595__pinl_27524__icc_5140; for (SACp_eat_501 = 0; SACp_eat_501 < SACp_emal_41595__pinl_27524__icc_5140;) {
       



        SACp_wlidx_39690__icc_6603
          = ( SACp_emal_41564__icc_6603__shp1 * SACp_eat_501
           + SAC_schedule_start1 ) * SAC_SACp_emal_41564__icc_6603_shpfac1;

        { int SAC_stop_SACp_eat_500 = SACp_emal_41584__wlbsc_7708_sc_e; for (SACp_eat_500 = 0; SACp_eat_500 < SACp_emal_41584__wlbsc_7708_sc_e;) {
       



        if (!((0 == (SACp_emal_41564__icc_6603__dim - SACl_jv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_emal_41564__icc_6603_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal size found!"); };
        { SACp_emal_41564__icc_6603[SACp_wlidx_39690__icc_6603] = SACp_emal_41596__icc_6599; };

        SACp_wlidx_39690__icc_6603 = SACp_wlidx_39690__icc_6603 + 1;
        SACp_eat_500 = SACp_eat_500 + 1;
        } }
        SACp_eat_501 = SACp_eat_501 + 1;
        } }
# 13807 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_emal_41595__pinl_27524__icc_5140;
        SAC_schedule_stop0 = SACp_emal_41593__pinl_27547_res;
        SAC_schedule_start1 = SACp_emal_41586__pinl_27630_res;
        SAC_schedule_stop1 = SACp_emal_41585__wlbsc_7718_sc_e;




        SACp_wlidx_39690__icc_6603
          = SAC_schedule_start0 * SAC_SACp_emal_41564__icc_6603_shpfac0
          + SAC_schedule_start1 * SAC_SACp_emal_41564__icc_6603_shpfac1;

        { int SAC_stop_SACp_eat_501 = SACp_emal_41593__pinl_27547_res; for (SACp_eat_501 = SACp_emal_41595__pinl_27524__icc_5140; SACp_eat_501 < SACp_emal_41593__pinl_27547_res;) {
       



        SACp_wlidx_39690__icc_6603
          = ( SACp_emal_41564__icc_6603__shp1 * SACp_eat_501
           + SAC_schedule_start1 ) * SAC_SACp_emal_41564__icc_6603_shpfac1;

        { int SAC_stop_SACp_eat_500 = SACp_emal_41585__wlbsc_7718_sc_e; for (SACp_eat_500 = SACp_emal_41586__pinl_27630_res; SACp_eat_500 < SACp_emal_41585__wlbsc_7718_sc_e;) {
       



        if (!((0 == (SACp_emal_41564__icc_6603__dim - SACl_jv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_emal_41564__icc_6603_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal size found!"); };
        { SACp_emal_41564__icc_6603[SACp_wlidx_39690__icc_6603] = SACp_emal_41596__icc_6599; };

        SACp_wlidx_39690__icc_6603 = SACp_wlidx_39690__icc_6603 + 1;
        SACp_eat_500 = SACp_eat_500 + 1;
        } }
        SACp_eat_501 = SACp_eat_501 + 1;
        } }
# 13850 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_emal_41595__pinl_27524__icc_5140;
        SAC_schedule_stop0 = SACp_emal_41593__pinl_27547_res;
        SAC_schedule_start1 = 0;
        SAC_schedule_stop1 = SACp_emal_41588__pinl_27607__icc_5140;




        SACp_wlidx_39690__icc_6603
          = SAC_schedule_start0 * SAC_SACp_emal_41564__icc_6603_shpfac0
          + SAC_schedule_start1 * SAC_SACp_emal_41564__icc_6603_shpfac1;

        { int SAC_stop_SACp_eat_501 = SACp_emal_41593__pinl_27547_res; for (SACp_eat_501 = SACp_emal_41595__pinl_27524__icc_5140; SACp_eat_501 < SACp_emal_41593__pinl_27547_res;) {
       



        SACp_wlidx_39690__icc_6603
          = ( SACp_emal_41564__icc_6603__shp1 * SACp_eat_501
           + SAC_schedule_start1 ) * SAC_SACp_emal_41564__icc_6603_shpfac1;

        { int SAC_stop_SACp_eat_500 = SACp_emal_41588__pinl_27607__icc_5140; for (SACp_eat_500 = 0; SACp_eat_500 < SACp_emal_41588__pinl_27607__icc_5140;) {
       



        if (!((0 == (SACp_emal_41564__icc_6603__dim - SACl_jv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_emal_41564__icc_6603_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal size found!"); };
        { SACp_emal_41564__icc_6603[SACp_wlidx_39690__icc_6603] = SACp_emal_41596__icc_6599; };

        SACp_wlidx_39690__icc_6603 = SACp_wlidx_39690__icc_6603 + 1;
        SACp_eat_500 = SACp_eat_500 + 1;
        } }
        SACp_eat_501 = SACp_eat_501 + 1;
        } }
# 13893 "/home/rubenhensen/sac/a.out.c"
        SAC_schedule_start0 = SACp_emal_41595__pinl_27524__icc_5140;
        SAC_schedule_stop0 = SACp_emal_41594__pinl_27527__icc_5146;
        SAC_schedule_start1 = SACp_emal_41588__pinl_27607__icc_5140;
        SAC_schedule_stop1 = SACp_emal_41587__pinl_27610__icc_5146;




        SACp_wlidx_39690__icc_6603
          = SAC_schedule_start0 * SAC_SACp_emal_41564__icc_6603_shpfac0
          + SAC_schedule_start1 * SAC_SACp_emal_41564__icc_6603_shpfac1;

        { int SAC_stop_SACp_eat_501 = SACp_emal_41594__pinl_27527__icc_5146; for (SACp_eat_501 = SACp_emal_41595__pinl_27524__icc_5140; SACp_eat_501 < SACp_emal_41594__pinl_27527__icc_5146;) {
       



        SACp_wlidx_39690__icc_6603
          = ( SACp_emal_41564__icc_6603__shp1 * SACp_eat_501
           + SAC_schedule_start1 ) * SAC_SACp_emal_41564__icc_6603_shpfac1;

        { int SAC_stop_SACp_eat_500 = SACp_emal_41587__pinl_27610__icc_5146; for (SACp_eat_500 = SACp_emal_41588__pinl_27607__icc_5140; SACp_eat_500 < SACp_emal_41587__pinl_27610__icc_5146;) {
       
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7311, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_emal_41575__pinl_18653__flat_1747 = (SACp_eat_501) + (SACp_emal_41579__pinl_18492__flat_1763); };
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayArith.sac", 147, 7311, "Assignment with incompatible types found"); };
        ;

        }
        ; ; { SACp_emal_41574__pinl_18653__flat_1747__SSA5_2 = (SACp_eat_500) + (SACp_emal_41578__pinl_18492__flat_1763__SSA5_2); };
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_41575__pinl_18653__flat_1747 >= 0) { { SACp_emal_41573__uprf_27771 = SACp_emal_41575__pinl_18653__flat_1747; }; SACp_emal_41573__uprf_27771 = 1; } else { SACp_emal_41573__uprf_27771 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_emal_41575__pinl_18653__flat_1747"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_41574__pinl_18653__flat_1747__SSA5_2 >= 0) { { SACp_emal_41572__uprf_27776 = SACp_emal_41574__pinl_18653__flat_1747__SSA5_2; }; SACp_emal_41572__uprf_27776 = 1; } else { SACp_emal_41572__uprf_27776 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Non-negativity constraint violated " "for scalar " "SACp_emal_41574__pinl_18653__flat_1747__SSA5_2"); }
        ; ; { SACp_emal_41573__uprf_27771 = (SACp_emal_41573__uprf_27771) & (SACp_emal_41572__uprf_27776); };
        { ; ; }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_41575__pinl_18653__flat_1747 < SACp_emal_41662__pinl_18160__icc_6345) { SACp_emal_41570__uprf_27758 = 1; } else { SACp_emal_41570__uprf_27758 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_emal_41575__pinl_18653__flat_1747" " (" "%d" ") < " "SACp_emal_41662__pinl_18160__icc_6345" " (" "%d" ")" "' violated", SACp_emal_41575__pinl_18653__flat_1747, SACp_emal_41662__pinl_18160__icc_6345); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }
        if (SACp_emal_41574__pinl_18653__flat_1747__SSA5_2 < SACp_emal_41660__pinl_18160__icc_6345__SSA5_1) { SACp_emal_41569__uprf_27765 = 1; } else { SACp_emal_41569__uprf_27765 = 0; SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Scalar constraint `" "SACp_emal_41574__pinl_18653__flat_1747__SSA5_2" " (" "%d" ") < " "SACp_emal_41660__pinl_18160__icc_6345__SSA5_1" " (" "%d" ")" "' violated", SACp_emal_41574__pinl_18653__flat_1747__SSA5_2, SACp_emal_41660__pinl_18160__icc_6345__SSA5_1); }
        ; ; { SACp_emal_41570__uprf_27758 = (SACp_emal_41570__uprf_27758) & (SACp_emal_41569__uprf_27765); };
        { ; ; }
        { { if (!((1 == SACp_emal_41567__pinl_18738__idc_6240__dim))) { SAC_RuntimeWarning ("Inconsistant dimension for array %s found!", "SACp_emal_41567__pinl_18738__idc_6240"); }; { { if ((((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240)) + ((6 + (SACp_emal_41567__pinl_18738__idc_6240__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240)) + ((6 + (SACp_emal_41567__pinl_18738__idc_6240__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((5 - 2) * (sizeof (SAC_HM_header_t)))) { if ((((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240)) + ((6 + (SACp_emal_41567__pinl_18738__idc_6240__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((3 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41567__pinl_18738__idc_6240 = (int *)SAC_HM_MallocSmallChunk (2, &(SAC_HM_arenas[0][1])); } else { SACp_emal_41567__pinl_18738__idc_6240 = (int *)SAC_HM_MallocSmallChunk (4, &(SAC_HM_arenas[0][2])); } } else { if ((((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240)) + ((6 + (SACp_emal_41567__pinl_18738__idc_6240__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) <= ((9 - 2) * (sizeof (SAC_HM_header_t)))) { SACp_emal_41567__pinl_18738__idc_6240 = (int *)SAC_HM_MallocSmallChunk (8, &(SAC_HM_arenas[0][3])); } else { SACp_emal_41567__pinl_18738__idc_6240 = (int *)SAC_HM_MallocSmallChunk (16, &(SAC_HM_arenas[0][4])); } } } else { const SAC_HM_size_byte_t _real_size_1 = ((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240)) + ((6 + (SACp_emal_41567__pinl_18738__idc_6240__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t))) + ((-1) <= 0 ? 0 : ((((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240)) + ((6 + (SACp_emal_41567__pinl_18738__idc_6240__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240)) + ((6 + (SACp_emal_41567__pinl_18738__idc_6240__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : ((-1) - (((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240)) + ((6 + (SACp_emal_41567__pinl_18738__idc_6240__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240)) + ((6 + (SACp_emal_41567__pinl_18738__idc_6240__dim)*1) * sizeof (intptr_t)) + 2 * (sizeof (SAC_HM_header_t)))) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_2 = _real_size_1 + ((-1) <= 0 ? 0 : ((_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_1) % (-1) : ((-1) - (_real_size_1) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_1) % (-1) : 0))); const SAC_HM_size_byte_t _real_size_3 = _real_size_2 + ((-1) <= 0 ? 0 : ((_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) - (_real_size_2) % (-1) : ((-1) - (_real_size_2) % (-1) < (-1) * (0.00) ? (SAC_HM_size_byte_t) ((-1) * (0.00)) + (-1) - (_real_size_2) % (-1) : 0))); const SAC_HM_size_unit_t _units = ((((_real_size_3)-1) / (sizeof (SAC_HM_header_t))) + 1) + 2; if (_units < 1025) { if (_units < 129) { SACp_emal_41567__pinl_18738__idc_6240 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][5])); } else { SACp_emal_41567__pinl_18738__idc_6240 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][6])); } } else { if (_units < 8193) { SACp_emal_41567__pinl_18738__idc_6240 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][7])); } else { SACp_emal_41567__pinl_18738__idc_6240 = (int *)SAC_HM_MallocLargeChunk (_units, &(SAC_HM_arenas[0][(9 - 1)])); } } } } SACp_emal_41567__pinl_18738__idc_6240__desc = (intptr_t *)SAC_HM_MallocDesc ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240, SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240), ((6 + (SACp_emal_41567__pinl_18738__idc_6240__dim)*1) * sizeof (intptr_t))); } } { (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41567__pinl_18738__idc_6240__desc) & (-1 ^ (3))))[0]) = 1; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41567__pinl_18738__idc_6240__desc) & (-1 ^ (3))))[2]) = 0; (((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41567__pinl_18738__idc_6240__desc) & (-1 ^ (3))))[1]) = 0; }



        if (!((SACp_emal_41567__pinl_18738__idc_6240__dim == (1)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
        if (!((SACp_emal_41567__pinl_18738__idc_6240__shp0 == 2))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 688, "Assignment with incompatible types found"); };
        ;

        }



        { SACp_emal_41567__pinl_18738__idc_6240[0] = SACp_emal_41575__pinl_18653__flat_1747; }
        { SACp_emal_41567__pinl_18738__idc_6240[1] = SACp_emal_41574__pinl_18653__flat_1747__SSA5_2; }

        { ; ; }
        { ; ; }
        if (!SACp_emal_41570__uprf_27758) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_emal_41573__uprf_27771) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }



        SACp_emal_41566__ivesli_39766 = ( ( SACp_emal_41679__isaa_33125_a[1]) * ( SACp_emal_41567__pinl_18738__idc_6240[0]) + ( SACp_emal_41567__pinl_18738__idc_6240[1]) );

        { { { if (((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240, ((((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240) - 1)->data1.arena)); } else { if (SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240, ((((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240, ((((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240) - 1)->data1.arena)); } } else { if (((((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240, ((((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240) - 1)->data1.arena)); } else { if (((((SACp_emal_41567__pinl_18738__idc_6240__sz * sizeof (*SACp_emal_41567__pinl_18738__idc_6240))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240, ((((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41567__pinl_18738__idc_6240); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41567__pinl_18738__idc_6240__desc) & (-1 ^ (3))))); } } }
        { ; ;



        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Assignment with incompatible types found"); };
        ;

        }



       
        if (!((0 == (0)))) { SAC_RuntimeWarningLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "1st argument of _idx_sel_ is not a scalar!"); };
        { SACp_emal_41565__pinl_18696__icc_6219 = ( SACl_a[SACp_emal_41566__ivesli_39766]); }

        { ; ; }
        if (!SACp_emal_41570__uprf_27758) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
        if (!SACp_emal_41573__uprf_27771) { SAC_RuntimeErrorLoc ("//builds/sac-group/build-sac-pkgs/stdlib-build/src-mt_pth/structures/ArrayBasics.sac", 152, 723, "Primitive function _sel_VxA_ guard failed"); }
        { ; ; }
        { ; ; }



        if (!((0 == (SACp_emal_41564__icc_6603__dim - SACl_jv__SSA0_1__sz)))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal dimension found!"); };
        if (!((1 == SAC_SACp_emal_41564__icc_6603_shpfac1))) { SAC_RuntimeWarningLoc ("././hw/week4.sac", 40, 19, "WL expression with illegal size found!"); };
        { SACp_emal_41564__icc_6603[SACp_wlidx_39690__icc_6603] = SACp_emal_41565__pinl_18696__icc_6219; };

        { ; ; }
        SACp_wlidx_39690__icc_6603 = SACp_wlidx_39690__icc_6603 + 1;
        SACp_eat_500 = SACp_eat_500 + 1;
        } }
        SACp_eat_501 = SACp_eat_501 + 1;
        } }
# 14048 "/home/rubenhensen/sac/a.out.c"
      }

     
      _comp_42038_SAC_label:;
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      { ; ; }
      if (!SACp_emal_41666__uprf_28080) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_41643__uprf_27989) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_41669__uprf_28091) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
      if (!SACp_emal_41646__uprf_28002) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 19, "With-loop guard failed"); }
      SACp_wlidx_39689__icc_6607 = SACp_wlidx_39689__icc_6607 + SACp_emal_41564__icc_6603__sz;
      SACp_eat_498 = SACp_eat_498 + 1;
      } }
      SACp_eat_499 = SACp_eat_499 + 1;
      } }
# 14074 "/home/rubenhensen/sac/a.out.c"
    }

   
    _comp_42039_SAC_label:;
    { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41564__icc_6603__desc) & (-1 ^ (3))))); } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { free (SACp_emal_41609__icc_6570); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41609__icc_6570__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { ; ; }
    { { { if (((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a)) + 2 * (sizeof (SAC_HM_header_t))) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a, ((((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a) - 1)->data1.arena)); } else { if (SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a) <= ((17 - 2) * (sizeof (SAC_HM_header_t)))) { if (((((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a) - 1)->data1.arena)->num == 4) { SAC_HM_FreeSmallChunk ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a, ((((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a) - 1)->data1.arena)); } else { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a, ((((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a) - 1)->data1.arena)); } } else { if (((((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + (2 + 2) < 8193) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a, ((((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a) - 1)->data1.arena)); } else { if (((((SACp_emal_41679__isaa_33125_a__sz * sizeof (*SACp_emal_41679__isaa_33125_a))-1) / (sizeof (SAC_HM_header_t))) + 1) + 2 < 8193) { if (((((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a) - 1)->data1.arena)->num == 7) { SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a, ((((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a) - 1)->data1.arena)); } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a, &(SAC_HM_arenas [0][(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a); break; } } } else { switch (SAC_HM_thread_status) { case SAC_HM_single_threaded: SAC_HM_FreeLargeChunk ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a, &(SAC_HM_arenas[0] [(9 - 1)])); break; case SAC_HM_multi_threaded: SAC_HM_FreeTopArena_mt ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a); break; case SAC_HM_any_threaded: SAC_HM_FreeTopArena_at ((SAC_HM_header_t *)SACp_emal_41679__isaa_33125_a); break; } } } } } } } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACp_emal_41679__isaa_33125_a__desc) & (-1 ^ (3))))); } } }
    { ; ; }
    { if (((((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))[0]) -= 1) == 0) { { { free (SACl_a); } { { SAC_HM_FreeDesc ((SAC_HM_header_t *)((SAC_array_descriptor_t) (((intptr_t)SACl_a__desc) & (-1 ^ (3))))); } } } } else { } }
    if (!SACp_emal_41655__uprf_28028) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_41639__uprf_27974) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    if (!SACp_emal_41658__uprf_28039) { SAC_RuntimeErrorLoc ("././hw/week4.sac", 40, 12, "With-loop guard failed"); }
    { ; ; }
    { ; ; }
    { ; ; }



    { *SAC_arg_1__p = SACp_emal_41563__icc_6607; *SAC_arg_1__desc__p = SACp_emal_41563__icc_6607__desc; }
    return;
   
  }



}
}
# 14137 "/home/rubenhensen/sac/a.out.c"
void SACof__MAIN_CLStdIO__print__i_X_X (int * SACl_arr, SAC_array_descriptor_t SACl_arr__desc) {
{
  static const SAC_HM_thread_status_t SAC_HM_thread_status = SAC_HM_single_threaded;
 

  {



    int * _tcp_42006_SACl_arr;
    SAC_array_descriptor_t _tcp_42006_SACl_arr__desc = 
# 14147 "/home/rubenhensen/sac/a.out.c" 3 4
   ((void *)0)
# 14147 "/home/rubenhensen/sac/a.out.c"
   ;
    int _tcp_42006_SACl_arr__sz = 0;
    int _tcp_42006_SACl_arr__dim = 0;





    int SACl_arr__shp0 = (((SAC_array_descriptor_t) (((intptr_t)SACl_arr__desc) & (-1 ^ (3))))[(6 + (0))]);
    int SACl_arr__shp1 = (((SAC_array_descriptor_t) (((intptr_t)SACl_arr__desc) & (-1 ^ (3))))[(6 + (1))]);
    int SACl_arr__sz = (((SAC_array_descriptor_t) (((intptr_t)SACl_arr__desc) & (-1 ^ (3))))[4]);
    const int SACl_arr__dim = 2;

   



    _tcp_42006_SACl_arr__desc = SACl_arr__desc;
    _tcp_42006_SACl_arr__sz = SACl_arr__sz;
    _tcp_42006_SACl_arr__dim = SACl_arr__dim;
    (((SAC_array_descriptor_t) (((intptr_t)_tcp_42006_SACl_arr__desc) & (-1 ^ (3))))[3]) = SACl_arr__dim;
    { _tcp_42006_SACl_arr = SACl_arr; }




    SACf_ArrayIO__print__i_P (_tcp_42006_SACl_arr, _tcp_42006_SACl_arr__desc);




    return;
   
  }



}
}




extern void SACARGfreeDataUdt( int, void *);
extern void *SACARGcopyDataUdt( int, int, void *);
void SACARGfreeDataUdt( int size, void *data) {}
void *SACARGcopyDataUdt( int type, int size, void *data) { return ((void *) 0x0); }

int main( int __argc, char *__argv[])
{
  int SAC_res;
 
 
  ;
  ;
  ;
  ;
  { SAC_HM_Setup (1 + SAC_RTSPEC_controller_threads); };
  ;
  ;
  ;
  SAC_commandline_argc = __argc; SAC_commandline_argv = __argv;;

  SACf__MAIN__main (&SAC_res);

  ;
  ;
  ;
  ;
  ;
  ;

  ;

  return( SAC_res);
}
